2019-01-24 08:45:38 -Starting BootdoApplication on YH-20180312AAAP with PID 9828 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-24 08:45:38 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-24 08:45:38 -The following profiles are active: dev
2019-01-24 08:45:38 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3da30852: startup date [Thu Jan 24 08:45:38 CST 2019]; root of context hierarchy
2019-01-24 08:45:42 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$cb5b5ef2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 08:45:42 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$bfcf2396] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 08:45:42 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 08:45:42 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 08:45:42 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 08:45:42 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$5a6df094] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 08:45:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$824928d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 08:45:42 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$74a2577b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 08:45:42 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-24 08:45:43 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 08:45:43 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 08:45:43 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 08:45:43 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 08:45:43 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 08:45:43 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-24 08:45:43 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-24 08:45:43 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 08:45:43 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 08:45:43 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 08:45:43 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 08:45:44 -Tomcat initialized with port(s): 8080 (http)
2019-01-24 08:45:44 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-24 08:45:44 -Starting service [Tomcat]
2019-01-24 08:45:44 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-24 08:45:44 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-24 08:45:44 -Initializing Spring embedded WebApplicationContext
2019-01-24 08:45:44 -Root WebApplicationContext: initialization completed in 6342 ms
2019-01-24 08:45:45 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-24 08:45:45 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-24 08:45:45 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-24 08:45:45 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-24 08:45:45 -Filter xssFilter was not registered (disabled)
2019-01-24 08:45:45 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-24 08:45:45 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-24 08:45:45 -Servlet statViewServlet mapped to [/druid/*]
2019-01-24 08:45:45 -Servlet dispatcherServlet mapped to [/]
2019-01-24 08:45:45 -{dataSource-1} inited
2019-01-24 08:45:46 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3da30852: startup date [Thu Jan 24 08:45:38 CST 2019]; root of context hierarchy
2019-01-24 08:45:46 -Using default implementation for ThreadExecutor
2019-01-24 08:45:46 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-24 08:45:46 -Quartz Scheduler v.2.2.1 created.
2019-01-24 08:45:46 -RAMJobStore initialized.
2019-01-24 08:45:46 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-24 08:45:46 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-24 08:45:46 -Quartz scheduler version: 2.2.1
2019-01-24 08:45:46 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@204b0f07
2019-01-24 08:45:47 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-24 08:45:47 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-24 08:45:48 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-24 08:45:48 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-24 08:45:48 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-24 08:45:48 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-24 08:45:48 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-24 08:45:48 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-24 08:45:48 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-24 08:45:48 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-24 08:45:48 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-24 08:45:48 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-24 08:45:48 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-24 08:45:48 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-24 08:45:48 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-24 08:45:48 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-24 08:45:48 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-24 08:45:48 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-24 08:45:48 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-24 08:45:48 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-24 08:45:48 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-24 08:45:48 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-24 08:45:48 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-24 08:45:48 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-24 08:45:48 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-24 08:45:48 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-24 08:45:48 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-24 08:45:48 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-24 08:45:48 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-24 08:45:48 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-24 08:45:48 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-24 08:45:48 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-24 08:45:48 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-24 08:45:48 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-24 08:45:48 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-24 08:45:48 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-24 08:45:48 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-24 08:45:48 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-24 08:45:48 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-24 08:45:48 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-24 08:45:48 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-24 08:45:48 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-24 08:45:48 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-24 08:45:48 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-24 08:45:48 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-24 08:45:48 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-24 08:45:48 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-24 08:45:48 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-24 08:45:48 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-24 08:45:48 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-24 08:45:48 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-24 08:45:48 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-24 08:45:48 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-24 08:45:48 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-24 08:45:48 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-24 08:45:48 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-24 08:45:48 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-24 08:45:48 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-24 08:45:48 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-24 08:45:48 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-24 08:45:48 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long)
2019-01-24 08:45:48 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long[])
2019-01-24 08:45:48 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-24 08:45:48 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-24 08:45:48 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-24 08:45:48 -Mapped "{[/system/staff/edit/{staffId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-24 08:45:48 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-24 08:45:48 -Mapped "{[/system/staff/selectView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.selectView()
2019-01-24 08:45:48 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-24 08:45:48 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-24 08:45:48 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-24 08:45:48 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-24 08:45:48 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-24 08:45:48 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-24 08:45:48 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-24 08:45:48 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-24 08:45:48 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-24 08:45:48 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-24 08:45:48 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-24 08:45:48 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-24 08:45:48 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-24 08:45:48 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-24 08:45:48 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-24 08:45:48 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-24 08:45:48 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-24 08:45:48 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-24 08:45:48 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-24 08:45:49 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-24 08:45:49 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-24 08:45:49 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-24 08:45:49 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-24 08:45:49 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3da30852: startup date [Thu Jan 24 08:45:38 CST 2019]; root of context hierarchy
2019-01-24 08:45:49 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-24 08:45:49 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-24 08:45:49 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-24 08:45:50 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-24 08:45:50 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-24 08:45:50 -Registering beans for JMX exposure on startup
2019-01-24 08:45:50 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-24 08:45:50 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-24 08:45:50 -Starting beans in phase 2147483647
2019-01-24 08:45:50 -Context refreshed
2019-01-24 08:45:50 -Found 1 custom documentation plugin(s)
2019-01-24 08:45:50 -Scanning for api listing references
2019-01-24 08:45:51 -Generating unique operation named: removeUsingPOST_1
2019-01-24 08:45:51 -Generating unique operation named: editUsingGET_1
2019-01-24 08:45:51 -Generating unique operation named: listUsingGET_1
2019-01-24 08:45:51 -Generating unique operation named: updateUsingPOST_1
2019-01-24 08:45:51 -Generating unique operation named: addUsingGET_1
2019-01-24 08:45:51 -Generating unique operation named: editUsingGET_2
2019-01-24 08:45:51 -Generating unique operation named: listUsingGET_2
2019-01-24 08:45:51 -Generating unique operation named: removeUsingPOST_2
2019-01-24 08:45:51 -Generating unique operation named: removeUsingPOST_3
2019-01-24 08:45:51 -Generating unique operation named: saveUsingPOST_1
2019-01-24 08:45:51 -Generating unique operation named: updateUsingPOST_2
2019-01-24 08:45:51 -Generating unique operation named: listUsingGET_3
2019-01-24 08:45:51 -Generating unique operation named: removeUsingPOST_4
2019-01-24 08:45:51 -Generating unique operation named: welcomeUsingGET_1
2019-01-24 08:45:51 -Generating unique operation named: addUsingGET_2
2019-01-24 08:45:51 -Generating unique operation named: editUsingGET_3
2019-01-24 08:45:51 -Generating unique operation named: listUsingGET_4
2019-01-24 08:45:51 -Generating unique operation named: removeUsingPOST_5
2019-01-24 08:45:51 -Generating unique operation named: saveUsingPOST_2
2019-01-24 08:45:51 -Generating unique operation named: treeUsingGET_1
2019-01-24 08:45:51 -Generating unique operation named: updateUsingPOST_3
2019-01-24 08:45:51 -Generating unique operation named: addUsingGET_3
2019-01-24 08:45:51 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-24 08:45:51 -Generating unique operation named: editUsingGET_4
2019-01-24 08:45:51 -Generating unique operation named: listUsingGET_5
2019-01-24 08:45:51 -Generating unique operation named: saveUsingPOST_3
2019-01-24 08:45:51 -Generating unique operation named: saveUsingPOST_4
2019-01-24 08:45:51 -Generating unique operation named: updateUsingPOST_4
2019-01-24 08:45:51 -Generating unique operation named: listUsingGET_6
2019-01-24 08:45:51 -Generating unique operation named: listUsingHEAD_1
2019-01-24 08:45:51 -Generating unique operation named: listUsingPOST_1
2019-01-24 08:45:51 -Generating unique operation named: listUsingPUT_1
2019-01-24 08:45:51 -Generating unique operation named: listUsingPATCH_1
2019-01-24 08:45:51 -Generating unique operation named: listUsingDELETE_1
2019-01-24 08:45:51 -Generating unique operation named: listUsingOPTIONS_1
2019-01-24 08:45:51 -Generating unique operation named: listUsingTRACE_1
2019-01-24 08:45:51 -Generating unique operation named: addUsingGET_4
2019-01-24 08:45:51 -Generating unique operation named: editUsingGET_5
2019-01-24 08:45:51 -Generating unique operation named: listUsingGET_7
2019-01-24 08:45:51 -Generating unique operation named: removeUsingPOST_6
2019-01-24 08:45:51 -Generating unique operation named: removeUsingPOST_7
2019-01-24 08:45:51 -Generating unique operation named: saveUsingPOST_5
2019-01-24 08:45:51 -Generating unique operation named: updateUsingGET_1
2019-01-24 08:45:51 -Generating unique operation named: updateUsingHEAD_1
2019-01-24 08:45:51 -Generating unique operation named: updateUsingPOST_5
2019-01-24 08:45:51 -Generating unique operation named: updateUsingPUT_1
2019-01-24 08:45:51 -Generating unique operation named: updateUsingPATCH_1
2019-01-24 08:45:51 -Generating unique operation named: updateUsingDELETE_1
2019-01-24 08:45:51 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-24 08:45:51 -Generating unique operation named: updateUsingTRACE_1
2019-01-24 08:45:51 -Generating unique operation named: addUsingGET_5
2019-01-24 08:45:51 -Generating unique operation named: editUsingGET_6
2019-01-24 08:45:51 -Generating unique operation named: listUsingGET_8
2019-01-24 08:45:51 -Generating unique operation named: removeUsingPOST_8
2019-01-24 08:45:51 -Generating unique operation named: removeUsingPOST_9
2019-01-24 08:45:51 -Generating unique operation named: saveUsingPOST_6
2019-01-24 08:45:51 -Generating unique operation named: updateUsingGET_2
2019-01-24 08:45:51 -Generating unique operation named: updateUsingHEAD_2
2019-01-24 08:45:51 -Generating unique operation named: updateUsingPOST_6
2019-01-24 08:45:51 -Generating unique operation named: updateUsingPUT_2
2019-01-24 08:45:51 -Generating unique operation named: updateUsingPATCH_2
2019-01-24 08:45:51 -Generating unique operation named: updateUsingDELETE_2
2019-01-24 08:45:51 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-24 08:45:51 -Generating unique operation named: updateUsingTRACE_2
2019-01-24 08:45:51 -Generating unique operation named: addUsingGET_6
2019-01-24 08:45:51 -Generating unique operation named: editUsingGET_7
2019-01-24 08:45:51 -Generating unique operation named: listUsingGET_9
2019-01-24 08:45:51 -Generating unique operation named: roleUsingGET_1
2019-01-24 08:45:51 -Generating unique operation named: saveUsingPOST_7
2019-01-24 08:45:51 -Starting Quartz Scheduler now
2019-01-24 08:45:51 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-24 08:45:51 -Starting...
2019-01-24 08:45:51 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-24 08:45:51 -Started.
2019-01-24 08:45:51 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-24 08:45:51 -Using a shared selector for servlet write/read
2019-01-24 08:45:51 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-24 08:45:51 -Started BootdoApplication in 15.43 seconds (JVM running for 17.691)
2019-01-24 08:45:52 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-24 08:45:52 -==> Parameters: 
2019-01-24 08:45:52 -<==      Total: 1
2019-01-24 08:46:03 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-24 08:46:03 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-24 08:46:03 -FrameworkServlet 'dispatcherServlet': initialization completed in 47 ms
2019-01-24 08:46:03 -Enabling session validation scheduler...
2019-01-24 08:46:03 -请求地址 : http://localhost:8080/
2019-01-24 08:46:03 -HTTP METHOD : GET
2019-01-24 08:46:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-24 08:46:03 -参数 : [{}]
2019-01-24 08:46:03 -耗时 : 5
2019-01-24 08:46:03 -返回值 : redirect:/login
2019-01-24 08:46:03 -请求地址 : http://localhost:8080/login
2019-01-24 08:46:03 -HTTP METHOD : GET
2019-01-24 08:46:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 08:46:03 -参数 : []
2019-01-24 08:46:03 -耗时 : 1
2019-01-24 08:46:03 -返回值 : login
2019-01-24 08:46:05 -请求地址 : http://localhost:8080/login;JSESSIONID=9b484400-6231-40aa-b874-cb55956be97b
2019-01-24 08:46:05 -HTTP METHOD : GET
2019-01-24 08:46:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 08:46:05 -参数 : []
2019-01-24 08:46:05 -耗时 : 1
2019-01-24 08:46:05 -返回值 : login
2019-01-24 08:46:08 -请求地址 : http://localhost:8080/login
2019-01-24 08:46:08 -HTTP METHOD : POST
2019-01-24 08:46:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-24 08:46:08 -参数 : [admin, 123456]
2019-01-24 08:46:08 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-24 08:46:08 -==> Parameters: admin(String)
2019-01-24 08:46:08 -<==      Total: 1
2019-01-24 08:46:08 -耗时 : 172
2019-01-24 08:46:08 -返回值 : {msg=操作成功, code=0}
2019-01-24 08:46:08 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-24 08:46:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 08:46:08 -==> Parameters: 123(String), admin(String), 登录(String), 173(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-24 08:46:08.578(Timestamp)
2019-01-24 08:46:08 -请求地址 : http://localhost:8080/index
2019-01-24 08:46:08 -HTTP METHOD : GET
2019-01-24 08:46:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 08:46:08 -参数 : [{}]
2019-01-24 08:46:08 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 08:46:08 -<==    Updates: 1
2019-01-24 08:46:08 -==> Parameters: 123(String)
2019-01-24 08:46:09 -<==      Total: 2
2019-01-24 08:46:09 -耗时 : 397
2019-01-24 08:46:09 -返回值 : index_v1
2019-01-24 08:46:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 08:46:09 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 397(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 08:46:09.124(Timestamp)
2019-01-24 08:46:09 -<==    Updates: 1
2019-01-24 08:46:09 -请求地址 : http://localhost:8080/main
2019-01-24 08:46:09 -HTTP METHOD : GET
2019-01-24 08:46:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 08:46:09 -参数 : []
2019-01-24 08:46:09 -耗时 : 1
2019-01-24 08:46:09 -返回值 : main
2019-01-24 08:46:09 -请求地址 : http://localhost:8080/main
2019-01-24 08:46:09 -HTTP METHOD : GET
2019-01-24 08:46:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 08:46:09 -参数 : []
2019-01-24 08:46:09 -耗时 : 0
2019-01-24 08:46:09 -返回值 : main
2019-01-24 08:46:11 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 08:46:11 -==> Parameters: 123(String)
2019-01-24 08:46:11 -<==      Total: 2
2019-01-24 08:46:11 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 08:46:11 -HTTP METHOD : GET
2019-01-24 08:46:11 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 08:46:11 -参数 : []
2019-01-24 08:46:11 -耗时 : 0
2019-01-24 08:46:11 -返回值 : system/user/user
2019-01-24 08:46:12 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 08:46:12 -HTTP METHOD : GET
2019-01-24 08:46:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 08:46:12 -参数 : [{page=1, limit=20}]
2019-01-24 08:46:12 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 08:46:12 -==> Parameters: 
2019-01-24 08:46:12 -<==      Total: 1
2019-01-24 08:46:12 -==>  Preparing: select count(*) from sys_user 
2019-01-24 08:46:12 -==> Parameters: 
2019-01-24 08:46:12 -<==      Total: 1
2019-01-24 08:46:12 -耗时 : 120
2019-01-24 08:46:12 -返回值 : com.bootdo.common.utils.PageUtils@55df0268
2019-01-24 08:46:49 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-24 08:57:32 -请求地址 : http://localhost:8080/index
2019-01-24 08:57:32 -HTTP METHOD : GET
2019-01-24 08:57:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 08:57:32 -参数 : [{}]
2019-01-24 08:57:32 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 08:57:32 -==> Parameters: 123(String)
2019-01-24 08:57:32 -<==      Total: 2
2019-01-24 08:57:32 -耗时 : 25
2019-01-24 08:57:32 -返回值 : index_v1
2019-01-24 08:57:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 08:57:32 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 08:57:32.452(Timestamp)
2019-01-24 08:57:32 -<==    Updates: 1
2019-01-24 08:57:32 -请求地址 : http://localhost:8080/main
2019-01-24 08:57:32 -HTTP METHOD : GET
2019-01-24 08:57:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 08:57:32 -参数 : []
2019-01-24 08:57:32 -耗时 : 0
2019-01-24 08:57:32 -返回值 : main
2019-01-24 08:57:32 -请求地址 : http://localhost:8080/main
2019-01-24 08:57:32 -HTTP METHOD : GET
2019-01-24 08:57:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 08:57:32 -参数 : []
2019-01-24 08:57:32 -耗时 : 1
2019-01-24 08:57:32 -返回值 : main
2019-01-24 08:57:35 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 08:57:35 -==> Parameters: 123(String)
2019-01-24 08:57:35 -<==      Total: 2
2019-01-24 08:57:35 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 08:57:35 -HTTP METHOD : GET
2019-01-24 08:57:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 08:57:35 -参数 : []
2019-01-24 08:57:35 -耗时 : 0
2019-01-24 08:57:35 -返回值 : system/user/user
2019-01-24 08:57:35 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 08:57:35 -HTTP METHOD : GET
2019-01-24 08:57:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 08:57:35 -参数 : [{page=1, limit=20}]
2019-01-24 08:57:35 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 08:57:35 -==> Parameters: 
2019-01-24 08:57:35 -<==      Total: 1
2019-01-24 08:57:35 -==>  Preparing: select count(*) from sys_user 
2019-01-24 08:57:35 -==> Parameters: 
2019-01-24 08:57:35 -<==      Total: 1
2019-01-24 08:57:35 -耗时 : 15
2019-01-24 08:57:35 -返回值 : com.bootdo.common.utils.PageUtils@50a52223
2019-01-24 08:58:35 -请求地址 : http://localhost:8080/index
2019-01-24 08:58:35 -HTTP METHOD : GET
2019-01-24 08:58:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 08:58:35 -参数 : [{}]
2019-01-24 08:58:35 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 08:58:35 -==> Parameters: 123(String)
2019-01-24 08:58:35 -<==      Total: 2
2019-01-24 08:58:35 -耗时 : 16
2019-01-24 08:58:35 -返回值 : index_v1
2019-01-24 08:58:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 08:58:35 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 08:58:35.346(Timestamp)
2019-01-24 08:58:35 -<==    Updates: 1
2019-01-24 08:58:35 -请求地址 : http://localhost:8080/main
2019-01-24 08:58:35 -HTTP METHOD : GET
2019-01-24 08:58:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 08:58:35 -参数 : []
2019-01-24 08:58:35 -耗时 : 1
2019-01-24 08:58:35 -返回值 : main
2019-01-24 08:58:35 -请求地址 : http://localhost:8080/main
2019-01-24 08:58:35 -HTTP METHOD : GET
2019-01-24 08:58:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 08:58:35 -参数 : []
2019-01-24 08:58:35 -耗时 : 0
2019-01-24 08:58:35 -返回值 : main
2019-01-24 08:58:37 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 08:58:37 -HTTP METHOD : GET
2019-01-24 08:58:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 08:58:37 -参数 : []
2019-01-24 08:58:37 -耗时 : 0
2019-01-24 08:58:37 -返回值 : system/user/user
2019-01-24 08:58:37 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 08:58:37 -HTTP METHOD : GET
2019-01-24 08:58:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 08:58:37 -参数 : [{page=1, limit=20}]
2019-01-24 08:58:37 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 08:58:37 -==> Parameters: 
2019-01-24 08:58:37 -<==      Total: 1
2019-01-24 08:58:37 -==>  Preparing: select count(*) from sys_user 
2019-01-24 08:58:37 -==> Parameters: 
2019-01-24 08:58:37 -<==      Total: 1
2019-01-24 08:58:37 -耗时 : 17
2019-01-24 08:58:37 -返回值 : com.bootdo.common.utils.PageUtils@6ec9cc94
2019-01-24 08:59:29 -请求地址 : http://localhost:8080/index
2019-01-24 08:59:29 -HTTP METHOD : GET
2019-01-24 08:59:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 08:59:29 -参数 : [{}]
2019-01-24 08:59:29 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 08:59:29 -==> Parameters: 123(String)
2019-01-24 08:59:29 -<==      Total: 2
2019-01-24 08:59:29 -耗时 : 20
2019-01-24 08:59:29 -返回值 : index_v1
2019-01-24 08:59:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 08:59:29 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 08:59:29.861(Timestamp)
2019-01-24 08:59:29 -请求地址 : http://localhost:8080/main
2019-01-24 08:59:29 -HTTP METHOD : GET
2019-01-24 08:59:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 08:59:29 -参数 : []
2019-01-24 08:59:29 -耗时 : 0
2019-01-24 08:59:29 -返回值 : main
2019-01-24 08:59:29 -<==    Updates: 1
2019-01-24 08:59:30 -请求地址 : http://localhost:8080/main
2019-01-24 08:59:30 -HTTP METHOD : GET
2019-01-24 08:59:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 08:59:30 -参数 : []
2019-01-24 08:59:30 -耗时 : 0
2019-01-24 08:59:30 -返回值 : main
2019-01-24 08:59:32 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 08:59:32 -HTTP METHOD : GET
2019-01-24 08:59:32 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 08:59:32 -参数 : []
2019-01-24 08:59:32 -耗时 : 0
2019-01-24 08:59:32 -返回值 : system/user/user
2019-01-24 08:59:32 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 08:59:32 -HTTP METHOD : GET
2019-01-24 08:59:32 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 08:59:32 -参数 : [{page=1, limit=20}]
2019-01-24 08:59:32 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 08:59:32 -==> Parameters: 
2019-01-24 08:59:32 -<==      Total: 1
2019-01-24 08:59:32 -==>  Preparing: select count(*) from sys_user 
2019-01-24 08:59:32 -==> Parameters: 
2019-01-24 08:59:32 -<==      Total: 1
2019-01-24 08:59:32 -耗时 : 19
2019-01-24 08:59:32 -返回值 : com.bootdo.common.utils.PageUtils@71317678
2019-01-24 09:08:11 -请求地址 : http://localhost:8080/index
2019-01-24 09:08:11 -HTTP METHOD : GET
2019-01-24 09:08:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 09:08:11 -参数 : [{}]
2019-01-24 09:08:11 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 09:08:11 -==> Parameters: 123(String)
2019-01-24 09:08:11 -<==      Total: 2
2019-01-24 09:08:11 -耗时 : 35
2019-01-24 09:08:11 -返回值 : index_v1
2019-01-24 09:08:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 09:08:11 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 09:08:11.548(Timestamp)
2019-01-24 09:08:11 -<==    Updates: 1
2019-01-24 09:08:11 -请求地址 : http://localhost:8080/main
2019-01-24 09:08:11 -HTTP METHOD : GET
2019-01-24 09:08:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:08:11 -参数 : []
2019-01-24 09:08:11 -耗时 : 0
2019-01-24 09:08:11 -返回值 : main
2019-01-24 09:08:11 -请求地址 : http://localhost:8080/main
2019-01-24 09:08:11 -HTTP METHOD : GET
2019-01-24 09:08:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:08:11 -参数 : []
2019-01-24 09:08:11 -耗时 : 0
2019-01-24 09:08:11 -返回值 : main
2019-01-24 09:08:13 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 09:08:13 -==> Parameters: 123(String)
2019-01-24 09:08:13 -<==      Total: 2
2019-01-24 09:08:13 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:08:13 -HTTP METHOD : GET
2019-01-24 09:08:13 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:08:13 -参数 : []
2019-01-24 09:08:13 -耗时 : 0
2019-01-24 09:08:13 -返回值 : system/user/user
2019-01-24 09:08:14 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:08:14 -HTTP METHOD : GET
2019-01-24 09:08:14 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:08:14 -参数 : [{page=1, limit=20}]
2019-01-24 09:08:14 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:08:14 -==> Parameters: 
2019-01-24 09:08:14 -<==      Total: 1
2019-01-24 09:08:14 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:08:14 -==> Parameters: 
2019-01-24 09:08:14 -<==      Total: 1
2019-01-24 09:08:14 -耗时 : 23
2019-01-24 09:08:14 -返回值 : com.bootdo.common.utils.PageUtils@3a745990
2019-01-24 09:12:47 -请求地址 : http://localhost:8080/index
2019-01-24 09:12:47 -HTTP METHOD : GET
2019-01-24 09:12:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 09:12:47 -参数 : [{}]
2019-01-24 09:12:47 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 09:12:47 -==> Parameters: 123(String)
2019-01-24 09:12:47 -<==      Total: 2
2019-01-24 09:12:47 -耗时 : 28
2019-01-24 09:12:47 -返回值 : index_v1
2019-01-24 09:12:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 09:12:47 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 09:12:47.369(Timestamp)
2019-01-24 09:12:47 -<==    Updates: 1
2019-01-24 09:12:47 -请求地址 : http://localhost:8080/main
2019-01-24 09:12:47 -HTTP METHOD : GET
2019-01-24 09:12:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:12:47 -参数 : []
2019-01-24 09:12:47 -耗时 : 0
2019-01-24 09:12:47 -返回值 : main
2019-01-24 09:12:47 -请求地址 : http://localhost:8080/main
2019-01-24 09:12:47 -HTTP METHOD : GET
2019-01-24 09:12:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:12:47 -参数 : []
2019-01-24 09:12:47 -耗时 : 1
2019-01-24 09:12:47 -返回值 : main
2019-01-24 09:12:49 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 09:12:49 -==> Parameters: 123(String)
2019-01-24 09:12:49 -<==      Total: 2
2019-01-24 09:12:49 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:12:49 -HTTP METHOD : GET
2019-01-24 09:12:49 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:12:49 -参数 : []
2019-01-24 09:12:49 -耗时 : 0
2019-01-24 09:12:49 -返回值 : system/user/user
2019-01-24 09:12:50 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:12:50 -HTTP METHOD : GET
2019-01-24 09:12:50 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:12:50 -参数 : [{page=1, limit=20}]
2019-01-24 09:12:50 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:12:50 -==> Parameters: 
2019-01-24 09:12:50 -<==      Total: 1
2019-01-24 09:12:50 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:12:50 -==> Parameters: 
2019-01-24 09:12:50 -<==      Total: 1
2019-01-24 09:12:50 -耗时 : 13
2019-01-24 09:12:50 -返回值 : com.bootdo.common.utils.PageUtils@2c985f24
2019-01-24 09:13:04 -请求地址 : http://localhost:8080/login;JSESSIONID=107623d3-9520-4b5d-9e3b-41eafd6f67a8
2019-01-24 09:13:04 -HTTP METHOD : GET
2019-01-24 09:13:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 09:13:04 -参数 : []
2019-01-24 09:13:04 -耗时 : 0
2019-01-24 09:13:04 -返回值 : login
2019-01-24 09:13:04 -请求地址 : http://localhost:8080/login
2019-01-24 09:13:04 -HTTP METHOD : GET
2019-01-24 09:13:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 09:13:04 -参数 : []
2019-01-24 09:13:04 -耗时 : 1
2019-01-24 09:13:04 -返回值 : login
2019-01-24 09:13:08 -请求地址 : http://localhost:8080/login
2019-01-24 09:13:08 -HTTP METHOD : POST
2019-01-24 09:13:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-24 09:13:08 -参数 : [admin, 123456]
2019-01-24 09:13:08 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-24 09:13:08 -==> Parameters: admin(String)
2019-01-24 09:13:08 -<==      Total: 1
2019-01-24 09:13:08 -耗时 : 8
2019-01-24 09:13:08 -返回值 : {msg=操作成功, code=0}
2019-01-24 09:13:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 09:13:08 -==> Parameters: 123(String), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-24 09:13:08.023(Timestamp)
2019-01-24 09:13:08 -请求地址 : http://localhost:8080/index
2019-01-24 09:13:08 -HTTP METHOD : GET
2019-01-24 09:13:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 09:13:08 -参数 : [{}]
2019-01-24 09:13:08 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 09:13:08 -==> Parameters: 123(String)
2019-01-24 09:13:08 -<==      Total: 2
2019-01-24 09:13:08 -耗时 : 24
2019-01-24 09:13:08 -返回值 : index_v1
2019-01-24 09:13:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 09:13:08 -<==    Updates: 1
2019-01-24 09:13:08 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 09:13:08.063(Timestamp)
2019-01-24 09:13:08 -请求地址 : http://localhost:8080/main
2019-01-24 09:13:08 -HTTP METHOD : GET
2019-01-24 09:13:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:13:08 -参数 : []
2019-01-24 09:13:08 -耗时 : 0
2019-01-24 09:13:08 -返回值 : main
2019-01-24 09:13:08 -<==    Updates: 1
2019-01-24 09:13:08 -请求地址 : http://localhost:8080/main
2019-01-24 09:13:08 -HTTP METHOD : GET
2019-01-24 09:13:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:13:08 -参数 : []
2019-01-24 09:13:08 -耗时 : 0
2019-01-24 09:13:08 -返回值 : main
2019-01-24 09:13:09 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 09:13:09 -==> Parameters: 123(String)
2019-01-24 09:13:09 -<==      Total: 2
2019-01-24 09:13:09 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:13:09 -HTTP METHOD : GET
2019-01-24 09:13:09 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:13:09 -参数 : []
2019-01-24 09:13:09 -耗时 : 0
2019-01-24 09:13:09 -返回值 : system/user/user
2019-01-24 09:13:10 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:13:10 -HTTP METHOD : GET
2019-01-24 09:13:10 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:13:10 -参数 : [{page=1, limit=20}]
2019-01-24 09:13:10 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:13:10 -==> Parameters: 
2019-01-24 09:13:10 -<==      Total: 1
2019-01-24 09:13:10 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:13:10 -==> Parameters: 
2019-01-24 09:13:10 -<==      Total: 1
2019-01-24 09:13:10 -耗时 : 29
2019-01-24 09:13:10 -返回值 : com.bootdo.common.utils.PageUtils@2185f99a
2019-01-24 09:13:35 -请求地址 : http://localhost:8080/index
2019-01-24 09:13:35 -HTTP METHOD : GET
2019-01-24 09:13:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 09:13:35 -参数 : [{}]
2019-01-24 09:13:35 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 09:13:35 -==> Parameters: 123(String)
2019-01-24 09:13:35 -<==      Total: 2
2019-01-24 09:13:35 -耗时 : 21
2019-01-24 09:13:35 -返回值 : index_v1
2019-01-24 09:13:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 09:13:35 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 09:13:35.305(Timestamp)
2019-01-24 09:13:35 -<==    Updates: 1
2019-01-24 09:13:35 -请求地址 : http://localhost:8080/main
2019-01-24 09:13:35 -HTTP METHOD : GET
2019-01-24 09:13:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:13:35 -参数 : []
2019-01-24 09:13:35 -耗时 : 1
2019-01-24 09:13:35 -返回值 : main
2019-01-24 09:13:35 -请求地址 : http://localhost:8080/main
2019-01-24 09:13:35 -HTTP METHOD : GET
2019-01-24 09:13:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:13:35 -参数 : []
2019-01-24 09:13:35 -耗时 : 1
2019-01-24 09:13:35 -返回值 : main
2019-01-24 09:13:37 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:13:37 -HTTP METHOD : GET
2019-01-24 09:13:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:13:37 -参数 : []
2019-01-24 09:13:37 -耗时 : 1
2019-01-24 09:13:37 -返回值 : system/user/user
2019-01-24 09:13:37 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:13:37 -HTTP METHOD : GET
2019-01-24 09:13:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:13:37 -参数 : [{page=1, limit=20}]
2019-01-24 09:13:37 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:13:37 -==> Parameters: 
2019-01-24 09:13:37 -<==      Total: 1
2019-01-24 09:13:37 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:13:37 -==> Parameters: 
2019-01-24 09:13:37 -<==      Total: 1
2019-01-24 09:13:37 -耗时 : 23
2019-01-24 09:13:37 -返回值 : com.bootdo.common.utils.PageUtils@58f75807
2019-01-24 09:16:49 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-01-24 09:31:44 -请求地址 : http://localhost:8080/index
2019-01-24 09:31:44 -HTTP METHOD : GET
2019-01-24 09:31:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 09:31:44 -参数 : [{}]
2019-01-24 09:31:44 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 09:31:44 -==> Parameters: 123(String)
2019-01-24 09:31:44 -<==      Total: 2
2019-01-24 09:31:44 -耗时 : 28
2019-01-24 09:31:44 -返回值 : index_v1
2019-01-24 09:31:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 09:31:44 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 09:31:44.744(Timestamp)
2019-01-24 09:31:44 -请求地址 : http://localhost:8080/main
2019-01-24 09:31:44 -HTTP METHOD : GET
2019-01-24 09:31:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:31:44 -参数 : []
2019-01-24 09:31:44 -耗时 : 0
2019-01-24 09:31:44 -返回值 : main
2019-01-24 09:31:44 -<==    Updates: 1
2019-01-24 09:31:44 -请求地址 : http://localhost:8080/main
2019-01-24 09:31:44 -HTTP METHOD : GET
2019-01-24 09:31:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:31:44 -参数 : []
2019-01-24 09:31:44 -耗时 : 1
2019-01-24 09:31:44 -返回值 : main
2019-01-24 09:31:46 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 09:31:46 -==> Parameters: 123(String)
2019-01-24 09:31:46 -<==      Total: 2
2019-01-24 09:31:46 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:31:46 -HTTP METHOD : GET
2019-01-24 09:31:46 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:31:46 -参数 : []
2019-01-24 09:31:46 -耗时 : 0
2019-01-24 09:31:46 -返回值 : system/user/user
2019-01-24 09:31:47 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:31:47 -HTTP METHOD : GET
2019-01-24 09:31:47 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:31:47 -参数 : [{page=1, limit=20}]
2019-01-24 09:31:47 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:31:47 -==> Parameters: 
2019-01-24 09:31:47 -<==      Total: 1
2019-01-24 09:31:47 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:31:47 -==> Parameters: 
2019-01-24 09:31:47 -<==      Total: 1
2019-01-24 09:31:47 -耗时 : 41
2019-01-24 09:31:47 -返回值 : com.bootdo.common.utils.PageUtils@4c6cff0b
2019-01-24 09:32:35 -请求地址 : http://localhost:8080/index
2019-01-24 09:32:35 -HTTP METHOD : GET
2019-01-24 09:32:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 09:32:35 -参数 : [{}]
2019-01-24 09:32:35 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 09:32:35 -==> Parameters: 123(String)
2019-01-24 09:32:35 -<==      Total: 2
2019-01-24 09:32:35 -耗时 : 26
2019-01-24 09:32:35 -返回值 : index_v1
2019-01-24 09:32:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 09:32:35 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 09:32:35.789(Timestamp)
2019-01-24 09:32:35 -<==    Updates: 1
2019-01-24 09:32:35 -请求地址 : http://localhost:8080/main
2019-01-24 09:32:35 -HTTP METHOD : GET
2019-01-24 09:32:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:32:35 -参数 : []
2019-01-24 09:32:35 -耗时 : 0
2019-01-24 09:32:35 -返回值 : main
2019-01-24 09:32:36 -请求地址 : http://localhost:8080/main
2019-01-24 09:32:36 -HTTP METHOD : GET
2019-01-24 09:32:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:32:36 -参数 : []
2019-01-24 09:32:36 -耗时 : 2
2019-01-24 09:32:36 -返回值 : main
2019-01-24 09:32:37 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:32:37 -HTTP METHOD : GET
2019-01-24 09:32:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:32:37 -参数 : []
2019-01-24 09:32:37 -耗时 : 0
2019-01-24 09:32:37 -返回值 : system/user/user
2019-01-24 09:32:38 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:32:38 -HTTP METHOD : GET
2019-01-24 09:32:38 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:32:38 -参数 : [{page=1, limit=20}]
2019-01-24 09:32:38 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:32:38 -==> Parameters: 
2019-01-24 09:32:38 -<==      Total: 1
2019-01-24 09:32:38 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:32:38 -==> Parameters: 
2019-01-24 09:32:38 -<==      Total: 1
2019-01-24 09:32:38 -耗时 : 24
2019-01-24 09:32:38 -返回值 : com.bootdo.common.utils.PageUtils@e226adb
2019-01-24 09:34:14 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 09:34:14 -==> Parameters: 123(String)
2019-01-24 09:34:14 -<==      Total: 2
2019-01-24 09:34:14 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:34:14 -HTTP METHOD : GET
2019-01-24 09:34:14 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:34:14 -参数 : []
2019-01-24 09:34:14 -耗时 : 1
2019-01-24 09:34:14 -返回值 : system/user/user
2019-01-24 09:34:14 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:34:14 -HTTP METHOD : GET
2019-01-24 09:34:14 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:34:14 -参数 : [{page=1, limit=20}]
2019-01-24 09:34:14 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:34:14 -==> Parameters: 
2019-01-24 09:34:14 -<==      Total: 2
2019-01-24 09:34:14 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:34:14 -==> Parameters: 
2019-01-24 09:34:14 -<==      Total: 1
2019-01-24 09:34:14 -耗时 : 22
2019-01-24 09:34:14 -返回值 : com.bootdo.common.utils.PageUtils@6e01a5de
2019-01-24 09:34:19 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:34:19 -HTTP METHOD : GET
2019-01-24 09:34:19 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:34:19 -参数 : []
2019-01-24 09:34:19 -耗时 : 0
2019-01-24 09:34:19 -返回值 : system/user/user
2019-01-24 09:34:19 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:34:19 -HTTP METHOD : GET
2019-01-24 09:34:19 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:34:19 -参数 : [{page=1, limit=20}]
2019-01-24 09:34:19 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:34:19 -==> Parameters: 
2019-01-24 09:34:19 -<==      Total: 2
2019-01-24 09:34:19 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:34:19 -==> Parameters: 
2019-01-24 09:34:19 -<==      Total: 1
2019-01-24 09:34:19 -耗时 : 27
2019-01-24 09:34:19 -返回值 : com.bootdo.common.utils.PageUtils@616c43a5
2019-01-24 09:34:29 -请求地址 : http://localhost:8080/index
2019-01-24 09:34:29 -HTTP METHOD : GET
2019-01-24 09:34:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 09:34:29 -参数 : [{}]
2019-01-24 09:34:29 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 09:34:29 -==> Parameters: 123(String)
2019-01-24 09:34:29 -<==      Total: 2
2019-01-24 09:34:29 -耗时 : 15
2019-01-24 09:34:29 -返回值 : index_v1
2019-01-24 09:34:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 09:34:29 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 09:34:29.441(Timestamp)
2019-01-24 09:34:29 -<==    Updates: 1
2019-01-24 09:34:29 -请求地址 : http://localhost:8080/main
2019-01-24 09:34:29 -HTTP METHOD : GET
2019-01-24 09:34:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:34:29 -参数 : []
2019-01-24 09:34:29 -耗时 : 0
2019-01-24 09:34:29 -返回值 : main
2019-01-24 09:34:29 -请求地址 : http://localhost:8080/main
2019-01-24 09:34:29 -HTTP METHOD : GET
2019-01-24 09:34:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:34:29 -参数 : []
2019-01-24 09:34:29 -耗时 : 1
2019-01-24 09:34:29 -返回值 : main
2019-01-24 09:34:31 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:34:31 -HTTP METHOD : GET
2019-01-24 09:34:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:34:31 -参数 : []
2019-01-24 09:34:31 -耗时 : 0
2019-01-24 09:34:31 -返回值 : system/user/user
2019-01-24 09:34:32 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:34:32 -HTTP METHOD : GET
2019-01-24 09:34:32 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:34:32 -参数 : [{page=1, limit=20}]
2019-01-24 09:34:32 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:34:32 -==> Parameters: 
2019-01-24 09:34:32 -<==      Total: 2
2019-01-24 09:34:32 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:34:32 -==> Parameters: 
2019-01-24 09:34:32 -<==      Total: 1
2019-01-24 09:34:32 -耗时 : 25
2019-01-24 09:34:32 -返回值 : com.bootdo.common.utils.PageUtils@3961c878
2019-01-24 09:35:01 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:35:01 -HTTP METHOD : GET
2019-01-24 09:35:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:35:01 -参数 : []
2019-01-24 09:35:01 -耗时 : 0
2019-01-24 09:35:01 -返回值 : system/user/user
2019-01-24 09:35:02 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:35:02 -HTTP METHOD : GET
2019-01-24 09:35:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:35:02 -参数 : [{page=1, limit=20}]
2019-01-24 09:35:02 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:35:02 -==> Parameters: 
2019-01-24 09:35:02 -<==      Total: 2
2019-01-24 09:35:02 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:35:02 -==> Parameters: 
2019-01-24 09:35:02 -<==      Total: 1
2019-01-24 09:35:02 -耗时 : 26
2019-01-24 09:35:02 -返回值 : com.bootdo.common.utils.PageUtils@68e8714b
2019-01-24 09:36:55 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 09:36:55 -==> Parameters: 123(String)
2019-01-24 09:36:55 -<==      Total: 2
2019-01-24 09:36:55 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:36:55 -HTTP METHOD : GET
2019-01-24 09:36:55 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:36:55 -参数 : []
2019-01-24 09:36:55 -耗时 : 0
2019-01-24 09:36:55 -返回值 : system/user/user
2019-01-24 09:36:55 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:36:55 -HTTP METHOD : GET
2019-01-24 09:36:55 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:36:55 -参数 : [{page=1, limit=20}]
2019-01-24 09:36:55 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:36:55 -==> Parameters: 
2019-01-24 09:36:55 -<==      Total: 2
2019-01-24 09:36:55 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:36:55 -==> Parameters: 
2019-01-24 09:36:55 -<==      Total: 1
2019-01-24 09:36:55 -耗时 : 19
2019-01-24 09:36:55 -返回值 : com.bootdo.common.utils.PageUtils@2660de69
2019-01-24 09:37:08 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:37:08 -HTTP METHOD : GET
2019-01-24 09:37:08 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:37:08 -参数 : []
2019-01-24 09:37:08 -耗时 : 0
2019-01-24 09:37:08 -返回值 : system/user/user
2019-01-24 09:37:08 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:37:08 -HTTP METHOD : GET
2019-01-24 09:37:08 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:37:08 -参数 : [{page=1, limit=20}]
2019-01-24 09:37:08 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:37:08 -==> Parameters: 
2019-01-24 09:37:08 -<==      Total: 2
2019-01-24 09:37:08 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:37:08 -==> Parameters: 
2019-01-24 09:37:08 -<==      Total: 1
2019-01-24 09:37:08 -耗时 : 19
2019-01-24 09:37:08 -返回值 : com.bootdo.common.utils.PageUtils@5c070515
2019-01-24 09:37:37 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:37:37 -HTTP METHOD : GET
2019-01-24 09:37:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:37:37 -参数 : []
2019-01-24 09:37:37 -耗时 : 0
2019-01-24 09:37:37 -返回值 : system/user/user
2019-01-24 09:37:37 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:37:37 -HTTP METHOD : GET
2019-01-24 09:37:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:37:37 -参数 : [{page=1, limit=20}]
2019-01-24 09:37:37 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:37:37 -==> Parameters: 
2019-01-24 09:37:37 -<==      Total: 2
2019-01-24 09:37:37 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:37:37 -==> Parameters: 
2019-01-24 09:37:37 -<==      Total: 1
2019-01-24 09:37:37 -耗时 : 23
2019-01-24 09:37:37 -返回值 : com.bootdo.common.utils.PageUtils@7c12d3de
2019-01-24 09:39:00 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 09:39:00 -==> Parameters: 123(String)
2019-01-24 09:39:00 -<==      Total: 2
2019-01-24 09:39:00 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:39:00 -HTTP METHOD : GET
2019-01-24 09:39:00 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:39:00 -参数 : []
2019-01-24 09:39:00 -耗时 : 0
2019-01-24 09:39:00 -返回值 : system/user/user
2019-01-24 09:39:00 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:39:00 -HTTP METHOD : GET
2019-01-24 09:39:00 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:39:00 -参数 : [{page=1, limit=20}]
2019-01-24 09:39:00 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:39:00 -==> Parameters: 
2019-01-24 09:39:00 -<==      Total: 2
2019-01-24 09:39:00 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:39:00 -==> Parameters: 
2019-01-24 09:39:00 -<==      Total: 1
2019-01-24 09:39:00 -耗时 : 21
2019-01-24 09:39:00 -返回值 : com.bootdo.common.utils.PageUtils@22963c44
2019-01-24 09:41:37 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 09:41:37 -==> Parameters: 123(String)
2019-01-24 09:41:37 -<==      Total: 3
2019-01-24 09:41:37 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:41:37 -HTTP METHOD : GET
2019-01-24 09:41:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:41:37 -参数 : []
2019-01-24 09:41:37 -耗时 : 0
2019-01-24 09:41:37 -返回值 : system/user/user
2019-01-24 09:41:38 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:41:38 -HTTP METHOD : GET
2019-01-24 09:41:38 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:41:38 -参数 : [{page=1, limit=20}]
2019-01-24 09:41:38 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:41:38 -==> Parameters: 
2019-01-24 09:41:38 -<==      Total: 2
2019-01-24 09:41:38 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:41:38 -==> Parameters: 
2019-01-24 09:41:38 -<==      Total: 1
2019-01-24 09:41:38 -耗时 : 27
2019-01-24 09:41:38 -返回值 : com.bootdo.common.utils.PageUtils@5ddc31fe
2019-01-24 09:41:42 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:41:42 -HTTP METHOD : GET
2019-01-24 09:41:42 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:41:42 -参数 : []
2019-01-24 09:41:42 -耗时 : 0
2019-01-24 09:41:42 -返回值 : system/user/user
2019-01-24 09:41:42 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:41:42 -HTTP METHOD : GET
2019-01-24 09:41:42 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:41:42 -参数 : [{page=1, limit=20}]
2019-01-24 09:41:42 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:41:42 -==> Parameters: 
2019-01-24 09:41:42 -<==      Total: 2
2019-01-24 09:41:42 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:41:42 -==> Parameters: 
2019-01-24 09:41:42 -<==      Total: 1
2019-01-24 09:41:42 -耗时 : 19
2019-01-24 09:41:42 -返回值 : com.bootdo.common.utils.PageUtils@4765c0cc
2019-01-24 09:44:28 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 09:44:28 -==> Parameters: 123(String)
2019-01-24 09:44:28 -<==      Total: 3
2019-01-24 09:44:28 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:44:28 -HTTP METHOD : GET
2019-01-24 09:44:28 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:44:28 -参数 : []
2019-01-24 09:44:28 -耗时 : 0
2019-01-24 09:44:28 -返回值 : system/user/user
2019-01-24 09:44:28 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:44:28 -HTTP METHOD : GET
2019-01-24 09:44:28 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:44:28 -参数 : [{page=1, limit=20}]
2019-01-24 09:44:28 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:44:28 -==> Parameters: 
2019-01-24 09:44:28 -<==      Total: 2
2019-01-24 09:44:28 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:44:28 -==> Parameters: 
2019-01-24 09:44:28 -<==      Total: 1
2019-01-24 09:44:28 -耗时 : 18
2019-01-24 09:44:28 -返回值 : com.bootdo.common.utils.PageUtils@3c75897b
2019-01-24 09:45:02 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:45:02 -HTTP METHOD : GET
2019-01-24 09:45:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:45:02 -参数 : []
2019-01-24 09:45:02 -耗时 : 0
2019-01-24 09:45:02 -返回值 : system/user/user
2019-01-24 09:45:02 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:45:02 -HTTP METHOD : GET
2019-01-24 09:45:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:45:02 -参数 : [{page=1, limit=20}]
2019-01-24 09:45:02 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:45:02 -==> Parameters: 
2019-01-24 09:45:02 -<==      Total: 2
2019-01-24 09:45:02 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:45:02 -==> Parameters: 
2019-01-24 09:45:02 -<==      Total: 1
2019-01-24 09:45:02 -耗时 : 17
2019-01-24 09:45:02 -返回值 : com.bootdo.common.utils.PageUtils@5a75755f
2019-01-24 09:45:50 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:45:50 -HTTP METHOD : GET
2019-01-24 09:45:50 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:45:50 -参数 : []
2019-01-24 09:45:50 -耗时 : 0
2019-01-24 09:45:50 -返回值 : system/user/user
2019-01-24 09:45:50 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:45:50 -HTTP METHOD : GET
2019-01-24 09:45:50 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:45:50 -参数 : [{page=1, limit=20}]
2019-01-24 09:45:50 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:45:50 -==> Parameters: 
2019-01-24 09:45:50 -<==      Total: 2
2019-01-24 09:45:50 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:45:50 -==> Parameters: 
2019-01-24 09:45:50 -<==      Total: 1
2019-01-24 09:45:50 -耗时 : 19
2019-01-24 09:45:50 -返回值 : com.bootdo.common.utils.PageUtils@6476035b
2019-01-24 09:45:55 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:45:55 -HTTP METHOD : GET
2019-01-24 09:45:55 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:45:55 -参数 : []
2019-01-24 09:45:55 -耗时 : 0
2019-01-24 09:45:55 -返回值 : system/user/user
2019-01-24 09:45:55 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:45:55 -HTTP METHOD : GET
2019-01-24 09:45:55 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:45:55 -参数 : [{page=1, limit=20}]
2019-01-24 09:45:55 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:45:55 -==> Parameters: 
2019-01-24 09:45:55 -<==      Total: 2
2019-01-24 09:45:55 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:45:55 -==> Parameters: 
2019-01-24 09:45:55 -<==      Total: 1
2019-01-24 09:45:55 -耗时 : 19
2019-01-24 09:45:55 -返回值 : com.bootdo.common.utils.PageUtils@28d5dd8d
2019-01-24 09:46:04 -Validating all active sessions...
2019-01-24 09:46:04 -Finished session validation.  [1] sessions were stopped.
2019-01-24 09:46:10 -请求地址 : http://localhost:8080/index
2019-01-24 09:46:10 -HTTP METHOD : GET
2019-01-24 09:46:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 09:46:10 -参数 : [{}]
2019-01-24 09:46:10 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 09:46:10 -==> Parameters: 123(String)
2019-01-24 09:46:10 -<==      Total: 2
2019-01-24 09:46:10 -耗时 : 20
2019-01-24 09:46:10 -返回值 : index_v1
2019-01-24 09:46:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 09:46:10 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 09:46:10.175(Timestamp)
2019-01-24 09:46:10 -<==    Updates: 1
2019-01-24 09:46:10 -请求地址 : http://localhost:8080/main
2019-01-24 09:46:10 -HTTP METHOD : GET
2019-01-24 09:46:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:46:10 -参数 : []
2019-01-24 09:46:10 -耗时 : 1
2019-01-24 09:46:10 -返回值 : main
2019-01-24 09:46:10 -请求地址 : http://localhost:8080/main
2019-01-24 09:46:10 -HTTP METHOD : GET
2019-01-24 09:46:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:46:10 -参数 : []
2019-01-24 09:46:10 -耗时 : 0
2019-01-24 09:46:10 -返回值 : main
2019-01-24 09:46:12 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:46:12 -HTTP METHOD : GET
2019-01-24 09:46:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:46:12 -参数 : []
2019-01-24 09:46:12 -耗时 : 0
2019-01-24 09:46:12 -返回值 : system/user/user
2019-01-24 09:46:12 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:46:12 -HTTP METHOD : GET
2019-01-24 09:46:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:46:12 -参数 : [{page=1, limit=20}]
2019-01-24 09:46:12 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:46:12 -==> Parameters: 
2019-01-24 09:46:12 -<==      Total: 2
2019-01-24 09:46:12 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:46:12 -==> Parameters: 
2019-01-24 09:46:12 -<==      Total: 1
2019-01-24 09:46:12 -耗时 : 21
2019-01-24 09:46:12 -返回值 : com.bootdo.common.utils.PageUtils@48c740fa
2019-01-24 09:46:14 -请求地址 : http://localhost:8080/index
2019-01-24 09:46:14 -HTTP METHOD : GET
2019-01-24 09:46:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 09:46:14 -参数 : [{}]
2019-01-24 09:46:14 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 09:46:14 -==> Parameters: 123(String)
2019-01-24 09:46:14 -<==      Total: 2
2019-01-24 09:46:14 -耗时 : 22
2019-01-24 09:46:14 -返回值 : index_v1
2019-01-24 09:46:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 09:46:14 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 09:46:14.909(Timestamp)
2019-01-24 09:46:14 -<==    Updates: 1
2019-01-24 09:46:14 -请求地址 : http://localhost:8080/main
2019-01-24 09:46:14 -HTTP METHOD : GET
2019-01-24 09:46:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:46:14 -参数 : []
2019-01-24 09:46:14 -耗时 : 0
2019-01-24 09:46:14 -返回值 : main
2019-01-24 09:46:15 -请求地址 : http://localhost:8080/main
2019-01-24 09:46:15 -HTTP METHOD : GET
2019-01-24 09:46:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:46:15 -参数 : []
2019-01-24 09:46:15 -耗时 : 0
2019-01-24 09:46:15 -返回值 : main
2019-01-24 09:46:17 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:46:17 -HTTP METHOD : GET
2019-01-24 09:46:17 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:46:17 -参数 : []
2019-01-24 09:46:17 -耗时 : 0
2019-01-24 09:46:17 -返回值 : system/user/user
2019-01-24 09:46:17 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:46:17 -HTTP METHOD : GET
2019-01-24 09:46:17 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:46:17 -参数 : [{page=1, limit=20}]
2019-01-24 09:46:17 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:46:17 -==> Parameters: 
2019-01-24 09:46:17 -<==      Total: 2
2019-01-24 09:46:17 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:46:17 -==> Parameters: 
2019-01-24 09:46:17 -<==      Total: 1
2019-01-24 09:46:17 -耗时 : 19
2019-01-24 09:46:17 -返回值 : com.bootdo.common.utils.PageUtils@fda027a
2019-01-24 09:46:18 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:46:18 -HTTP METHOD : GET
2019-01-24 09:46:18 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:46:18 -参数 : []
2019-01-24 09:46:18 -耗时 : 0
2019-01-24 09:46:18 -返回值 : system/user/user
2019-01-24 09:46:19 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:46:19 -HTTP METHOD : GET
2019-01-24 09:46:19 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:46:19 -参数 : [{page=1, limit=20}]
2019-01-24 09:46:19 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:46:19 -==> Parameters: 
2019-01-24 09:46:19 -<==      Total: 2
2019-01-24 09:46:19 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:46:19 -==> Parameters: 
2019-01-24 09:46:19 -<==      Total: 1
2019-01-24 09:46:19 -耗时 : 16
2019-01-24 09:46:19 -返回值 : com.bootdo.common.utils.PageUtils@1caf5065
2019-01-24 09:46:49 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2019-01-24 09:47:12 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 09:47:12 -==> Parameters: 123(String)
2019-01-24 09:47:12 -<==      Total: 4
2019-01-24 09:47:12 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:47:12 -HTTP METHOD : GET
2019-01-24 09:47:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:47:12 -参数 : []
2019-01-24 09:47:12 -耗时 : 0
2019-01-24 09:47:12 -返回值 : system/user/user
2019-01-24 09:47:12 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:47:12 -HTTP METHOD : GET
2019-01-24 09:47:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:47:12 -参数 : [{page=1, limit=20}]
2019-01-24 09:47:12 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:47:12 -==> Parameters: 
2019-01-24 09:47:12 -<==      Total: 2
2019-01-24 09:47:12 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:47:12 -==> Parameters: 
2019-01-24 09:47:12 -<==      Total: 1
2019-01-24 09:47:12 -耗时 : 19
2019-01-24 09:47:12 -返回值 : com.bootdo.common.utils.PageUtils@32d40044
2019-01-24 09:47:16 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:47:16 -HTTP METHOD : GET
2019-01-24 09:47:16 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:47:16 -参数 : []
2019-01-24 09:47:16 -耗时 : 0
2019-01-24 09:47:16 -返回值 : system/user/user
2019-01-24 09:47:16 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:47:16 -HTTP METHOD : GET
2019-01-24 09:47:16 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:47:16 -参数 : [{page=1, limit=20}]
2019-01-24 09:47:16 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:47:16 -==> Parameters: 
2019-01-24 09:47:16 -<==      Total: 2
2019-01-24 09:47:16 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:47:16 -==> Parameters: 
2019-01-24 09:47:16 -<==      Total: 1
2019-01-24 09:47:16 -耗时 : 21
2019-01-24 09:47:16 -返回值 : com.bootdo.common.utils.PageUtils@f1064f1
2019-01-24 09:49:01 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:49:01 -HTTP METHOD : GET
2019-01-24 09:49:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:49:01 -参数 : []
2019-01-24 09:49:01 -耗时 : 0
2019-01-24 09:49:01 -返回值 : system/user/user
2019-01-24 09:49:01 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:49:01 -HTTP METHOD : GET
2019-01-24 09:49:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:49:01 -参数 : [{page=1, limit=20}]
2019-01-24 09:49:01 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:49:01 -==> Parameters: 
2019-01-24 09:49:01 -<==      Total: 2
2019-01-24 09:49:01 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:49:01 -==> Parameters: 
2019-01-24 09:49:01 -<==      Total: 1
2019-01-24 09:49:01 -耗时 : 19
2019-01-24 09:49:01 -返回值 : com.bootdo.common.utils.PageUtils@d82ed92
2019-01-24 09:49:04 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:49:04 -HTTP METHOD : GET
2019-01-24 09:49:04 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:49:04 -参数 : []
2019-01-24 09:49:04 -耗时 : 0
2019-01-24 09:49:04 -返回值 : system/user/user
2019-01-24 09:49:04 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:49:04 -HTTP METHOD : GET
2019-01-24 09:49:04 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:49:04 -参数 : [{page=1, limit=20}]
2019-01-24 09:49:04 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:49:04 -==> Parameters: 
2019-01-24 09:49:04 -<==      Total: 2
2019-01-24 09:49:04 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:49:04 -==> Parameters: 
2019-01-24 09:49:04 -<==      Total: 1
2019-01-24 09:49:04 -耗时 : 22
2019-01-24 09:49:04 -返回值 : com.bootdo.common.utils.PageUtils@3824814d
2019-01-24 09:50:31 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 09:50:31 -==> Parameters: 123(String)
2019-01-24 09:50:31 -<==      Total: 5
2019-01-24 09:50:31 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:50:31 -HTTP METHOD : GET
2019-01-24 09:50:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:50:31 -参数 : []
2019-01-24 09:50:31 -耗时 : 0
2019-01-24 09:50:31 -返回值 : system/user/user
2019-01-24 09:50:31 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:50:31 -HTTP METHOD : GET
2019-01-24 09:50:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:50:31 -参数 : [{page=1, limit=20}]
2019-01-24 09:50:31 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:50:31 -==> Parameters: 
2019-01-24 09:50:31 -<==      Total: 2
2019-01-24 09:50:31 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:50:31 -==> Parameters: 
2019-01-24 09:50:31 -<==      Total: 1
2019-01-24 09:50:31 -耗时 : 19
2019-01-24 09:50:31 -返回值 : com.bootdo.common.utils.PageUtils@788cd532
2019-01-24 09:51:18 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:51:18 -HTTP METHOD : GET
2019-01-24 09:51:18 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:51:18 -参数 : []
2019-01-24 09:51:18 -耗时 : 0
2019-01-24 09:51:18 -返回值 : system/user/user
2019-01-24 09:51:19 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:51:19 -HTTP METHOD : GET
2019-01-24 09:51:19 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:51:19 -参数 : [{page=1, limit=20}]
2019-01-24 09:51:19 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:51:19 -==> Parameters: 
2019-01-24 09:51:19 -<==      Total: 2
2019-01-24 09:51:19 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:51:19 -==> Parameters: 
2019-01-24 09:51:19 -<==      Total: 1
2019-01-24 09:51:19 -耗时 : 23
2019-01-24 09:51:19 -返回值 : com.bootdo.common.utils.PageUtils@609ca9ba
2019-01-24 09:56:58 -请求地址 : http://localhost:8080/index
2019-01-24 09:56:58 -HTTP METHOD : GET
2019-01-24 09:56:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 09:56:58 -参数 : [{}]
2019-01-24 09:56:58 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 09:56:58 -==> Parameters: 123(String)
2019-01-24 09:56:58 -<==      Total: 2
2019-01-24 09:56:58 -耗时 : 16
2019-01-24 09:56:58 -返回值 : index_v1
2019-01-24 09:56:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 09:56:58 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 09:56:58.443(Timestamp)
2019-01-24 09:56:58 -<==    Updates: 1
2019-01-24 09:56:58 -请求地址 : http://localhost:8080/main
2019-01-24 09:56:58 -HTTP METHOD : GET
2019-01-24 09:56:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:56:58 -参数 : []
2019-01-24 09:56:58 -耗时 : 0
2019-01-24 09:56:58 -返回值 : main
2019-01-24 09:56:58 -请求地址 : http://localhost:8080/main
2019-01-24 09:56:58 -HTTP METHOD : GET
2019-01-24 09:56:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 09:56:58 -参数 : []
2019-01-24 09:56:58 -耗时 : 0
2019-01-24 09:56:58 -返回值 : main
2019-01-24 09:57:00 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 09:57:00 -==> Parameters: 123(String)
2019-01-24 09:57:00 -<==      Total: 5
2019-01-24 09:57:00 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 09:57:00 -HTTP METHOD : GET
2019-01-24 09:57:00 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 09:57:00 -参数 : []
2019-01-24 09:57:00 -耗时 : 0
2019-01-24 09:57:00 -返回值 : system/user/user
2019-01-24 09:57:01 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 09:57:01 -HTTP METHOD : GET
2019-01-24 09:57:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 09:57:01 -参数 : [{page=1, limit=20}]
2019-01-24 09:57:01 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 09:57:01 -==> Parameters: 
2019-01-24 09:57:01 -<==      Total: 2
2019-01-24 09:57:01 -==>  Preparing: select count(*) from sys_user 
2019-01-24 09:57:01 -==> Parameters: 
2019-01-24 09:57:01 -<==      Total: 1
2019-01-24 09:57:01 -耗时 : 21
2019-01-24 09:57:01 -返回值 : com.bootdo.common.utils.PageUtils@61426ac9
2019-01-24 10:03:06 -请求地址 : http://localhost:8080/index
2019-01-24 10:03:06 -HTTP METHOD : GET
2019-01-24 10:03:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:03:06 -参数 : [{}]
2019-01-24 10:03:06 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:03:06 -==> Parameters: 123(String)
2019-01-24 10:03:06 -<==      Total: 2
2019-01-24 10:03:06 -耗时 : 29
2019-01-24 10:03:06 -返回值 : index_v1
2019-01-24 10:03:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:03:06 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:03:06.456(Timestamp)
2019-01-24 10:03:06 -<==    Updates: 1
2019-01-24 10:03:06 -请求地址 : http://localhost:8080/main
2019-01-24 10:03:06 -HTTP METHOD : GET
2019-01-24 10:03:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:03:06 -参数 : []
2019-01-24 10:03:06 -耗时 : 0
2019-01-24 10:03:06 -返回值 : main
2019-01-24 10:03:06 -请求地址 : http://localhost:8080/main
2019-01-24 10:03:06 -HTTP METHOD : GET
2019-01-24 10:03:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:03:06 -参数 : []
2019-01-24 10:03:06 -耗时 : 0
2019-01-24 10:03:06 -返回值 : main
2019-01-24 10:03:08 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 10:03:08 -==> Parameters: 123(String)
2019-01-24 10:03:08 -<==      Total: 5
2019-01-24 10:03:08 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:03:08 -HTTP METHOD : GET
2019-01-24 10:03:08 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:03:08 -参数 : []
2019-01-24 10:03:08 -耗时 : 0
2019-01-24 10:03:08 -返回值 : system/user/user
2019-01-24 10:03:08 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:03:08 -HTTP METHOD : GET
2019-01-24 10:03:08 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:03:08 -参数 : [{page=1, limit=20}]
2019-01-24 10:03:08 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:03:08 -==> Parameters: 
2019-01-24 10:03:08 -<==      Total: 2
2019-01-24 10:03:08 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:03:08 -==> Parameters: 
2019-01-24 10:03:08 -<==      Total: 1
2019-01-24 10:03:08 -耗时 : 24
2019-01-24 10:03:08 -返回值 : com.bootdo.common.utils.PageUtils@2fa0517e
2019-01-24 10:12:09 -请求地址 : http://localhost:8080/index
2019-01-24 10:12:09 -HTTP METHOD : GET
2019-01-24 10:12:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:12:09 -参数 : [{}]
2019-01-24 10:12:09 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:12:09 -==> Parameters: 123(String)
2019-01-24 10:12:09 -<==      Total: 2
2019-01-24 10:12:09 -耗时 : 25
2019-01-24 10:12:09 -返回值 : index_v1
2019-01-24 10:12:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:12:09 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:12:09.374(Timestamp)
2019-01-24 10:12:09 -请求地址 : http://localhost:8080/main
2019-01-24 10:12:09 -HTTP METHOD : GET
2019-01-24 10:12:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:12:09 -参数 : []
2019-01-24 10:12:09 -耗时 : 0
2019-01-24 10:12:09 -返回值 : main
2019-01-24 10:12:09 -<==    Updates: 1
2019-01-24 10:12:09 -请求地址 : http://localhost:8080/main
2019-01-24 10:12:09 -HTTP METHOD : GET
2019-01-24 10:12:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:12:09 -参数 : []
2019-01-24 10:12:09 -耗时 : 0
2019-01-24 10:12:09 -返回值 : main
2019-01-24 10:12:11 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 10:12:11 -==> Parameters: 123(String)
2019-01-24 10:12:11 -<==      Total: 5
2019-01-24 10:12:11 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:12:11 -HTTP METHOD : GET
2019-01-24 10:12:11 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:12:11 -参数 : []
2019-01-24 10:12:11 -耗时 : 0
2019-01-24 10:12:11 -返回值 : system/user/user
2019-01-24 10:12:12 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:12:12 -HTTP METHOD : GET
2019-01-24 10:12:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:12:12 -参数 : [{page=1, limit=20}]
2019-01-24 10:12:12 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:12:12 -==> Parameters: 
2019-01-24 10:12:12 -<==      Total: 2
2019-01-24 10:12:12 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:12:12 -==> Parameters: 
2019-01-24 10:12:12 -<==      Total: 1
2019-01-24 10:12:12 -耗时 : 23
2019-01-24 10:12:12 -返回值 : com.bootdo.common.utils.PageUtils@3dc434a6
2019-01-24 10:15:18 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 10:15:18 -==> Parameters: 123(String)
2019-01-24 10:15:18 -<==      Total: 5
2019-01-24 10:15:18 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:15:18 -HTTP METHOD : GET
2019-01-24 10:15:18 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:15:18 -参数 : []
2019-01-24 10:15:18 -耗时 : 0
2019-01-24 10:15:18 -返回值 : system/user/user
2019-01-24 10:15:19 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:15:19 -HTTP METHOD : GET
2019-01-24 10:15:19 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:15:19 -参数 : [{page=1, limit=20}]
2019-01-24 10:15:19 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:15:19 -==> Parameters: 
2019-01-24 10:15:19 -<==      Total: 2
2019-01-24 10:15:19 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:15:19 -==> Parameters: 
2019-01-24 10:15:19 -<==      Total: 1
2019-01-24 10:15:19 -耗时 : 19
2019-01-24 10:15:19 -返回值 : com.bootdo.common.utils.PageUtils@1b13bce
2019-01-24 10:16:12 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:16:12 -HTTP METHOD : GET
2019-01-24 10:16:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:16:12 -参数 : []
2019-01-24 10:16:12 -耗时 : 0
2019-01-24 10:16:12 -返回值 : system/user/user
2019-01-24 10:16:12 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:16:12 -HTTP METHOD : GET
2019-01-24 10:16:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:16:12 -参数 : [{page=1, limit=20}]
2019-01-24 10:16:12 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:16:12 -==> Parameters: 
2019-01-24 10:16:12 -<==      Total: 2
2019-01-24 10:16:12 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:16:12 -==> Parameters: 
2019-01-24 10:16:12 -<==      Total: 1
2019-01-24 10:16:12 -耗时 : 18
2019-01-24 10:16:12 -返回值 : com.bootdo.common.utils.PageUtils@10dc1b1c
2019-01-24 10:16:49 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 3]
2019-01-24 10:20:13 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 10:20:13 -==> Parameters: 123(String)
2019-01-24 10:20:13 -<==      Total: 5
2019-01-24 10:20:13 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:20:13 -HTTP METHOD : GET
2019-01-24 10:20:13 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:20:13 -参数 : []
2019-01-24 10:20:13 -耗时 : 0
2019-01-24 10:20:13 -返回值 : system/user/user
2019-01-24 10:20:14 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:20:14 -HTTP METHOD : GET
2019-01-24 10:20:14 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:20:14 -参数 : [{page=1, limit=20}]
2019-01-24 10:20:14 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:20:14 -==> Parameters: 
2019-01-24 10:20:14 -<==      Total: 2
2019-01-24 10:20:14 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:20:14 -==> Parameters: 
2019-01-24 10:20:14 -<==      Total: 1
2019-01-24 10:20:14 -耗时 : 22
2019-01-24 10:20:14 -返回值 : com.bootdo.common.utils.PageUtils@5ddc9f68
2019-01-24 10:21:00 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:21:00 -HTTP METHOD : GET
2019-01-24 10:21:00 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:21:00 -参数 : []
2019-01-24 10:21:00 -耗时 : 1
2019-01-24 10:21:00 -返回值 : system/user/user
2019-01-24 10:21:01 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:21:01 -HTTP METHOD : GET
2019-01-24 10:21:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:21:01 -参数 : [{page=1, limit=20}]
2019-01-24 10:21:01 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:21:01 -==> Parameters: 
2019-01-24 10:21:01 -<==      Total: 2
2019-01-24 10:21:01 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:21:01 -==> Parameters: 
2019-01-24 10:21:01 -<==      Total: 1
2019-01-24 10:21:01 -耗时 : 22
2019-01-24 10:21:01 -返回值 : com.bootdo.common.utils.PageUtils@225d8c03
2019-01-24 10:21:05 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:21:05 -HTTP METHOD : GET
2019-01-24 10:21:05 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:21:05 -参数 : []
2019-01-24 10:21:05 -耗时 : 1
2019-01-24 10:21:05 -返回值 : system/user/user
2019-01-24 10:21:05 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:21:05 -HTTP METHOD : GET
2019-01-24 10:21:05 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:21:05 -参数 : [{page=1, limit=20}]
2019-01-24 10:21:05 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:21:05 -==> Parameters: 
2019-01-24 10:21:05 -<==      Total: 2
2019-01-24 10:21:05 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:21:05 -==> Parameters: 
2019-01-24 10:21:05 -<==      Total: 1
2019-01-24 10:21:05 -耗时 : 36
2019-01-24 10:21:05 -返回值 : com.bootdo.common.utils.PageUtils@3ba2e69b
2019-01-24 10:21:07 -请求地址 : http://localhost:8080/index
2019-01-24 10:21:07 -HTTP METHOD : GET
2019-01-24 10:21:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:21:07 -参数 : [{}]
2019-01-24 10:21:07 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:21:07 -==> Parameters: 123(String)
2019-01-24 10:21:07 -<==      Total: 2
2019-01-24 10:21:07 -耗时 : 28
2019-01-24 10:21:07 -返回值 : index_v1
2019-01-24 10:21:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:21:07 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:21:07.079(Timestamp)
2019-01-24 10:21:07 -<==    Updates: 1
2019-01-24 10:21:07 -请求地址 : http://localhost:8080/main
2019-01-24 10:21:07 -HTTP METHOD : GET
2019-01-24 10:21:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:21:07 -参数 : []
2019-01-24 10:21:07 -耗时 : 0
2019-01-24 10:21:07 -返回值 : main
2019-01-24 10:21:07 -请求地址 : http://localhost:8080/main
2019-01-24 10:21:07 -HTTP METHOD : GET
2019-01-24 10:21:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:21:07 -参数 : []
2019-01-24 10:21:07 -耗时 : 0
2019-01-24 10:21:07 -返回值 : main
2019-01-24 10:21:09 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:21:09 -HTTP METHOD : GET
2019-01-24 10:21:09 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:21:09 -参数 : []
2019-01-24 10:21:09 -耗时 : 0
2019-01-24 10:21:09 -返回值 : system/user/user
2019-01-24 10:21:09 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:21:09 -HTTP METHOD : GET
2019-01-24 10:21:09 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:21:09 -参数 : [{page=1, limit=20}]
2019-01-24 10:21:09 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:21:09 -==> Parameters: 
2019-01-24 10:21:09 -<==      Total: 2
2019-01-24 10:21:09 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:21:09 -==> Parameters: 
2019-01-24 10:21:09 -<==      Total: 1
2019-01-24 10:21:09 -耗时 : 20
2019-01-24 10:21:09 -返回值 : com.bootdo.common.utils.PageUtils@4c6f44cf
2019-01-24 10:21:11 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:21:11 -HTTP METHOD : GET
2019-01-24 10:21:11 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:21:11 -参数 : []
2019-01-24 10:21:11 -耗时 : 1
2019-01-24 10:21:11 -返回值 : system/user/user
2019-01-24 10:21:11 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:21:11 -HTTP METHOD : GET
2019-01-24 10:21:11 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:21:11 -参数 : [{page=1, limit=20}]
2019-01-24 10:21:11 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:21:11 -==> Parameters: 
2019-01-24 10:21:11 -<==      Total: 2
2019-01-24 10:21:11 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:21:11 -==> Parameters: 
2019-01-24 10:21:11 -<==      Total: 1
2019-01-24 10:21:11 -耗时 : 23
2019-01-24 10:21:11 -返回值 : com.bootdo.common.utils.PageUtils@4ceb8b8a
2019-01-24 10:23:04 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 10:23:04 -==> Parameters: 123(String)
2019-01-24 10:23:04 -<==      Total: 4
2019-01-24 10:23:04 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:23:04 -HTTP METHOD : GET
2019-01-24 10:23:04 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:23:04 -参数 : []
2019-01-24 10:23:04 -耗时 : 0
2019-01-24 10:23:04 -返回值 : system/user/user
2019-01-24 10:23:04 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:23:04 -HTTP METHOD : GET
2019-01-24 10:23:04 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:23:04 -参数 : [{page=1, limit=20}]
2019-01-24 10:23:04 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:23:04 -==> Parameters: 
2019-01-24 10:23:04 -<==      Total: 2
2019-01-24 10:23:04 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:23:04 -==> Parameters: 
2019-01-24 10:23:04 -<==      Total: 1
2019-01-24 10:23:04 -耗时 : 23
2019-01-24 10:23:04 -返回值 : com.bootdo.common.utils.PageUtils@55dea034
2019-01-24 10:24:51 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:24:51 -HTTP METHOD : GET
2019-01-24 10:24:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:24:51 -参数 : []
2019-01-24 10:24:51 -耗时 : 1
2019-01-24 10:24:51 -返回值 : system/user/user
2019-01-24 10:24:51 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:24:51 -HTTP METHOD : GET
2019-01-24 10:24:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:24:51 -参数 : [{page=1, limit=20}]
2019-01-24 10:24:51 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:24:51 -==> Parameters: 
2019-01-24 10:24:51 -<==      Total: 2
2019-01-24 10:24:51 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:24:51 -==> Parameters: 
2019-01-24 10:24:51 -<==      Total: 1
2019-01-24 10:24:51 -耗时 : 20
2019-01-24 10:24:51 -返回值 : com.bootdo.common.utils.PageUtils@868197a
2019-01-24 10:26:41 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 10:26:41 -==> Parameters: 123(String)
2019-01-24 10:26:41 -<==      Total: 4
2019-01-24 10:26:41 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:26:41 -HTTP METHOD : GET
2019-01-24 10:26:41 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:26:41 -参数 : []
2019-01-24 10:26:41 -耗时 : 1
2019-01-24 10:26:41 -返回值 : system/user/user
2019-01-24 10:26:41 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:26:41 -HTTP METHOD : GET
2019-01-24 10:26:41 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:26:41 -参数 : [{page=1, limit=20}]
2019-01-24 10:26:41 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:26:41 -==> Parameters: 
2019-01-24 10:26:41 -<==      Total: 2
2019-01-24 10:26:41 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:26:41 -==> Parameters: 
2019-01-24 10:26:41 -<==      Total: 1
2019-01-24 10:26:41 -耗时 : 21
2019-01-24 10:26:41 -返回值 : com.bootdo.common.utils.PageUtils@5eadaa0a
2019-01-24 10:27:10 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:27:10 -HTTP METHOD : GET
2019-01-24 10:27:10 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:27:10 -参数 : []
2019-01-24 10:27:10 -耗时 : 0
2019-01-24 10:27:10 -返回值 : system/user/user
2019-01-24 10:27:10 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:27:10 -HTTP METHOD : GET
2019-01-24 10:27:10 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:27:10 -参数 : [{page=1, limit=20}]
2019-01-24 10:27:10 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:27:10 -==> Parameters: 
2019-01-24 10:27:10 -<==      Total: 2
2019-01-24 10:27:10 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:27:10 -==> Parameters: 
2019-01-24 10:27:10 -<==      Total: 1
2019-01-24 10:27:10 -耗时 : 19
2019-01-24 10:27:10 -返回值 : com.bootdo.common.utils.PageUtils@7acc54bd
2019-01-24 10:27:13 -请求地址 : http://localhost:8080/index
2019-01-24 10:27:13 -HTTP METHOD : GET
2019-01-24 10:27:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:27:13 -参数 : [{}]
2019-01-24 10:27:13 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:27:13 -==> Parameters: 123(String)
2019-01-24 10:27:13 -<==      Total: 2
2019-01-24 10:27:13 -耗时 : 39
2019-01-24 10:27:13 -返回值 : index_v1
2019-01-24 10:27:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:27:13 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 39(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:27:13.722(Timestamp)
2019-01-24 10:27:13 -<==    Updates: 1
2019-01-24 10:27:13 -请求地址 : http://localhost:8080/main
2019-01-24 10:27:13 -HTTP METHOD : GET
2019-01-24 10:27:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:27:13 -参数 : []
2019-01-24 10:27:13 -耗时 : 0
2019-01-24 10:27:13 -返回值 : main
2019-01-24 10:27:13 -请求地址 : http://localhost:8080/main
2019-01-24 10:27:13 -HTTP METHOD : GET
2019-01-24 10:27:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:27:13 -参数 : []
2019-01-24 10:27:13 -耗时 : 0
2019-01-24 10:27:13 -返回值 : main
2019-01-24 10:27:15 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:27:15 -HTTP METHOD : GET
2019-01-24 10:27:15 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:27:15 -参数 : []
2019-01-24 10:27:15 -耗时 : 0
2019-01-24 10:27:15 -返回值 : system/user/user
2019-01-24 10:27:16 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:27:16 -HTTP METHOD : GET
2019-01-24 10:27:16 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:27:16 -参数 : [{page=1, limit=20}]
2019-01-24 10:27:16 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:27:16 -==> Parameters: 
2019-01-24 10:27:16 -<==      Total: 2
2019-01-24 10:27:16 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:27:16 -==> Parameters: 
2019-01-24 10:27:16 -<==      Total: 1
2019-01-24 10:27:16 -耗时 : 21
2019-01-24 10:27:16 -返回值 : com.bootdo.common.utils.PageUtils@52add82e
2019-01-24 10:29:01 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 10:29:01 -==> Parameters: 123(String)
2019-01-24 10:29:01 -<==      Total: 4
2019-01-24 10:29:01 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:29:01 -HTTP METHOD : GET
2019-01-24 10:29:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:29:01 -参数 : []
2019-01-24 10:29:01 -耗时 : 0
2019-01-24 10:29:01 -返回值 : system/user/user
2019-01-24 10:29:01 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:29:01 -HTTP METHOD : GET
2019-01-24 10:29:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:29:01 -参数 : [{page=1, limit=20}]
2019-01-24 10:29:01 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:29:01 -==> Parameters: 
2019-01-24 10:29:01 -<==      Total: 2
2019-01-24 10:29:01 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:29:01 -==> Parameters: 
2019-01-24 10:29:01 -<==      Total: 1
2019-01-24 10:29:01 -耗时 : 18
2019-01-24 10:29:01 -返回值 : com.bootdo.common.utils.PageUtils@dc9d754
2019-01-24 10:32:16 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 10:32:16 -==> Parameters: 123(String)
2019-01-24 10:32:16 -<==      Total: 4
2019-01-24 10:32:16 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:32:16 -HTTP METHOD : GET
2019-01-24 10:32:16 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:32:16 -参数 : []
2019-01-24 10:32:16 -耗时 : 0
2019-01-24 10:32:16 -返回值 : system/user/user
2019-01-24 10:32:17 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:32:17 -HTTP METHOD : GET
2019-01-24 10:32:17 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:32:17 -参数 : [{page=1, limit=20}]
2019-01-24 10:32:17 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:32:17 -==> Parameters: 
2019-01-24 10:32:17 -<==      Total: 2
2019-01-24 10:32:17 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:32:17 -==> Parameters: 
2019-01-24 10:32:17 -<==      Total: 1
2019-01-24 10:32:17 -耗时 : 18
2019-01-24 10:32:17 -返回值 : com.bootdo.common.utils.PageUtils@1b78e903
2019-01-24 10:32:41 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:32:41 -HTTP METHOD : GET
2019-01-24 10:32:41 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:32:41 -参数 : []
2019-01-24 10:32:41 -耗时 : 0
2019-01-24 10:32:41 -返回值 : system/user/user
2019-01-24 10:32:41 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:32:41 -HTTP METHOD : GET
2019-01-24 10:32:41 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:32:41 -参数 : [{page=1, limit=20}]
2019-01-24 10:32:41 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:32:41 -==> Parameters: 
2019-01-24 10:32:41 -<==      Total: 2
2019-01-24 10:32:41 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:32:41 -==> Parameters: 
2019-01-24 10:32:41 -<==      Total: 1
2019-01-24 10:32:41 -耗时 : 19
2019-01-24 10:32:41 -返回值 : com.bootdo.common.utils.PageUtils@65d7c364
2019-01-24 10:34:34 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 10:34:34 -==> Parameters: 123(String)
2019-01-24 10:34:34 -<==      Total: 4
2019-01-24 10:34:34 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:34:34 -HTTP METHOD : GET
2019-01-24 10:34:34 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:34:34 -参数 : []
2019-01-24 10:34:34 -耗时 : 0
2019-01-24 10:34:34 -返回值 : system/user/user
2019-01-24 10:34:34 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:34:34 -HTTP METHOD : GET
2019-01-24 10:34:34 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:34:34 -参数 : [{page=1, limit=20}]
2019-01-24 10:34:34 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:34:34 -==> Parameters: 
2019-01-24 10:34:34 -<==      Total: 2
2019-01-24 10:34:34 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:34:34 -==> Parameters: 
2019-01-24 10:34:34 -<==      Total: 1
2019-01-24 10:34:34 -耗时 : 21
2019-01-24 10:34:34 -返回值 : com.bootdo.common.utils.PageUtils@5cd233f6
2019-01-24 10:34:39 -请求地址 : http://localhost:8080/index
2019-01-24 10:34:39 -HTTP METHOD : GET
2019-01-24 10:34:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:34:39 -参数 : [{}]
2019-01-24 10:34:39 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:34:39 -==> Parameters: 123(String)
2019-01-24 10:34:39 -<==      Total: 2
2019-01-24 10:34:39 -耗时 : 19
2019-01-24 10:34:39 -返回值 : index_v1
2019-01-24 10:34:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:34:39 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:34:39.506(Timestamp)
2019-01-24 10:34:39 -<==    Updates: 1
2019-01-24 10:34:39 -请求地址 : http://localhost:8080/main
2019-01-24 10:34:39 -HTTP METHOD : GET
2019-01-24 10:34:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:34:39 -参数 : []
2019-01-24 10:34:39 -耗时 : 0
2019-01-24 10:34:39 -返回值 : main
2019-01-24 10:34:39 -请求地址 : http://localhost:8080/main
2019-01-24 10:34:39 -HTTP METHOD : GET
2019-01-24 10:34:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:34:39 -参数 : []
2019-01-24 10:34:39 -耗时 : 1
2019-01-24 10:34:39 -返回值 : main
2019-01-24 10:34:42 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:34:42 -HTTP METHOD : GET
2019-01-24 10:34:42 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:34:42 -参数 : []
2019-01-24 10:34:42 -耗时 : 0
2019-01-24 10:34:42 -返回值 : system/user/user
2019-01-24 10:34:42 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:34:42 -HTTP METHOD : GET
2019-01-24 10:34:42 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:34:42 -参数 : [{page=1, limit=20}]
2019-01-24 10:34:42 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:34:42 -==> Parameters: 
2019-01-24 10:34:42 -<==      Total: 2
2019-01-24 10:34:42 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:34:42 -==> Parameters: 
2019-01-24 10:34:42 -<==      Total: 1
2019-01-24 10:34:42 -耗时 : 23
2019-01-24 10:34:42 -返回值 : com.bootdo.common.utils.PageUtils@579e4508
2019-01-24 10:35:07 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:35:07 -HTTP METHOD : GET
2019-01-24 10:35:07 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:35:07 -参数 : []
2019-01-24 10:35:07 -耗时 : 1
2019-01-24 10:35:07 -返回值 : system/user/user
2019-01-24 10:35:07 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:35:07 -HTTP METHOD : GET
2019-01-24 10:35:07 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:35:07 -参数 : [{page=1, limit=20}]
2019-01-24 10:35:07 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:35:07 -==> Parameters: 
2019-01-24 10:35:07 -<==      Total: 2
2019-01-24 10:35:07 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:35:07 -==> Parameters: 
2019-01-24 10:35:07 -<==      Total: 1
2019-01-24 10:35:07 -耗时 : 19
2019-01-24 10:35:07 -返回值 : com.bootdo.common.utils.PageUtils@f6f2bdf
2019-01-24 10:36:24 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:36:24 -HTTP METHOD : GET
2019-01-24 10:36:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:36:24 -参数 : []
2019-01-24 10:36:24 -耗时 : 0
2019-01-24 10:36:24 -返回值 : system/user/user
2019-01-24 10:36:24 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:36:24 -HTTP METHOD : GET
2019-01-24 10:36:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:36:24 -参数 : [{page=1, limit=20}]
2019-01-24 10:36:24 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:36:24 -==> Parameters: 
2019-01-24 10:36:24 -<==      Total: 2
2019-01-24 10:36:24 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:36:24 -==> Parameters: 
2019-01-24 10:36:24 -<==      Total: 1
2019-01-24 10:36:24 -耗时 : 17
2019-01-24 10:36:24 -返回值 : com.bootdo.common.utils.PageUtils@7f76647c
2019-01-24 10:37:41 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 10:37:41 -==> Parameters: 123(String)
2019-01-24 10:37:41 -<==      Total: 4
2019-01-24 10:37:41 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:37:41 -HTTP METHOD : GET
2019-01-24 10:37:41 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:37:41 -参数 : []
2019-01-24 10:37:41 -耗时 : 0
2019-01-24 10:37:41 -返回值 : system/user/user
2019-01-24 10:37:42 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:37:42 -HTTP METHOD : GET
2019-01-24 10:37:42 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:37:42 -参数 : [{page=1, limit=20}]
2019-01-24 10:37:42 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:37:42 -==> Parameters: 
2019-01-24 10:37:42 -<==      Total: 2
2019-01-24 10:37:42 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:37:42 -==> Parameters: 
2019-01-24 10:37:42 -<==      Total: 1
2019-01-24 10:37:42 -耗时 : 19
2019-01-24 10:37:42 -返回值 : com.bootdo.common.utils.PageUtils@2da60fa
2019-01-24 10:37:54 -请求地址 : http://localhost:8080/index
2019-01-24 10:37:54 -HTTP METHOD : GET
2019-01-24 10:37:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:37:54 -参数 : [{}]
2019-01-24 10:37:54 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:37:54 -==> Parameters: 123(String)
2019-01-24 10:37:54 -<==      Total: 2
2019-01-24 10:37:54 -耗时 : 35
2019-01-24 10:37:54 -返回值 : index_v1
2019-01-24 10:37:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:37:54 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:37:54.845(Timestamp)
2019-01-24 10:37:54 -请求地址 : http://localhost:8080/main
2019-01-24 10:37:54 -HTTP METHOD : GET
2019-01-24 10:37:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:37:54 -参数 : []
2019-01-24 10:37:54 -耗时 : 0
2019-01-24 10:37:54 -返回值 : main
2019-01-24 10:37:54 -<==    Updates: 1
2019-01-24 10:37:55 -请求地址 : http://localhost:8080/main
2019-01-24 10:37:55 -HTTP METHOD : GET
2019-01-24 10:37:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:37:55 -参数 : []
2019-01-24 10:37:55 -耗时 : 0
2019-01-24 10:37:55 -返回值 : main
2019-01-24 10:38:03 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:38:03 -HTTP METHOD : GET
2019-01-24 10:38:03 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:38:03 -参数 : []
2019-01-24 10:38:03 -耗时 : 1
2019-01-24 10:38:03 -返回值 : system/user/user
2019-01-24 10:38:03 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:38:03 -HTTP METHOD : GET
2019-01-24 10:38:03 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:38:03 -参数 : [{page=1, limit=20}]
2019-01-24 10:38:03 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:38:03 -==> Parameters: 
2019-01-24 10:38:03 -<==      Total: 2
2019-01-24 10:38:03 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:38:03 -==> Parameters: 
2019-01-24 10:38:03 -<==      Total: 1
2019-01-24 10:38:03 -耗时 : 23
2019-01-24 10:38:03 -返回值 : com.bootdo.common.utils.PageUtils@5dc8b174
2019-01-24 10:38:42 -请求地址 : http://localhost:8080/index
2019-01-24 10:38:42 -HTTP METHOD : GET
2019-01-24 10:38:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:38:42 -参数 : [{}]
2019-01-24 10:38:42 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:38:42 -==> Parameters: 123(String)
2019-01-24 10:38:42 -<==      Total: 2
2019-01-24 10:38:42 -耗时 : 29
2019-01-24 10:38:42 -返回值 : index_v1
2019-01-24 10:38:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:38:42 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:38:42.808(Timestamp)
2019-01-24 10:38:42 -<==    Updates: 1
2019-01-24 10:38:42 -请求地址 : http://localhost:8080/main
2019-01-24 10:38:42 -HTTP METHOD : GET
2019-01-24 10:38:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:38:42 -参数 : []
2019-01-24 10:38:42 -耗时 : 0
2019-01-24 10:38:42 -返回值 : main
2019-01-24 10:38:43 -请求地址 : http://localhost:8080/main
2019-01-24 10:38:43 -HTTP METHOD : GET
2019-01-24 10:38:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:38:43 -参数 : []
2019-01-24 10:38:43 -耗时 : 0
2019-01-24 10:38:43 -返回值 : main
2019-01-24 10:38:45 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:38:45 -HTTP METHOD : GET
2019-01-24 10:38:45 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:38:45 -参数 : []
2019-01-24 10:38:45 -耗时 : 0
2019-01-24 10:38:45 -返回值 : system/user/user
2019-01-24 10:38:45 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:38:45 -HTTP METHOD : GET
2019-01-24 10:38:45 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:38:45 -参数 : [{page=1, limit=20}]
2019-01-24 10:38:45 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:38:45 -==> Parameters: 
2019-01-24 10:38:45 -<==      Total: 2
2019-01-24 10:38:45 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:38:45 -==> Parameters: 
2019-01-24 10:38:45 -<==      Total: 1
2019-01-24 10:38:45 -耗时 : 22
2019-01-24 10:38:45 -返回值 : com.bootdo.common.utils.PageUtils@2f48fe7c
2019-01-24 10:39:21 -请求地址 : http://localhost:8080/index
2019-01-24 10:39:21 -HTTP METHOD : GET
2019-01-24 10:39:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:39:21 -参数 : [{}]
2019-01-24 10:39:21 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:39:21 -==> Parameters: 123(String)
2019-01-24 10:39:21 -<==      Total: 2
2019-01-24 10:39:21 -耗时 : 18
2019-01-24 10:39:21 -返回值 : index_v1
2019-01-24 10:39:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:39:21 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:39:21.18(Timestamp)
2019-01-24 10:39:21 -<==    Updates: 1
2019-01-24 10:39:21 -请求地址 : http://localhost:8080/main
2019-01-24 10:39:21 -HTTP METHOD : GET
2019-01-24 10:39:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:39:21 -参数 : []
2019-01-24 10:39:21 -耗时 : 0
2019-01-24 10:39:21 -返回值 : main
2019-01-24 10:39:21 -请求地址 : http://localhost:8080/main
2019-01-24 10:39:21 -HTTP METHOD : GET
2019-01-24 10:39:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:39:21 -参数 : []
2019-01-24 10:39:21 -耗时 : 1
2019-01-24 10:39:21 -返回值 : main
2019-01-24 10:39:23 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:39:23 -HTTP METHOD : GET
2019-01-24 10:39:23 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:39:23 -参数 : []
2019-01-24 10:39:23 -耗时 : 0
2019-01-24 10:39:23 -返回值 : system/user/user
2019-01-24 10:39:23 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:39:23 -HTTP METHOD : GET
2019-01-24 10:39:23 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:39:23 -参数 : [{page=1, limit=20}]
2019-01-24 10:39:23 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:39:23 -==> Parameters: 
2019-01-24 10:39:23 -<==      Total: 2
2019-01-24 10:39:23 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:39:23 -==> Parameters: 
2019-01-24 10:39:23 -<==      Total: 1
2019-01-24 10:39:23 -耗时 : 21
2019-01-24 10:39:23 -返回值 : com.bootdo.common.utils.PageUtils@5aeadd81
2019-01-24 10:39:27 -请求地址 : http://localhost:8080/
2019-01-24 10:39:27 -HTTP METHOD : GET
2019-01-24 10:39:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-24 10:39:27 -参数 : [{}]
2019-01-24 10:39:27 -耗时 : 0
2019-01-24 10:39:27 -返回值 : redirect:/login
2019-01-24 10:39:27 -请求地址 : http://localhost:8080/login
2019-01-24 10:39:27 -HTTP METHOD : GET
2019-01-24 10:39:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 10:39:27 -参数 : []
2019-01-24 10:39:27 -耗时 : 0
2019-01-24 10:39:27 -返回值 : login
2019-01-24 10:39:29 -请求地址 : http://localhost:8080/login
2019-01-24 10:39:29 -HTTP METHOD : POST
2019-01-24 10:39:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-24 10:39:29 -参数 : [admin, 123456]
2019-01-24 10:39:29 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-24 10:39:29 -==> Parameters: admin(String)
2019-01-24 10:39:29 -<==      Total: 1
2019-01-24 10:39:29 -耗时 : 7
2019-01-24 10:39:29 -返回值 : {msg=操作成功, code=0}
2019-01-24 10:39:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:39:29 -==> Parameters: 123(String), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-24 10:39:29.857(Timestamp)
2019-01-24 10:39:29 -请求地址 : http://localhost:8080/index
2019-01-24 10:39:29 -HTTP METHOD : GET
2019-01-24 10:39:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:39:29 -参数 : [{}]
2019-01-24 10:39:29 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:39:29 -==> Parameters: 123(String)
2019-01-24 10:39:29 -<==      Total: 2
2019-01-24 10:39:29 -耗时 : 19
2019-01-24 10:39:29 -返回值 : index_v1
2019-01-24 10:39:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:39:29 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:39:29.911(Timestamp)
2019-01-24 10:39:29 -<==    Updates: 1
2019-01-24 10:39:29 -请求地址 : http://localhost:8080/main
2019-01-24 10:39:29 -HTTP METHOD : GET
2019-01-24 10:39:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:39:29 -参数 : []
2019-01-24 10:39:29 -耗时 : 0
2019-01-24 10:39:29 -返回值 : main
2019-01-24 10:39:29 -<==    Updates: 1
2019-01-24 10:39:30 -请求地址 : http://localhost:8080/main
2019-01-24 10:39:30 -HTTP METHOD : GET
2019-01-24 10:39:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:39:30 -参数 : []
2019-01-24 10:39:30 -耗时 : 0
2019-01-24 10:39:30 -返回值 : main
2019-01-24 10:39:31 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 10:39:31 -==> Parameters: 123(String)
2019-01-24 10:39:31 -<==      Total: 5
2019-01-24 10:39:31 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:39:31 -HTTP METHOD : GET
2019-01-24 10:39:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:39:31 -参数 : []
2019-01-24 10:39:31 -耗时 : 0
2019-01-24 10:39:31 -返回值 : system/user/user
2019-01-24 10:39:32 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:39:32 -HTTP METHOD : GET
2019-01-24 10:39:32 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:39:32 -参数 : [{page=1, limit=20}]
2019-01-24 10:39:32 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:39:32 -==> Parameters: 
2019-01-24 10:39:32 -<==      Total: 2
2019-01-24 10:39:32 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:39:32 -==> Parameters: 
2019-01-24 10:39:32 -<==      Total: 1
2019-01-24 10:39:32 -耗时 : 15
2019-01-24 10:39:32 -返回值 : com.bootdo.common.utils.PageUtils@687c660d
2019-01-24 10:45:09 -请求地址 : http://localhost:8080/index
2019-01-24 10:45:09 -HTTP METHOD : GET
2019-01-24 10:45:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:45:09 -参数 : [{}]
2019-01-24 10:45:10 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:45:10 -==> Parameters: 123(String)
2019-01-24 10:45:10 -<==      Total: 2
2019-01-24 10:45:10 -耗时 : 32
2019-01-24 10:45:10 -返回值 : index_v1
2019-01-24 10:45:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:45:10 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:45:10.024(Timestamp)
2019-01-24 10:45:10 -<==    Updates: 1
2019-01-24 10:45:10 -请求地址 : http://localhost:8080/main
2019-01-24 10:45:10 -HTTP METHOD : GET
2019-01-24 10:45:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:45:10 -参数 : []
2019-01-24 10:45:10 -耗时 : 0
2019-01-24 10:45:10 -返回值 : main
2019-01-24 10:45:10 -请求地址 : http://localhost:8080/main
2019-01-24 10:45:10 -HTTP METHOD : GET
2019-01-24 10:45:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:45:10 -参数 : []
2019-01-24 10:45:10 -耗时 : 0
2019-01-24 10:45:10 -返回值 : main
2019-01-24 10:45:12 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 10:45:12 -==> Parameters: 123(String)
2019-01-24 10:45:12 -<==      Total: 5
2019-01-24 10:45:12 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:45:12 -HTTP METHOD : GET
2019-01-24 10:45:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:45:12 -参数 : []
2019-01-24 10:45:12 -耗时 : 0
2019-01-24 10:45:12 -返回值 : system/user/user
2019-01-24 10:45:12 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:45:12 -HTTP METHOD : GET
2019-01-24 10:45:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:45:12 -参数 : [{page=1, limit=20}]
2019-01-24 10:45:12 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:45:12 -==> Parameters: 
2019-01-24 10:45:12 -<==      Total: 2
2019-01-24 10:45:12 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:45:12 -==> Parameters: 
2019-01-24 10:45:12 -<==      Total: 1
2019-01-24 10:45:12 -耗时 : 11
2019-01-24 10:45:12 -返回值 : com.bootdo.common.utils.PageUtils@2ca49b47
2019-01-24 10:46:03 -请求地址 : http://localhost:8080/index
2019-01-24 10:46:03 -HTTP METHOD : GET
2019-01-24 10:46:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:46:03 -参数 : [{}]
2019-01-24 10:46:03 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:46:03 -==> Parameters: 123(String)
2019-01-24 10:46:03 -<==      Total: 2
2019-01-24 10:46:03 -耗时 : 23
2019-01-24 10:46:03 -返回值 : index_v1
2019-01-24 10:46:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:46:03 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:46:03.926(Timestamp)
2019-01-24 10:46:03 -<==    Updates: 1
2019-01-24 10:46:03 -请求地址 : http://localhost:8080/main
2019-01-24 10:46:03 -HTTP METHOD : GET
2019-01-24 10:46:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:46:03 -参数 : []
2019-01-24 10:46:03 -耗时 : 0
2019-01-24 10:46:03 -返回值 : main
2019-01-24 10:46:04 -请求地址 : http://localhost:8080/main
2019-01-24 10:46:04 -HTTP METHOD : GET
2019-01-24 10:46:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:46:04 -参数 : []
2019-01-24 10:46:04 -耗时 : 0
2019-01-24 10:46:04 -返回值 : main
2019-01-24 10:46:04 -Validating all active sessions...
2019-01-24 10:46:04 -Finished session validation.  No sessions were stopped.
2019-01-24 10:46:06 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:46:06 -HTTP METHOD : GET
2019-01-24 10:46:06 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:46:06 -参数 : []
2019-01-24 10:46:06 -耗时 : 0
2019-01-24 10:46:06 -返回值 : system/user/user
2019-01-24 10:46:06 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:46:06 -HTTP METHOD : GET
2019-01-24 10:46:06 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:46:06 -参数 : [{page=1, limit=20}]
2019-01-24 10:46:06 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:46:06 -==> Parameters: 
2019-01-24 10:46:06 -<==      Total: 2
2019-01-24 10:46:06 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:46:06 -==> Parameters: 
2019-01-24 10:46:06 -<==      Total: 1
2019-01-24 10:46:06 -耗时 : 13
2019-01-24 10:46:06 -返回值 : com.bootdo.common.utils.PageUtils@70153561
2019-01-24 10:46:26 -请求地址 : http://localhost:8080/index
2019-01-24 10:46:26 -HTTP METHOD : GET
2019-01-24 10:46:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:46:26 -参数 : [{}]
2019-01-24 10:46:26 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:46:26 -==> Parameters: 123(String)
2019-01-24 10:46:26 -<==      Total: 2
2019-01-24 10:46:26 -耗时 : 21
2019-01-24 10:46:26 -返回值 : index_v1
2019-01-24 10:46:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:46:26 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:46:26.614(Timestamp)
2019-01-24 10:46:26 -请求地址 : http://localhost:8080/main
2019-01-24 10:46:26 -HTTP METHOD : GET
2019-01-24 10:46:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:46:26 -参数 : []
2019-01-24 10:46:26 -耗时 : 1
2019-01-24 10:46:26 -返回值 : main
2019-01-24 10:46:26 -<==    Updates: 1
2019-01-24 10:46:26 -请求地址 : http://localhost:8080/main
2019-01-24 10:46:26 -HTTP METHOD : GET
2019-01-24 10:46:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:46:26 -参数 : []
2019-01-24 10:46:26 -耗时 : 0
2019-01-24 10:46:26 -返回值 : main
2019-01-24 10:46:28 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:46:28 -HTTP METHOD : GET
2019-01-24 10:46:28 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:46:28 -参数 : []
2019-01-24 10:46:28 -耗时 : 1
2019-01-24 10:46:28 -返回值 : system/user/user
2019-01-24 10:46:29 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:46:29 -HTTP METHOD : GET
2019-01-24 10:46:29 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:46:29 -参数 : [{page=1, limit=20}]
2019-01-24 10:46:29 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:46:29 -==> Parameters: 
2019-01-24 10:46:29 -<==      Total: 2
2019-01-24 10:46:29 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:46:29 -==> Parameters: 
2019-01-24 10:46:29 -<==      Total: 1
2019-01-24 10:46:29 -耗时 : 14
2019-01-24 10:46:29 -返回值 : com.bootdo.common.utils.PageUtils@befe73e
2019-01-24 10:46:49 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 4]
2019-01-24 10:47:18 -请求地址 : http://localhost:8080/index
2019-01-24 10:47:18 -HTTP METHOD : GET
2019-01-24 10:47:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:47:18 -参数 : [{}]
2019-01-24 10:47:18 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:47:18 -==> Parameters: 123(String)
2019-01-24 10:47:18 -<==      Total: 2
2019-01-24 10:47:18 -耗时 : 23
2019-01-24 10:47:18 -返回值 : index_v1
2019-01-24 10:47:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:47:18 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:47:18.104(Timestamp)
2019-01-24 10:47:18 -<==    Updates: 1
2019-01-24 10:47:18 -请求地址 : http://localhost:8080/main
2019-01-24 10:47:18 -HTTP METHOD : GET
2019-01-24 10:47:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:47:18 -参数 : []
2019-01-24 10:47:18 -耗时 : 0
2019-01-24 10:47:18 -返回值 : main
2019-01-24 10:47:18 -请求地址 : http://localhost:8080/main
2019-01-24 10:47:18 -HTTP METHOD : GET
2019-01-24 10:47:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:47:18 -参数 : []
2019-01-24 10:47:18 -耗时 : 0
2019-01-24 10:47:18 -返回值 : main
2019-01-24 10:47:20 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 10:47:20 -==> Parameters: 123(String)
2019-01-24 10:47:20 -<==      Total: 5
2019-01-24 10:47:20 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:47:20 -HTTP METHOD : GET
2019-01-24 10:47:20 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:47:20 -参数 : []
2019-01-24 10:47:20 -耗时 : 0
2019-01-24 10:47:20 -返回值 : system/user/user
2019-01-24 10:47:20 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:47:20 -HTTP METHOD : GET
2019-01-24 10:47:20 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:47:20 -参数 : [{page=1, limit=20}]
2019-01-24 10:47:20 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:47:20 -==> Parameters: 
2019-01-24 10:47:20 -<==      Total: 2
2019-01-24 10:47:20 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:47:20 -==> Parameters: 
2019-01-24 10:47:20 -<==      Total: 1
2019-01-24 10:47:20 -耗时 : 11
2019-01-24 10:47:20 -返回值 : com.bootdo.common.utils.PageUtils@470a85ed
2019-01-24 10:47:28 -请求地址 : http://localhost:8080/index
2019-01-24 10:47:28 -HTTP METHOD : GET
2019-01-24 10:47:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:47:28 -参数 : [{}]
2019-01-24 10:47:28 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:47:28 -==> Parameters: 123(String)
2019-01-24 10:47:28 -<==      Total: 2
2019-01-24 10:47:28 -耗时 : 13
2019-01-24 10:47:28 -返回值 : index_v1
2019-01-24 10:47:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:47:28 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:47:28.623(Timestamp)
2019-01-24 10:47:28 -<==    Updates: 1
2019-01-24 10:47:28 -请求地址 : http://localhost:8080/main
2019-01-24 10:47:28 -HTTP METHOD : GET
2019-01-24 10:47:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:47:28 -参数 : []
2019-01-24 10:47:28 -耗时 : 0
2019-01-24 10:47:28 -返回值 : main
2019-01-24 10:47:28 -请求地址 : http://localhost:8080/main
2019-01-24 10:47:28 -HTTP METHOD : GET
2019-01-24 10:47:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:47:28 -参数 : []
2019-01-24 10:47:28 -耗时 : 1
2019-01-24 10:47:28 -返回值 : main
2019-01-24 10:47:30 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:47:30 -HTTP METHOD : GET
2019-01-24 10:47:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:47:30 -参数 : []
2019-01-24 10:47:30 -耗时 : 0
2019-01-24 10:47:30 -返回值 : system/user/user
2019-01-24 10:47:31 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:47:31 -HTTP METHOD : GET
2019-01-24 10:47:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:47:31 -参数 : [{page=1, limit=20}]
2019-01-24 10:47:31 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:47:31 -==> Parameters: 
2019-01-24 10:47:31 -<==      Total: 2
2019-01-24 10:47:31 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:47:31 -==> Parameters: 
2019-01-24 10:47:31 -<==      Total: 1
2019-01-24 10:47:31 -耗时 : 18
2019-01-24 10:47:31 -返回值 : com.bootdo.common.utils.PageUtils@cc25cb0
2019-01-24 10:47:38 -请求地址 : http://localhost:8080/index
2019-01-24 10:47:38 -HTTP METHOD : GET
2019-01-24 10:47:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:47:38 -参数 : [{}]
2019-01-24 10:47:38 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:47:38 -==> Parameters: 123(String)
2019-01-24 10:47:38 -<==      Total: 2
2019-01-24 10:47:38 -耗时 : 7
2019-01-24 10:47:38 -返回值 : index_v1
2019-01-24 10:47:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:47:38 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 7(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:47:38.373(Timestamp)
2019-01-24 10:47:38 -请求地址 : http://localhost:8080/main
2019-01-24 10:47:38 -HTTP METHOD : GET
2019-01-24 10:47:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:47:38 -参数 : []
2019-01-24 10:47:38 -耗时 : 0
2019-01-24 10:47:38 -返回值 : main
2019-01-24 10:47:38 -<==    Updates: 1
2019-01-24 10:47:38 -请求地址 : http://localhost:8080/main
2019-01-24 10:47:38 -HTTP METHOD : GET
2019-01-24 10:47:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:47:38 -参数 : []
2019-01-24 10:47:38 -耗时 : 0
2019-01-24 10:47:38 -返回值 : main
2019-01-24 10:47:40 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:47:40 -HTTP METHOD : GET
2019-01-24 10:47:40 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:47:40 -参数 : []
2019-01-24 10:47:40 -耗时 : 0
2019-01-24 10:47:40 -返回值 : system/user/user
2019-01-24 10:47:40 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:47:40 -HTTP METHOD : GET
2019-01-24 10:47:40 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:47:40 -参数 : [{page=1, limit=20}]
2019-01-24 10:47:40 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:47:40 -==> Parameters: 
2019-01-24 10:47:40 -<==      Total: 2
2019-01-24 10:47:40 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:47:40 -==> Parameters: 
2019-01-24 10:47:40 -<==      Total: 1
2019-01-24 10:47:40 -耗时 : 12
2019-01-24 10:47:40 -返回值 : com.bootdo.common.utils.PageUtils@6c86a584
2019-01-24 10:47:48 -请求地址 : http://localhost:8080/index
2019-01-24 10:47:48 -HTTP METHOD : GET
2019-01-24 10:47:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:47:48 -参数 : [{}]
2019-01-24 10:47:48 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:47:48 -==> Parameters: 123(String)
2019-01-24 10:47:48 -<==      Total: 2
2019-01-24 10:47:48 -耗时 : 8
2019-01-24 10:47:48 -返回值 : index_v1
2019-01-24 10:47:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:47:48 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 9(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:47:48.104(Timestamp)
2019-01-24 10:47:48 -<==    Updates: 1
2019-01-24 10:47:48 -请求地址 : http://localhost:8080/main
2019-01-24 10:47:48 -HTTP METHOD : GET
2019-01-24 10:47:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:47:48 -参数 : []
2019-01-24 10:47:48 -耗时 : 1
2019-01-24 10:47:48 -返回值 : main
2019-01-24 10:47:48 -请求地址 : http://localhost:8080/main
2019-01-24 10:47:48 -HTTP METHOD : GET
2019-01-24 10:47:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:47:48 -参数 : []
2019-01-24 10:47:48 -耗时 : 0
2019-01-24 10:47:48 -返回值 : main
2019-01-24 10:47:51 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:47:51 -HTTP METHOD : GET
2019-01-24 10:47:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:47:51 -参数 : []
2019-01-24 10:47:51 -耗时 : 1
2019-01-24 10:47:51 -返回值 : system/user/user
2019-01-24 10:47:51 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:47:51 -HTTP METHOD : GET
2019-01-24 10:47:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:47:51 -参数 : [{page=1, limit=20}]
2019-01-24 10:47:51 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:47:51 -==> Parameters: 
2019-01-24 10:47:51 -<==      Total: 2
2019-01-24 10:47:51 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:47:51 -==> Parameters: 
2019-01-24 10:47:51 -<==      Total: 1
2019-01-24 10:47:51 -耗时 : 10
2019-01-24 10:47:51 -返回值 : com.bootdo.common.utils.PageUtils@1b394232
2019-01-24 10:48:07 -请求地址 : http://localhost:8080/index
2019-01-24 10:48:07 -HTTP METHOD : GET
2019-01-24 10:48:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:48:07 -参数 : [{}]
2019-01-24 10:48:07 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:48:07 -==> Parameters: 123(String)
2019-01-24 10:48:07 -<==      Total: 2
2019-01-24 10:48:07 -耗时 : 19
2019-01-24 10:48:07 -返回值 : index_v1
2019-01-24 10:48:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:48:07 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:48:07.325(Timestamp)
2019-01-24 10:48:07 -<==    Updates: 1
2019-01-24 10:48:07 -请求地址 : http://localhost:8080/main
2019-01-24 10:48:07 -HTTP METHOD : GET
2019-01-24 10:48:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:48:07 -参数 : []
2019-01-24 10:48:07 -耗时 : 0
2019-01-24 10:48:07 -返回值 : main
2019-01-24 10:48:07 -请求地址 : http://localhost:8080/main
2019-01-24 10:48:07 -HTTP METHOD : GET
2019-01-24 10:48:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:48:07 -参数 : []
2019-01-24 10:48:07 -耗时 : 0
2019-01-24 10:48:07 -返回值 : main
2019-01-24 10:48:09 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:48:09 -HTTP METHOD : GET
2019-01-24 10:48:09 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:48:09 -参数 : []
2019-01-24 10:48:09 -耗时 : 0
2019-01-24 10:48:09 -返回值 : system/user/user
2019-01-24 10:48:09 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:48:09 -HTTP METHOD : GET
2019-01-24 10:48:09 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:48:09 -参数 : [{page=1, limit=20}]
2019-01-24 10:48:09 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:48:09 -==> Parameters: 
2019-01-24 10:48:09 -<==      Total: 2
2019-01-24 10:48:09 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:48:09 -==> Parameters: 
2019-01-24 10:48:09 -<==      Total: 1
2019-01-24 10:48:09 -耗时 : 11
2019-01-24 10:48:09 -返回值 : com.bootdo.common.utils.PageUtils@621e7bfe
2019-01-24 10:48:19 -请求地址 : http://localhost:8080/index
2019-01-24 10:48:19 -HTTP METHOD : GET
2019-01-24 10:48:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:48:19 -参数 : [{}]
2019-01-24 10:48:19 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:48:19 -==> Parameters: 123(String)
2019-01-24 10:48:19 -<==      Total: 2
2019-01-24 10:48:19 -耗时 : 14
2019-01-24 10:48:19 -返回值 : index_v1
2019-01-24 10:48:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:48:19 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:48:19.426(Timestamp)
2019-01-24 10:48:19 -<==    Updates: 1
2019-01-24 10:48:19 -请求地址 : http://localhost:8080/main
2019-01-24 10:48:19 -HTTP METHOD : GET
2019-01-24 10:48:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:48:19 -参数 : []
2019-01-24 10:48:19 -耗时 : 0
2019-01-24 10:48:19 -返回值 : main
2019-01-24 10:48:19 -请求地址 : http://localhost:8080/main
2019-01-24 10:48:19 -HTTP METHOD : GET
2019-01-24 10:48:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:48:19 -参数 : []
2019-01-24 10:48:19 -耗时 : 0
2019-01-24 10:48:19 -返回值 : main
2019-01-24 10:48:21 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:48:21 -HTTP METHOD : GET
2019-01-24 10:48:21 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:48:21 -参数 : []
2019-01-24 10:48:21 -耗时 : 0
2019-01-24 10:48:21 -返回值 : system/user/user
2019-01-24 10:48:21 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:48:21 -HTTP METHOD : GET
2019-01-24 10:48:21 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:48:21 -参数 : [{page=1, limit=20}]
2019-01-24 10:48:21 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:48:21 -==> Parameters: 
2019-01-24 10:48:21 -<==      Total: 2
2019-01-24 10:48:21 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:48:21 -==> Parameters: 
2019-01-24 10:48:21 -<==      Total: 1
2019-01-24 10:48:21 -耗时 : 11
2019-01-24 10:48:21 -返回值 : com.bootdo.common.utils.PageUtils@6ec745ef
2019-01-24 10:51:51 -请求地址 : http://localhost:8080/index
2019-01-24 10:51:51 -HTTP METHOD : GET
2019-01-24 10:51:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:51:51 -参数 : [{}]
2019-01-24 10:51:51 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:51:51 -==> Parameters: 123(String)
2019-01-24 10:51:51 -<==      Total: 2
2019-01-24 10:51:51 -耗时 : 20
2019-01-24 10:51:51 -返回值 : index_v1
2019-01-24 10:51:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:51:51 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:51:51.954(Timestamp)
2019-01-24 10:51:51 -<==    Updates: 1
2019-01-24 10:51:52 -请求地址 : http://localhost:8080/main
2019-01-24 10:51:52 -HTTP METHOD : GET
2019-01-24 10:51:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:51:52 -参数 : []
2019-01-24 10:51:52 -耗时 : 1
2019-01-24 10:51:52 -返回值 : main
2019-01-24 10:51:52 -请求地址 : http://localhost:8080/main
2019-01-24 10:51:52 -HTTP METHOD : GET
2019-01-24 10:51:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:51:52 -参数 : []
2019-01-24 10:51:52 -耗时 : 0
2019-01-24 10:51:52 -返回值 : main
2019-01-24 10:51:54 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 10:51:54 -==> Parameters: 123(String)
2019-01-24 10:51:54 -<==      Total: 5
2019-01-24 10:51:54 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:51:54 -HTTP METHOD : GET
2019-01-24 10:51:54 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:51:54 -参数 : []
2019-01-24 10:51:54 -耗时 : 1
2019-01-24 10:51:54 -返回值 : system/user/user
2019-01-24 10:51:54 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:51:54 -HTTP METHOD : GET
2019-01-24 10:51:54 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:51:54 -参数 : [{page=1, limit=20}]
2019-01-24 10:51:54 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:51:54 -==> Parameters: 
2019-01-24 10:51:54 -<==      Total: 2
2019-01-24 10:51:54 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:51:54 -==> Parameters: 
2019-01-24 10:51:54 -<==      Total: 1
2019-01-24 10:51:54 -耗时 : 15
2019-01-24 10:51:54 -返回值 : com.bootdo.common.utils.PageUtils@b40b8b5
2019-01-24 10:54:14 -请求地址 : http://localhost:8080/index
2019-01-24 10:54:14 -HTTP METHOD : GET
2019-01-24 10:54:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 10:54:14 -参数 : [{}]
2019-01-24 10:54:14 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 10:54:14 -==> Parameters: 123(String)
2019-01-24 10:54:14 -<==      Total: 2
2019-01-24 10:54:14 -耗时 : 14
2019-01-24 10:54:14 -返回值 : index_v1
2019-01-24 10:54:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 10:54:14 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 10:54:14.877(Timestamp)
2019-01-24 10:54:14 -<==    Updates: 1
2019-01-24 10:54:14 -请求地址 : http://localhost:8080/main
2019-01-24 10:54:14 -HTTP METHOD : GET
2019-01-24 10:54:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:54:14 -参数 : []
2019-01-24 10:54:14 -耗时 : 0
2019-01-24 10:54:14 -返回值 : main
2019-01-24 10:54:15 -请求地址 : http://localhost:8080/main
2019-01-24 10:54:15 -HTTP METHOD : GET
2019-01-24 10:54:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 10:54:15 -参数 : []
2019-01-24 10:54:15 -耗时 : 0
2019-01-24 10:54:15 -返回值 : main
2019-01-24 10:54:17 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 10:54:17 -==> Parameters: 123(String)
2019-01-24 10:54:17 -<==      Total: 5
2019-01-24 10:54:17 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:54:17 -HTTP METHOD : GET
2019-01-24 10:54:17 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:54:17 -参数 : []
2019-01-24 10:54:17 -耗时 : 1
2019-01-24 10:54:17 -返回值 : system/user/user
2019-01-24 10:54:17 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:54:17 -HTTP METHOD : GET
2019-01-24 10:54:17 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:54:17 -参数 : [{page=1, limit=20}]
2019-01-24 10:54:17 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:54:17 -==> Parameters: 
2019-01-24 10:54:17 -<==      Total: 2
2019-01-24 10:54:17 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:54:17 -==> Parameters: 
2019-01-24 10:54:17 -<==      Total: 1
2019-01-24 10:54:17 -耗时 : 19
2019-01-24 10:54:17 -返回值 : com.bootdo.common.utils.PageUtils@31407f82
2019-01-24 10:54:47 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:54:47 -HTTP METHOD : GET
2019-01-24 10:54:47 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:54:47 -参数 : []
2019-01-24 10:54:47 -耗时 : 1
2019-01-24 10:54:47 -返回值 : system/user/user
2019-01-24 10:54:48 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:54:48 -HTTP METHOD : GET
2019-01-24 10:54:48 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:54:48 -参数 : [{page=1, limit=20}]
2019-01-24 10:54:48 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:54:48 -==> Parameters: 
2019-01-24 10:54:48 -<==      Total: 2
2019-01-24 10:54:48 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:54:48 -==> Parameters: 
2019-01-24 10:54:48 -<==      Total: 1
2019-01-24 10:54:48 -耗时 : 12
2019-01-24 10:54:48 -返回值 : com.bootdo.common.utils.PageUtils@2d98ada2
2019-01-24 10:55:51 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:55:51 -HTTP METHOD : GET
2019-01-24 10:55:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:55:51 -参数 : []
2019-01-24 10:55:51 -耗时 : 0
2019-01-24 10:55:51 -返回值 : system/user/user
2019-01-24 10:55:52 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:55:52 -HTTP METHOD : GET
2019-01-24 10:55:52 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:55:52 -参数 : [{page=1, limit=20}]
2019-01-24 10:55:52 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:55:52 -==> Parameters: 
2019-01-24 10:55:52 -<==      Total: 2
2019-01-24 10:55:52 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:55:52 -==> Parameters: 
2019-01-24 10:55:52 -<==      Total: 1
2019-01-24 10:55:52 -耗时 : 16
2019-01-24 10:55:52 -返回值 : com.bootdo.common.utils.PageUtils@15d297ff
2019-01-24 10:56:08 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 10:56:08 -HTTP METHOD : GET
2019-01-24 10:56:08 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 10:56:08 -参数 : []
2019-01-24 10:56:08 -耗时 : 0
2019-01-24 10:56:08 -返回值 : system/user/user
2019-01-24 10:56:08 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 10:56:08 -HTTP METHOD : GET
2019-01-24 10:56:08 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 10:56:08 -参数 : [{page=1, limit=20}]
2019-01-24 10:56:08 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 10:56:08 -==> Parameters: 
2019-01-24 10:56:08 -<==      Total: 2
2019-01-24 10:56:08 -==>  Preparing: select count(*) from sys_user 
2019-01-24 10:56:08 -==> Parameters: 
2019-01-24 10:56:08 -<==      Total: 1
2019-01-24 10:56:08 -耗时 : 14
2019-01-24 10:56:08 -返回值 : com.bootdo.common.utils.PageUtils@19a011b7
2019-01-24 11:02:39 -请求地址 : http://localhost:8080/index
2019-01-24 11:02:39 -HTTP METHOD : GET
2019-01-24 11:02:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 11:02:39 -参数 : [{}]
2019-01-24 11:02:39 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 11:02:39 -==> Parameters: 123(String)
2019-01-24 11:02:39 -<==      Total: 2
2019-01-24 11:02:39 -耗时 : 25
2019-01-24 11:02:39 -返回值 : index_v1
2019-01-24 11:02:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 11:02:39 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 11:02:39.44(Timestamp)
2019-01-24 11:02:39 -请求地址 : http://localhost:8080/main
2019-01-24 11:02:39 -HTTP METHOD : GET
2019-01-24 11:02:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:02:39 -参数 : []
2019-01-24 11:02:39 -耗时 : 0
2019-01-24 11:02:39 -返回值 : main
2019-01-24 11:02:39 -<==    Updates: 1
2019-01-24 11:02:39 -请求地址 : http://localhost:8080/main
2019-01-24 11:02:39 -HTTP METHOD : GET
2019-01-24 11:02:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:02:39 -参数 : []
2019-01-24 11:02:39 -耗时 : 0
2019-01-24 11:02:39 -返回值 : main
2019-01-24 11:02:41 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:02:41 -==> Parameters: 123(String)
2019-01-24 11:02:41 -<==      Total: 5
2019-01-24 11:02:41 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:02:41 -HTTP METHOD : GET
2019-01-24 11:02:41 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:02:41 -参数 : []
2019-01-24 11:02:41 -耗时 : 0
2019-01-24 11:02:41 -返回值 : system/user/user
2019-01-24 11:02:41 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:02:41 -HTTP METHOD : GET
2019-01-24 11:02:41 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:02:41 -参数 : [{page=1, limit=20}]
2019-01-24 11:02:41 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:02:41 -==> Parameters: 
2019-01-24 11:02:41 -<==      Total: 2
2019-01-24 11:02:41 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:02:41 -==> Parameters: 
2019-01-24 11:02:41 -<==      Total: 1
2019-01-24 11:02:41 -耗时 : 18
2019-01-24 11:02:41 -返回值 : com.bootdo.common.utils.PageUtils@fc0d6bf
2019-01-24 11:04:05 -请求地址 : http://localhost:8080/index
2019-01-24 11:04:05 -HTTP METHOD : GET
2019-01-24 11:04:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 11:04:05 -参数 : [{}]
2019-01-24 11:04:05 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 11:04:05 -==> Parameters: 123(String)
2019-01-24 11:04:05 -<==      Total: 2
2019-01-24 11:04:06 -耗时 : 20
2019-01-24 11:04:06 -返回值 : index_v1
2019-01-24 11:04:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 11:04:06 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 11:04:06.001(Timestamp)
2019-01-24 11:04:06 -<==    Updates: 1
2019-01-24 11:04:06 -请求地址 : http://localhost:8080/main
2019-01-24 11:04:06 -HTTP METHOD : GET
2019-01-24 11:04:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:04:06 -参数 : []
2019-01-24 11:04:06 -耗时 : 0
2019-01-24 11:04:06 -返回值 : main
2019-01-24 11:04:06 -请求地址 : http://localhost:8080/main
2019-01-24 11:04:06 -HTTP METHOD : GET
2019-01-24 11:04:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:04:06 -参数 : []
2019-01-24 11:04:06 -耗时 : 0
2019-01-24 11:04:06 -返回值 : main
2019-01-24 11:04:07 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:04:07 -HTTP METHOD : GET
2019-01-24 11:04:07 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:04:07 -参数 : []
2019-01-24 11:04:07 -耗时 : 0
2019-01-24 11:04:07 -返回值 : system/user/user
2019-01-24 11:04:08 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:04:08 -HTTP METHOD : GET
2019-01-24 11:04:08 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:04:08 -参数 : [{page=1, limit=20}]
2019-01-24 11:04:08 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:04:08 -==> Parameters: 
2019-01-24 11:04:08 -<==      Total: 2
2019-01-24 11:04:08 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:04:08 -==> Parameters: 
2019-01-24 11:04:08 -<==      Total: 1
2019-01-24 11:04:08 -耗时 : 14
2019-01-24 11:04:08 -返回值 : com.bootdo.common.utils.PageUtils@1aabb393
2019-01-24 11:04:11 -请求地址 : http://localhost:8080/
2019-01-24 11:04:11 -HTTP METHOD : GET
2019-01-24 11:04:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-24 11:04:11 -参数 : [{}]
2019-01-24 11:04:11 -耗时 : 0
2019-01-24 11:04:11 -返回值 : redirect:/login
2019-01-24 11:04:11 -请求地址 : http://localhost:8080/login
2019-01-24 11:04:11 -HTTP METHOD : GET
2019-01-24 11:04:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 11:04:11 -参数 : []
2019-01-24 11:04:11 -耗时 : 0
2019-01-24 11:04:11 -返回值 : login
2019-01-24 11:04:14 -请求地址 : http://localhost:8080/login
2019-01-24 11:04:14 -HTTP METHOD : POST
2019-01-24 11:04:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-24 11:04:14 -参数 : [admin, 123456]
2019-01-24 11:04:14 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-24 11:04:14 -==> Parameters: admin(String)
2019-01-24 11:04:14 -<==      Total: 1
2019-01-24 11:04:14 -耗时 : 4
2019-01-24 11:04:14 -返回值 : {msg=操作成功, code=0}
2019-01-24 11:04:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 11:04:14 -==> Parameters: 123(String), admin(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-24 11:04:14.565(Timestamp)
2019-01-24 11:04:14 -请求地址 : http://localhost:8080/index
2019-01-24 11:04:14 -HTTP METHOD : GET
2019-01-24 11:04:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 11:04:14 -参数 : [{}]
2019-01-24 11:04:14 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 11:04:14 -==> Parameters: 123(String)
2019-01-24 11:04:14 -<==      Total: 2
2019-01-24 11:04:14 -耗时 : 20
2019-01-24 11:04:14 -返回值 : index_v1
2019-01-24 11:04:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 11:04:14 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 11:04:14.602(Timestamp)
2019-01-24 11:04:14 -<==    Updates: 1
2019-01-24 11:04:14 -<==    Updates: 1
2019-01-24 11:04:14 -请求地址 : http://localhost:8080/main
2019-01-24 11:04:14 -HTTP METHOD : GET
2019-01-24 11:04:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:04:14 -参数 : []
2019-01-24 11:04:14 -耗时 : 1
2019-01-24 11:04:14 -返回值 : main
2019-01-24 11:04:14 -请求地址 : http://localhost:8080/main
2019-01-24 11:04:14 -HTTP METHOD : GET
2019-01-24 11:04:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:04:14 -参数 : []
2019-01-24 11:04:14 -耗时 : 1
2019-01-24 11:04:14 -返回值 : main
2019-01-24 11:04:16 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:04:16 -==> Parameters: 123(String)
2019-01-24 11:04:16 -<==      Total: 6
2019-01-24 11:04:16 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:04:16 -HTTP METHOD : GET
2019-01-24 11:04:16 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:04:16 -参数 : []
2019-01-24 11:04:16 -耗时 : 0
2019-01-24 11:04:16 -返回值 : system/user/user
2019-01-24 11:04:16 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:04:16 -HTTP METHOD : GET
2019-01-24 11:04:16 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:04:16 -参数 : [{page=1, limit=20}]
2019-01-24 11:04:16 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:04:16 -==> Parameters: 
2019-01-24 11:04:16 -<==      Total: 2
2019-01-24 11:04:16 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:04:16 -==> Parameters: 
2019-01-24 11:04:16 -<==      Total: 1
2019-01-24 11:04:16 -耗时 : 22
2019-01-24 11:04:16 -返回值 : com.bootdo.common.utils.PageUtils@49795c5b
2019-01-24 11:04:46 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:04:46 -HTTP METHOD : GET
2019-01-24 11:04:46 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:04:46 -参数 : []
2019-01-24 11:04:46 -耗时 : 0
2019-01-24 11:04:46 -返回值 : system/user/user
2019-01-24 11:04:47 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:04:47 -HTTP METHOD : GET
2019-01-24 11:04:47 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:04:47 -参数 : [{page=1, limit=20}]
2019-01-24 11:04:47 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:04:47 -==> Parameters: 
2019-01-24 11:04:47 -<==      Total: 2
2019-01-24 11:04:47 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:04:47 -==> Parameters: 
2019-01-24 11:04:47 -<==      Total: 1
2019-01-24 11:04:47 -耗时 : 24
2019-01-24 11:04:47 -返回值 : com.bootdo.common.utils.PageUtils@72537ff7
2019-01-24 11:05:42 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:05:42 -HTTP METHOD : GET
2019-01-24 11:05:42 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:05:42 -参数 : []
2019-01-24 11:05:42 -耗时 : 1
2019-01-24 11:05:42 -返回值 : system/user/user
2019-01-24 11:05:42 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:05:42 -HTTP METHOD : GET
2019-01-24 11:05:42 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:05:42 -参数 : [{page=1, limit=20}]
2019-01-24 11:05:42 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:05:42 -==> Parameters: 
2019-01-24 11:05:42 -<==      Total: 2
2019-01-24 11:05:42 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:05:42 -==> Parameters: 
2019-01-24 11:05:42 -<==      Total: 1
2019-01-24 11:05:42 -耗时 : 17
2019-01-24 11:05:42 -返回值 : com.bootdo.common.utils.PageUtils@4fef7057
2019-01-24 11:08:17 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:08:17 -==> Parameters: 123(String)
2019-01-24 11:08:17 -<==      Total: 6
2019-01-24 11:08:17 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:08:17 -HTTP METHOD : GET
2019-01-24 11:08:17 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:08:17 -参数 : []
2019-01-24 11:08:17 -耗时 : 0
2019-01-24 11:08:17 -返回值 : system/user/user
2019-01-24 11:08:18 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:08:18 -HTTP METHOD : GET
2019-01-24 11:08:18 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:08:18 -参数 : [{page=1, limit=20}]
2019-01-24 11:08:18 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:08:18 -==> Parameters: 
2019-01-24 11:08:18 -<==      Total: 2
2019-01-24 11:08:18 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:08:18 -==> Parameters: 
2019-01-24 11:08:18 -<==      Total: 1
2019-01-24 11:08:18 -耗时 : 23
2019-01-24 11:08:18 -返回值 : com.bootdo.common.utils.PageUtils@3c2e8a70
2019-01-24 11:09:49 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:09:49 -HTTP METHOD : GET
2019-01-24 11:09:49 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:09:49 -参数 : []
2019-01-24 11:09:49 -耗时 : 0
2019-01-24 11:09:49 -返回值 : system/user/user
2019-01-24 11:09:49 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:09:49 -HTTP METHOD : GET
2019-01-24 11:09:49 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:09:49 -参数 : [{page=1, limit=20}]
2019-01-24 11:09:49 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:09:49 -==> Parameters: 
2019-01-24 11:09:49 -<==      Total: 2
2019-01-24 11:09:49 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:09:49 -==> Parameters: 
2019-01-24 11:09:49 -<==      Total: 1
2019-01-24 11:09:49 -耗时 : 25
2019-01-24 11:09:49 -返回值 : com.bootdo.common.utils.PageUtils@6e962384
2019-01-24 11:16:09 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:16:09 -==> Parameters: 123(String)
2019-01-24 11:16:09 -<==      Total: 6
2019-01-24 11:16:10 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:16:10 -HTTP METHOD : GET
2019-01-24 11:16:10 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:16:10 -参数 : []
2019-01-24 11:16:10 -耗时 : 0
2019-01-24 11:16:10 -返回值 : system/user/user
2019-01-24 11:16:10 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:16:10 -HTTP METHOD : GET
2019-01-24 11:16:10 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:16:10 -参数 : [{page=1, limit=20}]
2019-01-24 11:16:10 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:16:10 -==> Parameters: 
2019-01-24 11:16:10 -<==      Total: 2
2019-01-24 11:16:10 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:16:10 -==> Parameters: 
2019-01-24 11:16:10 -<==      Total: 1
2019-01-24 11:16:10 -耗时 : 21
2019-01-24 11:16:10 -返回值 : com.bootdo.common.utils.PageUtils@3d98cc0f
2019-01-24 11:16:49 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 5]
2019-01-24 11:17:54 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:17:54 -HTTP METHOD : GET
2019-01-24 11:17:54 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:17:54 -参数 : []
2019-01-24 11:17:54 -耗时 : 0
2019-01-24 11:17:54 -返回值 : system/user/user
2019-01-24 11:17:55 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:17:55 -HTTP METHOD : GET
2019-01-24 11:17:55 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:17:55 -参数 : [{page=1, limit=20}]
2019-01-24 11:17:55 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:17:55 -==> Parameters: 
2019-01-24 11:17:55 -<==      Total: 2
2019-01-24 11:17:55 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:17:55 -==> Parameters: 
2019-01-24 11:17:55 -<==      Total: 1
2019-01-24 11:17:55 -耗时 : 22
2019-01-24 11:17:55 -返回值 : com.bootdo.common.utils.PageUtils@5c3f6629
2019-01-24 11:18:08 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:18:08 -HTTP METHOD : GET
2019-01-24 11:18:08 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:18:08 -参数 : []
2019-01-24 11:18:08 -耗时 : 1
2019-01-24 11:18:08 -返回值 : system/user/user
2019-01-24 11:18:09 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:18:09 -HTTP METHOD : GET
2019-01-24 11:18:09 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:18:09 -参数 : [{page=1, limit=20}]
2019-01-24 11:18:09 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:18:09 -==> Parameters: 
2019-01-24 11:18:09 -<==      Total: 2
2019-01-24 11:18:09 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:18:09 -==> Parameters: 
2019-01-24 11:18:09 -<==      Total: 1
2019-01-24 11:18:09 -耗时 : 19
2019-01-24 11:18:09 -返回值 : com.bootdo.common.utils.PageUtils@1057fc3b
2019-01-24 11:19:30 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:19:30 -==> Parameters: 123(String)
2019-01-24 11:19:30 -<==      Total: 6
2019-01-24 11:19:30 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:19:30 -HTTP METHOD : GET
2019-01-24 11:19:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:19:30 -参数 : []
2019-01-24 11:19:30 -耗时 : 0
2019-01-24 11:19:30 -返回值 : system/user/user
2019-01-24 11:19:30 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:19:30 -HTTP METHOD : GET
2019-01-24 11:19:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:19:30 -参数 : [{page=1, limit=20}]
2019-01-24 11:19:30 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:19:30 -==> Parameters: 
2019-01-24 11:19:30 -<==      Total: 2
2019-01-24 11:19:30 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:19:30 -==> Parameters: 
2019-01-24 11:19:30 -<==      Total: 1
2019-01-24 11:19:30 -耗时 : 28
2019-01-24 11:19:30 -返回值 : com.bootdo.common.utils.PageUtils@27f3e607
2019-01-24 11:20:34 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:20:34 -HTTP METHOD : GET
2019-01-24 11:20:34 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:20:34 -参数 : []
2019-01-24 11:20:34 -耗时 : 1
2019-01-24 11:20:34 -返回值 : system/user/user
2019-01-24 11:20:34 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:20:34 -HTTP METHOD : GET
2019-01-24 11:20:34 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:20:34 -参数 : [{page=1, limit=20}]
2019-01-24 11:20:34 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:20:34 -==> Parameters: 
2019-01-24 11:20:34 -<==      Total: 2
2019-01-24 11:20:34 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:20:34 -==> Parameters: 
2019-01-24 11:20:34 -<==      Total: 1
2019-01-24 11:20:34 -耗时 : 21
2019-01-24 11:20:34 -返回值 : com.bootdo.common.utils.PageUtils@50b719c4
2019-01-24 11:20:35 -请求地址 : http://localhost:8080/index
2019-01-24 11:20:35 -HTTP METHOD : GET
2019-01-24 11:20:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 11:20:35 -参数 : [{}]
2019-01-24 11:20:35 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 11:20:35 -==> Parameters: 123(String)
2019-01-24 11:20:35 -<==      Total: 2
2019-01-24 11:20:35 -耗时 : 14
2019-01-24 11:20:35 -返回值 : index_v1
2019-01-24 11:20:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 11:20:35 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 11:20:35.596(Timestamp)
2019-01-24 11:20:35 -<==    Updates: 1
2019-01-24 11:20:35 -请求地址 : http://localhost:8080/main
2019-01-24 11:20:35 -HTTP METHOD : GET
2019-01-24 11:20:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:20:35 -参数 : []
2019-01-24 11:20:35 -耗时 : 0
2019-01-24 11:20:35 -返回值 : main
2019-01-24 11:20:35 -请求地址 : http://localhost:8080/main
2019-01-24 11:20:35 -HTTP METHOD : GET
2019-01-24 11:20:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:20:35 -参数 : []
2019-01-24 11:20:35 -耗时 : 0
2019-01-24 11:20:35 -返回值 : main
2019-01-24 11:20:37 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:20:37 -HTTP METHOD : GET
2019-01-24 11:20:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:20:37 -参数 : []
2019-01-24 11:20:37 -耗时 : 0
2019-01-24 11:20:37 -返回值 : system/user/user
2019-01-24 11:20:37 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:20:37 -HTTP METHOD : GET
2019-01-24 11:20:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:20:37 -参数 : [{page=1, limit=20}]
2019-01-24 11:20:37 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:20:37 -==> Parameters: 
2019-01-24 11:20:37 -<==      Total: 2
2019-01-24 11:20:37 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:20:37 -==> Parameters: 
2019-01-24 11:20:37 -<==      Total: 1
2019-01-24 11:20:37 -耗时 : 15
2019-01-24 11:20:37 -返回值 : com.bootdo.common.utils.PageUtils@1f5bbf08
2019-01-24 11:20:39 -请求地址 : http://localhost:8080/
2019-01-24 11:20:39 -HTTP METHOD : GET
2019-01-24 11:20:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-24 11:20:39 -参数 : [{}]
2019-01-24 11:20:39 -耗时 : 1
2019-01-24 11:20:39 -返回值 : redirect:/login
2019-01-24 11:20:39 -请求地址 : http://localhost:8080/login
2019-01-24 11:20:39 -HTTP METHOD : GET
2019-01-24 11:20:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 11:20:39 -参数 : []
2019-01-24 11:20:39 -耗时 : 0
2019-01-24 11:20:39 -返回值 : login
2019-01-24 11:20:41 -请求地址 : http://localhost:8080/login
2019-01-24 11:20:41 -HTTP METHOD : POST
2019-01-24 11:20:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-24 11:20:41 -参数 : [admin, 123456]
2019-01-24 11:20:41 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-24 11:20:41 -==> Parameters: admin(String)
2019-01-24 11:20:41 -<==      Total: 1
2019-01-24 11:20:41 -耗时 : 9
2019-01-24 11:20:41 -返回值 : {msg=操作成功, code=0}
2019-01-24 11:20:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 11:20:41 -==> Parameters: 123(String), admin(String), 登录(String), 9(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-24 11:20:41.939(Timestamp)
2019-01-24 11:20:41 -<==    Updates: 1
2019-01-24 11:20:42 -请求地址 : http://localhost:8080/index
2019-01-24 11:20:42 -HTTP METHOD : GET
2019-01-24 11:20:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 11:20:42 -参数 : [{}]
2019-01-24 11:20:42 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 11:20:42 -==> Parameters: 123(String)
2019-01-24 11:20:42 -<==      Total: 2
2019-01-24 11:20:42 -耗时 : 13
2019-01-24 11:20:42 -返回值 : index_v1
2019-01-24 11:20:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 11:20:42 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 11:20:42.057(Timestamp)
2019-01-24 11:20:42 -请求地址 : http://localhost:8080/main
2019-01-24 11:20:42 -HTTP METHOD : GET
2019-01-24 11:20:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:20:42 -参数 : []
2019-01-24 11:20:42 -耗时 : 0
2019-01-24 11:20:42 -返回值 : main
2019-01-24 11:20:42 -<==    Updates: 1
2019-01-24 11:20:42 -请求地址 : http://localhost:8080/main
2019-01-24 11:20:42 -HTTP METHOD : GET
2019-01-24 11:20:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:20:42 -参数 : []
2019-01-24 11:20:42 -耗时 : 0
2019-01-24 11:20:42 -返回值 : main
2019-01-24 11:20:43 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:20:43 -==> Parameters: 123(String)
2019-01-24 11:20:43 -<==      Total: 7
2019-01-24 11:20:43 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:20:43 -HTTP METHOD : GET
2019-01-24 11:20:43 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:20:43 -参数 : []
2019-01-24 11:20:43 -耗时 : 1
2019-01-24 11:20:43 -返回值 : system/user/user
2019-01-24 11:20:44 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:20:44 -HTTP METHOD : GET
2019-01-24 11:20:44 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:20:44 -参数 : [{page=1, limit=20}]
2019-01-24 11:20:44 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:20:44 -==> Parameters: 
2019-01-24 11:20:44 -<==      Total: 2
2019-01-24 11:20:44 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:20:44 -==> Parameters: 
2019-01-24 11:20:44 -<==      Total: 1
2019-01-24 11:20:44 -耗时 : 26
2019-01-24 11:20:44 -返回值 : com.bootdo.common.utils.PageUtils@39fcf703
2019-01-24 11:24:22 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:24:22 -==> Parameters: 123(String)
2019-01-24 11:24:22 -<==      Total: 7
2019-01-24 11:24:22 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:24:22 -HTTP METHOD : GET
2019-01-24 11:24:22 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:24:22 -参数 : []
2019-01-24 11:24:22 -耗时 : 0
2019-01-24 11:24:22 -返回值 : system/user/user
2019-01-24 11:24:22 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:24:22 -HTTP METHOD : GET
2019-01-24 11:24:22 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:24:22 -参数 : [{page=1, limit=20}]
2019-01-24 11:24:22 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:24:22 -==> Parameters: 
2019-01-24 11:24:22 -<==      Total: 2
2019-01-24 11:24:22 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:24:22 -==> Parameters: 
2019-01-24 11:24:22 -<==      Total: 1
2019-01-24 11:24:22 -耗时 : 17
2019-01-24 11:24:22 -返回值 : com.bootdo.common.utils.PageUtils@1794468c
2019-01-24 11:25:27 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:25:27 -HTTP METHOD : GET
2019-01-24 11:25:27 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:25:27 -参数 : []
2019-01-24 11:25:27 -耗时 : 0
2019-01-24 11:25:27 -返回值 : system/user/user
2019-01-24 11:25:28 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:25:28 -HTTP METHOD : GET
2019-01-24 11:25:28 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:25:28 -参数 : [{page=1, limit=20}]
2019-01-24 11:25:28 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:25:28 -==> Parameters: 
2019-01-24 11:25:28 -<==      Total: 2
2019-01-24 11:25:28 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:25:28 -==> Parameters: 
2019-01-24 11:25:28 -<==      Total: 1
2019-01-24 11:25:28 -耗时 : 21
2019-01-24 11:25:28 -返回值 : com.bootdo.common.utils.PageUtils@4b4c44f0
2019-01-24 11:27:24 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:27:24 -==> Parameters: 123(String)
2019-01-24 11:27:24 -<==      Total: 7
2019-01-24 11:27:24 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:27:24 -HTTP METHOD : GET
2019-01-24 11:27:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:27:24 -参数 : []
2019-01-24 11:27:24 -耗时 : 0
2019-01-24 11:27:24 -返回值 : system/user/user
2019-01-24 11:27:24 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:27:24 -HTTP METHOD : GET
2019-01-24 11:27:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:27:24 -参数 : [{page=1, limit=20}]
2019-01-24 11:27:24 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:27:24 -==> Parameters: 
2019-01-24 11:27:24 -<==      Total: 2
2019-01-24 11:27:24 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:27:24 -==> Parameters: 
2019-01-24 11:27:24 -<==      Total: 1
2019-01-24 11:27:24 -耗时 : 19
2019-01-24 11:27:24 -返回值 : com.bootdo.common.utils.PageUtils@3488f483
2019-01-24 11:27:59 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:27:59 -HTTP METHOD : GET
2019-01-24 11:27:59 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:27:59 -参数 : []
2019-01-24 11:27:59 -耗时 : 1
2019-01-24 11:27:59 -返回值 : system/user/user
2019-01-24 11:28:00 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:28:00 -HTTP METHOD : GET
2019-01-24 11:28:00 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:28:00 -参数 : [{page=1, limit=20}]
2019-01-24 11:28:00 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:28:00 -==> Parameters: 
2019-01-24 11:28:00 -<==      Total: 2
2019-01-24 11:28:00 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:28:00 -==> Parameters: 
2019-01-24 11:28:00 -<==      Total: 1
2019-01-24 11:28:00 -耗时 : 20
2019-01-24 11:28:00 -返回值 : com.bootdo.common.utils.PageUtils@646e2935
2019-01-24 11:28:29 -请求地址 : http://localhost:8080/index
2019-01-24 11:28:29 -HTTP METHOD : GET
2019-01-24 11:28:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 11:28:29 -参数 : [{}]
2019-01-24 11:28:29 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 11:28:29 -==> Parameters: 123(String)
2019-01-24 11:28:29 -<==      Total: 2
2019-01-24 11:28:29 -耗时 : 23
2019-01-24 11:28:29 -返回值 : index_v1
2019-01-24 11:28:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 11:28:29 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 11:28:29.099(Timestamp)
2019-01-24 11:28:29 -<==    Updates: 1
2019-01-24 11:28:29 -请求地址 : http://localhost:8080/main
2019-01-24 11:28:29 -HTTP METHOD : GET
2019-01-24 11:28:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:28:29 -参数 : []
2019-01-24 11:28:29 -耗时 : 0
2019-01-24 11:28:29 -返回值 : main
2019-01-24 11:28:29 -请求地址 : http://localhost:8080/main
2019-01-24 11:28:29 -HTTP METHOD : GET
2019-01-24 11:28:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:28:29 -参数 : []
2019-01-24 11:28:29 -耗时 : 0
2019-01-24 11:28:29 -返回值 : main
2019-01-24 11:28:31 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:28:31 -HTTP METHOD : GET
2019-01-24 11:28:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:28:31 -参数 : []
2019-01-24 11:28:31 -耗时 : 0
2019-01-24 11:28:31 -返回值 : system/user/user
2019-01-24 11:28:31 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:28:31 -HTTP METHOD : GET
2019-01-24 11:28:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:28:31 -参数 : [{page=1, limit=20}]
2019-01-24 11:28:31 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:28:31 -==> Parameters: 
2019-01-24 11:28:31 -<==      Total: 2
2019-01-24 11:28:31 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:28:31 -==> Parameters: 
2019-01-24 11:28:31 -<==      Total: 1
2019-01-24 11:28:31 -耗时 : 31
2019-01-24 11:28:31 -返回值 : com.bootdo.common.utils.PageUtils@8846d7c
2019-01-24 11:30:25 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:30:25 -==> Parameters: 123(String)
2019-01-24 11:30:25 -<==      Total: 7
2019-01-24 11:30:25 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:30:25 -HTTP METHOD : GET
2019-01-24 11:30:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:30:25 -参数 : []
2019-01-24 11:30:25 -耗时 : 0
2019-01-24 11:30:25 -返回值 : system/user/user
2019-01-24 11:30:25 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:30:25 -HTTP METHOD : GET
2019-01-24 11:30:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:30:25 -参数 : [{page=1, limit=20}]
2019-01-24 11:30:25 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:30:25 -==> Parameters: 
2019-01-24 11:30:25 -<==      Total: 2
2019-01-24 11:30:25 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:30:25 -==> Parameters: 
2019-01-24 11:30:25 -<==      Total: 1
2019-01-24 11:30:25 -耗时 : 19
2019-01-24 11:30:25 -返回值 : com.bootdo.common.utils.PageUtils@18c3b348
2019-01-24 11:31:59 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:31:59 -HTTP METHOD : GET
2019-01-24 11:31:59 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:31:59 -参数 : []
2019-01-24 11:31:59 -耗时 : 0
2019-01-24 11:31:59 -返回值 : system/user/user
2019-01-24 11:31:59 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:31:59 -HTTP METHOD : GET
2019-01-24 11:31:59 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:31:59 -参数 : [{page=1, limit=20}]
2019-01-24 11:31:59 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:31:59 -==> Parameters: 
2019-01-24 11:31:59 -<==      Total: 2
2019-01-24 11:31:59 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:31:59 -==> Parameters: 
2019-01-24 11:31:59 -<==      Total: 1
2019-01-24 11:31:59 -耗时 : 22
2019-01-24 11:31:59 -返回值 : com.bootdo.common.utils.PageUtils@560540e6
2019-01-24 11:32:58 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:32:58 -==> Parameters: 123(String)
2019-01-24 11:32:58 -<==      Total: 7
2019-01-24 11:32:58 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:32:58 -HTTP METHOD : GET
2019-01-24 11:32:58 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:32:58 -参数 : []
2019-01-24 11:32:58 -耗时 : 1
2019-01-24 11:32:58 -返回值 : system/user/user
2019-01-24 11:32:59 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:32:59 -HTTP METHOD : GET
2019-01-24 11:32:59 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:32:59 -参数 : [{page=1, limit=20}]
2019-01-24 11:32:59 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:32:59 -==> Parameters: 
2019-01-24 11:32:59 -<==      Total: 2
2019-01-24 11:32:59 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:32:59 -==> Parameters: 
2019-01-24 11:32:59 -<==      Total: 1
2019-01-24 11:32:59 -耗时 : 18
2019-01-24 11:32:59 -返回值 : com.bootdo.common.utils.PageUtils@7b1a15ca
2019-01-24 11:33:22 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:33:22 -HTTP METHOD : GET
2019-01-24 11:33:22 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:33:22 -参数 : []
2019-01-24 11:33:22 -耗时 : 0
2019-01-24 11:33:22 -返回值 : system/user/user
2019-01-24 11:33:22 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:33:22 -HTTP METHOD : GET
2019-01-24 11:33:22 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:33:22 -参数 : [{page=1, limit=20}]
2019-01-24 11:33:22 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:33:22 -==> Parameters: 
2019-01-24 11:33:22 -<==      Total: 2
2019-01-24 11:33:22 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:33:22 -==> Parameters: 
2019-01-24 11:33:22 -<==      Total: 1
2019-01-24 11:33:22 -耗时 : 21
2019-01-24 11:33:22 -返回值 : com.bootdo.common.utils.PageUtils@10e0d03d
2019-01-24 11:33:48 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:33:48 -HTTP METHOD : GET
2019-01-24 11:33:48 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:33:48 -参数 : []
2019-01-24 11:33:48 -耗时 : 0
2019-01-24 11:33:48 -返回值 : system/user/user
2019-01-24 11:33:49 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:33:49 -HTTP METHOD : GET
2019-01-24 11:33:49 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:33:49 -参数 : [{page=1, limit=20}]
2019-01-24 11:33:49 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:33:49 -==> Parameters: 
2019-01-24 11:33:49 -<==      Total: 2
2019-01-24 11:33:49 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:33:49 -==> Parameters: 
2019-01-24 11:33:49 -<==      Total: 1
2019-01-24 11:33:49 -耗时 : 17
2019-01-24 11:33:49 -返回值 : com.bootdo.common.utils.PageUtils@2c0423a6
2019-01-24 11:34:30 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:34:30 -HTTP METHOD : GET
2019-01-24 11:34:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:34:30 -参数 : []
2019-01-24 11:34:30 -耗时 : 0
2019-01-24 11:34:30 -返回值 : system/user/user
2019-01-24 11:34:30 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:34:30 -HTTP METHOD : GET
2019-01-24 11:34:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:34:30 -参数 : [{page=1, limit=20}]
2019-01-24 11:34:30 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:34:30 -==> Parameters: 
2019-01-24 11:34:30 -<==      Total: 2
2019-01-24 11:34:30 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:34:30 -==> Parameters: 
2019-01-24 11:34:30 -<==      Total: 1
2019-01-24 11:34:31 -耗时 : 21
2019-01-24 11:34:31 -返回值 : com.bootdo.common.utils.PageUtils@4b4aa32f
2019-01-24 11:36:09 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:36:09 -==> Parameters: 123(String)
2019-01-24 11:36:09 -<==      Total: 7
2019-01-24 11:36:09 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:36:09 -HTTP METHOD : GET
2019-01-24 11:36:09 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:36:09 -参数 : []
2019-01-24 11:36:09 -耗时 : 0
2019-01-24 11:36:09 -返回值 : system/user/user
2019-01-24 11:36:09 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:36:09 -HTTP METHOD : GET
2019-01-24 11:36:09 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:36:09 -参数 : [{page=1, limit=20}]
2019-01-24 11:36:09 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:36:09 -==> Parameters: 
2019-01-24 11:36:09 -<==      Total: 2
2019-01-24 11:36:09 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:36:09 -==> Parameters: 
2019-01-24 11:36:09 -<==      Total: 1
2019-01-24 11:36:09 -耗时 : 18
2019-01-24 11:36:09 -返回值 : com.bootdo.common.utils.PageUtils@40d83157
2019-01-24 11:36:24 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:36:24 -HTTP METHOD : GET
2019-01-24 11:36:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:36:24 -参数 : []
2019-01-24 11:36:24 -耗时 : 0
2019-01-24 11:36:24 -返回值 : system/user/user
2019-01-24 11:36:24 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:36:24 -HTTP METHOD : GET
2019-01-24 11:36:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:36:24 -参数 : [{page=1, limit=20}]
2019-01-24 11:36:24 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:36:24 -==> Parameters: 
2019-01-24 11:36:24 -<==      Total: 2
2019-01-24 11:36:24 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:36:24 -==> Parameters: 
2019-01-24 11:36:24 -<==      Total: 1
2019-01-24 11:36:24 -耗时 : 22
2019-01-24 11:36:24 -返回值 : com.bootdo.common.utils.PageUtils@b189b5e
2019-01-24 11:38:30 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:38:30 -==> Parameters: 123(String)
2019-01-24 11:38:30 -<==      Total: 7
2019-01-24 11:38:30 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:38:30 -HTTP METHOD : GET
2019-01-24 11:38:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:38:30 -参数 : []
2019-01-24 11:38:30 -耗时 : 0
2019-01-24 11:38:30 -返回值 : system/user/user
2019-01-24 11:38:30 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:38:30 -HTTP METHOD : GET
2019-01-24 11:38:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:38:30 -参数 : [{page=1, limit=20}]
2019-01-24 11:38:30 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:38:30 -==> Parameters: 
2019-01-24 11:38:30 -<==      Total: 2
2019-01-24 11:38:30 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:38:30 -==> Parameters: 
2019-01-24 11:38:30 -<==      Total: 1
2019-01-24 11:38:30 -耗时 : 19
2019-01-24 11:38:30 -返回值 : com.bootdo.common.utils.PageUtils@710eab72
2019-01-24 11:38:49 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:38:49 -HTTP METHOD : GET
2019-01-24 11:38:49 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:38:49 -参数 : []
2019-01-24 11:38:49 -耗时 : 0
2019-01-24 11:38:49 -返回值 : system/user/user
2019-01-24 11:38:49 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:38:49 -HTTP METHOD : GET
2019-01-24 11:38:49 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:38:49 -参数 : [{page=1, limit=20}]
2019-01-24 11:38:49 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:38:49 -==> Parameters: 
2019-01-24 11:38:49 -<==      Total: 2
2019-01-24 11:38:49 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:38:49 -==> Parameters: 
2019-01-24 11:38:49 -<==      Total: 1
2019-01-24 11:38:49 -耗时 : 39
2019-01-24 11:38:49 -返回值 : com.bootdo.common.utils.PageUtils@48a708cf
2019-01-24 11:39:13 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:39:13 -HTTP METHOD : GET
2019-01-24 11:39:13 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:39:13 -参数 : []
2019-01-24 11:39:13 -耗时 : 0
2019-01-24 11:39:13 -返回值 : system/user/user
2019-01-24 11:39:13 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:39:13 -HTTP METHOD : GET
2019-01-24 11:39:13 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:39:13 -参数 : [{page=1, limit=20}]
2019-01-24 11:39:13 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:39:13 -==> Parameters: 
2019-01-24 11:39:13 -<==      Total: 2
2019-01-24 11:39:13 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:39:13 -==> Parameters: 
2019-01-24 11:39:13 -<==      Total: 1
2019-01-24 11:39:13 -耗时 : 20
2019-01-24 11:39:13 -返回值 : com.bootdo.common.utils.PageUtils@33fd6caa
2019-01-24 11:39:39 -请求地址 : http://localhost:8080/index
2019-01-24 11:39:39 -HTTP METHOD : GET
2019-01-24 11:39:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 11:39:39 -参数 : [{}]
2019-01-24 11:39:39 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 11:39:39 -==> Parameters: 123(String)
2019-01-24 11:39:39 -<==      Total: 2
2019-01-24 11:39:39 -耗时 : 22
2019-01-24 11:39:39 -返回值 : index_v1
2019-01-24 11:39:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 11:39:39 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 11:39:39.667(Timestamp)
2019-01-24 11:39:39 -请求地址 : http://localhost:8080/main
2019-01-24 11:39:39 -HTTP METHOD : GET
2019-01-24 11:39:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:39:39 -参数 : []
2019-01-24 11:39:39 -耗时 : 3
2019-01-24 11:39:39 -返回值 : main
2019-01-24 11:39:39 -<==    Updates: 1
2019-01-24 11:39:40 -请求地址 : http://localhost:8080/main
2019-01-24 11:39:40 -HTTP METHOD : GET
2019-01-24 11:39:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:39:40 -参数 : []
2019-01-24 11:39:40 -耗时 : 0
2019-01-24 11:39:40 -返回值 : main
2019-01-24 11:39:41 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:39:41 -HTTP METHOD : GET
2019-01-24 11:39:41 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:39:41 -参数 : []
2019-01-24 11:39:41 -耗时 : 1
2019-01-24 11:39:41 -返回值 : system/user/user
2019-01-24 11:39:42 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:39:42 -HTTP METHOD : GET
2019-01-24 11:39:42 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:39:42 -参数 : [{page=1, limit=20}]
2019-01-24 11:39:42 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:39:42 -==> Parameters: 
2019-01-24 11:39:42 -<==      Total: 2
2019-01-24 11:39:42 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:39:42 -==> Parameters: 
2019-01-24 11:39:42 -<==      Total: 1
2019-01-24 11:39:42 -耗时 : 20
2019-01-24 11:39:42 -返回值 : com.bootdo.common.utils.PageUtils@539d4eb8
2019-01-24 11:43:10 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:43:10 -==> Parameters: 123(String)
2019-01-24 11:43:10 -<==      Total: 7
2019-01-24 11:43:10 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:43:10 -HTTP METHOD : GET
2019-01-24 11:43:10 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:43:10 -参数 : []
2019-01-24 11:43:10 -耗时 : 1
2019-01-24 11:43:10 -返回值 : system/user/user
2019-01-24 11:43:10 -[THYMELEAF][http-nio-8080-exec-8] Exception processing template "system/user/user": An error happened during template parsing (template: "class path resource [templates/system/user/user.html]" - line 73, col 53)
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/user/user.html]" - line 73, col 53)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: (Line = 73, Column = 53) Malformed markup: Attribute "+" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:220)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
2019-01-24 11:43:10 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/user/user.html]" - line 73, col 53)] with root cause
org.attoparser.ParseException: (Line = 73, Column = 53) Malformed markup: Attribute "+" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:220)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-24 11:43:37 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:43:37 -HTTP METHOD : GET
2019-01-24 11:43:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:43:37 -参数 : []
2019-01-24 11:43:37 -耗时 : 0
2019-01-24 11:43:37 -返回值 : system/user/user
2019-01-24 11:43:37 -[THYMELEAF][http-nio-8080-exec-4] Exception processing template "system/user/user": An error happened during template parsing (template: "class path resource [templates/system/user/user.html]" - line 73, col 13)
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/user/user.html]" - line 73, col 13)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: (Line = 73, Column = 13) Incomplete structure: "<a class='layui-btn layui-btn-xs " + t1 + "'" + s_resetPwd_h + "' lay-event='usable'>"+t+"</a>";
				return html;
			};
		}}
		{{ gfun() }}
	</script>
</body>
</html>"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
2019-01-24 11:43:37 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/user/user.html]" - line 73, col 13)] with root cause
org.attoparser.ParseException: (Line = 73, Column = 13) Incomplete structure: "<a class='layui-btn layui-btn-xs " + t1 + "'" + s_resetPwd_h + "' lay-event='usable'>"+t+"</a>";
				return html;
			};
		}}
		{{ gfun() }}
	</script>
</body>
</html>"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-24 11:43:39 -请求地址 : http://localhost:8080/index
2019-01-24 11:43:39 -HTTP METHOD : GET
2019-01-24 11:43:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 11:43:39 -参数 : [{}]
2019-01-24 11:43:39 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 11:43:39 -==> Parameters: 123(String)
2019-01-24 11:43:39 -<==      Total: 2
2019-01-24 11:43:39 -耗时 : 23
2019-01-24 11:43:39 -返回值 : index_v1
2019-01-24 11:43:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 11:43:39 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 11:43:39.561(Timestamp)
2019-01-24 11:43:39 -请求地址 : http://localhost:8080/main
2019-01-24 11:43:39 -HTTP METHOD : GET
2019-01-24 11:43:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:43:39 -参数 : []
2019-01-24 11:43:39 -耗时 : 0
2019-01-24 11:43:39 -返回值 : main
2019-01-24 11:43:39 -<==    Updates: 1
2019-01-24 11:43:39 -请求地址 : http://localhost:8080/main
2019-01-24 11:43:39 -HTTP METHOD : GET
2019-01-24 11:43:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:43:39 -参数 : []
2019-01-24 11:43:39 -耗时 : 0
2019-01-24 11:43:39 -返回值 : main
2019-01-24 11:43:41 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:43:41 -HTTP METHOD : GET
2019-01-24 11:43:41 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:43:41 -参数 : []
2019-01-24 11:43:41 -耗时 : 0
2019-01-24 11:43:41 -返回值 : system/user/user
2019-01-24 11:43:41 -[THYMELEAF][http-nio-8080-exec-7] Exception processing template "system/user/user": An error happened during template parsing (template: "class path resource [templates/system/user/user.html]" - line 73, col 13)
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/user/user.html]" - line 73, col 13)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: (Line = 73, Column = 13) Incomplete structure: "<a class='layui-btn layui-btn-xs " + t1 + "'" + s_resetPwd_h + "' lay-event='usable'>"+t+"</a>";
				return html;
			};
		}}
		{{ gfun() }}
	</script>
</body>
</html>"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
2019-01-24 11:43:41 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/user/user.html]" - line 73, col 13)] with root cause
org.attoparser.ParseException: (Line = 73, Column = 13) Incomplete structure: "<a class='layui-btn layui-btn-xs " + t1 + "'" + s_resetPwd_h + "' lay-event='usable'>"+t+"</a>";
				return html;
			};
		}}
		{{ gfun() }}
	</script>
</body>
</html>"
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:366)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-24 11:44:10 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:44:10 -HTTP METHOD : GET
2019-01-24 11:44:10 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:44:10 -参数 : []
2019-01-24 11:44:10 -耗时 : 0
2019-01-24 11:44:10 -返回值 : system/user/user
2019-01-24 11:44:11 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:44:11 -HTTP METHOD : GET
2019-01-24 11:44:11 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:44:11 -参数 : [{page=1, limit=20}]
2019-01-24 11:44:11 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:44:11 -==> Parameters: 
2019-01-24 11:44:11 -<==      Total: 2
2019-01-24 11:44:11 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:44:11 -==> Parameters: 
2019-01-24 11:44:11 -<==      Total: 1
2019-01-24 11:44:11 -耗时 : 21
2019-01-24 11:44:11 -返回值 : com.bootdo.common.utils.PageUtils@2f5a2194
2019-01-24 11:44:39 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:44:39 -HTTP METHOD : GET
2019-01-24 11:44:39 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:44:39 -参数 : []
2019-01-24 11:44:39 -耗时 : 0
2019-01-24 11:44:39 -返回值 : system/user/user
2019-01-24 11:44:39 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:44:39 -HTTP METHOD : GET
2019-01-24 11:44:39 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:44:39 -参数 : [{page=1, limit=20}]
2019-01-24 11:44:39 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:44:39 -==> Parameters: 
2019-01-24 11:44:39 -<==      Total: 2
2019-01-24 11:44:39 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:44:39 -==> Parameters: 
2019-01-24 11:44:39 -<==      Total: 1
2019-01-24 11:44:39 -耗时 : 16
2019-01-24 11:44:39 -返回值 : com.bootdo.common.utils.PageUtils@278ecce1
2019-01-24 11:45:11 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:45:11 -==> Parameters: 123(String)
2019-01-24 11:45:11 -<==      Total: 7
2019-01-24 11:45:11 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:45:11 -HTTP METHOD : GET
2019-01-24 11:45:11 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:45:11 -参数 : []
2019-01-24 11:45:11 -耗时 : 0
2019-01-24 11:45:11 -返回值 : system/user/user
2019-01-24 11:45:11 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:45:11 -HTTP METHOD : GET
2019-01-24 11:45:11 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:45:11 -参数 : [{page=1, limit=20}]
2019-01-24 11:45:11 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:45:11 -==> Parameters: 
2019-01-24 11:45:11 -<==      Total: 2
2019-01-24 11:45:11 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:45:11 -==> Parameters: 
2019-01-24 11:45:11 -<==      Total: 1
2019-01-24 11:45:11 -耗时 : 22
2019-01-24 11:45:11 -返回值 : com.bootdo.common.utils.PageUtils@4cdde4c2
2019-01-24 11:46:04 -Validating all active sessions...
2019-01-24 11:46:04 -Finished session validation.  No sessions were stopped.
2019-01-24 11:46:50 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 6]
2019-01-24 11:48:32 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:48:32 -==> Parameters: 123(String)
2019-01-24 11:48:32 -<==      Total: 7
2019-01-24 11:48:32 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:48:32 -HTTP METHOD : GET
2019-01-24 11:48:32 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:48:32 -参数 : []
2019-01-24 11:48:32 -耗时 : 1
2019-01-24 11:48:32 -返回值 : system/user/user
2019-01-24 11:48:32 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:48:32 -HTTP METHOD : GET
2019-01-24 11:48:32 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:48:32 -参数 : [{page=1, limit=20}]
2019-01-24 11:48:32 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:48:32 -==> Parameters: 
2019-01-24 11:48:32 -<==      Total: 2
2019-01-24 11:48:32 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:48:32 -==> Parameters: 
2019-01-24 11:48:32 -<==      Total: 1
2019-01-24 11:48:32 -耗时 : 16
2019-01-24 11:48:32 -返回值 : com.bootdo.common.utils.PageUtils@486aac55
2019-01-24 11:52:43 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:52:43 -==> Parameters: 123(String)
2019-01-24 11:52:43 -<==      Total: 7
2019-01-24 11:52:43 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:52:43 -HTTP METHOD : GET
2019-01-24 11:52:43 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:52:43 -参数 : []
2019-01-24 11:52:43 -耗时 : 0
2019-01-24 11:52:43 -返回值 : system/user/user
2019-01-24 11:52:43 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:52:43 -HTTP METHOD : GET
2019-01-24 11:52:43 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:52:43 -参数 : [{page=1, limit=20}]
2019-01-24 11:52:43 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:52:43 -==> Parameters: 
2019-01-24 11:52:43 -<==      Total: 2
2019-01-24 11:52:43 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:52:43 -==> Parameters: 
2019-01-24 11:52:43 -<==      Total: 1
2019-01-24 11:52:43 -耗时 : 20
2019-01-24 11:52:43 -返回值 : com.bootdo.common.utils.PageUtils@fb94e5c
2019-01-24 11:55:25 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:55:25 -==> Parameters: 123(String)
2019-01-24 11:55:25 -<==      Total: 7
2019-01-24 11:55:25 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:55:25 -HTTP METHOD : GET
2019-01-24 11:55:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:55:25 -参数 : []
2019-01-24 11:55:25 -耗时 : 1
2019-01-24 11:55:25 -返回值 : system/user/user
2019-01-24 11:55:25 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:55:25 -HTTP METHOD : GET
2019-01-24 11:55:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:55:25 -参数 : [{page=1, limit=20}]
2019-01-24 11:55:25 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:55:25 -==> Parameters: 
2019-01-24 11:55:25 -<==      Total: 2
2019-01-24 11:55:25 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:55:25 -==> Parameters: 
2019-01-24 11:55:25 -<==      Total: 1
2019-01-24 11:55:25 -耗时 : 20
2019-01-24 11:55:25 -返回值 : com.bootdo.common.utils.PageUtils@276aa9ed
2019-01-24 11:55:43 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:55:43 -HTTP METHOD : GET
2019-01-24 11:55:43 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:55:43 -参数 : []
2019-01-24 11:55:43 -耗时 : 1
2019-01-24 11:55:43 -返回值 : system/user/user
2019-01-24 11:55:44 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:55:44 -HTTP METHOD : GET
2019-01-24 11:55:44 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:55:44 -参数 : [{page=1, limit=20}]
2019-01-24 11:55:44 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:55:44 -==> Parameters: 
2019-01-24 11:55:44 -<==      Total: 2
2019-01-24 11:55:44 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:55:44 -==> Parameters: 
2019-01-24 11:55:44 -<==      Total: 1
2019-01-24 11:55:44 -耗时 : 18
2019-01-24 11:55:44 -返回值 : com.bootdo.common.utils.PageUtils@6c478fe2
2019-01-24 11:55:59 -请求地址 : http://localhost:8080/index
2019-01-24 11:55:59 -HTTP METHOD : GET
2019-01-24 11:55:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 11:55:59 -参数 : [{}]
2019-01-24 11:55:59 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 11:55:59 -==> Parameters: 123(String)
2019-01-24 11:55:59 -<==      Total: 2
2019-01-24 11:55:59 -耗时 : 30
2019-01-24 11:55:59 -返回值 : index_v1
2019-01-24 11:55:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 11:55:59 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 11:55:59.178(Timestamp)
2019-01-24 11:55:59 -<==    Updates: 1
2019-01-24 11:55:59 -请求地址 : http://localhost:8080/main
2019-01-24 11:55:59 -HTTP METHOD : GET
2019-01-24 11:55:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:55:59 -参数 : []
2019-01-24 11:55:59 -耗时 : 0
2019-01-24 11:55:59 -返回值 : main
2019-01-24 11:55:59 -请求地址 : http://localhost:8080/main
2019-01-24 11:55:59 -HTTP METHOD : GET
2019-01-24 11:55:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:55:59 -参数 : []
2019-01-24 11:55:59 -耗时 : 0
2019-01-24 11:55:59 -返回值 : main
2019-01-24 11:56:01 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:56:01 -HTTP METHOD : GET
2019-01-24 11:56:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:56:01 -参数 : []
2019-01-24 11:56:01 -耗时 : 0
2019-01-24 11:56:01 -返回值 : system/user/user
2019-01-24 11:56:01 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:56:01 -HTTP METHOD : GET
2019-01-24 11:56:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:56:01 -参数 : [{page=1, limit=20}]
2019-01-24 11:56:01 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:56:01 -==> Parameters: 
2019-01-24 11:56:01 -<==      Total: 2
2019-01-24 11:56:01 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:56:01 -==> Parameters: 
2019-01-24 11:56:01 -<==      Total: 1
2019-01-24 11:56:01 -耗时 : 19
2019-01-24 11:56:01 -返回值 : com.bootdo.common.utils.PageUtils@3676e1fc
2019-01-24 11:56:05 -请求地址 : http://localhost:8080/
2019-01-24 11:56:05 -HTTP METHOD : GET
2019-01-24 11:56:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-24 11:56:05 -参数 : [{}]
2019-01-24 11:56:05 -耗时 : 0
2019-01-24 11:56:05 -返回值 : redirect:/login
2019-01-24 11:56:05 -请求地址 : http://localhost:8080/login
2019-01-24 11:56:05 -HTTP METHOD : GET
2019-01-24 11:56:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 11:56:05 -参数 : []
2019-01-24 11:56:05 -耗时 : 1
2019-01-24 11:56:05 -返回值 : login
2019-01-24 11:56:15 -请求地址 : http://localhost:8080/login
2019-01-24 11:56:15 -HTTP METHOD : GET
2019-01-24 11:56:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 11:56:15 -参数 : []
2019-01-24 11:56:15 -耗时 : 1
2019-01-24 11:56:15 -返回值 : login
2019-01-24 11:56:15 -请求地址 : http://localhost:8080/login;JSESSIONID=26b1bda7-353a-4530-b4c4-c45d45d5706d
2019-01-24 11:56:15 -HTTP METHOD : GET
2019-01-24 11:56:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 11:56:15 -参数 : []
2019-01-24 11:56:15 -耗时 : 0
2019-01-24 11:56:15 -返回值 : login
2019-01-24 11:56:19 -请求地址 : http://localhost:8080/login
2019-01-24 11:56:19 -HTTP METHOD : POST
2019-01-24 11:56:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-24 11:56:19 -参数 : [admin, 123456]
2019-01-24 11:56:19 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-24 11:56:19 -==> Parameters: admin(String)
2019-01-24 11:56:19 -<==      Total: 1
2019-01-24 11:56:19 -耗时 : 5
2019-01-24 11:56:19 -返回值 : {msg=操作成功, code=0}
2019-01-24 11:56:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 11:56:19 -==> Parameters: 123(String), admin(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-24 11:56:19.084(Timestamp)
2019-01-24 11:56:19 -请求地址 : http://localhost:8080/index
2019-01-24 11:56:19 -HTTP METHOD : GET
2019-01-24 11:56:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 11:56:19 -参数 : [{}]
2019-01-24 11:56:19 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 11:56:19 -==> Parameters: 123(String)
2019-01-24 11:56:19 -<==    Updates: 1
2019-01-24 11:56:19 -<==      Total: 2
2019-01-24 11:56:19 -耗时 : 39
2019-01-24 11:56:19 -返回值 : index_v1
2019-01-24 11:56:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 11:56:19 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 39(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 11:56:19.144(Timestamp)
2019-01-24 11:56:19 -<==    Updates: 1
2019-01-24 11:56:19 -请求地址 : http://localhost:8080/main
2019-01-24 11:56:19 -HTTP METHOD : GET
2019-01-24 11:56:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:56:19 -参数 : []
2019-01-24 11:56:19 -耗时 : 0
2019-01-24 11:56:19 -返回值 : main
2019-01-24 11:56:19 -请求地址 : http://localhost:8080/main
2019-01-24 11:56:19 -HTTP METHOD : GET
2019-01-24 11:56:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:56:19 -参数 : []
2019-01-24 11:56:19 -耗时 : 1
2019-01-24 11:56:19 -返回值 : main
2019-01-24 11:56:21 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:56:21 -==> Parameters: 123(String)
2019-01-24 11:56:21 -<==      Total: 7
2019-01-24 11:56:21 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:56:21 -HTTP METHOD : GET
2019-01-24 11:56:21 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:56:21 -参数 : []
2019-01-24 11:56:21 -耗时 : 0
2019-01-24 11:56:21 -返回值 : system/user/user
2019-01-24 11:56:21 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:56:21 -HTTP METHOD : GET
2019-01-24 11:56:21 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:56:21 -参数 : [{page=1, limit=20}]
2019-01-24 11:56:21 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:56:21 -==> Parameters: 
2019-01-24 11:56:21 -<==      Total: 2
2019-01-24 11:56:21 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:56:21 -==> Parameters: 
2019-01-24 11:56:21 -<==      Total: 1
2019-01-24 11:56:21 -耗时 : 23
2019-01-24 11:56:21 -返回值 : com.bootdo.common.utils.PageUtils@7fe1332e
2019-01-24 11:58:39 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 11:58:39 -==> Parameters: 123(String)
2019-01-24 11:58:39 -<==      Total: 7
2019-01-24 11:58:39 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:58:39 -HTTP METHOD : GET
2019-01-24 11:58:39 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:58:39 -参数 : []
2019-01-24 11:58:39 -耗时 : 0
2019-01-24 11:58:39 -返回值 : system/user/user
2019-01-24 11:58:39 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:58:39 -HTTP METHOD : GET
2019-01-24 11:58:39 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:58:39 -参数 : [{page=1, limit=20}]
2019-01-24 11:58:39 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:58:39 -==> Parameters: 
2019-01-24 11:58:39 -<==      Total: 2
2019-01-24 11:58:39 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:58:39 -==> Parameters: 
2019-01-24 11:58:39 -<==      Total: 1
2019-01-24 11:58:39 -耗时 : 13
2019-01-24 11:58:39 -返回值 : com.bootdo.common.utils.PageUtils@639f9d1d
2019-01-24 11:58:43 -请求地址 : http://localhost:8080/index
2019-01-24 11:58:43 -HTTP METHOD : GET
2019-01-24 11:58:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 11:58:43 -参数 : [{}]
2019-01-24 11:58:43 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 11:58:43 -==> Parameters: 123(String)
2019-01-24 11:58:43 -<==      Total: 2
2019-01-24 11:58:43 -耗时 : 16
2019-01-24 11:58:43 -返回值 : index_v1
2019-01-24 11:58:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 11:58:43 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 11:58:43.18(Timestamp)
2019-01-24 11:58:43 -<==    Updates: 1
2019-01-24 11:58:43 -请求地址 : http://localhost:8080/main
2019-01-24 11:58:43 -HTTP METHOD : GET
2019-01-24 11:58:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:58:43 -参数 : []
2019-01-24 11:58:43 -耗时 : 0
2019-01-24 11:58:43 -返回值 : main
2019-01-24 11:58:43 -请求地址 : http://localhost:8080/main
2019-01-24 11:58:43 -HTTP METHOD : GET
2019-01-24 11:58:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 11:58:43 -参数 : []
2019-01-24 11:58:43 -耗时 : 0
2019-01-24 11:58:43 -返回值 : main
2019-01-24 11:58:45 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 11:58:45 -HTTP METHOD : GET
2019-01-24 11:58:45 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 11:58:45 -参数 : []
2019-01-24 11:58:45 -耗时 : 1
2019-01-24 11:58:45 -返回值 : system/user/user
2019-01-24 11:58:45 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 11:58:45 -HTTP METHOD : GET
2019-01-24 11:58:45 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 11:58:45 -参数 : [{page=1, limit=20}]
2019-01-24 11:58:45 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 11:58:45 -==> Parameters: 
2019-01-24 11:58:45 -<==      Total: 2
2019-01-24 11:58:45 -==>  Preparing: select count(*) from sys_user 
2019-01-24 11:58:45 -==> Parameters: 
2019-01-24 11:58:45 -<==      Total: 1
2019-01-24 11:58:45 -耗时 : 13
2019-01-24 11:58:45 -返回值 : com.bootdo.common.utils.PageUtils@193dae83
2019-01-24 12:16:50 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 7]
2019-01-24 12:46:04 -Validating all active sessions...
2019-01-24 12:46:04 -Finished session validation.  [1] sessions were stopped.
2019-01-24 12:46:50 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 8]
2019-01-24 13:16:50 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 9]
2019-01-24 13:36:08 -请求地址 : http://localhost:8080/login;JSESSIONID=0c13dfd1-2f96-443b-92ac-526c91229129
2019-01-24 13:36:08 -HTTP METHOD : GET
2019-01-24 13:36:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 13:36:08 -参数 : []
2019-01-24 13:36:08 -耗时 : 36
2019-01-24 13:36:08 -返回值 : login
2019-01-24 13:36:08 -请求地址 : http://localhost:8080/login;JSESSIONID=0c13dfd1-2f96-443b-92ac-526c91229129
2019-01-24 13:36:08 -HTTP METHOD : GET
2019-01-24 13:36:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 13:36:08 -参数 : []
2019-01-24 13:36:08 -耗时 : 0
2019-01-24 13:36:08 -返回值 : login
2019-01-24 13:36:12 -请求地址 : http://localhost:8080/login
2019-01-24 13:36:12 -HTTP METHOD : POST
2019-01-24 13:36:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-24 13:36:12 -参数 : [admin, 123456]
2019-01-24 13:36:12 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-24 13:36:12 -==> Parameters: admin(String)
2019-01-24 13:36:12 -<==      Total: 1
2019-01-24 13:36:12 -耗时 : 6
2019-01-24 13:36:12 -返回值 : {msg=操作成功, code=0}
2019-01-24 13:36:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 13:36:12 -==> Parameters: 123(String), admin(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-24 13:36:12.538(Timestamp)
2019-01-24 13:36:12 -请求地址 : http://localhost:8080/index
2019-01-24 13:36:12 -HTTP METHOD : GET
2019-01-24 13:36:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 13:36:12 -参数 : [{}]
2019-01-24 13:36:12 -<==    Updates: 1
2019-01-24 13:36:12 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 13:36:12 -==> Parameters: 123(String)
2019-01-24 13:36:12 -<==      Total: 2
2019-01-24 13:36:12 -耗时 : 43
2019-01-24 13:36:12 -返回值 : index_v1
2019-01-24 13:36:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 13:36:12 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 43(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 13:36:12.604(Timestamp)
2019-01-24 13:36:12 -<==    Updates: 1
2019-01-24 13:36:12 -请求地址 : http://localhost:8080/main
2019-01-24 13:36:12 -HTTP METHOD : GET
2019-01-24 13:36:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 13:36:12 -参数 : []
2019-01-24 13:36:12 -耗时 : 0
2019-01-24 13:36:12 -返回值 : main
2019-01-24 13:36:13 -请求地址 : http://localhost:8080/main
2019-01-24 13:36:13 -HTTP METHOD : GET
2019-01-24 13:36:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 13:36:13 -参数 : []
2019-01-24 13:36:13 -耗时 : 1
2019-01-24 13:36:13 -返回值 : main
2019-01-24 13:36:18 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 13:36:18 -==> Parameters: 123(String)
2019-01-24 13:36:18 -<==      Total: 7
2019-01-24 13:36:18 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:36:18 -HTTP METHOD : GET
2019-01-24 13:36:18 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:36:18 -参数 : []
2019-01-24 13:36:18 -耗时 : 0
2019-01-24 13:36:18 -返回值 : system/user/user
2019-01-24 13:36:19 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:36:19 -HTTP METHOD : GET
2019-01-24 13:36:19 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:36:19 -参数 : [{page=1, limit=20}]
2019-01-24 13:36:19 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:36:19 -==> Parameters: 
2019-01-24 13:36:19 -<==      Total: 2
2019-01-24 13:36:19 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:36:19 -==> Parameters: 
2019-01-24 13:36:19 -<==      Total: 1
2019-01-24 13:36:19 -耗时 : 25
2019-01-24 13:36:19 -返回值 : com.bootdo.common.utils.PageUtils@5ecda2bc
2019-01-24 13:36:25 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:36:25 -HTTP METHOD : GET
2019-01-24 13:36:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:36:25 -参数 : []
2019-01-24 13:36:25 -耗时 : 0
2019-01-24 13:36:25 -返回值 : system/user/user
2019-01-24 13:36:25 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:36:25 -HTTP METHOD : GET
2019-01-24 13:36:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:36:25 -参数 : [{page=1, limit=20}]
2019-01-24 13:36:25 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:36:25 -==> Parameters: 
2019-01-24 13:36:25 -<==      Total: 2
2019-01-24 13:36:25 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:36:25 -==> Parameters: 
2019-01-24 13:36:25 -<==      Total: 1
2019-01-24 13:36:25 -耗时 : 9
2019-01-24 13:36:25 -返回值 : com.bootdo.common.utils.PageUtils@13fdc488
2019-01-24 13:39:11 -请求地址 : http://localhost:8080/index
2019-01-24 13:39:11 -HTTP METHOD : GET
2019-01-24 13:39:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 13:39:11 -参数 : [{}]
2019-01-24 13:39:11 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 13:39:11 -==> Parameters: 123(String)
2019-01-24 13:39:11 -<==      Total: 2
2019-01-24 13:39:11 -耗时 : 30
2019-01-24 13:39:11 -返回值 : index_v1
2019-01-24 13:39:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 13:39:11 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 13:39:11.675(Timestamp)
2019-01-24 13:39:11 -请求地址 : http://localhost:8080/main
2019-01-24 13:39:11 -HTTP METHOD : GET
2019-01-24 13:39:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 13:39:11 -参数 : []
2019-01-24 13:39:11 -耗时 : 0
2019-01-24 13:39:11 -返回值 : main
2019-01-24 13:39:11 -<==    Updates: 1
2019-01-24 13:39:12 -请求地址 : http://localhost:8080/main
2019-01-24 13:39:12 -HTTP METHOD : GET
2019-01-24 13:39:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 13:39:12 -参数 : []
2019-01-24 13:39:12 -耗时 : 0
2019-01-24 13:39:12 -返回值 : main
2019-01-24 13:39:14 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 13:39:14 -==> Parameters: 123(String)
2019-01-24 13:39:14 -<==      Total: 7
2019-01-24 13:39:14 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:39:14 -HTTP METHOD : GET
2019-01-24 13:39:14 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:39:14 -参数 : []
2019-01-24 13:39:14 -耗时 : 1
2019-01-24 13:39:14 -返回值 : system/user/user
2019-01-24 13:39:14 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:39:14 -HTTP METHOD : GET
2019-01-24 13:39:14 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:39:14 -参数 : [{page=1, limit=20}]
2019-01-24 13:39:14 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:39:14 -==> Parameters: 
2019-01-24 13:39:14 -<==      Total: 2
2019-01-24 13:39:14 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:39:14 -==> Parameters: 
2019-01-24 13:39:14 -<==      Total: 1
2019-01-24 13:39:14 -耗时 : 19
2019-01-24 13:39:14 -返回值 : com.bootdo.common.utils.PageUtils@3419eb16
2019-01-24 13:39:21 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:39:21 -HTTP METHOD : GET
2019-01-24 13:39:21 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:39:21 -参数 : [{page=1, limit=20, username=}]
2019-01-24 13:39:21 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:39:21 -==> Parameters: 
2019-01-24 13:39:21 -<==      Total: 2
2019-01-24 13:39:21 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:39:21 -==> Parameters: 
2019-01-24 13:39:21 -<==      Total: 1
2019-01-24 13:39:21 -耗时 : 16
2019-01-24 13:39:21 -返回值 : com.bootdo.common.utils.PageUtils@6f7f282
2019-01-24 13:39:25 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:39:25 -HTTP METHOD : GET
2019-01-24 13:39:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:39:25 -参数 : [{page=1, limit=20, username=g}]
2019-01-24 13:39:25 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-24 13:39:25 -==> Parameters: g(String)
2019-01-24 13:39:25 -<==      Total: 0
2019-01-24 13:39:25 -==>  Preparing: select count(*) from sys_user WHERE username = ? 
2019-01-24 13:39:25 -==> Parameters: g(String)
2019-01-24 13:39:25 -<==      Total: 1
2019-01-24 13:39:25 -耗时 : 29
2019-01-24 13:39:25 -返回值 : com.bootdo.common.utils.PageUtils@590b9437
2019-01-24 13:39:28 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:39:28 -HTTP METHOD : GET
2019-01-24 13:39:28 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:39:28 -参数 : [{page=1, limit=20, username=gzl}]
2019-01-24 13:39:28 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-24 13:39:28 -==> Parameters: gzl(String)
2019-01-24 13:39:28 -<==      Total: 1
2019-01-24 13:39:28 -==>  Preparing: select count(*) from sys_user WHERE username = ? 
2019-01-24 13:39:28 -==> Parameters: gzl(String)
2019-01-24 13:39:28 -<==      Total: 1
2019-01-24 13:39:28 -耗时 : 25
2019-01-24 13:39:28 -返回值 : com.bootdo.common.utils.PageUtils@27e84be
2019-01-24 13:40:29 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:40:29 -HTTP METHOD : GET
2019-01-24 13:40:29 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:40:29 -参数 : []
2019-01-24 13:40:29 -耗时 : 0
2019-01-24 13:40:29 -返回值 : system/user/user
2019-01-24 13:40:29 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:40:29 -HTTP METHOD : GET
2019-01-24 13:40:29 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:40:29 -参数 : [{page=1, limit=20}]
2019-01-24 13:40:29 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:40:29 -==> Parameters: 
2019-01-24 13:40:29 -<==      Total: 2
2019-01-24 13:40:29 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:40:29 -==> Parameters: 
2019-01-24 13:40:29 -<==      Total: 1
2019-01-24 13:40:29 -耗时 : 18
2019-01-24 13:40:29 -返回值 : com.bootdo.common.utils.PageUtils@424ea721
2019-01-24 13:45:43 -请求地址 : http://localhost:8080/index
2019-01-24 13:45:43 -HTTP METHOD : GET
2019-01-24 13:45:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 13:45:43 -参数 : [{}]
2019-01-24 13:45:43 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 13:45:43 -==> Parameters: 123(String)
2019-01-24 13:45:43 -<==      Total: 2
2019-01-24 13:45:43 -耗时 : 26
2019-01-24 13:45:43 -返回值 : index_v1
2019-01-24 13:45:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 13:45:43 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 13:45:43.174(Timestamp)
2019-01-24 13:45:43 -<==    Updates: 1
2019-01-24 13:45:43 -请求地址 : http://localhost:8080/main
2019-01-24 13:45:43 -HTTP METHOD : GET
2019-01-24 13:45:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 13:45:43 -参数 : []
2019-01-24 13:45:43 -耗时 : 1
2019-01-24 13:45:43 -返回值 : main
2019-01-24 13:45:43 -请求地址 : http://localhost:8080/main
2019-01-24 13:45:43 -HTTP METHOD : GET
2019-01-24 13:45:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 13:45:43 -参数 : []
2019-01-24 13:45:43 -耗时 : 3
2019-01-24 13:45:43 -返回值 : main
2019-01-24 13:45:46 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 13:45:46 -==> Parameters: 123(String)
2019-01-24 13:45:46 -<==      Total: 7
2019-01-24 13:45:46 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:45:46 -HTTP METHOD : GET
2019-01-24 13:45:46 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:45:46 -参数 : []
2019-01-24 13:45:46 -耗时 : 0
2019-01-24 13:45:46 -返回值 : system/user/user
2019-01-24 13:45:46 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:45:46 -HTTP METHOD : GET
2019-01-24 13:45:46 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:45:46 -参数 : [{page=1, limit=20}]
2019-01-24 13:45:46 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:45:46 -==> Parameters: 
2019-01-24 13:45:46 -<==      Total: 2
2019-01-24 13:45:46 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:45:46 -==> Parameters: 
2019-01-24 13:45:46 -<==      Total: 1
2019-01-24 13:45:46 -耗时 : 18
2019-01-24 13:45:46 -返回值 : com.bootdo.common.utils.PageUtils@4269fe9c
2019-01-24 13:46:05 -Validating all active sessions...
2019-01-24 13:46:05 -Finished session validation.  No sessions were stopped.
2019-01-24 13:46:39 -请求地址 : http://localhost:8080/sys/user/batchRemove
2019-01-24 13:46:39 -HTTP METHOD : POST
2019-01-24 13:46:39 -CLASS_METHOD : com.bootdo.system.controller.UserController.remove
2019-01-24 13:46:39 -参数 : [[Ljava.lang.String;@5b3afb7f]
2019-01-24 13:46:50 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 10]
2019-01-24 13:46:51 -==>  Preparing: delete from sys_user where user_id in ( ? ) 
2019-01-24 13:46:51 -==> Parameters: 234(String)
2019-01-24 13:46:51 -<==    Updates: 1
2019-01-24 13:46:51 -耗时 : 12571
2019-01-24 13:46:51 -返回值 : {msg=操作成功, code=0}
2019-01-24 13:48:07 -请求地址 : http://localhost:8080/index
2019-01-24 13:48:07 -HTTP METHOD : GET
2019-01-24 13:48:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 13:48:07 -参数 : [{}]
2019-01-24 13:48:07 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 13:48:07 -==> Parameters: 123(String)
2019-01-24 13:48:07 -<==      Total: 2
2019-01-24 13:48:07 -耗时 : 22
2019-01-24 13:48:07 -返回值 : index_v1
2019-01-24 13:48:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 13:48:07 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 13:48:07.109(Timestamp)
2019-01-24 13:48:07 -<==    Updates: 1
2019-01-24 13:48:07 -请求地址 : http://localhost:8080/main
2019-01-24 13:48:07 -HTTP METHOD : GET
2019-01-24 13:48:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 13:48:07 -参数 : []
2019-01-24 13:48:07 -耗时 : 0
2019-01-24 13:48:07 -返回值 : main
2019-01-24 13:48:07 -请求地址 : http://localhost:8080/main
2019-01-24 13:48:07 -HTTP METHOD : GET
2019-01-24 13:48:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 13:48:07 -参数 : []
2019-01-24 13:48:07 -耗时 : 0
2019-01-24 13:48:07 -返回值 : main
2019-01-24 13:48:09 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 13:48:09 -==> Parameters: 123(String)
2019-01-24 13:48:09 -<==      Total: 7
2019-01-24 13:48:09 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:48:09 -HTTP METHOD : GET
2019-01-24 13:48:09 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:48:09 -参数 : []
2019-01-24 13:48:09 -耗时 : 0
2019-01-24 13:48:09 -返回值 : system/user/user
2019-01-24 13:48:09 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:48:09 -HTTP METHOD : GET
2019-01-24 13:48:09 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:48:09 -参数 : [{page=1, limit=20}]
2019-01-24 13:48:09 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:48:09 -==> Parameters: 
2019-01-24 13:48:09 -<==      Total: 1
2019-01-24 13:48:09 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:48:09 -==> Parameters: 
2019-01-24 13:48:09 -<==      Total: 1
2019-01-24 13:48:09 -耗时 : 24
2019-01-24 13:48:09 -返回值 : com.bootdo.common.utils.PageUtils@52f65a9b
2019-01-24 13:48:32 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:48:32 -HTTP METHOD : GET
2019-01-24 13:48:32 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:48:32 -参数 : []
2019-01-24 13:48:32 -耗时 : 1
2019-01-24 13:48:32 -返回值 : system/user/user
2019-01-24 13:48:32 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:48:32 -HTTP METHOD : GET
2019-01-24 13:48:32 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:48:32 -参数 : [{page=1, limit=20}]
2019-01-24 13:48:32 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:48:32 -==> Parameters: 
2019-01-24 13:48:32 -<==      Total: 2
2019-01-24 13:48:32 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:48:32 -==> Parameters: 
2019-01-24 13:48:32 -<==      Total: 1
2019-01-24 13:48:32 -耗时 : 17
2019-01-24 13:48:32 -返回值 : com.bootdo.common.utils.PageUtils@48f7d5e7
2019-01-24 13:48:53 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:48:53 -HTTP METHOD : GET
2019-01-24 13:48:53 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:48:53 -参数 : []
2019-01-24 13:48:53 -耗时 : 0
2019-01-24 13:48:53 -返回值 : system/user/user
2019-01-24 13:48:53 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:48:53 -HTTP METHOD : GET
2019-01-24 13:48:53 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:48:53 -参数 : [{page=1, limit=20}]
2019-01-24 13:48:53 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:48:53 -==> Parameters: 
2019-01-24 13:48:53 -<==      Total: 2
2019-01-24 13:48:53 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:48:53 -==> Parameters: 
2019-01-24 13:48:53 -<==      Total: 1
2019-01-24 13:48:53 -耗时 : 17
2019-01-24 13:48:53 -返回值 : com.bootdo.common.utils.PageUtils@18377214
2019-01-24 13:50:06 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:50:06 -HTTP METHOD : GET
2019-01-24 13:50:06 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:50:06 -参数 : []
2019-01-24 13:50:06 -耗时 : 0
2019-01-24 13:50:06 -返回值 : system/user/user
2019-01-24 13:50:06 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:50:06 -HTTP METHOD : GET
2019-01-24 13:50:06 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:50:06 -参数 : [{page=1, limit=20}]
2019-01-24 13:50:06 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:50:06 -==> Parameters: 
2019-01-24 13:50:06 -<==      Total: 2
2019-01-24 13:50:06 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:50:06 -==> Parameters: 
2019-01-24 13:50:06 -<==      Total: 1
2019-01-24 13:50:06 -耗时 : 21
2019-01-24 13:50:06 -返回值 : com.bootdo.common.utils.PageUtils@5acbf127
2019-01-24 13:50:32 -请求地址 : http://localhost:8080/index
2019-01-24 13:50:32 -HTTP METHOD : GET
2019-01-24 13:50:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 13:50:32 -参数 : [{}]
2019-01-24 13:50:32 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 13:50:32 -==> Parameters: 123(String)
2019-01-24 13:50:32 -<==      Total: 2
2019-01-24 13:50:33 -耗时 : 41
2019-01-24 13:50:33 -返回值 : index_v1
2019-01-24 13:50:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 13:50:33 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 41(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 13:50:33.004(Timestamp)
2019-01-24 13:50:33 -<==    Updates: 1
2019-01-24 13:50:33 -请求地址 : http://localhost:8080/main
2019-01-24 13:50:33 -HTTP METHOD : GET
2019-01-24 13:50:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 13:50:33 -参数 : []
2019-01-24 13:50:33 -耗时 : 0
2019-01-24 13:50:33 -返回值 : main
2019-01-24 13:50:33 -请求地址 : http://localhost:8080/main
2019-01-24 13:50:33 -HTTP METHOD : GET
2019-01-24 13:50:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 13:50:33 -参数 : []
2019-01-24 13:50:33 -耗时 : 1
2019-01-24 13:50:33 -返回值 : main
2019-01-24 13:50:35 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 13:50:35 -==> Parameters: 123(String)
2019-01-24 13:50:35 -<==      Total: 7
2019-01-24 13:50:35 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:50:35 -HTTP METHOD : GET
2019-01-24 13:50:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:50:35 -参数 : []
2019-01-24 13:50:35 -耗时 : 0
2019-01-24 13:50:35 -返回值 : system/user/user
2019-01-24 13:50:35 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:50:35 -HTTP METHOD : GET
2019-01-24 13:50:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:50:35 -参数 : [{page=1, limit=20}]
2019-01-24 13:50:35 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:50:35 -==> Parameters: 
2019-01-24 13:50:35 -<==      Total: 2
2019-01-24 13:50:35 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:50:35 -==> Parameters: 
2019-01-24 13:50:35 -<==      Total: 1
2019-01-24 13:50:35 -耗时 : 25
2019-01-24 13:50:35 -返回值 : com.bootdo.common.utils.PageUtils@11e279aa
2019-01-24 13:50:45 -请求地址 : http://localhost:8080/index
2019-01-24 13:50:45 -HTTP METHOD : GET
2019-01-24 13:50:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 13:50:45 -参数 : [{}]
2019-01-24 13:50:45 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 13:50:45 -==> Parameters: 123(String)
2019-01-24 13:50:45 -<==      Total: 2
2019-01-24 13:50:45 -耗时 : 20
2019-01-24 13:50:45 -返回值 : index_v1
2019-01-24 13:50:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 13:50:45 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 13:50:45.366(Timestamp)
2019-01-24 13:50:45 -<==    Updates: 1
2019-01-24 13:50:45 -请求地址 : http://localhost:8080/main
2019-01-24 13:50:45 -HTTP METHOD : GET
2019-01-24 13:50:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 13:50:45 -参数 : []
2019-01-24 13:50:45 -耗时 : 0
2019-01-24 13:50:45 -返回值 : main
2019-01-24 13:50:45 -请求地址 : http://localhost:8080/main
2019-01-24 13:50:45 -HTTP METHOD : GET
2019-01-24 13:50:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 13:50:45 -参数 : []
2019-01-24 13:50:45 -耗时 : 0
2019-01-24 13:50:45 -返回值 : main
2019-01-24 13:50:47 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:50:47 -HTTP METHOD : GET
2019-01-24 13:50:47 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:50:47 -参数 : []
2019-01-24 13:50:47 -耗时 : 0
2019-01-24 13:50:47 -返回值 : system/user/user
2019-01-24 13:50:48 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:50:48 -HTTP METHOD : GET
2019-01-24 13:50:48 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:50:48 -参数 : [{page=1, limit=20}]
2019-01-24 13:50:48 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:50:48 -==> Parameters: 
2019-01-24 13:50:48 -<==      Total: 2
2019-01-24 13:50:48 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:50:48 -==> Parameters: 
2019-01-24 13:50:48 -<==      Total: 1
2019-01-24 13:50:48 -耗时 : 17
2019-01-24 13:50:48 -返回值 : com.bootdo.common.utils.PageUtils@7ca64cf6
2019-01-24 13:51:13 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:51:13 -HTTP METHOD : GET
2019-01-24 13:51:13 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:51:13 -参数 : []
2019-01-24 13:51:13 -耗时 : 0
2019-01-24 13:51:13 -返回值 : system/user/user
2019-01-24 13:51:14 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:51:14 -HTTP METHOD : GET
2019-01-24 13:51:14 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:51:14 -参数 : [{page=1, limit=20}]
2019-01-24 13:51:14 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:51:14 -==> Parameters: 
2019-01-24 13:51:14 -<==      Total: 2
2019-01-24 13:51:14 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:51:14 -==> Parameters: 
2019-01-24 13:51:14 -<==      Total: 1
2019-01-24 13:51:14 -耗时 : 22
2019-01-24 13:51:14 -返回值 : com.bootdo.common.utils.PageUtils@84439d2
2019-01-24 13:51:28 -请求地址 : http://localhost:8080/index
2019-01-24 13:51:28 -HTTP METHOD : GET
2019-01-24 13:51:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 13:51:28 -参数 : [{}]
2019-01-24 13:51:28 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 13:51:28 -==> Parameters: 123(String)
2019-01-24 13:51:28 -<==      Total: 2
2019-01-24 13:51:28 -耗时 : 33
2019-01-24 13:51:28 -返回值 : index_v1
2019-01-24 13:51:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 13:51:28 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 13:51:28.091(Timestamp)
2019-01-24 13:51:28 -<==    Updates: 1
2019-01-24 13:51:28 -请求地址 : http://localhost:8080/main
2019-01-24 13:51:28 -HTTP METHOD : GET
2019-01-24 13:51:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 13:51:28 -参数 : []
2019-01-24 13:51:28 -耗时 : 0
2019-01-24 13:51:28 -返回值 : main
2019-01-24 13:51:28 -请求地址 : http://localhost:8080/main
2019-01-24 13:51:28 -HTTP METHOD : GET
2019-01-24 13:51:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 13:51:28 -参数 : []
2019-01-24 13:51:28 -耗时 : 0
2019-01-24 13:51:28 -返回值 : main
2019-01-24 13:51:30 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:51:30 -HTTP METHOD : GET
2019-01-24 13:51:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:51:30 -参数 : []
2019-01-24 13:51:30 -耗时 : 0
2019-01-24 13:51:30 -返回值 : system/user/user
2019-01-24 13:51:30 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:51:30 -HTTP METHOD : GET
2019-01-24 13:51:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:51:30 -参数 : [{page=1, limit=20}]
2019-01-24 13:51:30 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:51:30 -==> Parameters: 
2019-01-24 13:51:30 -<==      Total: 2
2019-01-24 13:51:30 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:51:30 -==> Parameters: 
2019-01-24 13:51:30 -<==      Total: 1
2019-01-24 13:51:30 -耗时 : 16
2019-01-24 13:51:30 -返回值 : com.bootdo.common.utils.PageUtils@12d786b1
2019-01-24 13:51:50 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:51:50 -HTTP METHOD : GET
2019-01-24 13:51:50 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:51:50 -参数 : []
2019-01-24 13:51:50 -耗时 : 0
2019-01-24 13:51:50 -返回值 : system/user/user
2019-01-24 13:51:51 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:51:51 -HTTP METHOD : GET
2019-01-24 13:51:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:51:51 -参数 : [{page=1, limit=20}]
2019-01-24 13:51:51 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:51:51 -==> Parameters: 
2019-01-24 13:51:51 -<==      Total: 2
2019-01-24 13:51:51 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:51:51 -==> Parameters: 
2019-01-24 13:51:51 -<==      Total: 1
2019-01-24 13:51:51 -耗时 : 23
2019-01-24 13:51:51 -返回值 : com.bootdo.common.utils.PageUtils@4df09e8
2019-01-24 13:52:26 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:52:26 -HTTP METHOD : GET
2019-01-24 13:52:26 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:52:26 -参数 : []
2019-01-24 13:52:26 -耗时 : 0
2019-01-24 13:52:26 -返回值 : system/user/user
2019-01-24 13:52:26 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:52:26 -HTTP METHOD : GET
2019-01-24 13:52:26 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:52:26 -参数 : [{page=1, limit=20}]
2019-01-24 13:52:26 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:52:26 -==> Parameters: 
2019-01-24 13:52:26 -<==      Total: 2
2019-01-24 13:52:26 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:52:26 -==> Parameters: 
2019-01-24 13:52:26 -<==      Total: 1
2019-01-24 13:52:26 -耗时 : 18
2019-01-24 13:52:26 -返回值 : com.bootdo.common.utils.PageUtils@3821bc66
2019-01-24 13:52:30 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:52:30 -HTTP METHOD : GET
2019-01-24 13:52:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:52:30 -参数 : []
2019-01-24 13:52:30 -耗时 : 0
2019-01-24 13:52:30 -返回值 : system/user/user
2019-01-24 13:52:30 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:52:30 -HTTP METHOD : GET
2019-01-24 13:52:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:52:30 -参数 : [{page=1, limit=20}]
2019-01-24 13:52:30 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:52:30 -==> Parameters: 
2019-01-24 13:52:30 -<==      Total: 2
2019-01-24 13:52:30 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:52:30 -==> Parameters: 
2019-01-24 13:52:30 -<==      Total: 1
2019-01-24 13:52:30 -耗时 : 18
2019-01-24 13:52:30 -返回值 : com.bootdo.common.utils.PageUtils@c38fe64
2019-01-24 13:52:32 -请求地址 : http://localhost:8080/index
2019-01-24 13:52:32 -HTTP METHOD : GET
2019-01-24 13:52:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 13:52:32 -参数 : [{}]
2019-01-24 13:52:32 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 13:52:32 -==> Parameters: 123(String)
2019-01-24 13:52:32 -<==      Total: 2
2019-01-24 13:52:32 -耗时 : 26
2019-01-24 13:52:32 -返回值 : index_v1
2019-01-24 13:52:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 13:52:32 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 13:52:32.379(Timestamp)
2019-01-24 13:52:32 -<==    Updates: 1
2019-01-24 13:52:32 -请求地址 : http://localhost:8080/main
2019-01-24 13:52:32 -HTTP METHOD : GET
2019-01-24 13:52:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 13:52:32 -参数 : []
2019-01-24 13:52:32 -耗时 : 1
2019-01-24 13:52:32 -返回值 : main
2019-01-24 13:52:32 -请求地址 : http://localhost:8080/main
2019-01-24 13:52:32 -HTTP METHOD : GET
2019-01-24 13:52:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 13:52:32 -参数 : []
2019-01-24 13:52:32 -耗时 : 0
2019-01-24 13:52:32 -返回值 : main
2019-01-24 13:52:34 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:52:34 -HTTP METHOD : GET
2019-01-24 13:52:34 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:52:34 -参数 : []
2019-01-24 13:52:34 -耗时 : 0
2019-01-24 13:52:34 -返回值 : system/user/user
2019-01-24 13:52:34 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:52:34 -HTTP METHOD : GET
2019-01-24 13:52:34 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:52:34 -参数 : [{page=1, limit=20}]
2019-01-24 13:52:34 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:52:34 -==> Parameters: 
2019-01-24 13:52:34 -<==      Total: 2
2019-01-24 13:52:34 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:52:34 -==> Parameters: 
2019-01-24 13:52:34 -<==      Total: 1
2019-01-24 13:52:34 -耗时 : 27
2019-01-24 13:52:34 -返回值 : com.bootdo.common.utils.PageUtils@5843a259
2019-01-24 13:57:14 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 13:57:14 -==> Parameters: 123(String)
2019-01-24 13:57:14 -<==      Total: 7
2019-01-24 13:57:14 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:57:14 -HTTP METHOD : GET
2019-01-24 13:57:14 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:57:14 -参数 : []
2019-01-24 13:57:14 -耗时 : 1
2019-01-24 13:57:14 -返回值 : system/user/user
2019-01-24 13:57:14 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:57:14 -HTTP METHOD : GET
2019-01-24 13:57:14 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:57:14 -参数 : [{page=1, limit=20}]
2019-01-24 13:57:14 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:57:14 -==> Parameters: 
2019-01-24 13:57:14 -<==      Total: 2
2019-01-24 13:57:14 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:57:14 -==> Parameters: 
2019-01-24 13:57:14 -<==      Total: 1
2019-01-24 13:57:14 -耗时 : 25
2019-01-24 13:57:14 -返回值 : com.bootdo.common.utils.PageUtils@40e13f99
2019-01-24 13:59:16 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 13:59:16 -==> Parameters: 123(String)
2019-01-24 13:59:16 -<==      Total: 7
2019-01-24 13:59:16 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 13:59:16 -HTTP METHOD : GET
2019-01-24 13:59:16 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 13:59:16 -参数 : []
2019-01-24 13:59:16 -耗时 : 0
2019-01-24 13:59:16 -返回值 : system/user/user
2019-01-24 13:59:16 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 13:59:16 -HTTP METHOD : GET
2019-01-24 13:59:16 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 13:59:16 -参数 : [{page=1, limit=20}]
2019-01-24 13:59:16 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 13:59:16 -==> Parameters: 
2019-01-24 13:59:16 -<==      Total: 2
2019-01-24 13:59:16 -==>  Preparing: select count(*) from sys_user 
2019-01-24 13:59:16 -==> Parameters: 
2019-01-24 13:59:16 -<==      Total: 1
2019-01-24 13:59:16 -耗时 : 30
2019-01-24 13:59:16 -返回值 : com.bootdo.common.utils.PageUtils@4f87fb22
2019-01-24 14:05:45 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 14:05:45 -==> Parameters: 123(String)
2019-01-24 14:05:45 -<==      Total: 7
2019-01-24 14:05:45 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 14:05:45 -HTTP METHOD : GET
2019-01-24 14:05:45 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 14:05:45 -参数 : []
2019-01-24 14:05:45 -耗时 : 0
2019-01-24 14:05:45 -返回值 : system/user/user
2019-01-24 14:05:46 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 14:05:46 -HTTP METHOD : GET
2019-01-24 14:05:46 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 14:05:46 -参数 : [{page=1, limit=20}]
2019-01-24 14:05:46 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 14:05:46 -==> Parameters: 
2019-01-24 14:05:46 -<==      Total: 2
2019-01-24 14:05:46 -==>  Preparing: select count(*) from sys_user 
2019-01-24 14:05:46 -==> Parameters: 
2019-01-24 14:05:46 -<==      Total: 1
2019-01-24 14:05:46 -耗时 : 14
2019-01-24 14:05:46 -返回值 : com.bootdo.common.utils.PageUtils@143c0b95
2019-01-24 14:06:12 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 14:06:12 -HTTP METHOD : GET
2019-01-24 14:06:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 14:06:12 -参数 : []
2019-01-24 14:06:12 -耗时 : 0
2019-01-24 14:06:12 -返回值 : system/user/user
2019-01-24 14:06:12 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 14:06:12 -HTTP METHOD : GET
2019-01-24 14:06:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 14:06:12 -参数 : [{page=1, limit=20}]
2019-01-24 14:06:12 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 14:06:12 -==> Parameters: 
2019-01-24 14:06:12 -<==      Total: 2
2019-01-24 14:06:12 -==>  Preparing: select count(*) from sys_user 
2019-01-24 14:06:12 -==> Parameters: 
2019-01-24 14:06:12 -<==      Total: 1
2019-01-24 14:06:12 -耗时 : 20
2019-01-24 14:06:12 -返回值 : com.bootdo.common.utils.PageUtils@3e8f408f
2019-01-24 14:07:01 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 14:07:01 -HTTP METHOD : GET
2019-01-24 14:07:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 14:07:01 -参数 : []
2019-01-24 14:07:01 -耗时 : 0
2019-01-24 14:07:01 -返回值 : system/user/user
2019-01-24 14:07:01 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 14:07:01 -HTTP METHOD : GET
2019-01-24 14:07:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 14:07:01 -参数 : [{page=1, limit=20}]
2019-01-24 14:07:01 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 14:07:01 -==> Parameters: 
2019-01-24 14:07:01 -<==      Total: 2
2019-01-24 14:07:01 -==>  Preparing: select count(*) from sys_user 
2019-01-24 14:07:01 -==> Parameters: 
2019-01-24 14:07:01 -<==      Total: 1
2019-01-24 14:07:01 -耗时 : 17
2019-01-24 14:07:01 -返回值 : com.bootdo.common.utils.PageUtils@375df026
2019-01-24 14:07:03 -请求地址 : http://localhost:8080/index
2019-01-24 14:07:03 -HTTP METHOD : GET
2019-01-24 14:07:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:07:03 -参数 : [{}]
2019-01-24 14:07:03 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:07:03 -==> Parameters: 123(String)
2019-01-24 14:07:03 -<==      Total: 2
2019-01-24 14:07:03 -耗时 : 9
2019-01-24 14:07:03 -返回值 : index_v1
2019-01-24 14:07:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:07:03 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 10(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:07:03.566(Timestamp)
2019-01-24 14:07:03 -<==    Updates: 1
2019-01-24 14:07:03 -请求地址 : http://localhost:8080/main
2019-01-24 14:07:03 -HTTP METHOD : GET
2019-01-24 14:07:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:07:03 -参数 : []
2019-01-24 14:07:03 -耗时 : 1
2019-01-24 14:07:03 -返回值 : main
2019-01-24 14:07:04 -请求地址 : http://localhost:8080/main
2019-01-24 14:07:04 -HTTP METHOD : GET
2019-01-24 14:07:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:07:04 -参数 : []
2019-01-24 14:07:04 -耗时 : 0
2019-01-24 14:07:04 -返回值 : main
2019-01-24 14:07:06 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 14:07:06 -HTTP METHOD : GET
2019-01-24 14:07:06 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 14:07:06 -参数 : []
2019-01-24 14:07:06 -耗时 : 0
2019-01-24 14:07:06 -返回值 : system/user/user
2019-01-24 14:07:06 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 14:07:06 -HTTP METHOD : GET
2019-01-24 14:07:06 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 14:07:06 -参数 : [{page=1, limit=20}]
2019-01-24 14:07:06 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 14:07:06 -==> Parameters: 
2019-01-24 14:07:06 -<==      Total: 2
2019-01-24 14:07:06 -==>  Preparing: select count(*) from sys_user 
2019-01-24 14:07:06 -==> Parameters: 
2019-01-24 14:07:06 -<==      Total: 1
2019-01-24 14:07:06 -耗时 : 23
2019-01-24 14:07:06 -返回值 : com.bootdo.common.utils.PageUtils@1aa3df7b
2019-01-24 14:07:49 -请求地址 : http://localhost:8080/login;JSESSIONID=ee1c58b1-f47b-4e17-8c6e-912d3337f92d
2019-01-24 14:07:49 -HTTP METHOD : GET
2019-01-24 14:07:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 14:07:49 -参数 : []
2019-01-24 14:07:49 -耗时 : 0
2019-01-24 14:07:49 -返回值 : login
2019-01-24 14:07:50 -请求地址 : http://localhost:8080/login
2019-01-24 14:07:50 -HTTP METHOD : GET
2019-01-24 14:07:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 14:07:50 -参数 : []
2019-01-24 14:07:50 -耗时 : 0
2019-01-24 14:07:50 -返回值 : login
2019-01-24 14:07:53 -请求地址 : http://localhost:8080/login
2019-01-24 14:07:53 -HTTP METHOD : POST
2019-01-24 14:07:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-24 14:07:53 -参数 : [admin, 123456]
2019-01-24 14:07:53 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-24 14:07:53 -==> Parameters: admin(String)
2019-01-24 14:07:53 -<==      Total: 1
2019-01-24 14:07:53 -耗时 : 4
2019-01-24 14:07:53 -返回值 : {msg=操作成功, code=0}
2019-01-24 14:07:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:07:53 -==> Parameters: 123(String), admin(String), 登录(String), 4(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-24 14:07:53.985(Timestamp)
2019-01-24 14:07:54 -请求地址 : http://localhost:8080/index
2019-01-24 14:07:54 -HTTP METHOD : GET
2019-01-24 14:07:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:07:54 -参数 : [{}]
2019-01-24 14:07:54 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:07:54 -==> Parameters: 123(String)
2019-01-24 14:07:54 -<==      Total: 2
2019-01-24 14:07:54 -耗时 : 42
2019-01-24 14:07:54 -返回值 : index_v1
2019-01-24 14:07:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:07:54 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 42(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:07:54.045(Timestamp)
2019-01-24 14:07:54 -<==    Updates: 1
2019-01-24 14:07:54 -<==    Updates: 1
2019-01-24 14:07:54 -请求地址 : http://localhost:8080/main
2019-01-24 14:07:54 -HTTP METHOD : GET
2019-01-24 14:07:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:07:54 -参数 : []
2019-01-24 14:07:54 -耗时 : 0
2019-01-24 14:07:54 -返回值 : main
2019-01-24 14:07:54 -请求地址 : http://localhost:8080/main
2019-01-24 14:07:54 -HTTP METHOD : GET
2019-01-24 14:07:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:07:54 -参数 : []
2019-01-24 14:07:54 -耗时 : 0
2019-01-24 14:07:54 -返回值 : main
2019-01-24 14:07:57 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 14:07:57 -==> Parameters: 123(String)
2019-01-24 14:07:57 -<==      Total: 7
2019-01-24 14:07:57 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 14:07:57 -HTTP METHOD : GET
2019-01-24 14:07:57 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 14:07:57 -参数 : []
2019-01-24 14:07:57 -耗时 : 0
2019-01-24 14:07:57 -返回值 : system/user/user
2019-01-24 14:07:57 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 14:07:57 -HTTP METHOD : GET
2019-01-24 14:07:57 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 14:07:57 -参数 : [{page=1, limit=20}]
2019-01-24 14:07:57 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 14:07:57 -==> Parameters: 
2019-01-24 14:07:57 -<==      Total: 2
2019-01-24 14:07:57 -==>  Preparing: select count(*) from sys_user 
2019-01-24 14:07:57 -==> Parameters: 
2019-01-24 14:07:57 -<==      Total: 1
2019-01-24 14:07:57 -耗时 : 26
2019-01-24 14:07:57 -返回值 : com.bootdo.common.utils.PageUtils@76d36771
2019-01-24 14:08:41 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 14:08:41 -HTTP METHOD : GET
2019-01-24 14:08:41 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 14:08:41 -参数 : []
2019-01-24 14:08:41 -耗时 : 0
2019-01-24 14:08:41 -返回值 : system/user/user
2019-01-24 14:08:42 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 14:08:42 -HTTP METHOD : GET
2019-01-24 14:08:42 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 14:08:42 -参数 : [{page=1, limit=20}]
2019-01-24 14:08:42 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 14:08:42 -==> Parameters: 
2019-01-24 14:08:42 -<==      Total: 2
2019-01-24 14:08:42 -==>  Preparing: select count(*) from sys_user 
2019-01-24 14:08:42 -==> Parameters: 
2019-01-24 14:08:42 -<==      Total: 1
2019-01-24 14:08:42 -耗时 : 25
2019-01-24 14:08:42 -返回值 : com.bootdo.common.utils.PageUtils@33cb8275
2019-01-24 14:08:52 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 14:08:52 -HTTP METHOD : GET
2019-01-24 14:08:52 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 14:08:52 -参数 : []
2019-01-24 14:08:52 -耗时 : 0
2019-01-24 14:08:52 -返回值 : system/user/user
2019-01-24 14:08:53 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 14:08:53 -HTTP METHOD : GET
2019-01-24 14:08:53 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 14:08:53 -参数 : [{page=1, limit=20}]
2019-01-24 14:08:53 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 14:08:53 -==> Parameters: 
2019-01-24 14:08:53 -<==      Total: 2
2019-01-24 14:08:53 -==>  Preparing: select count(*) from sys_user 
2019-01-24 14:08:53 -==> Parameters: 
2019-01-24 14:08:53 -<==      Total: 1
2019-01-24 14:08:53 -耗时 : 16
2019-01-24 14:08:53 -返回值 : com.bootdo.common.utils.PageUtils@2fc3ea5c
2019-01-24 14:12:13 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 14:12:13 -==> Parameters: 123(String)
2019-01-24 14:12:13 -<==      Total: 7
2019-01-24 14:12:13 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 14:12:13 -HTTP METHOD : GET
2019-01-24 14:12:13 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 14:12:13 -参数 : []
2019-01-24 14:12:13 -耗时 : 0
2019-01-24 14:12:13 -返回值 : system/user/user
2019-01-24 14:12:13 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 14:12:13 -HTTP METHOD : GET
2019-01-24 14:12:13 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 14:12:13 -参数 : [{page=1, limit=15}]
2019-01-24 14:12:13 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 14:12:13 -==> Parameters: 
2019-01-24 14:12:13 -<==      Total: 2
2019-01-24 14:12:13 -==>  Preparing: select count(*) from sys_user 
2019-01-24 14:12:13 -==> Parameters: 
2019-01-24 14:12:13 -<==      Total: 1
2019-01-24 14:12:13 -耗时 : 15
2019-01-24 14:12:13 -返回值 : com.bootdo.common.utils.PageUtils@a9896a8
2019-01-24 14:12:18 -请求地址 : http://localhost:8080/index
2019-01-24 14:12:18 -HTTP METHOD : GET
2019-01-24 14:12:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:12:18 -参数 : [{}]
2019-01-24 14:12:18 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:12:18 -==> Parameters: 123(String)
2019-01-24 14:12:18 -<==      Total: 2
2019-01-24 14:12:18 -耗时 : 12
2019-01-24 14:12:18 -返回值 : index_v1
2019-01-24 14:12:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:12:18 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 12(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:12:18.362(Timestamp)
2019-01-24 14:12:18 -<==    Updates: 1
2019-01-24 14:12:18 -请求地址 : http://localhost:8080/main
2019-01-24 14:12:18 -HTTP METHOD : GET
2019-01-24 14:12:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:12:18 -参数 : []
2019-01-24 14:12:18 -耗时 : 0
2019-01-24 14:12:18 -返回值 : main
2019-01-24 14:12:18 -请求地址 : http://localhost:8080/main
2019-01-24 14:12:18 -HTTP METHOD : GET
2019-01-24 14:12:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:12:18 -参数 : []
2019-01-24 14:12:18 -耗时 : 0
2019-01-24 14:12:18 -返回值 : main
2019-01-24 14:12:24 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 14:12:24 -HTTP METHOD : GET
2019-01-24 14:12:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 14:12:24 -参数 : []
2019-01-24 14:12:24 -耗时 : 0
2019-01-24 14:12:24 -返回值 : system/user/user
2019-01-24 14:12:25 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 14:12:25 -HTTP METHOD : GET
2019-01-24 14:12:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 14:12:25 -参数 : [{page=1, limit=15}]
2019-01-24 14:12:25 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 14:12:25 -==> Parameters: 
2019-01-24 14:12:25 -<==      Total: 2
2019-01-24 14:12:25 -==>  Preparing: select count(*) from sys_user 
2019-01-24 14:12:25 -==> Parameters: 
2019-01-24 14:12:25 -<==      Total: 1
2019-01-24 14:12:25 -耗时 : 12
2019-01-24 14:12:25 -返回值 : com.bootdo.common.utils.PageUtils@4b241f10
2019-01-24 14:15:25 -请求地址 : http://localhost:8080/index
2019-01-24 14:15:25 -HTTP METHOD : GET
2019-01-24 14:15:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:15:25 -参数 : [{}]
2019-01-24 14:15:25 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:15:25 -==> Parameters: 123(String)
2019-01-24 14:15:25 -<==      Total: 2
2019-01-24 14:15:25 -耗时 : 17
2019-01-24 14:15:25 -返回值 : index_v1
2019-01-24 14:15:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:15:25 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:15:25.133(Timestamp)
2019-01-24 14:15:25 -<==    Updates: 1
2019-01-24 14:15:25 -请求地址 : http://localhost:8080/main
2019-01-24 14:15:25 -HTTP METHOD : GET
2019-01-24 14:15:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:15:25 -参数 : []
2019-01-24 14:15:25 -耗时 : 0
2019-01-24 14:15:25 -返回值 : main
2019-01-24 14:15:25 -请求地址 : http://localhost:8080/main
2019-01-24 14:15:25 -HTTP METHOD : GET
2019-01-24 14:15:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:15:25 -参数 : []
2019-01-24 14:15:25 -耗时 : 0
2019-01-24 14:15:25 -返回值 : main
2019-01-24 14:15:30 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 14:15:30 -==> Parameters: 123(String)
2019-01-24 14:15:30 -<==      Total: 7
2019-01-24 14:15:30 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 14:15:30 -HTTP METHOD : GET
2019-01-24 14:15:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 14:15:30 -参数 : []
2019-01-24 14:15:30 -耗时 : 0
2019-01-24 14:15:30 -返回值 : system/user/user
2019-01-24 14:15:31 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 14:15:31 -HTTP METHOD : GET
2019-01-24 14:15:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 14:15:31 -参数 : [{page=1, limit=15}]
2019-01-24 14:15:31 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 14:15:31 -==> Parameters: 
2019-01-24 14:15:31 -<==      Total: 2
2019-01-24 14:15:31 -==>  Preparing: select count(*) from sys_user 
2019-01-24 14:15:31 -==> Parameters: 
2019-01-24 14:15:31 -<==      Total: 1
2019-01-24 14:15:31 -耗时 : 21
2019-01-24 14:15:31 -返回值 : com.bootdo.common.utils.PageUtils@18ac51e7
2019-01-24 14:16:23 -请求地址 : http://localhost:8080/index
2019-01-24 14:16:23 -HTTP METHOD : GET
2019-01-24 14:16:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:16:23 -参数 : [{}]
2019-01-24 14:16:23 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:16:23 -==> Parameters: 123(String)
2019-01-24 14:16:23 -<==      Total: 2
2019-01-24 14:16:23 -耗时 : 17
2019-01-24 14:16:23 -返回值 : index_v1
2019-01-24 14:16:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:16:23 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:16:23.443(Timestamp)
2019-01-24 14:16:23 -<==    Updates: 1
2019-01-24 14:16:23 -请求地址 : http://localhost:8080/main
2019-01-24 14:16:23 -HTTP METHOD : GET
2019-01-24 14:16:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:16:23 -参数 : []
2019-01-24 14:16:23 -耗时 : 0
2019-01-24 14:16:23 -返回值 : main
2019-01-24 14:16:23 -请求地址 : http://localhost:8080/main
2019-01-24 14:16:23 -HTTP METHOD : GET
2019-01-24 14:16:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:16:23 -参数 : []
2019-01-24 14:16:23 -耗时 : 0
2019-01-24 14:16:23 -返回值 : main
2019-01-24 14:16:42 -请求地址 : http://localhost:8080/index
2019-01-24 14:16:42 -HTTP METHOD : GET
2019-01-24 14:16:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:16:42 -参数 : [{}]
2019-01-24 14:16:42 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:16:42 -==> Parameters: 123(String)
2019-01-24 14:16:42 -<==      Total: 2
2019-01-24 14:16:42 -耗时 : 15
2019-01-24 14:16:42 -返回值 : index_v1
2019-01-24 14:16:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:16:42 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:16:42.162(Timestamp)
2019-01-24 14:16:42 -<==    Updates: 1
2019-01-24 14:16:42 -请求地址 : http://localhost:8080/main
2019-01-24 14:16:42 -HTTP METHOD : GET
2019-01-24 14:16:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:16:42 -参数 : []
2019-01-24 14:16:42 -耗时 : 0
2019-01-24 14:16:42 -返回值 : main
2019-01-24 14:16:42 -请求地址 : http://localhost:8080/main
2019-01-24 14:16:42 -HTTP METHOD : GET
2019-01-24 14:16:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:16:42 -参数 : []
2019-01-24 14:16:42 -耗时 : 0
2019-01-24 14:16:42 -返回值 : main
2019-01-24 14:16:50 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 11]
2019-01-24 14:17:11 -请求地址 : http://localhost:8080/index
2019-01-24 14:17:11 -HTTP METHOD : GET
2019-01-24 14:17:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:17:11 -参数 : [{}]
2019-01-24 14:17:11 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:17:11 -==> Parameters: 123(String)
2019-01-24 14:17:11 -<==      Total: 2
2019-01-24 14:17:11 -耗时 : 14
2019-01-24 14:17:11 -返回值 : index_v1
2019-01-24 14:17:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:17:11 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:17:11.329(Timestamp)
2019-01-24 14:17:11 -<==    Updates: 1
2019-01-24 14:17:11 -请求地址 : http://localhost:8080/main
2019-01-24 14:17:11 -HTTP METHOD : GET
2019-01-24 14:17:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:17:11 -参数 : []
2019-01-24 14:17:11 -耗时 : 0
2019-01-24 14:17:11 -返回值 : main
2019-01-24 14:17:11 -请求地址 : http://localhost:8080/main
2019-01-24 14:17:11 -HTTP METHOD : GET
2019-01-24 14:17:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:17:11 -参数 : []
2019-01-24 14:17:11 -耗时 : 0
2019-01-24 14:17:11 -返回值 : main
2019-01-24 14:17:13 -请求地址 : http://localhost:8080/index
2019-01-24 14:17:13 -HTTP METHOD : GET
2019-01-24 14:17:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:17:13 -参数 : [{}]
2019-01-24 14:17:13 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:17:13 -==> Parameters: 123(String)
2019-01-24 14:17:13 -<==      Total: 2
2019-01-24 14:17:13 -耗时 : 13
2019-01-24 14:17:13 -返回值 : index_v1
2019-01-24 14:17:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:17:13 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:17:13.124(Timestamp)
2019-01-24 14:17:13 -<==    Updates: 1
2019-01-24 14:17:13 -请求地址 : http://localhost:8080/main
2019-01-24 14:17:13 -HTTP METHOD : GET
2019-01-24 14:17:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:17:13 -参数 : []
2019-01-24 14:17:13 -耗时 : 0
2019-01-24 14:17:13 -返回值 : main
2019-01-24 14:17:13 -请求地址 : http://localhost:8080/main
2019-01-24 14:17:13 -HTTP METHOD : GET
2019-01-24 14:17:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:17:13 -参数 : []
2019-01-24 14:17:13 -耗时 : 0
2019-01-24 14:17:13 -返回值 : main
2019-01-24 14:17:32 -请求地址 : http://localhost:8080/index
2019-01-24 14:17:32 -HTTP METHOD : GET
2019-01-24 14:17:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:17:32 -参数 : [{}]
2019-01-24 14:17:33 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:17:33 -==> Parameters: 123(String)
2019-01-24 14:17:33 -<==      Total: 2
2019-01-24 14:17:33 -耗时 : 17
2019-01-24 14:17:33 -返回值 : index_v1
2019-01-24 14:17:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:17:33 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:17:33.015(Timestamp)
2019-01-24 14:17:33 -<==    Updates: 1
2019-01-24 14:17:33 -请求地址 : http://localhost:8080/main
2019-01-24 14:17:33 -HTTP METHOD : GET
2019-01-24 14:17:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:17:33 -参数 : []
2019-01-24 14:17:33 -耗时 : 0
2019-01-24 14:17:33 -返回值 : main
2019-01-24 14:17:33 -请求地址 : http://localhost:8080/main
2019-01-24 14:17:33 -HTTP METHOD : GET
2019-01-24 14:17:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:17:33 -参数 : []
2019-01-24 14:17:33 -耗时 : 0
2019-01-24 14:17:33 -返回值 : main
2019-01-24 14:19:07 -请求地址 : http://localhost:8080/index
2019-01-24 14:19:07 -HTTP METHOD : GET
2019-01-24 14:19:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:19:07 -参数 : [{}]
2019-01-24 14:19:07 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:19:07 -==> Parameters: 123(String)
2019-01-24 14:19:07 -<==      Total: 2
2019-01-24 14:19:07 -耗时 : 11
2019-01-24 14:19:07 -返回值 : index_v1
2019-01-24 14:19:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:19:07 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 11(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:19:07.293(Timestamp)
2019-01-24 14:19:07 -<==    Updates: 1
2019-01-24 14:19:07 -请求地址 : http://localhost:8080/main
2019-01-24 14:19:07 -HTTP METHOD : GET
2019-01-24 14:19:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:19:07 -参数 : []
2019-01-24 14:19:07 -耗时 : 0
2019-01-24 14:19:07 -返回值 : main
2019-01-24 14:19:07 -请求地址 : http://localhost:8080/main
2019-01-24 14:19:07 -HTTP METHOD : GET
2019-01-24 14:19:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:19:07 -参数 : []
2019-01-24 14:19:07 -耗时 : 0
2019-01-24 14:19:07 -返回值 : main
2019-01-24 14:23:50 -请求地址 : http://localhost:8080/index
2019-01-24 14:23:50 -HTTP METHOD : GET
2019-01-24 14:23:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:23:50 -参数 : [{}]
2019-01-24 14:23:50 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:23:50 -==> Parameters: 123(String)
2019-01-24 14:23:50 -<==      Total: 2
2019-01-24 14:23:50 -耗时 : 16
2019-01-24 14:23:50 -返回值 : index_v1
2019-01-24 14:23:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:23:50 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:23:50.81(Timestamp)
2019-01-24 14:23:50 -<==    Updates: 1
2019-01-24 14:23:50 -请求地址 : http://localhost:8080/main
2019-01-24 14:23:50 -HTTP METHOD : GET
2019-01-24 14:23:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:23:50 -参数 : []
2019-01-24 14:23:50 -耗时 : 0
2019-01-24 14:23:50 -返回值 : main
2019-01-24 14:23:51 -请求地址 : http://localhost:8080/main
2019-01-24 14:23:51 -HTTP METHOD : GET
2019-01-24 14:23:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 14:23:51 -参数 : []
2019-01-24 14:23:51 -耗时 : 0
2019-01-24 14:23:51 -返回值 : main
2019-01-24 14:24:54 -请求地址 : http://localhost:8080/index
2019-01-24 14:24:54 -HTTP METHOD : GET
2019-01-24 14:24:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:24:54 -参数 : [{}]
2019-01-24 14:24:54 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:24:54 -==> Parameters: 123(String)
2019-01-24 14:24:54 -<==      Total: 2
2019-01-24 14:24:54 -耗时 : 14
2019-01-24 14:24:54 -返回值 : index_v1
2019-01-24 14:24:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:24:54 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:24:54.142(Timestamp)
2019-01-24 14:24:54 -<==    Updates: 1
2019-01-24 14:29:35 -请求地址 : http://localhost:8080/index
2019-01-24 14:29:35 -HTTP METHOD : GET
2019-01-24 14:29:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:29:35 -参数 : [{}]
2019-01-24 14:29:35 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:29:35 -==> Parameters: 123(String)
2019-01-24 14:29:35 -<==      Total: 2
2019-01-24 14:29:35 -耗时 : 19
2019-01-24 14:29:35 -返回值 : index_v1
2019-01-24 14:29:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:29:35 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:29:35.638(Timestamp)
2019-01-24 14:29:35 -<==    Updates: 1
2019-01-24 14:31:01 -请求地址 : http://localhost:8080/index
2019-01-24 14:31:01 -HTTP METHOD : GET
2019-01-24 14:31:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:31:01 -参数 : [{}]
2019-01-24 14:31:01 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:31:01 -==> Parameters: 123(String)
2019-01-24 14:31:01 -<==      Total: 2
2019-01-24 14:31:01 -耗时 : 10
2019-01-24 14:31:01 -返回值 : index_v1
2019-01-24 14:31:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:31:01 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 10(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:31:01.584(Timestamp)
2019-01-24 14:31:01 -<==    Updates: 1
2019-01-24 14:31:13 -请求地址 : http://localhost:8080/index
2019-01-24 14:31:13 -HTTP METHOD : GET
2019-01-24 14:31:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:31:13 -参数 : [{}]
2019-01-24 14:31:13 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:31:13 -==> Parameters: 123(String)
2019-01-24 14:31:13 -<==      Total: 2
2019-01-24 14:31:13 -耗时 : 18
2019-01-24 14:31:13 -返回值 : index_v1
2019-01-24 14:31:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:31:13 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:31:13.577(Timestamp)
2019-01-24 14:31:13 -<==    Updates: 1
2019-01-24 14:31:14 -请求地址 : http://localhost:8080/index
2019-01-24 14:31:14 -HTTP METHOD : GET
2019-01-24 14:31:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:31:14 -参数 : [{}]
2019-01-24 14:31:14 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:31:14 -==> Parameters: 123(String)
2019-01-24 14:31:14 -<==      Total: 2
2019-01-24 14:31:14 -耗时 : 14
2019-01-24 14:31:14 -返回值 : index_v1
2019-01-24 14:31:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:31:14 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:31:14.52(Timestamp)
2019-01-24 14:31:14 -<==    Updates: 1
2019-01-24 14:31:14 -请求地址 : http://localhost:8080/index
2019-01-24 14:31:14 -HTTP METHOD : GET
2019-01-24 14:31:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:31:14 -参数 : [{}]
2019-01-24 14:31:14 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:31:14 -==> Parameters: 123(String)
2019-01-24 14:31:14 -<==      Total: 2
2019-01-24 14:31:14 -耗时 : 10
2019-01-24 14:31:14 -返回值 : index_v1
2019-01-24 14:31:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:31:14 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 10(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:31:14.857(Timestamp)
2019-01-24 14:31:14 -<==    Updates: 1
2019-01-24 14:33:22 -请求地址 : http://localhost:8080/index
2019-01-24 14:33:22 -HTTP METHOD : GET
2019-01-24 14:33:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:33:22 -参数 : [{}]
2019-01-24 14:33:22 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:33:22 -==> Parameters: 123(String)
2019-01-24 14:33:22 -<==      Total: 2
2019-01-24 14:33:22 -耗时 : 21
2019-01-24 14:33:22 -返回值 : index_v1
2019-01-24 14:33:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:33:22 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:33:22.572(Timestamp)
2019-01-24 14:33:22 -<==    Updates: 1
2019-01-24 14:34:48 -请求地址 : http://localhost:8080/index
2019-01-24 14:34:48 -HTTP METHOD : GET
2019-01-24 14:34:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:34:48 -参数 : [{}]
2019-01-24 14:34:48 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:34:48 -==> Parameters: 123(String)
2019-01-24 14:34:48 -<==      Total: 2
2019-01-24 14:34:48 -耗时 : 24
2019-01-24 14:34:48 -返回值 : index_v1
2019-01-24 14:34:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:34:48 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:34:48.856(Timestamp)
2019-01-24 14:34:48 -<==    Updates: 1
2019-01-24 14:36:28 -请求地址 : http://localhost:8080/index
2019-01-24 14:36:28 -HTTP METHOD : GET
2019-01-24 14:36:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:36:28 -参数 : [{}]
2019-01-24 14:36:28 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:36:28 -==> Parameters: 123(String)
2019-01-24 14:36:28 -<==      Total: 2
2019-01-24 14:36:28 -耗时 : 16
2019-01-24 14:36:28 -返回值 : index_v1
2019-01-24 14:36:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:36:28 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:36:28.831(Timestamp)
2019-01-24 14:36:28 -<==    Updates: 1
2019-01-24 14:36:30 -请求地址 : http://localhost:8080/index
2019-01-24 14:36:30 -HTTP METHOD : GET
2019-01-24 14:36:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:36:30 -参数 : [{}]
2019-01-24 14:36:30 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:36:30 -==> Parameters: 123(String)
2019-01-24 14:36:30 -<==      Total: 2
2019-01-24 14:36:30 -耗时 : 12
2019-01-24 14:36:30 -返回值 : index_v1
2019-01-24 14:36:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:36:30 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 12(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:36:30.696(Timestamp)
2019-01-24 14:36:30 -<==    Updates: 1
2019-01-24 14:37:00 -请求地址 : http://localhost:8080/index
2019-01-24 14:37:00 -HTTP METHOD : GET
2019-01-24 14:37:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:37:00 -参数 : [{}]
2019-01-24 14:37:00 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:37:00 -==> Parameters: 123(String)
2019-01-24 14:37:00 -<==      Total: 2
2019-01-24 14:37:00 -耗时 : 13
2019-01-24 14:37:00 -返回值 : index_v1
2019-01-24 14:37:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:37:00 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:37:00.439(Timestamp)
2019-01-24 14:37:00 -<==    Updates: 1
2019-01-24 14:37:25 -请求地址 : http://localhost:8080/index
2019-01-24 14:37:25 -HTTP METHOD : GET
2019-01-24 14:37:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:37:25 -参数 : [{}]
2019-01-24 14:37:25 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:37:25 -==> Parameters: 123(String)
2019-01-24 14:37:25 -<==      Total: 2
2019-01-24 14:37:25 -耗时 : 13
2019-01-24 14:37:25 -返回值 : index_v1
2019-01-24 14:37:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:37:25 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:37:25.205(Timestamp)
2019-01-24 14:37:25 -<==    Updates: 1
2019-01-24 14:37:29 -请求地址 : http://localhost:8080/index
2019-01-24 14:37:29 -HTTP METHOD : GET
2019-01-24 14:37:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:37:29 -参数 : [{}]
2019-01-24 14:37:29 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:37:29 -==> Parameters: 123(String)
2019-01-24 14:37:29 -<==      Total: 2
2019-01-24 14:37:29 -耗时 : 14
2019-01-24 14:37:29 -返回值 : index_v1
2019-01-24 14:37:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:37:29 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:37:29.882(Timestamp)
2019-01-24 14:37:29 -<==    Updates: 1
2019-01-24 14:45:53 -请求地址 : http://localhost:8080/index
2019-01-24 14:45:53 -HTTP METHOD : GET
2019-01-24 14:45:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:45:53 -参数 : [{}]
2019-01-24 14:45:53 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:45:53 -==> Parameters: 123(String)
2019-01-24 14:45:54 -<==      Total: 2
2019-01-24 14:45:54 -耗时 : 21
2019-01-24 14:45:54 -返回值 : index_v1
2019-01-24 14:45:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:45:54 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:45:54.013(Timestamp)
2019-01-24 14:45:54 -<==    Updates: 1
2019-01-24 14:45:57 -请求地址 : http://localhost:8080/index
2019-01-24 14:45:57 -HTTP METHOD : GET
2019-01-24 14:45:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:45:57 -参数 : [{}]
2019-01-24 14:45:57 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:45:57 -==> Parameters: 123(String)
2019-01-24 14:45:57 -<==      Total: 2
2019-01-24 14:45:57 -耗时 : 14
2019-01-24 14:45:57 -返回值 : index_v1
2019-01-24 14:45:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:45:57 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:45:57.417(Timestamp)
2019-01-24 14:45:57 -<==    Updates: 1
2019-01-24 14:46:05 -Validating all active sessions...
2019-01-24 14:46:05 -Finished session validation.  [1] sessions were stopped.
2019-01-24 14:46:18 -请求地址 : http://localhost:8080/index
2019-01-24 14:46:18 -HTTP METHOD : GET
2019-01-24 14:46:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:46:18 -参数 : [{}]
2019-01-24 14:46:18 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:46:18 -==> Parameters: 123(String)
2019-01-24 14:46:18 -<==      Total: 2
2019-01-24 14:46:18 -耗时 : 25
2019-01-24 14:46:18 -返回值 : index_v1
2019-01-24 14:46:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:46:18 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:46:18.229(Timestamp)
2019-01-24 14:46:18 -<==    Updates: 1
2019-01-24 14:46:41 -请求地址 : http://localhost:8080/index
2019-01-24 14:46:41 -HTTP METHOD : GET
2019-01-24 14:46:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:46:41 -参数 : [{}]
2019-01-24 14:46:41 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:46:41 -==> Parameters: 123(String)
2019-01-24 14:46:41 -<==      Total: 2
2019-01-24 14:46:41 -耗时 : 11
2019-01-24 14:46:41 -返回值 : index_v1
2019-01-24 14:46:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:46:41 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 11(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:46:41.764(Timestamp)
2019-01-24 14:46:41 -<==    Updates: 1
2019-01-24 14:46:50 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 12]
2019-01-24 14:46:59 -请求地址 : http://localhost:8080/index
2019-01-24 14:46:59 -HTTP METHOD : GET
2019-01-24 14:46:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:46:59 -参数 : [{}]
2019-01-24 14:46:59 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:46:59 -==> Parameters: 123(String)
2019-01-24 14:46:59 -<==      Total: 2
2019-01-24 14:46:59 -耗时 : 14
2019-01-24 14:46:59 -返回值 : index_v1
2019-01-24 14:46:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:46:59 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:46:59.246(Timestamp)
2019-01-24 14:46:59 -<==    Updates: 1
2019-01-24 14:47:31 -请求地址 : http://localhost:8080/index
2019-01-24 14:47:31 -HTTP METHOD : GET
2019-01-24 14:47:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:47:31 -参数 : [{}]
2019-01-24 14:47:31 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:47:31 -==> Parameters: 123(String)
2019-01-24 14:47:31 -<==      Total: 2
2019-01-24 14:47:31 -耗时 : 11
2019-01-24 14:47:31 -返回值 : index_v1
2019-01-24 14:47:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:47:31 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 11(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:47:31.542(Timestamp)
2019-01-24 14:47:31 -<==    Updates: 1
2019-01-24 14:48:11 -请求地址 : http://localhost:8080/index
2019-01-24 14:48:11 -HTTP METHOD : GET
2019-01-24 14:48:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:48:11 -参数 : [{}]
2019-01-24 14:48:11 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:48:11 -==> Parameters: 123(String)
2019-01-24 14:48:11 -<==      Total: 2
2019-01-24 14:48:11 -耗时 : 10
2019-01-24 14:48:11 -返回值 : index_v1
2019-01-24 14:48:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:48:11 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 10(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:48:11.35(Timestamp)
2019-01-24 14:48:11 -<==    Updates: 1
2019-01-24 14:48:39 -请求地址 : http://localhost:8080/index
2019-01-24 14:48:39 -HTTP METHOD : GET
2019-01-24 14:48:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:48:39 -参数 : [{}]
2019-01-24 14:48:39 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:48:39 -==> Parameters: 123(String)
2019-01-24 14:48:39 -<==      Total: 2
2019-01-24 14:48:39 -耗时 : 22
2019-01-24 14:48:39 -返回值 : index_v1
2019-01-24 14:48:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:48:39 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:48:39.936(Timestamp)
2019-01-24 14:48:39 -<==    Updates: 1
2019-01-24 14:49:08 -请求地址 : http://localhost:8080/index
2019-01-24 14:49:08 -HTTP METHOD : GET
2019-01-24 14:49:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:49:08 -参数 : [{}]
2019-01-24 14:49:08 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:49:08 -==> Parameters: 123(String)
2019-01-24 14:49:08 -<==      Total: 2
2019-01-24 14:49:08 -耗时 : 8
2019-01-24 14:49:08 -返回值 : index_v1
2019-01-24 14:49:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:49:09 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 8(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:49:09.0(Timestamp)
2019-01-24 14:49:09 -<==    Updates: 1
2019-01-24 14:49:44 -请求地址 : http://localhost:8080/index
2019-01-24 14:49:44 -HTTP METHOD : GET
2019-01-24 14:49:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:49:44 -参数 : [{}]
2019-01-24 14:49:44 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:49:44 -==> Parameters: 123(String)
2019-01-24 14:49:44 -<==      Total: 2
2019-01-24 14:49:44 -耗时 : 17
2019-01-24 14:49:44 -返回值 : index_v1
2019-01-24 14:49:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:49:44 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:49:44.818(Timestamp)
2019-01-24 14:49:44 -<==    Updates: 1
2019-01-24 14:51:00 -请求地址 : http://localhost:8080/index
2019-01-24 14:51:00 -HTTP METHOD : GET
2019-01-24 14:51:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:51:00 -参数 : [{}]
2019-01-24 14:51:00 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:51:00 -==> Parameters: 123(String)
2019-01-24 14:51:00 -<==      Total: 2
2019-01-24 14:51:00 -耗时 : 19
2019-01-24 14:51:00 -返回值 : index_v1
2019-01-24 14:51:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:51:00 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:51:00.342(Timestamp)
2019-01-24 14:51:00 -<==    Updates: 1
2019-01-24 14:53:15 -请求地址 : http://localhost:8080/index
2019-01-24 14:53:15 -HTTP METHOD : GET
2019-01-24 14:53:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 14:53:15 -参数 : [{}]
2019-01-24 14:53:15 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 14:53:15 -==> Parameters: 123(String)
2019-01-24 14:53:15 -<==      Total: 2
2019-01-24 14:53:15 -耗时 : 14
2019-01-24 14:53:15 -返回值 : index_v1
2019-01-24 14:53:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 14:53:15 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 14:53:15.116(Timestamp)
2019-01-24 14:53:15 -<==    Updates: 1
2019-01-24 15:03:13 -请求地址 : http://localhost:8080/index
2019-01-24 15:03:13 -HTTP METHOD : GET
2019-01-24 15:03:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:03:13 -参数 : [{}]
2019-01-24 15:03:13 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:03:13 -==> Parameters: 123(String)
2019-01-24 15:03:13 -<==      Total: 2
2019-01-24 15:03:13 -耗时 : 22
2019-01-24 15:03:13 -返回值 : index_v1
2019-01-24 15:03:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:03:13 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:03:13.114(Timestamp)
2019-01-24 15:03:13 -<==    Updates: 1
2019-01-24 15:07:23 -请求地址 : http://localhost:8080/index
2019-01-24 15:07:23 -HTTP METHOD : GET
2019-01-24 15:07:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:07:23 -参数 : [{}]
2019-01-24 15:07:23 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:07:23 -==> Parameters: 123(String)
2019-01-24 15:07:23 -<==      Total: 2
2019-01-24 15:07:23 -耗时 : 23
2019-01-24 15:07:23 -返回值 : index_v1
2019-01-24 15:07:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:07:23 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:07:23.602(Timestamp)
2019-01-24 15:07:23 -<==    Updates: 1
2019-01-24 15:08:58 -请求地址 : http://localhost:8080/index
2019-01-24 15:08:58 -HTTP METHOD : GET
2019-01-24 15:08:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:08:58 -参数 : [{}]
2019-01-24 15:08:58 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:08:58 -==> Parameters: 123(String)
2019-01-24 15:08:58 -<==      Total: 2
2019-01-24 15:08:58 -耗时 : 15
2019-01-24 15:08:58 -返回值 : index_v1
2019-01-24 15:08:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:08:58 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:08:58.534(Timestamp)
2019-01-24 15:08:58 -<==    Updates: 1
2019-01-24 15:10:00 -请求地址 : http://localhost:8080/index
2019-01-24 15:10:00 -HTTP METHOD : GET
2019-01-24 15:10:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:10:00 -参数 : [{}]
2019-01-24 15:10:00 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:10:00 -==> Parameters: 123(String)
2019-01-24 15:10:00 -<==      Total: 2
2019-01-24 15:10:00 -耗时 : 12
2019-01-24 15:10:00 -返回值 : index_v1
2019-01-24 15:10:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:10:00 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 12(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:10:00.364(Timestamp)
2019-01-24 15:10:00 -<==    Updates: 1
2019-01-24 15:11:02 -请求地址 : http://localhost:8080/index
2019-01-24 15:11:02 -HTTP METHOD : GET
2019-01-24 15:11:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:11:02 -参数 : [{}]
2019-01-24 15:11:02 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:11:02 -==> Parameters: 123(String)
2019-01-24 15:11:02 -<==      Total: 2
2019-01-24 15:11:02 -耗时 : 15
2019-01-24 15:11:02 -返回值 : index_v1
2019-01-24 15:11:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:11:02 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:11:02.101(Timestamp)
2019-01-24 15:11:02 -<==    Updates: 1
2019-01-24 15:11:24 -请求地址 : http://localhost:8080/index
2019-01-24 15:11:24 -HTTP METHOD : GET
2019-01-24 15:11:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:11:24 -参数 : [{}]
2019-01-24 15:11:24 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:11:24 -==> Parameters: 123(String)
2019-01-24 15:11:24 -<==      Total: 2
2019-01-24 15:11:24 -耗时 : 18
2019-01-24 15:11:24 -返回值 : index_v1
2019-01-24 15:11:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:11:24 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:11:24.336(Timestamp)
2019-01-24 15:11:24 -<==    Updates: 1
2019-01-24 15:12:08 -请求地址 : http://localhost:8080/index
2019-01-24 15:12:08 -HTTP METHOD : GET
2019-01-24 15:12:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:12:08 -参数 : [{}]
2019-01-24 15:12:08 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:12:08 -==> Parameters: 123(String)
2019-01-24 15:12:08 -<==      Total: 2
2019-01-24 15:12:08 -耗时 : 16
2019-01-24 15:12:08 -返回值 : index_v1
2019-01-24 15:12:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:12:08 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:12:08.886(Timestamp)
2019-01-24 15:12:08 -<==    Updates: 1
2019-01-24 15:12:12 -请求地址 : http://localhost:8080/index
2019-01-24 15:12:12 -HTTP METHOD : GET
2019-01-24 15:12:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:12:12 -参数 : [{}]
2019-01-24 15:12:12 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:12:12 -==> Parameters: 123(String)
2019-01-24 15:12:12 -<==      Total: 2
2019-01-24 15:12:12 -耗时 : 13
2019-01-24 15:12:12 -返回值 : index_v1
2019-01-24 15:12:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:12:12 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:12:12.62(Timestamp)
2019-01-24 15:12:12 -<==    Updates: 1
2019-01-24 15:15:04 -请求地址 : http://localhost:8080/index
2019-01-24 15:15:04 -HTTP METHOD : GET
2019-01-24 15:15:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:15:04 -参数 : [{}]
2019-01-24 15:15:04 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:15:04 -==> Parameters: 123(String)
2019-01-24 15:15:04 -<==      Total: 2
2019-01-24 15:15:04 -耗时 : 12
2019-01-24 15:15:04 -返回值 : index_v1
2019-01-24 15:15:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:15:04 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 12(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:15:04.142(Timestamp)
2019-01-24 15:15:04 -<==    Updates: 1
2019-01-24 15:15:29 -请求地址 : http://localhost:8080/index
2019-01-24 15:15:29 -HTTP METHOD : GET
2019-01-24 15:15:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:15:29 -参数 : [{}]
2019-01-24 15:15:29 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:15:29 -==> Parameters: 123(String)
2019-01-24 15:15:29 -<==      Total: 2
2019-01-24 15:15:29 -耗时 : 11
2019-01-24 15:15:29 -返回值 : index_v1
2019-01-24 15:15:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:15:29 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 12(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:15:29.572(Timestamp)
2019-01-24 15:15:29 -<==    Updates: 1
2019-01-24 15:16:42 -请求地址 : http://localhost:8080/index
2019-01-24 15:16:42 -HTTP METHOD : GET
2019-01-24 15:16:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:16:42 -参数 : [{}]
2019-01-24 15:16:42 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:16:42 -==> Parameters: 123(String)
2019-01-24 15:16:42 -<==      Total: 2
2019-01-24 15:16:42 -耗时 : 21
2019-01-24 15:16:42 -返回值 : index_v1
2019-01-24 15:16:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:16:42 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:16:42.676(Timestamp)
2019-01-24 15:16:42 -<==    Updates: 1
2019-01-24 15:16:50 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 13]
2019-01-24 15:18:17 -请求地址 : http://localhost:8080/index
2019-01-24 15:18:17 -HTTP METHOD : GET
2019-01-24 15:18:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:18:17 -参数 : [{}]
2019-01-24 15:18:17 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:18:17 -==> Parameters: 123(String)
2019-01-24 15:18:17 -<==      Total: 2
2019-01-24 15:18:17 -耗时 : 10
2019-01-24 15:18:17 -返回值 : index_v1
2019-01-24 15:18:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:18:17 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 10(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:18:17.361(Timestamp)
2019-01-24 15:18:17 -<==    Updates: 1
2019-01-24 15:21:06 -请求地址 : http://localhost:8080/index
2019-01-24 15:21:06 -HTTP METHOD : GET
2019-01-24 15:21:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:21:06 -参数 : [{}]
2019-01-24 15:21:06 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:21:06 -==> Parameters: 123(String)
2019-01-24 15:21:06 -<==      Total: 2
2019-01-24 15:21:06 -耗时 : 14
2019-01-24 15:21:06 -返回值 : index_v1
2019-01-24 15:21:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:21:06 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:21:06.335(Timestamp)
2019-01-24 15:21:06 -<==    Updates: 1
2019-01-24 15:21:12 -请求地址 : http://localhost:8080/index
2019-01-24 15:21:12 -HTTP METHOD : GET
2019-01-24 15:21:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:21:12 -参数 : [{}]
2019-01-24 15:21:12 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:21:12 -==> Parameters: 123(String)
2019-01-24 15:21:12 -<==      Total: 2
2019-01-24 15:21:12 -耗时 : 9
2019-01-24 15:21:12 -返回值 : index_v1
2019-01-24 15:21:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:21:12 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 9(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:21:12.235(Timestamp)
2019-01-24 15:21:12 -<==    Updates: 1
2019-01-24 15:46:05 -Validating all active sessions...
2019-01-24 15:46:05 -Finished session validation.  No sessions were stopped.
2019-01-24 15:46:51 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 14]
2019-01-24 15:46:57 -请求地址 : http://localhost:8080/index
2019-01-24 15:46:57 -HTTP METHOD : GET
2019-01-24 15:46:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:46:57 -参数 : [{}]
2019-01-24 15:46:57 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:46:57 -==> Parameters: 123(String)
2019-01-24 15:46:57 -<==      Total: 2
2019-01-24 15:46:57 -耗时 : 15
2019-01-24 15:46:57 -返回值 : index_v1
2019-01-24 15:46:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:46:57 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:46:57.149(Timestamp)
2019-01-24 15:46:57 -<==    Updates: 1
2019-01-24 15:47:00 -请求地址 : http://localhost:8080/index
2019-01-24 15:47:00 -HTTP METHOD : GET
2019-01-24 15:47:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:47:00 -参数 : [{}]
2019-01-24 15:47:00 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:47:00 -==> Parameters: 123(String)
2019-01-24 15:47:00 -<==      Total: 2
2019-01-24 15:47:00 -耗时 : 17
2019-01-24 15:47:00 -返回值 : index_v1
2019-01-24 15:47:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:47:00 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:47:00.167(Timestamp)
2019-01-24 15:47:00 -<==    Updates: 1
2019-01-24 15:47:37 -请求地址 : http://localhost:8080/index
2019-01-24 15:47:37 -HTTP METHOD : GET
2019-01-24 15:47:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:47:37 -参数 : [{}]
2019-01-24 15:47:37 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:47:37 -==> Parameters: 123(String)
2019-01-24 15:47:37 -<==      Total: 2
2019-01-24 15:47:37 -耗时 : 18
2019-01-24 15:47:37 -返回值 : index_v1
2019-01-24 15:47:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:47:37 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:47:37.748(Timestamp)
2019-01-24 15:47:37 -<==    Updates: 1
2019-01-24 15:48:24 -请求地址 : http://localhost:8080/index
2019-01-24 15:48:24 -HTTP METHOD : GET
2019-01-24 15:48:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:48:24 -参数 : [{}]
2019-01-24 15:48:24 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:48:24 -==> Parameters: 123(String)
2019-01-24 15:48:24 -<==      Total: 2
2019-01-24 15:48:24 -耗时 : 13
2019-01-24 15:48:24 -返回值 : index_v1
2019-01-24 15:48:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:48:24 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:48:24.109(Timestamp)
2019-01-24 15:48:24 -<==    Updates: 1
2019-01-24 15:48:37 -请求地址 : http://localhost:8080/index
2019-01-24 15:48:37 -HTTP METHOD : GET
2019-01-24 15:48:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:48:37 -参数 : [{}]
2019-01-24 15:48:37 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:48:37 -==> Parameters: 123(String)
2019-01-24 15:48:37 -<==      Total: 2
2019-01-24 15:48:37 -耗时 : 14
2019-01-24 15:48:37 -返回值 : index_v1
2019-01-24 15:48:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:48:37 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:48:37.648(Timestamp)
2019-01-24 15:48:37 -<==    Updates: 1
2019-01-24 15:49:24 -请求地址 : http://localhost:8080/index
2019-01-24 15:49:24 -HTTP METHOD : GET
2019-01-24 15:49:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:49:24 -参数 : [{}]
2019-01-24 15:49:24 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:49:24 -==> Parameters: 123(String)
2019-01-24 15:49:24 -<==      Total: 2
2019-01-24 15:49:24 -耗时 : 11
2019-01-24 15:49:24 -返回值 : index_v1
2019-01-24 15:49:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:49:24 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 11(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:49:24.55(Timestamp)
2019-01-24 15:49:24 -<==    Updates: 1
2019-01-24 15:49:33 -请求地址 : http://localhost:8080/index
2019-01-24 15:49:33 -HTTP METHOD : GET
2019-01-24 15:49:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:49:33 -参数 : [{}]
2019-01-24 15:49:33 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:49:33 -==> Parameters: 123(String)
2019-01-24 15:49:33 -<==      Total: 2
2019-01-24 15:49:33 -耗时 : 16
2019-01-24 15:49:33 -返回值 : index_v1
2019-01-24 15:49:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:49:33 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:49:33.664(Timestamp)
2019-01-24 15:49:33 -<==    Updates: 1
2019-01-24 15:51:29 -请求地址 : http://localhost:8080/index
2019-01-24 15:51:29 -HTTP METHOD : GET
2019-01-24 15:51:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:51:29 -参数 : [{}]
2019-01-24 15:51:29 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:51:29 -==> Parameters: 123(String)
2019-01-24 15:51:29 -<==      Total: 2
2019-01-24 15:51:29 -耗时 : 11
2019-01-24 15:51:29 -返回值 : index_v1
2019-01-24 15:51:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:51:29 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 11(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:51:29.429(Timestamp)
2019-01-24 15:51:29 -<==    Updates: 1
2019-01-24 15:51:56 -请求地址 : http://localhost:8080/index
2019-01-24 15:51:56 -HTTP METHOD : GET
2019-01-24 15:51:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:51:56 -参数 : [{}]
2019-01-24 15:51:56 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:51:56 -==> Parameters: 123(String)
2019-01-24 15:51:56 -<==      Total: 2
2019-01-24 15:51:56 -耗时 : 11
2019-01-24 15:51:56 -返回值 : index_v1
2019-01-24 15:51:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:51:56 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 11(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:51:56.06(Timestamp)
2019-01-24 15:51:56 -<==    Updates: 1
2019-01-24 15:52:14 -请求地址 : http://localhost:8080/index
2019-01-24 15:52:14 -HTTP METHOD : GET
2019-01-24 15:52:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:52:14 -参数 : [{}]
2019-01-24 15:52:14 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:52:14 -==> Parameters: 123(String)
2019-01-24 15:52:14 -<==      Total: 2
2019-01-24 15:52:14 -耗时 : 16
2019-01-24 15:52:14 -返回值 : index_v1
2019-01-24 15:52:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:52:14 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:52:14.996(Timestamp)
2019-01-24 15:52:15 -<==    Updates: 1
2019-01-24 15:52:24 -请求地址 : http://localhost:8080/index
2019-01-24 15:52:24 -HTTP METHOD : GET
2019-01-24 15:52:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:52:24 -参数 : [{}]
2019-01-24 15:52:24 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:52:24 -==> Parameters: 123(String)
2019-01-24 15:52:24 -<==      Total: 2
2019-01-24 15:52:24 -耗时 : 11
2019-01-24 15:52:24 -返回值 : index_v1
2019-01-24 15:52:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:52:24 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 11(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:52:24.85(Timestamp)
2019-01-24 15:52:24 -<==    Updates: 1
2019-01-24 15:52:50 -请求地址 : http://localhost:8080/index
2019-01-24 15:52:50 -HTTP METHOD : GET
2019-01-24 15:52:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:52:50 -参数 : [{}]
2019-01-24 15:52:50 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:52:50 -==> Parameters: 123(String)
2019-01-24 15:52:50 -<==      Total: 2
2019-01-24 15:52:50 -耗时 : 17
2019-01-24 15:52:50 -返回值 : index_v1
2019-01-24 15:52:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:52:50 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:52:50.436(Timestamp)
2019-01-24 15:52:50 -<==    Updates: 1
2019-01-24 15:54:30 -请求地址 : http://localhost:8080/index
2019-01-24 15:54:30 -HTTP METHOD : GET
2019-01-24 15:54:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:54:30 -参数 : [{}]
2019-01-24 15:54:30 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:54:30 -==> Parameters: 123(String)
2019-01-24 15:54:30 -<==      Total: 2
2019-01-24 15:54:30 -耗时 : 16
2019-01-24 15:54:30 -返回值 : index_v1
2019-01-24 15:54:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:54:30 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:54:30.705(Timestamp)
2019-01-24 15:54:30 -<==    Updates: 1
2019-01-24 15:54:49 -请求地址 : http://localhost:8080/index
2019-01-24 15:54:49 -HTTP METHOD : GET
2019-01-24 15:54:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:54:49 -参数 : [{}]
2019-01-24 15:54:49 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:54:49 -==> Parameters: 123(String)
2019-01-24 15:54:49 -<==      Total: 2
2019-01-24 15:54:49 -耗时 : 13
2019-01-24 15:54:49 -返回值 : index_v1
2019-01-24 15:54:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:54:49 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:54:49.14(Timestamp)
2019-01-24 15:54:49 -<==    Updates: 1
2019-01-24 15:55:09 -请求地址 : http://localhost:8080/index
2019-01-24 15:55:09 -HTTP METHOD : GET
2019-01-24 15:55:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:55:09 -参数 : [{}]
2019-01-24 15:55:09 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:55:09 -==> Parameters: 123(String)
2019-01-24 15:55:09 -<==      Total: 2
2019-01-24 15:55:09 -耗时 : 6
2019-01-24 15:55:09 -返回值 : index_v1
2019-01-24 15:55:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:55:09 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 6(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:55:09.68(Timestamp)
2019-01-24 15:55:09 -<==    Updates: 1
2019-01-24 15:55:28 -请求地址 : http://localhost:8080/index
2019-01-24 15:55:28 -HTTP METHOD : GET
2019-01-24 15:55:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:55:28 -参数 : [{}]
2019-01-24 15:55:28 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:55:28 -==> Parameters: 123(String)
2019-01-24 15:55:28 -<==      Total: 2
2019-01-24 15:55:28 -耗时 : 6
2019-01-24 15:55:28 -返回值 : index_v1
2019-01-24 15:55:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:55:28 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 6(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:55:28.708(Timestamp)
2019-01-24 15:55:28 -<==    Updates: 1
2019-01-24 15:57:02 -请求地址 : http://localhost:8080/login;JSESSIONID=4eadb8a1-db0f-4c26-afd5-a52ce1ae0d09
2019-01-24 15:57:02 -HTTP METHOD : GET
2019-01-24 15:57:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 15:57:02 -参数 : []
2019-01-24 15:57:02 -耗时 : 0
2019-01-24 15:57:02 -返回值 : login
2019-01-24 15:57:02 -请求地址 : http://localhost:8080/login
2019-01-24 15:57:02 -HTTP METHOD : GET
2019-01-24 15:57:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 15:57:02 -参数 : []
2019-01-24 15:57:02 -耗时 : 0
2019-01-24 15:57:02 -返回值 : login
2019-01-24 15:57:05 -请求地址 : http://localhost:8080/login
2019-01-24 15:57:05 -HTTP METHOD : POST
2019-01-24 15:57:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-24 15:57:05 -参数 : [admin, 123456]
2019-01-24 15:57:05 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-24 15:57:05 -==> Parameters: admin(String)
2019-01-24 15:57:05 -<==      Total: 1
2019-01-24 15:57:05 -耗时 : 106
2019-01-24 15:57:05 -返回值 : {msg=操作成功, code=0}
2019-01-24 15:57:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:57:05 -==> Parameters: 123(String), admin(String), 登录(String), 106(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-24 15:57:05.781(Timestamp)
2019-01-24 15:57:05 -请求地址 : http://localhost:8080/index
2019-01-24 15:57:05 -HTTP METHOD : GET
2019-01-24 15:57:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 15:57:05 -参数 : [{}]
2019-01-24 15:57:05 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 15:57:05 -==> Parameters: 123(String)
2019-01-24 15:57:05 -<==      Total: 2
2019-01-24 15:57:05 -耗时 : 35
2019-01-24 15:57:05 -返回值 : index_v1
2019-01-24 15:57:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 15:57:05 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 15:57:05.833(Timestamp)
2019-01-24 15:57:05 -<==    Updates: 1
2019-01-24 15:57:05 -<==    Updates: 1
2019-01-24 16:05:01 -Starting BootdoApplication on YH-20180312AAAP with PID 13764 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-24 16:05:01 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-24 16:05:01 -The following profiles are active: dev
2019-01-24 16:05:01 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41dd05a: startup date [Thu Jan 24 16:05:01 CST 2019]; root of context hierarchy
2019-01-24 16:05:04 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$a576dc19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 16:05:04 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$99eaa0bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 16:05:04 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 16:05:04 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 16:05:04 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 16:05:04 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$34896dbb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 16:05:04 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5c64a5fb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 16:05:04 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$4ebdd4a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 16:05:04 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-24 16:05:05 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 16:05:05 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 16:05:05 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 16:05:06 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 16:05:06 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 16:05:06 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-24 16:05:06 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-24 16:05:06 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 16:05:06 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 16:05:06 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 16:05:06 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-24 16:05:07 -Tomcat initialized with port(s): 8080 (http)
2019-01-24 16:05:07 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-24 16:05:07 -Starting service [Tomcat]
2019-01-24 16:05:07 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-24 16:05:07 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-24 16:05:07 -Initializing Spring embedded WebApplicationContext
2019-01-24 16:05:07 -Root WebApplicationContext: initialization completed in 5688 ms
2019-01-24 16:05:07 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-24 16:05:07 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-24 16:05:07 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-24 16:05:07 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-24 16:05:07 -Filter xssFilter was not registered (disabled)
2019-01-24 16:05:07 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-24 16:05:07 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-24 16:05:07 -Servlet statViewServlet mapped to [/druid/*]
2019-01-24 16:05:07 -Servlet dispatcherServlet mapped to [/]
2019-01-24 16:05:08 -{dataSource-1} inited
2019-01-24 16:05:09 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41dd05a: startup date [Thu Jan 24 16:05:01 CST 2019]; root of context hierarchy
2019-01-24 16:05:09 -Using default implementation for ThreadExecutor
2019-01-24 16:05:09 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-24 16:05:09 -Quartz Scheduler v.2.2.1 created.
2019-01-24 16:05:09 -RAMJobStore initialized.
2019-01-24 16:05:09 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-24 16:05:09 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-24 16:05:09 -Quartz scheduler version: 2.2.1
2019-01-24 16:05:09 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3de88f64
2019-01-24 16:05:09 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-24 16:05:09 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-24 16:05:11 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-24 16:05:11 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-24 16:05:11 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-24 16:05:11 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-24 16:05:11 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-24 16:05:11 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-24 16:05:11 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-24 16:05:11 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-24 16:05:11 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-24 16:05:11 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-24 16:05:11 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-24 16:05:11 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-24 16:05:11 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-24 16:05:11 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-24 16:05:11 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-24 16:05:11 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-24 16:05:11 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-24 16:05:11 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-24 16:05:11 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-24 16:05:11 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-24 16:05:11 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-24 16:05:11 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-24 16:05:11 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-24 16:05:11 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-24 16:05:11 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-24 16:05:11 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-24 16:05:11 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-24 16:05:11 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-24 16:05:11 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-24 16:05:11 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-24 16:05:11 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-24 16:05:11 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-24 16:05:11 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-24 16:05:11 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-24 16:05:11 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-24 16:05:11 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-24 16:05:11 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-24 16:05:11 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-24 16:05:11 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-24 16:05:11 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-24 16:05:11 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-24 16:05:11 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-24 16:05:11 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-24 16:05:11 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-24 16:05:11 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-24 16:05:11 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-24 16:05:11 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-24 16:05:11 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-24 16:05:11 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-24 16:05:11 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-24 16:05:11 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-24 16:05:11 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-24 16:05:11 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-24 16:05:11 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-24 16:05:11 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-24 16:05:11 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-24 16:05:11 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-24 16:05:11 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-24 16:05:11 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long)
2019-01-24 16:05:11 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long[])
2019-01-24 16:05:11 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-24 16:05:11 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-24 16:05:11 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-24 16:05:11 -Mapped "{[/system/staff/edit/{staffId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-24 16:05:11 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-24 16:05:11 -Mapped "{[/system/staff/selectView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.selectView()
2019-01-24 16:05:11 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-24 16:05:11 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-24 16:05:11 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-24 16:05:11 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-24 16:05:11 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-24 16:05:11 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-24 16:05:11 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-24 16:05:11 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-24 16:05:11 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-24 16:05:11 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-24 16:05:11 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-24 16:05:11 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-24 16:05:11 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-24 16:05:11 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-24 16:05:11 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-24 16:05:11 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-24 16:05:11 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-24 16:05:11 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-24 16:05:11 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-24 16:05:11 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-24 16:05:11 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-24 16:05:11 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-24 16:05:12 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-24 16:05:12 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@41dd05a: startup date [Thu Jan 24 16:05:01 CST 2019]; root of context hierarchy
2019-01-24 16:05:12 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-24 16:05:12 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-24 16:05:12 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-24 16:05:12 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-24 16:05:12 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-24 16:05:13 -Registering beans for JMX exposure on startup
2019-01-24 16:05:13 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-24 16:05:13 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-24 16:05:13 -Starting beans in phase 2147483647
2019-01-24 16:05:13 -Context refreshed
2019-01-24 16:05:13 -Found 1 custom documentation plugin(s)
2019-01-24 16:05:13 -Scanning for api listing references
2019-01-24 16:05:13 -Generating unique operation named: removeUsingPOST_1
2019-01-24 16:05:13 -Generating unique operation named: editUsingGET_1
2019-01-24 16:05:13 -Generating unique operation named: listUsingGET_1
2019-01-24 16:05:13 -Generating unique operation named: updateUsingPOST_1
2019-01-24 16:05:13 -Generating unique operation named: addUsingGET_1
2019-01-24 16:05:13 -Generating unique operation named: editUsingGET_2
2019-01-24 16:05:13 -Generating unique operation named: listUsingGET_2
2019-01-24 16:05:13 -Generating unique operation named: removeUsingPOST_2
2019-01-24 16:05:13 -Generating unique operation named: removeUsingPOST_3
2019-01-24 16:05:13 -Generating unique operation named: saveUsingPOST_1
2019-01-24 16:05:13 -Generating unique operation named: updateUsingPOST_2
2019-01-24 16:05:13 -Generating unique operation named: listUsingGET_3
2019-01-24 16:05:13 -Generating unique operation named: removeUsingPOST_4
2019-01-24 16:05:13 -Generating unique operation named: welcomeUsingGET_1
2019-01-24 16:05:13 -Generating unique operation named: addUsingGET_2
2019-01-24 16:05:13 -Generating unique operation named: editUsingGET_3
2019-01-24 16:05:13 -Generating unique operation named: listUsingGET_4
2019-01-24 16:05:13 -Generating unique operation named: removeUsingPOST_5
2019-01-24 16:05:13 -Generating unique operation named: saveUsingPOST_2
2019-01-24 16:05:13 -Generating unique operation named: treeUsingGET_1
2019-01-24 16:05:13 -Generating unique operation named: updateUsingPOST_3
2019-01-24 16:05:13 -Generating unique operation named: addUsingGET_3
2019-01-24 16:05:13 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-24 16:05:13 -Generating unique operation named: editUsingGET_4
2019-01-24 16:05:13 -Generating unique operation named: listUsingGET_5
2019-01-24 16:05:13 -Generating unique operation named: saveUsingPOST_3
2019-01-24 16:05:14 -Generating unique operation named: saveUsingPOST_4
2019-01-24 16:05:14 -Generating unique operation named: updateUsingPOST_4
2019-01-24 16:05:14 -Generating unique operation named: listUsingGET_6
2019-01-24 16:05:14 -Generating unique operation named: listUsingHEAD_1
2019-01-24 16:05:14 -Generating unique operation named: listUsingPOST_1
2019-01-24 16:05:14 -Generating unique operation named: listUsingPUT_1
2019-01-24 16:05:14 -Generating unique operation named: listUsingPATCH_1
2019-01-24 16:05:14 -Generating unique operation named: listUsingDELETE_1
2019-01-24 16:05:14 -Generating unique operation named: listUsingOPTIONS_1
2019-01-24 16:05:14 -Generating unique operation named: listUsingTRACE_1
2019-01-24 16:05:14 -Generating unique operation named: addUsingGET_4
2019-01-24 16:05:14 -Generating unique operation named: editUsingGET_5
2019-01-24 16:05:14 -Generating unique operation named: listUsingGET_7
2019-01-24 16:05:14 -Generating unique operation named: removeUsingPOST_6
2019-01-24 16:05:14 -Generating unique operation named: removeUsingPOST_7
2019-01-24 16:05:14 -Generating unique operation named: saveUsingPOST_5
2019-01-24 16:05:14 -Generating unique operation named: updateUsingGET_1
2019-01-24 16:05:14 -Generating unique operation named: updateUsingHEAD_1
2019-01-24 16:05:14 -Generating unique operation named: updateUsingPOST_5
2019-01-24 16:05:14 -Generating unique operation named: updateUsingPUT_1
2019-01-24 16:05:14 -Generating unique operation named: updateUsingPATCH_1
2019-01-24 16:05:14 -Generating unique operation named: updateUsingDELETE_1
2019-01-24 16:05:14 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-24 16:05:14 -Generating unique operation named: updateUsingTRACE_1
2019-01-24 16:05:14 -Generating unique operation named: addUsingGET_5
2019-01-24 16:05:14 -Generating unique operation named: editUsingGET_6
2019-01-24 16:05:14 -Generating unique operation named: listUsingGET_8
2019-01-24 16:05:14 -Generating unique operation named: removeUsingPOST_8
2019-01-24 16:05:14 -Generating unique operation named: removeUsingPOST_9
2019-01-24 16:05:14 -Generating unique operation named: saveUsingPOST_6
2019-01-24 16:05:14 -Generating unique operation named: updateUsingGET_2
2019-01-24 16:05:14 -Generating unique operation named: updateUsingHEAD_2
2019-01-24 16:05:14 -Generating unique operation named: updateUsingPOST_6
2019-01-24 16:05:14 -Generating unique operation named: updateUsingPUT_2
2019-01-24 16:05:14 -Generating unique operation named: updateUsingPATCH_2
2019-01-24 16:05:14 -Generating unique operation named: updateUsingDELETE_2
2019-01-24 16:05:14 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-24 16:05:14 -Generating unique operation named: updateUsingTRACE_2
2019-01-24 16:05:14 -Generating unique operation named: addUsingGET_6
2019-01-24 16:05:14 -Generating unique operation named: editUsingGET_7
2019-01-24 16:05:14 -Generating unique operation named: listUsingGET_9
2019-01-24 16:05:14 -Generating unique operation named: roleUsingGET_1
2019-01-24 16:05:14 -Generating unique operation named: saveUsingPOST_7
2019-01-24 16:05:14 -Starting Quartz Scheduler now
2019-01-24 16:05:14 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-24 16:05:14 -Starting...
2019-01-24 16:05:14 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-24 16:05:14 -Started.
2019-01-24 16:05:14 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-24 16:05:14 -Using a shared selector for servlet write/read
2019-01-24 16:05:14 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-24 16:05:14 -Started BootdoApplication in 13.656 seconds (JVM running for 15.236)
2019-01-24 16:05:14 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-24 16:05:14 -==> Parameters: 
2019-01-24 16:05:14 -<==      Total: 1
2019-01-24 16:05:27 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-24 16:05:27 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-24 16:05:27 -FrameworkServlet 'dispatcherServlet': initialization completed in 42 ms
2019-01-24 16:05:27 -Enabling session validation scheduler...
2019-01-24 16:05:27 -请求地址 : http://localhost:8080/login;JSESSIONID=c7b0c8e3-2051-4118-b33f-8af6e46cc34e
2019-01-24 16:05:27 -HTTP METHOD : GET
2019-01-24 16:05:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 16:05:27 -参数 : []
2019-01-24 16:05:27 -耗时 : 2
2019-01-24 16:05:27 -返回值 : login
2019-01-24 16:05:32 -请求地址 : http://localhost:8080/login
2019-01-24 16:05:32 -HTTP METHOD : POST
2019-01-24 16:05:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-24 16:05:32 -参数 : [admin, 123456]
2019-01-24 16:05:32 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-24 16:05:32 -==> Parameters: admin(String)
2019-01-24 16:05:32 -<==      Total: 1
2019-01-24 16:05:32 -耗时 : 52
2019-01-24 16:05:32 -返回值 : {msg=操作成功, code=0}
2019-01-24 16:05:32 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-24 16:05:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:05:32 -==> Parameters: 123(String), admin(String), 登录(String), 53(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-24 16:05:32.856(Timestamp)
2019-01-24 16:05:32 -<==    Updates: 1
2019-01-24 16:05:32 -请求地址 : http://localhost:8080/index
2019-01-24 16:05:32 -HTTP METHOD : GET
2019-01-24 16:05:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:05:32 -参数 : [{}]
2019-01-24 16:05:32 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:05:33 -==> Parameters: 123(String)
2019-01-24 16:05:33 -<==      Total: 2
2019-01-24 16:05:33 -耗时 : 113
2019-01-24 16:05:33 -返回值 : index_v1
2019-01-24 16:05:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:05:33 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 113(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:05:33.106(Timestamp)
2019-01-24 16:05:33 -<==    Updates: 1
2019-01-24 16:06:11 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-24 16:07:04 -请求地址 : http://localhost:8080/index
2019-01-24 16:07:04 -HTTP METHOD : GET
2019-01-24 16:07:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:07:04 -参数 : [{}]
2019-01-24 16:07:04 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:07:04 -==> Parameters: 123(String)
2019-01-24 16:07:04 -<==      Total: 2
2019-01-24 16:07:04 -耗时 : 28
2019-01-24 16:07:04 -返回值 : index_v1
2019-01-24 16:07:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:07:04 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:07:04.516(Timestamp)
2019-01-24 16:07:04 -请求地址 : http://localhost:8080/main
2019-01-24 16:07:04 -HTTP METHOD : GET
2019-01-24 16:07:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 16:07:04 -参数 : []
2019-01-24 16:07:04 -耗时 : 0
2019-01-24 16:07:04 -返回值 : main
2019-01-24 16:07:04 -<==    Updates: 1
2019-01-24 16:07:04 -请求地址 : http://localhost:8080/main
2019-01-24 16:07:04 -HTTP METHOD : GET
2019-01-24 16:07:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.main
2019-01-24 16:07:04 -参数 : []
2019-01-24 16:07:04 -耗时 : 0
2019-01-24 16:07:04 -返回值 : main
2019-01-24 16:07:07 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 16:07:07 -==> Parameters: 123(String)
2019-01-24 16:07:07 -<==      Total: 7
2019-01-24 16:07:07 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 16:07:07 -HTTP METHOD : GET
2019-01-24 16:07:07 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 16:07:07 -参数 : []
2019-01-24 16:07:07 -耗时 : 0
2019-01-24 16:07:07 -返回值 : system/user/user
2019-01-24 16:07:08 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 16:07:08 -HTTP METHOD : GET
2019-01-24 16:07:08 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 16:07:08 -参数 : [{page=1, limit=15}]
2019-01-24 16:07:08 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 16:07:08 -==> Parameters: 
2019-01-24 16:07:08 -<==      Total: 2
2019-01-24 16:07:08 -==>  Preparing: select count(*) from sys_user 
2019-01-24 16:07:08 -==> Parameters: 
2019-01-24 16:07:08 -<==      Total: 1
2019-01-24 16:07:08 -耗时 : 67
2019-01-24 16:07:08 -返回值 : com.bootdo.common.utils.PageUtils@30359093
2019-01-24 16:08:20 -请求地址 : http://localhost:8080/index
2019-01-24 16:08:20 -HTTP METHOD : GET
2019-01-24 16:08:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:08:20 -参数 : [{}]
2019-01-24 16:08:20 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:08:20 -==> Parameters: 123(String)
2019-01-24 16:08:20 -<==      Total: 2
2019-01-24 16:08:20 -耗时 : 34
2019-01-24 16:08:20 -返回值 : index_v1
2019-01-24 16:08:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:08:20 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:08:20.036(Timestamp)
2019-01-24 16:08:20 -<==    Updates: 1
2019-01-24 16:08:24 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 16:08:24 -HTTP METHOD : GET
2019-01-24 16:08:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 16:08:24 -参数 : []
2019-01-24 16:08:24 -耗时 : 1
2019-01-24 16:08:24 -返回值 : system/user/user
2019-01-24 16:08:24 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 16:08:24 -HTTP METHOD : GET
2019-01-24 16:08:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 16:08:24 -参数 : [{page=1, limit=15}]
2019-01-24 16:08:24 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 16:08:24 -==> Parameters: 
2019-01-24 16:08:24 -<==      Total: 2
2019-01-24 16:08:24 -==>  Preparing: select count(*) from sys_user 
2019-01-24 16:08:24 -==> Parameters: 
2019-01-24 16:08:24 -<==      Total: 1
2019-01-24 16:08:24 -耗时 : 14
2019-01-24 16:08:24 -返回值 : com.bootdo.common.utils.PageUtils@2148c74
2019-01-24 16:10:17 -请求地址 : http://localhost:8080/index
2019-01-24 16:10:17 -HTTP METHOD : GET
2019-01-24 16:10:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:10:17 -参数 : [{}]
2019-01-24 16:10:17 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:10:17 -==> Parameters: 123(String)
2019-01-24 16:10:17 -<==      Total: 3
2019-01-24 16:10:17 -耗时 : 29
2019-01-24 16:10:17 -返回值 : index_v1
2019-01-24 16:10:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:10:17 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:10:17.369(Timestamp)
2019-01-24 16:10:17 -<==    Updates: 1
2019-01-24 16:10:22 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 16:10:22 -==> Parameters: 123(String)
2019-01-24 16:10:22 -<==      Total: 7
2019-01-24 16:10:22 -Subject does not have permission [sys:role:role]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [sys:role:role]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.RoleController$$EnhancerBySpringCGLIB$$87378b19.role(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.system.controller.RoleController.role()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-01-24 16:10:24 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 16:10:24 -HTTP METHOD : GET
2019-01-24 16:10:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 16:10:24 -参数 : []
2019-01-24 16:10:24 -耗时 : 0
2019-01-24 16:10:24 -返回值 : system/user/user
2019-01-24 16:10:24 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 16:10:24 -HTTP METHOD : GET
2019-01-24 16:10:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 16:10:24 -参数 : [{page=1, limit=15}]
2019-01-24 16:10:24 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 16:10:24 -==> Parameters: 
2019-01-24 16:10:24 -<==      Total: 2
2019-01-24 16:10:24 -==>  Preparing: select count(*) from sys_user 
2019-01-24 16:10:24 -==> Parameters: 
2019-01-24 16:10:24 -<==      Total: 1
2019-01-24 16:10:24 -耗时 : 18
2019-01-24 16:10:24 -返回值 : com.bootdo.common.utils.PageUtils@826ecd0
2019-01-24 16:11:25 -请求地址 : http://localhost:8080/index
2019-01-24 16:11:25 -HTTP METHOD : GET
2019-01-24 16:11:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:11:25 -参数 : [{}]
2019-01-24 16:11:25 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:11:25 -==> Parameters: 123(String)
2019-01-24 16:11:25 -<==      Total: 3
2019-01-24 16:11:25 -耗时 : 24
2019-01-24 16:11:25 -返回值 : index_v1
2019-01-24 16:11:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:11:25 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:11:25.741(Timestamp)
2019-01-24 16:11:25 -<==    Updates: 1
2019-01-24 16:11:35 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 16:11:35 -HTTP METHOD : GET
2019-01-24 16:11:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 16:11:35 -参数 : []
2019-01-24 16:11:35 -耗时 : 1
2019-01-24 16:11:35 -返回值 : system/user/user
2019-01-24 16:13:04 -请求地址 : http://localhost:8080/index
2019-01-24 16:13:04 -HTTP METHOD : GET
2019-01-24 16:13:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:13:04 -参数 : [{}]
2019-01-24 16:13:04 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:13:04 -==> Parameters: 123(String)
2019-01-24 16:13:04 -<==      Total: 3
2019-01-24 16:13:04 -耗时 : 23
2019-01-24 16:13:04 -返回值 : index_v1
2019-01-24 16:13:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:13:04 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:13:04.983(Timestamp)
2019-01-24 16:13:05 -<==    Updates: 1
2019-01-24 16:13:08 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 16:13:08 -==> Parameters: 123(String)
2019-01-24 16:13:08 -<==      Total: 7
2019-01-24 16:13:08 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 16:13:08 -HTTP METHOD : GET
2019-01-24 16:13:08 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 16:13:08 -参数 : []
2019-01-24 16:13:08 -耗时 : 0
2019-01-24 16:13:08 -返回值 : system/user/user
2019-01-24 16:13:08 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 16:13:08 -HTTP METHOD : GET
2019-01-24 16:13:08 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 16:13:08 -参数 : [{page=1, limit=15}]
2019-01-24 16:13:08 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 16:13:08 -==> Parameters: 
2019-01-24 16:13:08 -<==      Total: 2
2019-01-24 16:13:08 -==>  Preparing: select count(*) from sys_user 
2019-01-24 16:13:08 -==> Parameters: 
2019-01-24 16:13:08 -<==      Total: 1
2019-01-24 16:13:08 -耗时 : 19
2019-01-24 16:13:08 -返回值 : com.bootdo.common.utils.PageUtils@42712680
2019-01-24 16:20:50 -请求地址 : http://localhost:8080/index
2019-01-24 16:20:50 -HTTP METHOD : GET
2019-01-24 16:20:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:20:50 -参数 : [{}]
2019-01-24 16:20:50 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:20:50 -==> Parameters: 123(String)
2019-01-24 16:20:50 -<==      Total: 3
2019-01-24 16:20:50 -耗时 : 29
2019-01-24 16:20:50 -返回值 : index_v1
2019-01-24 16:20:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:20:50 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:20:50.424(Timestamp)
2019-01-24 16:20:50 -<==    Updates: 1
2019-01-24 16:20:54 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 16:20:54 -==> Parameters: 123(String)
2019-01-24 16:20:54 -<==      Total: 7
2019-01-24 16:20:54 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 16:20:54 -HTTP METHOD : GET
2019-01-24 16:20:54 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 16:20:54 -参数 : []
2019-01-24 16:20:54 -耗时 : 1
2019-01-24 16:20:54 -返回值 : system/user/user
2019-01-24 16:21:20 -请求地址 : http://localhost:8080/index
2019-01-24 16:21:20 -HTTP METHOD : GET
2019-01-24 16:21:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:21:20 -参数 : [{}]
2019-01-24 16:21:20 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:21:20 -==> Parameters: 123(String)
2019-01-24 16:21:20 -<==      Total: 3
2019-01-24 16:21:20 -耗时 : 17
2019-01-24 16:21:20 -返回值 : index_v1
2019-01-24 16:21:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:21:20 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:21:20.604(Timestamp)
2019-01-24 16:21:20 -<==    Updates: 1
2019-01-24 16:21:23 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 16:21:23 -HTTP METHOD : GET
2019-01-24 16:21:23 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 16:21:23 -参数 : []
2019-01-24 16:21:23 -耗时 : 0
2019-01-24 16:21:23 -返回值 : system/user/user
2019-01-24 16:21:23 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 16:21:23 -HTTP METHOD : GET
2019-01-24 16:21:23 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 16:21:23 -参数 : [{page=1, limit=15}]
2019-01-24 16:21:23 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 16:21:23 -==> Parameters: 
2019-01-24 16:21:23 -<==      Total: 2
2019-01-24 16:21:23 -==>  Preparing: select count(*) from sys_user 
2019-01-24 16:21:23 -==> Parameters: 
2019-01-24 16:21:23 -<==      Total: 1
2019-01-24 16:21:23 -耗时 : 50
2019-01-24 16:21:23 -返回值 : com.bootdo.common.utils.PageUtils@76fdfd16
2019-01-24 16:22:03 -请求地址 : http://localhost:8080/index
2019-01-24 16:22:03 -HTTP METHOD : GET
2019-01-24 16:22:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:22:03 -参数 : [{}]
2019-01-24 16:22:03 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:22:03 -==> Parameters: 123(String)
2019-01-24 16:22:03 -<==      Total: 3
2019-01-24 16:22:03 -耗时 : 17
2019-01-24 16:22:03 -返回值 : index_v1
2019-01-24 16:22:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:22:03 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:22:03.722(Timestamp)
2019-01-24 16:22:03 -<==    Updates: 1
2019-01-24 16:22:13 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 16:22:13 -HTTP METHOD : GET
2019-01-24 16:22:13 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 16:22:13 -参数 : []
2019-01-24 16:22:13 -耗时 : 0
2019-01-24 16:22:13 -返回值 : system/user/user
2019-01-24 16:22:13 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 16:22:13 -HTTP METHOD : GET
2019-01-24 16:22:13 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 16:22:13 -参数 : [{page=1, limit=15}]
2019-01-24 16:22:13 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 16:22:13 -==> Parameters: 
2019-01-24 16:22:13 -<==      Total: 2
2019-01-24 16:22:13 -==>  Preparing: select count(*) from sys_user 
2019-01-24 16:22:13 -==> Parameters: 
2019-01-24 16:22:13 -<==      Total: 1
2019-01-24 16:22:13 -耗时 : 15
2019-01-24 16:22:13 -返回值 : com.bootdo.common.utils.PageUtils@7597a89d
2019-01-24 16:28:00 -请求地址 : http://localhost:8080/index
2019-01-24 16:28:00 -HTTP METHOD : GET
2019-01-24 16:28:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:28:00 -参数 : [{}]
2019-01-24 16:28:00 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:28:00 -==> Parameters: 123(String)
2019-01-24 16:28:00 -<==      Total: 3
2019-01-24 16:28:00 -耗时 : 19
2019-01-24 16:28:00 -返回值 : index_v1
2019-01-24 16:28:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:28:00 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:28:00.389(Timestamp)
2019-01-24 16:28:00 -<==    Updates: 1
2019-01-24 16:28:02 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 16:28:02 -==> Parameters: 123(String)
2019-01-24 16:28:02 -<==      Total: 7
2019-01-24 16:28:02 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 16:28:02 -HTTP METHOD : GET
2019-01-24 16:28:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 16:28:02 -参数 : []
2019-01-24 16:28:02 -耗时 : 0
2019-01-24 16:28:02 -返回值 : system/user/user
2019-01-24 16:28:35 -请求地址 : http://localhost:8080/index
2019-01-24 16:28:35 -HTTP METHOD : GET
2019-01-24 16:28:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:28:35 -参数 : [{}]
2019-01-24 16:28:35 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:28:35 -==> Parameters: 123(String)
2019-01-24 16:28:35 -<==      Total: 3
2019-01-24 16:28:35 -耗时 : 18
2019-01-24 16:28:35 -返回值 : index_v1
2019-01-24 16:28:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:28:35 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:28:35.492(Timestamp)
2019-01-24 16:28:35 -<==    Updates: 1
2019-01-24 16:28:38 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 16:28:38 -HTTP METHOD : GET
2019-01-24 16:28:38 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 16:28:38 -参数 : []
2019-01-24 16:28:38 -耗时 : 1
2019-01-24 16:28:38 -返回值 : system/user/user
2019-01-24 16:30:55 -请求地址 : http://localhost:8080/index
2019-01-24 16:30:55 -HTTP METHOD : GET
2019-01-24 16:30:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:30:55 -参数 : [{}]
2019-01-24 16:30:55 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:30:55 -==> Parameters: 123(String)
2019-01-24 16:30:55 -<==      Total: 3
2019-01-24 16:30:55 -耗时 : 33
2019-01-24 16:30:55 -返回值 : index_v1
2019-01-24 16:30:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:30:55 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:30:55.157(Timestamp)
2019-01-24 16:30:55 -<==    Updates: 1
2019-01-24 16:30:58 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 16:30:58 -==> Parameters: 123(String)
2019-01-24 16:30:58 -<==      Total: 7
2019-01-24 16:30:58 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 16:30:58 -HTTP METHOD : GET
2019-01-24 16:30:58 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 16:30:58 -参数 : []
2019-01-24 16:30:58 -耗时 : 0
2019-01-24 16:30:58 -返回值 : system/user/user
2019-01-24 16:30:58 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 16:30:58 -HTTP METHOD : GET
2019-01-24 16:30:58 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 16:30:58 -参数 : [{page=1, limit=15}]
2019-01-24 16:30:58 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 16:30:58 -==> Parameters: 
2019-01-24 16:30:58 -<==      Total: 2
2019-01-24 16:30:58 -==>  Preparing: select count(*) from sys_user 
2019-01-24 16:30:58 -==> Parameters: 
2019-01-24 16:30:58 -<==      Total: 1
2019-01-24 16:30:58 -耗时 : 15
2019-01-24 16:30:58 -返回值 : com.bootdo.common.utils.PageUtils@2020e4a5
2019-01-24 16:31:24 -请求地址 : http://localhost:8080/login;JSESSIONID=0912967e-c6c8-4de3-bd24-1bdfbc4f5053
2019-01-24 16:31:24 -HTTP METHOD : GET
2019-01-24 16:31:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 16:31:24 -参数 : []
2019-01-24 16:31:24 -耗时 : 1
2019-01-24 16:31:24 -返回值 : login
2019-01-24 16:31:24 -请求地址 : http://localhost:8080/login
2019-01-24 16:31:24 -HTTP METHOD : GET
2019-01-24 16:31:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 16:31:24 -参数 : []
2019-01-24 16:31:24 -耗时 : 0
2019-01-24 16:31:24 -返回值 : login
2019-01-24 16:31:27 -请求地址 : http://localhost:8080/login
2019-01-24 16:31:27 -HTTP METHOD : POST
2019-01-24 16:31:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-24 16:31:27 -参数 : [admin, 123456]
2019-01-24 16:31:27 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-24 16:31:27 -==> Parameters: admin(String)
2019-01-24 16:31:27 -<==      Total: 1
2019-01-24 16:31:27 -耗时 : 7
2019-01-24 16:31:27 -返回值 : {msg=操作成功, code=0}
2019-01-24 16:31:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:31:27 -==> Parameters: 123(String), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-24 16:31:27.776(Timestamp)
2019-01-24 16:31:27 -请求地址 : http://localhost:8080/index
2019-01-24 16:31:27 -HTTP METHOD : GET
2019-01-24 16:31:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:31:27 -参数 : [{}]
2019-01-24 16:31:27 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:31:27 -==> Parameters: 123(String)
2019-01-24 16:31:27 -<==      Total: 3
2019-01-24 16:31:27 -耗时 : 31
2019-01-24 16:31:27 -返回值 : index_v1
2019-01-24 16:31:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:31:27 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:31:27.827(Timestamp)
2019-01-24 16:31:27 -<==    Updates: 1
2019-01-24 16:31:27 -<==    Updates: 1
2019-01-24 16:31:31 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 16:31:31 -==> Parameters: 123(String)
2019-01-24 16:31:31 -<==      Total: 7
2019-01-24 16:31:31 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 16:31:31 -HTTP METHOD : GET
2019-01-24 16:31:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 16:31:31 -参数 : []
2019-01-24 16:31:31 -耗时 : 0
2019-01-24 16:31:31 -返回值 : system/user/user
2019-01-24 16:31:31 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 16:31:31 -HTTP METHOD : GET
2019-01-24 16:31:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 16:31:31 -参数 : [{page=1, limit=15}]
2019-01-24 16:31:31 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 16:31:31 -==> Parameters: 
2019-01-24 16:31:31 -<==      Total: 2
2019-01-24 16:31:31 -==>  Preparing: select count(*) from sys_user 
2019-01-24 16:31:31 -==> Parameters: 
2019-01-24 16:31:31 -<==      Total: 1
2019-01-24 16:31:31 -耗时 : 12
2019-01-24 16:31:31 -返回值 : com.bootdo.common.utils.PageUtils@1dc93454
2019-01-24 16:36:11 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-01-24 16:44:31 -请求地址 : http://localhost:8080/index
2019-01-24 16:44:31 -HTTP METHOD : GET
2019-01-24 16:44:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:44:31 -参数 : [{}]
2019-01-24 16:44:31 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:44:31 -==> Parameters: 123(String)
2019-01-24 16:44:31 -<==      Total: 3
2019-01-24 16:44:31 -耗时 : 12
2019-01-24 16:44:31 -返回值 : index_v1
2019-01-24 16:44:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:44:31 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:44:31.969(Timestamp)
2019-01-24 16:44:32 -<==    Updates: 1
2019-01-24 16:44:36 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 16:44:36 -==> Parameters: 123(String)
2019-01-24 16:44:36 -<==      Total: 7
2019-01-24 16:44:36 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 16:44:36 -HTTP METHOD : GET
2019-01-24 16:44:36 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 16:44:36 -参数 : []
2019-01-24 16:44:36 -耗时 : 0
2019-01-24 16:44:36 -返回值 : system/user/user
2019-01-24 16:44:36 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 16:44:36 -HTTP METHOD : GET
2019-01-24 16:44:36 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 16:44:36 -参数 : [{page=1, limit=15}]
2019-01-24 16:44:36 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 16:44:36 -==> Parameters: 
2019-01-24 16:44:36 -<==      Total: 2
2019-01-24 16:44:36 -==>  Preparing: select count(*) from sys_user 
2019-01-24 16:44:36 -==> Parameters: 
2019-01-24 16:44:36 -<==      Total: 1
2019-01-24 16:44:36 -耗时 : 12
2019-01-24 16:44:36 -返回值 : com.bootdo.common.utils.PageUtils@4bc75c40
2019-01-24 16:44:46 -请求地址 : http://localhost:8080/index
2019-01-24 16:44:46 -HTTP METHOD : GET
2019-01-24 16:44:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:44:46 -参数 : [{}]
2019-01-24 16:44:46 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:44:46 -==> Parameters: 123(String)
2019-01-24 16:44:46 -<==      Total: 3
2019-01-24 16:44:46 -耗时 : 25
2019-01-24 16:44:46 -返回值 : index_v1
2019-01-24 16:44:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:44:46 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:44:46.218(Timestamp)
2019-01-24 16:44:46 -<==    Updates: 1
2019-01-24 16:45:15 -请求地址 : http://localhost:8080/index
2019-01-24 16:45:15 -HTTP METHOD : GET
2019-01-24 16:45:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:45:15 -参数 : [{}]
2019-01-24 16:45:15 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:45:15 -==> Parameters: 123(String)
2019-01-24 16:45:15 -<==      Total: 3
2019-01-24 16:45:15 -耗时 : 13
2019-01-24 16:45:15 -返回值 : index_v1
2019-01-24 16:45:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:45:15 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:45:15.201(Timestamp)
2019-01-24 16:45:15 -<==    Updates: 1
2019-01-24 16:45:19 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 16:45:19 -HTTP METHOD : GET
2019-01-24 16:45:19 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 16:45:19 -参数 : []
2019-01-24 16:45:19 -耗时 : 0
2019-01-24 16:45:19 -返回值 : system/user/user
2019-01-24 16:45:20 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 16:45:20 -HTTP METHOD : GET
2019-01-24 16:45:20 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 16:45:20 -参数 : [{page=1, limit=15}]
2019-01-24 16:45:20 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 16:45:20 -==> Parameters: 
2019-01-24 16:45:20 -<==      Total: 2
2019-01-24 16:45:20 -==>  Preparing: select count(*) from sys_user 
2019-01-24 16:45:20 -==> Parameters: 
2019-01-24 16:45:20 -<==      Total: 1
2019-01-24 16:45:20 -耗时 : 13
2019-01-24 16:45:20 -返回值 : com.bootdo.common.utils.PageUtils@558c820d
2019-01-24 16:45:21 -请求地址 : http://localhost:8080/index
2019-01-24 16:45:21 -HTTP METHOD : GET
2019-01-24 16:45:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:45:21 -参数 : [{}]
2019-01-24 16:45:21 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:45:21 -==> Parameters: 123(String)
2019-01-24 16:45:21 -<==      Total: 3
2019-01-24 16:45:21 -耗时 : 17
2019-01-24 16:45:21 -返回值 : index_v1
2019-01-24 16:45:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:45:21 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:45:21.966(Timestamp)
2019-01-24 16:45:22 -<==    Updates: 1
2019-01-24 16:47:49 -请求地址 : http://localhost:8080/index
2019-01-24 16:47:49 -HTTP METHOD : GET
2019-01-24 16:47:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:47:49 -参数 : [{}]
2019-01-24 16:47:49 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:47:49 -==> Parameters: 123(String)
2019-01-24 16:47:49 -<==      Total: 3
2019-01-24 16:47:49 -耗时 : 17
2019-01-24 16:47:49 -返回值 : index_v1
2019-01-24 16:47:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:47:49 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:47:49.238(Timestamp)
2019-01-24 16:47:49 -<==    Updates: 1
2019-01-24 16:51:32 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 16:51:32 -==> Parameters: 123(String)
2019-01-24 16:51:32 -<==      Total: 7
2019-01-24 16:51:32 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 16:51:32 -HTTP METHOD : GET
2019-01-24 16:51:32 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 16:51:32 -参数 : []
2019-01-24 16:51:32 -耗时 : 1
2019-01-24 16:51:32 -返回值 : system/user/user
2019-01-24 16:51:32 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 16:51:32 -HTTP METHOD : GET
2019-01-24 16:51:32 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 16:51:32 -参数 : [{page=1, limit=15}]
2019-01-24 16:51:32 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 16:51:32 -==> Parameters: 
2019-01-24 16:51:32 -<==      Total: 2
2019-01-24 16:51:32 -==>  Preparing: select count(*) from sys_user 
2019-01-24 16:51:32 -==> Parameters: 
2019-01-24 16:51:32 -<==      Total: 1
2019-01-24 16:51:32 -耗时 : 15
2019-01-24 16:51:32 -返回值 : com.bootdo.common.utils.PageUtils@2314e005
2019-01-24 16:52:56 -请求地址 : http://localhost:8080/index
2019-01-24 16:52:56 -HTTP METHOD : GET
2019-01-24 16:52:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:52:56 -参数 : [{}]
2019-01-24 16:52:56 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:52:56 -==> Parameters: 123(String)
2019-01-24 16:52:56 -<==      Total: 3
2019-01-24 16:52:56 -耗时 : 18
2019-01-24 16:52:56 -返回值 : index_v1
2019-01-24 16:52:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:52:56 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:52:56.541(Timestamp)
2019-01-24 16:52:56 -<==    Updates: 1
2019-01-24 16:53:00 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 16:53:00 -HTTP METHOD : GET
2019-01-24 16:53:00 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 16:53:00 -参数 : []
2019-01-24 16:53:00 -耗时 : 0
2019-01-24 16:53:00 -返回值 : system/user/user
2019-01-24 16:53:00 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 16:53:00 -HTTP METHOD : GET
2019-01-24 16:53:00 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 16:53:00 -参数 : [{page=1, limit=15}]
2019-01-24 16:53:00 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 16:53:00 -==> Parameters: 
2019-01-24 16:53:00 -<==      Total: 2
2019-01-24 16:53:00 -==>  Preparing: select count(*) from sys_user 
2019-01-24 16:53:00 -==> Parameters: 
2019-01-24 16:53:00 -<==      Total: 1
2019-01-24 16:53:00 -耗时 : 6
2019-01-24 16:53:00 -返回值 : com.bootdo.common.utils.PageUtils@53f29512
2019-01-24 16:53:01 -Subject does not have permission [sys:role:role]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [sys:role:role]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.RoleController$$EnhancerBySpringCGLIB$$87378b19.role(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.system.controller.RoleController.role()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-01-24 16:53:11 -请求地址 : http://localhost:8080/login;JSESSIONID=155abeb6-2987-493c-b347-6e2ce1ba29ab
2019-01-24 16:53:11 -HTTP METHOD : GET
2019-01-24 16:53:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 16:53:11 -参数 : []
2019-01-24 16:53:11 -耗时 : 1
2019-01-24 16:53:11 -返回值 : login
2019-01-24 16:53:11 -请求地址 : http://localhost:8080/login
2019-01-24 16:53:11 -HTTP METHOD : GET
2019-01-24 16:53:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 16:53:11 -参数 : []
2019-01-24 16:53:11 -耗时 : 0
2019-01-24 16:53:11 -返回值 : login
2019-01-24 16:53:15 -请求地址 : http://localhost:8080/login
2019-01-24 16:53:15 -HTTP METHOD : POST
2019-01-24 16:53:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-24 16:53:15 -参数 : [admin, 123456]
2019-01-24 16:53:15 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-24 16:53:15 -==> Parameters: admin(String)
2019-01-24 16:53:15 -<==      Total: 1
2019-01-24 16:53:15 -耗时 : 6
2019-01-24 16:53:15 -返回值 : {msg=操作成功, code=0}
2019-01-24 16:53:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:53:15 -==> Parameters: 123(String), admin(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-24 16:53:15.509(Timestamp)
2019-01-24 16:53:15 -请求地址 : http://localhost:8080/index
2019-01-24 16:53:15 -HTTP METHOD : GET
2019-01-24 16:53:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:53:15 -参数 : [{}]
2019-01-24 16:53:15 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:53:15 -==> Parameters: 123(String)
2019-01-24 16:53:15 -<==      Total: 3
2019-01-24 16:53:15 -耗时 : 21
2019-01-24 16:53:15 -返回值 : index_v1
2019-01-24 16:53:15 -<==    Updates: 1
2019-01-24 16:53:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:53:15 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:53:15.555(Timestamp)
2019-01-24 16:53:15 -<==    Updates: 1
2019-01-24 16:54:09 -请求地址 : http://localhost:8080/index
2019-01-24 16:54:09 -HTTP METHOD : GET
2019-01-24 16:54:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:54:09 -参数 : [{}]
2019-01-24 16:54:09 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:54:09 -==> Parameters: 123(String)
2019-01-24 16:54:09 -<==      Total: 3
2019-01-24 16:54:09 -耗时 : 12
2019-01-24 16:54:09 -返回值 : index_v1
2019-01-24 16:54:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:54:09 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 12(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:54:09.225(Timestamp)
2019-01-24 16:54:09 -<==    Updates: 1
2019-01-24 16:54:15 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 16:54:15 -==> Parameters: 123(String)
2019-01-24 16:54:15 -<==      Total: 7
2019-01-24 16:54:15 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 16:54:15 -HTTP METHOD : GET
2019-01-24 16:54:15 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 16:54:15 -参数 : []
2019-01-24 16:54:15 -耗时 : 1
2019-01-24 16:54:15 -返回值 : system/user/user
2019-01-24 16:54:15 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 16:54:15 -HTTP METHOD : GET
2019-01-24 16:54:15 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 16:54:15 -参数 : [{page=1, limit=15}]
2019-01-24 16:54:15 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 16:54:15 -==> Parameters: 
2019-01-24 16:54:15 -<==      Total: 2
2019-01-24 16:54:15 -==>  Preparing: select count(*) from sys_user 
2019-01-24 16:54:15 -==> Parameters: 
2019-01-24 16:54:15 -<==      Total: 1
2019-01-24 16:54:15 -耗时 : 7
2019-01-24 16:54:15 -返回值 : com.bootdo.common.utils.PageUtils@37d9e60d
2019-01-24 16:54:17 -Subject does not have permission [sys:role:role]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [sys:role:role]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.RoleController$$EnhancerBySpringCGLIB$$87378b19.role(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.system.controller.RoleController.role()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-01-24 16:54:27 -请求地址 : http://localhost:8080/login;JSESSIONID=e72ff8f9-caad-45e8-9426-0a6c35bfc619
2019-01-24 16:54:27 -HTTP METHOD : GET
2019-01-24 16:54:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 16:54:27 -参数 : []
2019-01-24 16:54:27 -耗时 : 0
2019-01-24 16:54:27 -返回值 : login
2019-01-24 16:54:27 -请求地址 : http://localhost:8080/login
2019-01-24 16:54:27 -HTTP METHOD : GET
2019-01-24 16:54:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 16:54:27 -参数 : []
2019-01-24 16:54:27 -耗时 : 0
2019-01-24 16:54:27 -返回值 : login
2019-01-24 16:54:31 -请求地址 : http://localhost:8080/login
2019-01-24 16:54:31 -HTTP METHOD : POST
2019-01-24 16:54:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-24 16:54:31 -参数 : [admin, 123456]
2019-01-24 16:54:31 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-24 16:54:31 -==> Parameters: admin(String)
2019-01-24 16:54:31 -<==      Total: 1
2019-01-24 16:54:31 -耗时 : 4
2019-01-24 16:54:31 -返回值 : {msg=操作成功, code=0}
2019-01-24 16:54:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:54:31 -==> Parameters: 123(String), admin(String), 登录(String), 4(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-24 16:54:31.26(Timestamp)
2019-01-24 16:54:31 -请求地址 : http://localhost:8080/index
2019-01-24 16:54:31 -HTTP METHOD : GET
2019-01-24 16:54:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 16:54:31 -参数 : [{}]
2019-01-24 16:54:31 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 16:54:31 -==> Parameters: 123(String)
2019-01-24 16:54:31 -<==      Total: 3
2019-01-24 16:54:31 -耗时 : 21
2019-01-24 16:54:31 -返回值 : index_v1
2019-01-24 16:54:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 16:54:31 -<==    Updates: 1
2019-01-24 16:54:31 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 16:54:31.308(Timestamp)
2019-01-24 16:54:31 -<==    Updates: 1
2019-01-24 16:54:33 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 16:54:33 -==> Parameters: 123(String)
2019-01-24 16:54:33 -<==      Total: 7
2019-01-24 16:54:33 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 16:54:33 -HTTP METHOD : GET
2019-01-24 16:54:33 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 16:54:33 -参数 : []
2019-01-24 16:54:33 -耗时 : 0
2019-01-24 16:54:33 -返回值 : system/user/user
2019-01-24 16:54:33 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 16:54:33 -HTTP METHOD : GET
2019-01-24 16:54:33 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 16:54:33 -参数 : [{page=1, limit=15}]
2019-01-24 16:54:33 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 16:54:33 -==> Parameters: 
2019-01-24 16:54:33 -<==      Total: 2
2019-01-24 16:54:33 -==>  Preparing: select count(*) from sys_user 
2019-01-24 16:54:33 -==> Parameters: 
2019-01-24 16:54:33 -<==      Total: 1
2019-01-24 16:54:33 -耗时 : 22
2019-01-24 16:54:33 -返回值 : com.bootdo.common.utils.PageUtils@552a453a
2019-01-24 17:05:27 -Validating all active sessions...
2019-01-24 17:05:27 -Finished session validation.  [1] sessions were stopped.
2019-01-24 17:06:11 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2019-01-24 17:06:15 -请求地址 : http://localhost:8080/index
2019-01-24 17:06:15 -HTTP METHOD : GET
2019-01-24 17:06:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 17:06:15 -参数 : [{}]
2019-01-24 17:06:15 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 17:06:15 -==> Parameters: 123(String)
2019-01-24 17:06:15 -<==      Total: 3
2019-01-24 17:06:15 -耗时 : 28
2019-01-24 17:06:15 -返回值 : index_v1
2019-01-24 17:06:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:06:15 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 17:06:15.955(Timestamp)
2019-01-24 17:06:16 -<==    Updates: 1
2019-01-24 17:11:17 -请求地址 : http://localhost:8080/index
2019-01-24 17:11:17 -HTTP METHOD : GET
2019-01-24 17:11:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 17:11:17 -参数 : [{}]
2019-01-24 17:11:17 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 17:11:17 -==> Parameters: 123(String)
2019-01-24 17:11:17 -<==      Total: 3
2019-01-24 17:11:17 -耗时 : 18
2019-01-24 17:11:17 -返回值 : index_v1
2019-01-24 17:11:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:11:17 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 17:11:17.491(Timestamp)
2019-01-24 17:11:17 -<==    Updates: 1
2019-01-24 17:11:58 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 17:11:58 -==> Parameters: 123(String)
2019-01-24 17:11:58 -<==      Total: 7
2019-01-24 17:11:58 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 17:11:58 -HTTP METHOD : GET
2019-01-24 17:11:58 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 17:11:58 -参数 : []
2019-01-24 17:11:58 -耗时 : 0
2019-01-24 17:11:58 -返回值 : system/user/user
2019-01-24 17:11:59 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 17:11:59 -HTTP METHOD : GET
2019-01-24 17:11:59 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 17:11:59 -参数 : [{page=1, limit=15}]
2019-01-24 17:11:59 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 17:11:59 -==> Parameters: 
2019-01-24 17:11:59 -<==      Total: 2
2019-01-24 17:11:59 -==>  Preparing: select count(*) from sys_user 
2019-01-24 17:11:59 -==> Parameters: 
2019-01-24 17:11:59 -<==      Total: 1
2019-01-24 17:11:59 -耗时 : 10
2019-01-24 17:11:59 -返回值 : com.bootdo.common.utils.PageUtils@6cd1a263
2019-01-24 17:19:24 -请求地址 : http://localhost:8080/index
2019-01-24 17:19:24 -HTTP METHOD : GET
2019-01-24 17:19:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 17:19:24 -参数 : [{}]
2019-01-24 17:19:24 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 17:19:24 -==> Parameters: 123(String)
2019-01-24 17:19:24 -<==      Total: 3
2019-01-24 17:19:24 -耗时 : 22
2019-01-24 17:19:24 -返回值 : index_v1
2019-01-24 17:19:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:19:24 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 17:19:24.409(Timestamp)
2019-01-24 17:19:24 -<==    Updates: 1
2019-01-24 17:19:27 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 17:19:27 -==> Parameters: 123(String)
2019-01-24 17:19:27 -<==      Total: 7
2019-01-24 17:19:27 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 17:19:27 -HTTP METHOD : GET
2019-01-24 17:19:27 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 17:19:27 -参数 : []
2019-01-24 17:19:27 -耗时 : 0
2019-01-24 17:19:27 -返回值 : system/user/user
2019-01-24 17:19:28 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 17:19:28 -HTTP METHOD : GET
2019-01-24 17:19:28 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 17:19:28 -参数 : [{page=1, limit=15}]
2019-01-24 17:19:28 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 17:19:28 -==> Parameters: 
2019-01-24 17:19:28 -<==      Total: 2
2019-01-24 17:19:28 -==>  Preparing: select count(*) from sys_user 
2019-01-24 17:19:28 -==> Parameters: 
2019-01-24 17:19:28 -<==      Total: 1
2019-01-24 17:19:28 -耗时 : 26
2019-01-24 17:19:28 -返回值 : com.bootdo.common.utils.PageUtils@5cd3db10
2019-01-24 17:19:48 -请求地址 : http://localhost:8080/login;JSESSIONID=baf934b5-23a6-4499-99f9-e842831151ef
2019-01-24 17:19:48 -HTTP METHOD : GET
2019-01-24 17:19:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 17:19:48 -参数 : []
2019-01-24 17:19:48 -耗时 : 1
2019-01-24 17:19:48 -返回值 : login
2019-01-24 17:19:48 -请求地址 : http://localhost:8080/login
2019-01-24 17:19:48 -HTTP METHOD : GET
2019-01-24 17:19:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 17:19:48 -参数 : []
2019-01-24 17:19:48 -耗时 : 1
2019-01-24 17:19:48 -返回值 : login
2019-01-24 17:19:51 -请求地址 : http://localhost:8080/login
2019-01-24 17:19:51 -HTTP METHOD : POST
2019-01-24 17:19:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-24 17:19:51 -参数 : [admin, 123456]
2019-01-24 17:19:51 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-24 17:19:51 -==> Parameters: admin(String)
2019-01-24 17:19:51 -<==      Total: 1
2019-01-24 17:19:51 -耗时 : 4
2019-01-24 17:19:51 -返回值 : {msg=操作成功, code=0}
2019-01-24 17:19:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:19:51 -==> Parameters: 123(String), admin(String), 登录(String), 4(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-24 17:19:51.372(Timestamp)
2019-01-24 17:19:51 -请求地址 : http://localhost:8080/index
2019-01-24 17:19:51 -HTTP METHOD : GET
2019-01-24 17:19:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 17:19:51 -参数 : [{}]
2019-01-24 17:19:51 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 17:19:51 -==> Parameters: 123(String)
2019-01-24 17:19:51 -<==    Updates: 1
2019-01-24 17:19:51 -<==      Total: 3
2019-01-24 17:19:51 -耗时 : 14
2019-01-24 17:19:51 -返回值 : index_v1
2019-01-24 17:19:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:19:51 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 17:19:51.409(Timestamp)
2019-01-24 17:19:51 -<==    Updates: 1
2019-01-24 17:19:55 -请求地址 : http://localhost:8080/index
2019-01-24 17:19:55 -HTTP METHOD : GET
2019-01-24 17:19:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 17:19:55 -参数 : [{}]
2019-01-24 17:19:55 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 17:19:55 -==> Parameters: 123(String)
2019-01-24 17:19:55 -<==      Total: 3
2019-01-24 17:19:55 -耗时 : 13
2019-01-24 17:19:55 -返回值 : index_v1
2019-01-24 17:19:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:19:55 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 17:19:55.287(Timestamp)
2019-01-24 17:19:55 -<==    Updates: 1
2019-01-24 17:22:14 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 17:22:14 -==> Parameters: 123(String)
2019-01-24 17:22:14 -<==      Total: 7
2019-01-24 17:22:14 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 17:22:14 -HTTP METHOD : GET
2019-01-24 17:22:14 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 17:22:14 -参数 : []
2019-01-24 17:22:14 -耗时 : 0
2019-01-24 17:22:14 -返回值 : system/user/user
2019-01-24 17:22:14 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 17:22:14 -HTTP METHOD : GET
2019-01-24 17:22:14 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 17:22:14 -参数 : [{page=1, limit=15}]
2019-01-24 17:22:14 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 17:22:14 -==> Parameters: 
2019-01-24 17:22:14 -<==      Total: 2
2019-01-24 17:22:14 -==>  Preparing: select count(*) from sys_user 
2019-01-24 17:22:14 -==> Parameters: 
2019-01-24 17:22:14 -<==      Total: 1
2019-01-24 17:22:14 -耗时 : 11
2019-01-24 17:22:14 -返回值 : com.bootdo.common.utils.PageUtils@4bc7f1bc
2019-01-24 17:22:39 -请求地址 : http://localhost:8080/index
2019-01-24 17:22:39 -HTTP METHOD : GET
2019-01-24 17:22:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 17:22:39 -参数 : [{}]
2019-01-24 17:22:39 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 17:22:39 -==> Parameters: 123(String)
2019-01-24 17:22:39 -<==      Total: 3
2019-01-24 17:22:39 -耗时 : 19
2019-01-24 17:22:39 -返回值 : index_v1
2019-01-24 17:22:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:22:39 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 17:22:39.836(Timestamp)
2019-01-24 17:22:39 -<==    Updates: 1
2019-01-24 17:24:12 -请求地址 : http://localhost:8080/index
2019-01-24 17:24:12 -HTTP METHOD : GET
2019-01-24 17:24:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 17:24:12 -参数 : [{}]
2019-01-24 17:24:12 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 17:24:12 -==> Parameters: 123(String)
2019-01-24 17:24:12 -<==      Total: 3
2019-01-24 17:24:12 -耗时 : 23
2019-01-24 17:24:12 -返回值 : index_v1
2019-01-24 17:24:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:24:12 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 17:24:12.12(Timestamp)
2019-01-24 17:24:12 -<==    Updates: 1
2019-01-24 17:24:16 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 17:24:16 -==> Parameters: 123(String)
2019-01-24 17:24:16 -<==      Total: 7
2019-01-24 17:24:16 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 17:24:16 -HTTP METHOD : GET
2019-01-24 17:24:16 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 17:24:16 -参数 : []
2019-01-24 17:24:16 -耗时 : 0
2019-01-24 17:24:16 -返回值 : system/user/user
2019-01-24 17:24:17 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 17:24:17 -HTTP METHOD : GET
2019-01-24 17:24:17 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 17:24:17 -参数 : [{page=1, limit=15}]
2019-01-24 17:24:17 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 17:24:17 -==> Parameters: 
2019-01-24 17:24:17 -<==      Total: 2
2019-01-24 17:24:17 -==>  Preparing: select count(*) from sys_user 
2019-01-24 17:24:17 -==> Parameters: 
2019-01-24 17:24:17 -<==      Total: 1
2019-01-24 17:24:17 -耗时 : 7
2019-01-24 17:24:17 -返回值 : com.bootdo.common.utils.PageUtils@4212889d
2019-01-24 17:24:17 -Subject does not have permission [sys:role:role]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [sys:role:role]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.RoleController$$EnhancerBySpringCGLIB$$87378b19.role(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.system.controller.RoleController.role()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-01-24 17:24:30 -Subject does not have permission [sys:role:role]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [sys:role:role]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.RoleController$$EnhancerBySpringCGLIB$$87378b19.role(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.system.controller.RoleController.role()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-01-24 17:24:37 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 17:24:37 -HTTP METHOD : GET
2019-01-24 17:24:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 17:24:37 -参数 : []
2019-01-24 17:24:37 -耗时 : 1
2019-01-24 17:24:37 -返回值 : system/user/user
2019-01-24 17:24:37 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 17:24:37 -HTTP METHOD : GET
2019-01-24 17:24:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 17:24:37 -参数 : [{page=1, limit=15}]
2019-01-24 17:24:37 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 17:24:37 -==> Parameters: 
2019-01-24 17:24:37 -<==      Total: 2
2019-01-24 17:24:37 -==>  Preparing: select count(*) from sys_user 
2019-01-24 17:24:37 -==> Parameters: 
2019-01-24 17:24:37 -<==      Total: 1
2019-01-24 17:24:37 -耗时 : 7
2019-01-24 17:24:37 -返回值 : com.bootdo.common.utils.PageUtils@99db529
2019-01-24 17:24:54 -请求地址 : http://localhost:8080/index
2019-01-24 17:24:54 -HTTP METHOD : GET
2019-01-24 17:24:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 17:24:54 -参数 : [{}]
2019-01-24 17:24:54 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 17:24:54 -==> Parameters: 123(String)
2019-01-24 17:24:54 -<==      Total: 3
2019-01-24 17:24:54 -耗时 : 17
2019-01-24 17:24:54 -返回值 : index_v1
2019-01-24 17:24:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:24:54 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 17:24:54.616(Timestamp)
2019-01-24 17:24:54 -<==    Updates: 1
2019-01-24 17:24:56 -请求地址 : http://localhost:8080/index
2019-01-24 17:24:56 -HTTP METHOD : GET
2019-01-24 17:24:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 17:24:56 -参数 : [{}]
2019-01-24 17:24:56 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 17:24:56 -==> Parameters: 123(String)
2019-01-24 17:24:56 -<==      Total: 3
2019-01-24 17:24:56 -耗时 : 9
2019-01-24 17:24:56 -返回值 : index_v1
2019-01-24 17:24:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:24:56 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 9(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 17:24:56.168(Timestamp)
2019-01-24 17:24:56 -<==    Updates: 1
2019-01-24 17:24:59 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 17:24:59 -HTTP METHOD : GET
2019-01-24 17:24:59 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 17:24:59 -参数 : []
2019-01-24 17:24:59 -耗时 : 0
2019-01-24 17:24:59 -返回值 : system/user/user
2019-01-24 17:24:59 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 17:24:59 -HTTP METHOD : GET
2019-01-24 17:24:59 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 17:24:59 -参数 : [{page=1, limit=15}]
2019-01-24 17:24:59 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 17:24:59 -==> Parameters: 
2019-01-24 17:24:59 -<==      Total: 2
2019-01-24 17:24:59 -==>  Preparing: select count(*) from sys_user 
2019-01-24 17:24:59 -==> Parameters: 
2019-01-24 17:24:59 -<==      Total: 1
2019-01-24 17:24:59 -耗时 : 8
2019-01-24 17:24:59 -返回值 : com.bootdo.common.utils.PageUtils@6777e690
2019-01-24 17:25:01 -Subject does not have permission [sys:role:role]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [sys:role:role]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.RoleController$$EnhancerBySpringCGLIB$$87378b19.role(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.system.controller.RoleController.role()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-01-24 17:28:21 -请求地址 : http://localhost:8080/index
2019-01-24 17:28:21 -HTTP METHOD : GET
2019-01-24 17:28:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 17:28:21 -参数 : [{}]
2019-01-24 17:28:21 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 17:28:21 -==> Parameters: 123(String)
2019-01-24 17:28:21 -<==      Total: 3
2019-01-24 17:28:21 -耗时 : 8
2019-01-24 17:28:21 -返回值 : index_v1
2019-01-24 17:28:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:28:21 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 8(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 17:28:21.566(Timestamp)
2019-01-24 17:28:21 -<==    Updates: 1
2019-01-24 17:28:25 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 17:28:25 -==> Parameters: 123(String)
2019-01-24 17:28:25 -<==      Total: 7
2019-01-24 17:28:25 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 17:28:25 -HTTP METHOD : GET
2019-01-24 17:28:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 17:28:25 -参数 : []
2019-01-24 17:28:25 -耗时 : 0
2019-01-24 17:28:25 -返回值 : system/user/user
2019-01-24 17:28:25 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 17:28:25 -HTTP METHOD : GET
2019-01-24 17:28:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 17:28:25 -参数 : [{page=1, limit=15}]
2019-01-24 17:28:25 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 17:28:25 -==> Parameters: 
2019-01-24 17:28:25 -<==      Total: 2
2019-01-24 17:28:25 -==>  Preparing: select count(*) from sys_user 
2019-01-24 17:28:25 -==> Parameters: 
2019-01-24 17:28:25 -<==      Total: 1
2019-01-24 17:28:25 -耗时 : 10
2019-01-24 17:28:25 -返回值 : com.bootdo.common.utils.PageUtils@473ada88
2019-01-24 17:28:45 -请求地址 : http://localhost:8080/login;JSESSIONID=c1f676e4-01fa-4e5e-97fb-1fe7b895fee7
2019-01-24 17:28:45 -HTTP METHOD : GET
2019-01-24 17:28:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 17:28:45 -参数 : []
2019-01-24 17:28:45 -耗时 : 0
2019-01-24 17:28:45 -返回值 : login
2019-01-24 17:28:46 -请求地址 : http://localhost:8080/login
2019-01-24 17:28:46 -HTTP METHOD : GET
2019-01-24 17:28:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-24 17:28:46 -参数 : []
2019-01-24 17:28:46 -耗时 : 0
2019-01-24 17:28:46 -返回值 : login
2019-01-24 17:28:49 -请求地址 : http://localhost:8080/login
2019-01-24 17:28:49 -HTTP METHOD : POST
2019-01-24 17:28:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-24 17:28:49 -参数 : [admin, 123456]
2019-01-24 17:28:49 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-24 17:28:49 -==> Parameters: admin(String)
2019-01-24 17:28:49 -<==      Total: 1
2019-01-24 17:28:49 -耗时 : 3
2019-01-24 17:28:49 -返回值 : {msg=操作成功, code=0}
2019-01-24 17:28:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:28:49 -==> Parameters: 123(String), admin(String), 登录(String), 3(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-24 17:28:49.856(Timestamp)
2019-01-24 17:28:49 -请求地址 : http://localhost:8080/index
2019-01-24 17:28:49 -HTTP METHOD : GET
2019-01-24 17:28:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 17:28:49 -参数 : [{}]
2019-01-24 17:28:49 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 17:28:49 -==> Parameters: 123(String)
2019-01-24 17:28:49 -<==      Total: 3
2019-01-24 17:28:49 -<==    Updates: 1
2019-01-24 17:28:49 -耗时 : 22
2019-01-24 17:28:49 -返回值 : index_v1
2019-01-24 17:28:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:28:49 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 17:28:49.905(Timestamp)
2019-01-24 17:28:49 -<==    Updates: 1
2019-01-24 17:28:51 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 17:28:51 -==> Parameters: 123(String)
2019-01-24 17:28:51 -<==      Total: 7
2019-01-24 17:28:51 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 17:28:51 -HTTP METHOD : GET
2019-01-24 17:28:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 17:28:51 -参数 : []
2019-01-24 17:28:51 -耗时 : 0
2019-01-24 17:28:51 -返回值 : system/user/user
2019-01-24 17:28:52 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 17:28:52 -HTTP METHOD : GET
2019-01-24 17:28:52 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 17:28:52 -参数 : [{page=1, limit=15}]
2019-01-24 17:28:52 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 17:28:52 -==> Parameters: 
2019-01-24 17:28:52 -<==      Total: 2
2019-01-24 17:28:52 -==>  Preparing: select count(*) from sys_user 
2019-01-24 17:28:52 -==> Parameters: 
2019-01-24 17:28:52 -<==      Total: 1
2019-01-24 17:28:52 -耗时 : 14
2019-01-24 17:28:52 -返回值 : com.bootdo.common.utils.PageUtils@2d0e07b
2019-01-24 17:31:22 -请求地址 : http://localhost:8080/index
2019-01-24 17:31:22 -HTTP METHOD : GET
2019-01-24 17:31:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 17:31:22 -参数 : [{}]
2019-01-24 17:31:22 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 17:31:22 -==> Parameters: 123(String)
2019-01-24 17:31:22 -<==      Total: 3
2019-01-24 17:31:22 -耗时 : 20
2019-01-24 17:31:22 -返回值 : index_v1
2019-01-24 17:31:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:31:22 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 17:31:22.044(Timestamp)
2019-01-24 17:31:22 -<==    Updates: 1
2019-01-24 17:31:24 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 17:31:24 -==> Parameters: 123(String)
2019-01-24 17:31:24 -<==      Total: 7
2019-01-24 17:31:24 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 17:31:24 -HTTP METHOD : GET
2019-01-24 17:31:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 17:31:24 -参数 : []
2019-01-24 17:31:24 -耗时 : 0
2019-01-24 17:31:24 -返回值 : system/user/user
2019-01-24 17:31:24 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 17:31:24 -HTTP METHOD : GET
2019-01-24 17:31:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 17:31:24 -参数 : [{page=1, limit=15}]
2019-01-24 17:31:24 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 17:31:24 -==> Parameters: 
2019-01-24 17:31:24 -<==      Total: 2
2019-01-24 17:31:24 -==>  Preparing: select count(*) from sys_user 
2019-01-24 17:31:24 -==> Parameters: 
2019-01-24 17:31:24 -<==      Total: 1
2019-01-24 17:31:24 -耗时 : 14
2019-01-24 17:31:24 -返回值 : com.bootdo.common.utils.PageUtils@3709f423
2019-01-24 17:31:54 -请求地址 : http://localhost:8080/index
2019-01-24 17:31:54 -HTTP METHOD : GET
2019-01-24 17:31:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 17:31:54 -参数 : [{}]
2019-01-24 17:31:54 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 17:31:54 -==> Parameters: 123(String)
2019-01-24 17:31:54 -<==      Total: 3
2019-01-24 17:31:54 -耗时 : 15
2019-01-24 17:31:54 -返回值 : index_v1
2019-01-24 17:31:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:31:54 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 17:31:54.847(Timestamp)
2019-01-24 17:31:54 -<==    Updates: 1
2019-01-24 17:31:57 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 17:31:57 -HTTP METHOD : GET
2019-01-24 17:31:57 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 17:31:57 -参数 : []
2019-01-24 17:31:57 -耗时 : 0
2019-01-24 17:31:57 -返回值 : system/user/user
2019-01-24 17:31:58 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 17:31:58 -HTTP METHOD : GET
2019-01-24 17:31:58 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 17:31:58 -参数 : [{page=1, limit=15}]
2019-01-24 17:31:58 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 17:31:58 -==> Parameters: 
2019-01-24 17:31:58 -<==      Total: 2
2019-01-24 17:31:58 -==>  Preparing: select count(*) from sys_user 
2019-01-24 17:31:58 -==> Parameters: 
2019-01-24 17:31:58 -<==      Total: 1
2019-01-24 17:31:58 -耗时 : 13
2019-01-24 17:31:58 -返回值 : com.bootdo.common.utils.PageUtils@60880a6d
2019-01-24 17:32:57 -请求地址 : http://localhost:8080/index
2019-01-24 17:32:57 -HTTP METHOD : GET
2019-01-24 17:32:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 17:32:57 -参数 : [{}]
2019-01-24 17:32:57 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 17:32:57 -==> Parameters: 123(String)
2019-01-24 17:32:57 -<==      Total: 3
2019-01-24 17:32:57 -耗时 : 17
2019-01-24 17:32:57 -返回值 : index_v1
2019-01-24 17:32:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:32:57 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 17:32:57.025(Timestamp)
2019-01-24 17:32:57 -<==    Updates: 1
2019-01-24 17:33:02 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 17:33:02 -HTTP METHOD : GET
2019-01-24 17:33:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 17:33:02 -参数 : []
2019-01-24 17:33:02 -耗时 : 0
2019-01-24 17:33:02 -返回值 : system/user/user
2019-01-24 17:33:03 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 17:33:03 -HTTP METHOD : GET
2019-01-24 17:33:03 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 17:33:03 -参数 : [{page=1, limit=15}]
2019-01-24 17:33:03 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 17:33:03 -==> Parameters: 
2019-01-24 17:33:03 -<==      Total: 2
2019-01-24 17:33:03 -==>  Preparing: select count(*) from sys_user 
2019-01-24 17:33:03 -==> Parameters: 
2019-01-24 17:33:03 -<==      Total: 1
2019-01-24 17:33:03 -耗时 : 15
2019-01-24 17:33:03 -返回值 : com.bootdo.common.utils.PageUtils@668a576b
2019-01-24 17:33:30 -请求地址 : http://localhost:8080/index
2019-01-24 17:33:30 -HTTP METHOD : GET
2019-01-24 17:33:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 17:33:30 -参数 : [{}]
2019-01-24 17:33:30 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 17:33:30 -==> Parameters: 123(String)
2019-01-24 17:33:30 -<==      Total: 3
2019-01-24 17:33:30 -耗时 : 17
2019-01-24 17:33:30 -返回值 : index_v1
2019-01-24 17:33:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:33:30 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 17:33:30.258(Timestamp)
2019-01-24 17:33:30 -<==    Updates: 1
2019-01-24 17:33:35 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-24 17:33:35 -==> Parameters: 123(String)
2019-01-24 17:33:35 -<==      Total: 7
2019-01-24 17:33:35 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 17:33:35 -HTTP METHOD : GET
2019-01-24 17:33:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 17:33:35 -参数 : []
2019-01-24 17:33:35 -耗时 : 0
2019-01-24 17:33:35 -返回值 : system/user/user
2019-01-24 17:33:35 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 17:33:35 -HTTP METHOD : GET
2019-01-24 17:33:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 17:33:35 -参数 : [{page=1, limit=15}]
2019-01-24 17:33:35 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 17:33:35 -==> Parameters: 
2019-01-24 17:33:35 -<==      Total: 2
2019-01-24 17:33:35 -==>  Preparing: select count(*) from sys_user 
2019-01-24 17:33:35 -==> Parameters: 
2019-01-24 17:33:35 -<==      Total: 1
2019-01-24 17:33:35 -耗时 : 14
2019-01-24 17:33:35 -返回值 : com.bootdo.common.utils.PageUtils@48fd6f62
2019-01-24 17:33:51 -请求地址 : http://localhost:8080/index
2019-01-24 17:33:51 -HTTP METHOD : GET
2019-01-24 17:33:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 17:33:51 -参数 : [{}]
2019-01-24 17:33:51 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 17:33:51 -==> Parameters: 123(String)
2019-01-24 17:33:51 -<==      Total: 3
2019-01-24 17:33:51 -耗时 : 17
2019-01-24 17:33:51 -返回值 : index_v1
2019-01-24 17:33:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:33:51 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 17:33:51.253(Timestamp)
2019-01-24 17:33:51 -<==    Updates: 1
2019-01-24 17:33:56 -Subject does not have permission [sys:role:role]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [sys:role:role]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.RoleController$$EnhancerBySpringCGLIB$$87378b19.role(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.system.controller.RoleController.role()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-01-24 17:34:33 -请求地址 : http://localhost:8080/index
2019-01-24 17:34:33 -HTTP METHOD : GET
2019-01-24 17:34:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 17:34:33 -参数 : [{}]
2019-01-24 17:34:33 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 17:34:33 -==> Parameters: 123(String)
2019-01-24 17:34:33 -<==      Total: 3
2019-01-24 17:34:33 -耗时 : 21
2019-01-24 17:34:33 -返回值 : index_v1
2019-01-24 17:34:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:34:33 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 17:34:33.438(Timestamp)
2019-01-24 17:34:33 -<==    Updates: 1
2019-01-24 17:34:36 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 17:34:36 -HTTP METHOD : GET
2019-01-24 17:34:36 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 17:34:36 -参数 : []
2019-01-24 17:34:36 -耗时 : 0
2019-01-24 17:34:36 -返回值 : system/user/user
2019-01-24 17:34:36 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 17:34:36 -HTTP METHOD : GET
2019-01-24 17:34:36 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 17:34:36 -参数 : [{page=1, limit=15}]
2019-01-24 17:34:36 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 17:34:36 -==> Parameters: 
2019-01-24 17:34:36 -<==      Total: 2
2019-01-24 17:34:36 -==>  Preparing: select count(*) from sys_user 
2019-01-24 17:34:36 -==> Parameters: 
2019-01-24 17:34:36 -<==      Total: 1
2019-01-24 17:34:36 -耗时 : 14
2019-01-24 17:34:36 -返回值 : com.bootdo.common.utils.PageUtils@4ca4fa54
2019-01-24 17:34:40 -Subject does not have permission [sys:role:role]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [sys:role:role]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.RoleController$$EnhancerBySpringCGLIB$$87378b19.role(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.system.controller.RoleController.role()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-01-24 17:35:10 -请求地址 : http://localhost:8080/index
2019-01-24 17:35:10 -HTTP METHOD : GET
2019-01-24 17:35:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-24 17:35:10 -参数 : [{}]
2019-01-24 17:35:10 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-24 17:35:10 -==> Parameters: 123(String)
2019-01-24 17:35:10 -<==      Total: 3
2019-01-24 17:35:10 -耗时 : 15
2019-01-24 17:35:10 -返回值 : index_v1
2019-01-24 17:35:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-24 17:35:10 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-24 17:35:10.329(Timestamp)
2019-01-24 17:35:10 -<==    Updates: 1
2019-01-24 17:35:14 -请求地址 : http://localhost:8080/sys/user/
2019-01-24 17:35:14 -HTTP METHOD : GET
2019-01-24 17:35:14 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-24 17:35:14 -参数 : []
2019-01-24 17:35:14 -耗时 : 1
2019-01-24 17:35:14 -返回值 : system/user/user
2019-01-24 17:35:14 -请求地址 : http://localhost:8080/sys/user/list
2019-01-24 17:35:14 -HTTP METHOD : GET
2019-01-24 17:35:14 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-24 17:35:14 -参数 : [{page=1, limit=15}]
2019-01-24 17:35:14 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-24 17:35:14 -==> Parameters: 
2019-01-24 17:35:14 -<==      Total: 2
2019-01-24 17:35:14 -==>  Preparing: select count(*) from sys_user 
2019-01-24 17:35:14 -==> Parameters: 
2019-01-24 17:35:14 -<==      Total: 1
2019-01-24 17:35:14 -耗时 : 14
2019-01-24 17:35:14 -返回值 : com.bootdo.common.utils.PageUtils@6ff3320e
2019-01-24 17:35:15 -Subject does not have permission [sys:role:role]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [sys:role:role]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.RoleController$$EnhancerBySpringCGLIB$$87378b19.role(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: java.lang.String com.bootdo.system.controller.RoleController.role()
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
