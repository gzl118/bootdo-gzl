2019-01-29 10:05:51 -Starting BootdoApplication on YH-20180312AAAP with PID 11876 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-29 10:05:51 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-29 10:05:51 -The following profiles are active: dev
2019-01-29 10:05:52 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e7dd664: startup date [Tue Jan 29 10:05:52 CST 2019]; root of context hierarchy
2019-01-29 10:05:55 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$ec9cfd53] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 10:05:55 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$e110c1f7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 10:05:55 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 10:05:55 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 10:05:55 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 10:05:55 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$7baf8ef5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 10:05:55 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a38ac735] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 10:05:55 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$95e3f5dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 10:05:55 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-29 10:05:56 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 10:05:56 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 10:05:56 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 10:05:56 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 10:05:56 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 10:05:56 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-29 10:05:56 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-29 10:05:57 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 10:05:57 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 10:05:57 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 10:05:57 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 10:05:57 -Tomcat initialized with port(s): 8080 (http)
2019-01-29 10:05:57 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 10:05:57 -Starting service [Tomcat]
2019-01-29 10:05:57 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-29 10:05:57 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-29 10:05:57 -Initializing Spring embedded WebApplicationContext
2019-01-29 10:05:57 -Root WebApplicationContext: initialization completed in 5748 ms
2019-01-29 10:05:58 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 10:05:58 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 10:05:58 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 10:05:58 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 10:05:58 -Filter xssFilter was not registered (disabled)
2019-01-29 10:05:58 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-29 10:05:58 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-29 10:05:58 -Servlet statViewServlet mapped to [/druid/*]
2019-01-29 10:05:58 -Servlet dispatcherServlet mapped to [/]
2019-01-29 10:05:58 -{dataSource-1} inited
2019-01-29 10:05:59 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e7dd664: startup date [Tue Jan 29 10:05:52 CST 2019]; root of context hierarchy
2019-01-29 10:06:00 -Using default implementation for ThreadExecutor
2019-01-29 10:06:00 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-29 10:06:00 -Quartz Scheduler v.2.2.1 created.
2019-01-29 10:06:00 -RAMJobStore initialized.
2019-01-29 10:06:00 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-29 10:06:00 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-29 10:06:00 -Quartz scheduler version: 2.2.1
2019-01-29 10:06:00 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@53e28097
2019-01-29 10:06:00 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-29 10:06:00 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-29 10:06:01 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 10:06:01 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-29 10:06:01 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-29 10:06:01 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-29 10:06:01 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-29 10:06:01 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-29 10:06:01 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-29 10:06:01 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-29 10:06:01 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-29 10:06:01 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-29 10:06:01 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 10:06:01 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-29 10:06:01 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-29 10:06:01 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-29 10:06:01 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 10:06:01 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-29 10:06:01 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-29 10:06:01 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-29 10:06:01 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 10:06:01 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-29 10:06:01 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:06:01 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 10:06:01 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-29 10:06:01 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-29 10:06:01 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-29 10:06:01 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-29 10:06:01 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 10:06:01 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-29 10:06:01 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-29 10:06:01 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-29 10:06:01 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-29 10:06:01 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-29 10:06:01 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-29 10:06:01 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-29 10:06:01 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-29 10:06:01 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-29 10:06:01 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-29 10:06:01 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-29 10:06:01 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-29 10:06:01 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 10:06:01 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-29 10:06:01 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-29 10:06:01 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-29 10:06:01 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-29 10:06:01 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-29 10:06:01 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-29 10:06:01 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-29 10:06:01 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-29 10:06:01 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-29 10:06:01 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-29 10:06:01 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-29 10:06:01 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-29 10:06:01 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 10:06:01 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-29 10:06:01 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-29 10:06:01 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-29 10:06:01 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-29 10:06:01 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-29 10:06:01 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long)
2019-01-29 10:06:01 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long[])
2019-01-29 10:06:01 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-29 10:06:01 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 10:06:01 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-29 10:06:01 -Mapped "{[/system/staff/edit/{staffId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 10:06:01 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-29 10:06:01 -Mapped "{[/system/staff/selectView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.selectView()
2019-01-29 10:06:01 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-29 10:06:01 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-29 10:06:01 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-29 10:06:01 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-29 10:06:01 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 10:06:01 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-29 10:06:01 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-29 10:06:01 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-29 10:06:01 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-29 10:06:01 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 10:06:01 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-29 10:06:01 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-29 10:06:01 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-29 10:06:01 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-29 10:06:01 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-29 10:06:01 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-29 10:06:01 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-29 10:06:01 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-29 10:06:01 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-29 10:06:02 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-29 10:06:02 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-29 10:06:02 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-29 10:06:02 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:06:02 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e7dd664: startup date [Tue Jan 29 10:05:52 CST 2019]; root of context hierarchy
2019-01-29 10:06:02 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:06:02 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:06:02 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 10:06:02 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-29 10:06:03 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-29 10:06:03 -Registering beans for JMX exposure on startup
2019-01-29 10:06:03 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-29 10:06:03 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-29 10:06:03 -Starting beans in phase 2147483647
2019-01-29 10:06:03 -Context refreshed
2019-01-29 10:06:03 -Found 1 custom documentation plugin(s)
2019-01-29 10:06:03 -Scanning for api listing references
2019-01-29 10:06:04 -Generating unique operation named: removeUsingPOST_1
2019-01-29 10:06:04 -Generating unique operation named: editUsingGET_1
2019-01-29 10:06:04 -Generating unique operation named: listUsingGET_1
2019-01-29 10:06:04 -Generating unique operation named: updateUsingPOST_1
2019-01-29 10:06:04 -Generating unique operation named: addUsingGET_1
2019-01-29 10:06:04 -Generating unique operation named: editUsingGET_2
2019-01-29 10:06:04 -Generating unique operation named: listUsingGET_2
2019-01-29 10:06:04 -Generating unique operation named: removeUsingPOST_2
2019-01-29 10:06:04 -Generating unique operation named: removeUsingPOST_3
2019-01-29 10:06:04 -Generating unique operation named: saveUsingPOST_1
2019-01-29 10:06:04 -Generating unique operation named: updateUsingPOST_2
2019-01-29 10:06:04 -Generating unique operation named: listUsingGET_3
2019-01-29 10:06:04 -Generating unique operation named: removeUsingPOST_4
2019-01-29 10:06:04 -Generating unique operation named: welcomeUsingGET_1
2019-01-29 10:06:04 -Generating unique operation named: addUsingGET_2
2019-01-29 10:06:04 -Generating unique operation named: editUsingGET_3
2019-01-29 10:06:04 -Generating unique operation named: listUsingGET_4
2019-01-29 10:06:04 -Generating unique operation named: removeUsingPOST_5
2019-01-29 10:06:04 -Generating unique operation named: saveUsingPOST_2
2019-01-29 10:06:04 -Generating unique operation named: treeUsingGET_1
2019-01-29 10:06:04 -Generating unique operation named: updateUsingPOST_3
2019-01-29 10:06:04 -Generating unique operation named: addUsingGET_3
2019-01-29 10:06:04 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-29 10:06:04 -Generating unique operation named: editUsingGET_4
2019-01-29 10:06:04 -Generating unique operation named: listUsingGET_5
2019-01-29 10:06:04 -Generating unique operation named: saveUsingPOST_3
2019-01-29 10:06:04 -Generating unique operation named: saveUsingPOST_4
2019-01-29 10:06:04 -Generating unique operation named: updateUsingPOST_4
2019-01-29 10:06:04 -Generating unique operation named: listUsingGET_6
2019-01-29 10:06:04 -Generating unique operation named: listUsingHEAD_1
2019-01-29 10:06:04 -Generating unique operation named: listUsingPOST_1
2019-01-29 10:06:04 -Generating unique operation named: listUsingPUT_1
2019-01-29 10:06:04 -Generating unique operation named: listUsingPATCH_1
2019-01-29 10:06:04 -Generating unique operation named: listUsingDELETE_1
2019-01-29 10:06:04 -Generating unique operation named: listUsingOPTIONS_1
2019-01-29 10:06:04 -Generating unique operation named: listUsingTRACE_1
2019-01-29 10:06:04 -Generating unique operation named: addUsingGET_4
2019-01-29 10:06:04 -Generating unique operation named: editUsingGET_5
2019-01-29 10:06:04 -Generating unique operation named: listUsingGET_7
2019-01-29 10:06:04 -Generating unique operation named: removeUsingPOST_6
2019-01-29 10:06:04 -Generating unique operation named: removeUsingPOST_7
2019-01-29 10:06:04 -Generating unique operation named: saveUsingPOST_5
2019-01-29 10:06:04 -Generating unique operation named: updateUsingGET_1
2019-01-29 10:06:04 -Generating unique operation named: updateUsingHEAD_1
2019-01-29 10:06:04 -Generating unique operation named: updateUsingPOST_5
2019-01-29 10:06:04 -Generating unique operation named: updateUsingPUT_1
2019-01-29 10:06:04 -Generating unique operation named: updateUsingPATCH_1
2019-01-29 10:06:04 -Generating unique operation named: updateUsingDELETE_1
2019-01-29 10:06:04 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-29 10:06:04 -Generating unique operation named: updateUsingTRACE_1
2019-01-29 10:06:04 -Generating unique operation named: addUsingGET_5
2019-01-29 10:06:04 -Generating unique operation named: editUsingGET_6
2019-01-29 10:06:04 -Generating unique operation named: listUsingGET_8
2019-01-29 10:06:04 -Generating unique operation named: removeUsingPOST_8
2019-01-29 10:06:04 -Generating unique operation named: removeUsingPOST_9
2019-01-29 10:06:04 -Generating unique operation named: saveUsingPOST_6
2019-01-29 10:06:04 -Generating unique operation named: updateUsingGET_2
2019-01-29 10:06:04 -Generating unique operation named: updateUsingHEAD_2
2019-01-29 10:06:04 -Generating unique operation named: updateUsingPOST_6
2019-01-29 10:06:04 -Generating unique operation named: updateUsingPUT_2
2019-01-29 10:06:04 -Generating unique operation named: updateUsingPATCH_2
2019-01-29 10:06:04 -Generating unique operation named: updateUsingDELETE_2
2019-01-29 10:06:04 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-29 10:06:04 -Generating unique operation named: updateUsingTRACE_2
2019-01-29 10:06:04 -Generating unique operation named: addUsingGET_6
2019-01-29 10:06:04 -Generating unique operation named: editUsingGET_7
2019-01-29 10:06:04 -Generating unique operation named: listUsingGET_9
2019-01-29 10:06:04 -Generating unique operation named: roleUsingGET_1
2019-01-29 10:06:04 -Generating unique operation named: saveUsingPOST_7
2019-01-29 10:06:04 -Starting Quartz Scheduler now
2019-01-29 10:06:04 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-29 10:06:04 -Starting...
2019-01-29 10:06:04 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-29 10:06:04 -Started.
2019-01-29 10:06:04 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 10:06:04 -Using a shared selector for servlet write/read
2019-01-29 10:06:04 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-29 10:06:04 -Started BootdoApplication in 14.711 seconds (JVM running for 16.577)
2019-01-29 10:06:04 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-29 10:06:05 -==> Parameters: 
2019-01-29 10:06:05 -<==      Total: 1
2019-01-29 10:07:02 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-29 10:07:38 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 10:07:38 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 10:07:38 -FrameworkServlet 'dispatcherServlet': initialization completed in 40 ms
2019-01-29 10:07:38 -Enabling session validation scheduler...
2019-01-29 10:07:38 -请求地址 : http://localhost:8080/
2019-01-29 10:07:38 -HTTP METHOD : GET
2019-01-29 10:07:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-29 10:07:38 -参数 : [{}]
2019-01-29 10:07:38 -耗时 : 2
2019-01-29 10:07:38 -返回值 : redirect:/login
2019-01-29 10:07:38 -请求地址 : http://localhost:8080/login
2019-01-29 10:07:38 -HTTP METHOD : GET
2019-01-29 10:07:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:07:38 -参数 : []
2019-01-29 10:07:38 -耗时 : 0
2019-01-29 10:07:38 -返回值 : login
2019-01-29 10:07:39 -请求地址 : http://localhost:8080/login;JSESSIONID=58576618-c95e-4726-8391-b2c098431b22
2019-01-29 10:07:39 -HTTP METHOD : GET
2019-01-29 10:07:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:07:39 -参数 : []
2019-01-29 10:07:39 -耗时 : 0
2019-01-29 10:07:39 -返回值 : login
2019-01-29 10:07:43 -请求地址 : http://localhost:8080/login
2019-01-29 10:07:43 -HTTP METHOD : POST
2019-01-29 10:07:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 10:07:43 -参数 : [admin, 123456]
2019-01-29 10:07:43 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 10:07:43 -==> Parameters: admin(String)
2019-01-29 10:07:43 -<==      Total: 1
2019-01-29 10:07:43 -耗时 : 138
2019-01-29 10:07:43 -返回值 : {msg=操作成功, code=0}
2019-01-29 10:07:43 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-29 10:07:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:07:43 -==> Parameters: 123(String), admin(String), 登录(String), 139(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 10:07:43.305(Timestamp)
2019-01-29 10:07:43 -请求地址 : http://localhost:8080/index
2019-01-29 10:07:43 -HTTP METHOD : GET
2019-01-29 10:07:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:07:43 -参数 : [{}]
2019-01-29 10:07:43 -<==    Updates: 1
2019-01-29 10:07:43 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:07:43 -==> Parameters: 123(String)
2019-01-29 10:07:43 -<==      Total: 3
2019-01-29 10:07:43 -耗时 : 305
2019-01-29 10:07:43 -返回值 : index_v1
2019-01-29 10:07:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:07:43 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 305(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:07:43.816(Timestamp)
2019-01-29 10:07:43 -<==    Updates: 1
2019-01-29 10:11:50 -请求地址 : http://localhost:8080/login;JSESSIONID=072b797c-40ce-4004-935d-4a9aa0f291b9
2019-01-29 10:11:50 -HTTP METHOD : GET
2019-01-29 10:11:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:11:50 -参数 : []
2019-01-29 10:11:50 -耗时 : 0
2019-01-29 10:11:50 -返回值 : login
2019-01-29 10:11:50 -请求地址 : http://localhost:8080/login
2019-01-29 10:11:50 -HTTP METHOD : GET
2019-01-29 10:11:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:11:50 -参数 : []
2019-01-29 10:11:50 -耗时 : 1
2019-01-29 10:11:50 -返回值 : login
2019-01-29 10:11:53 -请求地址 : http://localhost:8080/login
2019-01-29 10:11:53 -HTTP METHOD : POST
2019-01-29 10:11:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 10:11:53 -参数 : [admin, 123456]
2019-01-29 10:11:53 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 10:11:53 -==> Parameters: admin(String)
2019-01-29 10:11:53 -<==      Total: 1
2019-01-29 10:11:53 -耗时 : 12
2019-01-29 10:11:53 -返回值 : {msg=操作成功, code=0}
2019-01-29 10:11:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:11:53 -==> Parameters: 123(String), admin(String), 登录(String), 12(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 10:11:53.639(Timestamp)
2019-01-29 10:11:53 -<==    Updates: 1
2019-01-29 10:11:53 -请求地址 : http://localhost:8080/index
2019-01-29 10:11:53 -HTTP METHOD : GET
2019-01-29 10:11:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:11:53 -参数 : [{}]
2019-01-29 10:11:53 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:11:53 -==> Parameters: 123(String)
2019-01-29 10:11:53 -<==      Total: 3
2019-01-29 10:11:53 -耗时 : 16
2019-01-29 10:11:53 -返回值 : index_v1
2019-01-29 10:11:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:11:53 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:11:53.713(Timestamp)
2019-01-29 10:11:53 -<==    Updates: 1
2019-01-29 10:13:34 -请求地址 : http://localhost:8080/index
2019-01-29 10:13:34 -HTTP METHOD : GET
2019-01-29 10:13:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:13:34 -参数 : [{}]
2019-01-29 10:13:34 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:13:34 -==> Parameters: 123(String)
2019-01-29 10:13:34 -<==      Total: 3
2019-01-29 10:13:34 -耗时 : 36
2019-01-29 10:13:34 -返回值 : index_v1
2019-01-29 10:13:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:13:34 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:13:34.434(Timestamp)
2019-01-29 10:13:34 -<==    Updates: 1
2019-01-29 10:13:46 -请求地址 : http://localhost:8080/login;JSESSIONID=16494db9-3d65-4e6c-a769-b083c35a0cd7
2019-01-29 10:13:46 -HTTP METHOD : GET
2019-01-29 10:13:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:13:46 -参数 : []
2019-01-29 10:13:46 -耗时 : 1
2019-01-29 10:13:46 -返回值 : login
2019-01-29 10:13:46 -请求地址 : http://localhost:8080/login
2019-01-29 10:13:46 -HTTP METHOD : GET
2019-01-29 10:13:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:13:46 -参数 : []
2019-01-29 10:13:46 -耗时 : 0
2019-01-29 10:13:46 -返回值 : login
2019-01-29 10:13:49 -请求地址 : http://localhost:8080/login
2019-01-29 10:13:49 -HTTP METHOD : POST
2019-01-29 10:13:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 10:13:49 -参数 : [admin, 123456]
2019-01-29 10:13:49 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 10:13:49 -==> Parameters: admin(String)
2019-01-29 10:13:49 -<==      Total: 1
2019-01-29 10:13:49 -耗时 : 7
2019-01-29 10:13:49 -返回值 : {msg=操作成功, code=0}
2019-01-29 10:13:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:13:49 -==> Parameters: 123(String), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 10:13:49.699(Timestamp)
2019-01-29 10:13:49 -<==    Updates: 1
2019-01-29 10:13:49 -请求地址 : http://localhost:8080/index
2019-01-29 10:13:49 -HTTP METHOD : GET
2019-01-29 10:13:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:13:49 -参数 : [{}]
2019-01-29 10:13:49 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:13:49 -==> Parameters: 123(String)
2019-01-29 10:13:49 -<==      Total: 3
2019-01-29 10:13:49 -耗时 : 15
2019-01-29 10:13:49 -返回值 : index_v1
2019-01-29 10:13:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:13:49 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:13:49.762(Timestamp)
2019-01-29 10:13:49 -<==    Updates: 1
2019-01-29 10:14:12 -请求地址 : http://localhost:8080/login;JSESSIONID=8ea0628e-13f4-4a38-81b8-4f8f4dc83004
2019-01-29 10:14:12 -HTTP METHOD : GET
2019-01-29 10:14:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:14:12 -参数 : []
2019-01-29 10:14:12 -耗时 : 1
2019-01-29 10:14:12 -返回值 : login
2019-01-29 10:14:12 -请求地址 : http://localhost:8080/login
2019-01-29 10:14:12 -HTTP METHOD : GET
2019-01-29 10:14:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:14:12 -参数 : []
2019-01-29 10:14:12 -耗时 : 1
2019-01-29 10:14:12 -返回值 : login
2019-01-29 10:14:16 -请求地址 : http://localhost:8080/login
2019-01-29 10:14:16 -HTTP METHOD : POST
2019-01-29 10:14:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 10:14:16 -参数 : [admin, 123456]
2019-01-29 10:14:16 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 10:14:16 -==> Parameters: admin(String)
2019-01-29 10:14:16 -<==      Total: 1
2019-01-29 10:14:16 -耗时 : 16
2019-01-29 10:14:16 -返回值 : {msg=操作成功, code=0}
2019-01-29 10:14:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:14:16 -==> Parameters: 123(String), admin(String), 登录(String), 16(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 10:14:16.035(Timestamp)
2019-01-29 10:14:16 -请求地址 : http://localhost:8080/index
2019-01-29 10:14:16 -HTTP METHOD : GET
2019-01-29 10:14:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:14:16 -参数 : [{}]
2019-01-29 10:14:16 -<==    Updates: 1
2019-01-29 10:14:16 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:14:16 -==> Parameters: 123(String)
2019-01-29 10:14:16 -<==      Total: 3
2019-01-29 10:14:16 -耗时 : 39
2019-01-29 10:14:16 -返回值 : index_v1
2019-01-29 10:14:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:14:16 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 39(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:14:16.094(Timestamp)
2019-01-29 10:14:16 -<==    Updates: 1
2019-01-29 10:18:43 -请求地址 : http://localhost:8080/index
2019-01-29 10:18:43 -HTTP METHOD : GET
2019-01-29 10:18:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:18:43 -参数 : [{}]
2019-01-29 10:18:43 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:18:43 -==> Parameters: 123(String)
2019-01-29 10:18:43 -<==      Total: 3
2019-01-29 10:18:43 -耗时 : 39
2019-01-29 10:18:43 -返回值 : index_v1
2019-01-29 10:18:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:18:43 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 39(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:18:43.57(Timestamp)
2019-01-29 10:18:43 -<==    Updates: 1
2019-01-29 10:19:10 -请求地址 : http://localhost:8080/index
2019-01-29 10:19:10 -HTTP METHOD : GET
2019-01-29 10:19:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:19:10 -参数 : [{}]
2019-01-29 10:19:10 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:19:10 -==> Parameters: 123(String)
2019-01-29 10:19:10 -<==      Total: 3
2019-01-29 10:19:10 -耗时 : 27
2019-01-29 10:19:10 -返回值 : index_v1
2019-01-29 10:19:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:19:10 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:19:10.922(Timestamp)
2019-01-29 10:19:10 -<==    Updates: 1
2019-01-29 10:21:22 -请求地址 : http://localhost:8080/index
2019-01-29 10:21:22 -HTTP METHOD : GET
2019-01-29 10:21:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:21:22 -参数 : [{}]
2019-01-29 10:21:22 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:21:22 -==> Parameters: 123(String)
2019-01-29 10:21:22 -<==      Total: 3
2019-01-29 10:21:22 -耗时 : 30
2019-01-29 10:21:22 -返回值 : index_v1
2019-01-29 10:21:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:21:22 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:21:22.475(Timestamp)
2019-01-29 10:21:22 -<==    Updates: 1
2019-01-29 10:21:30 -请求地址 : http://localhost:8080/login;JSESSIONID=4298fbde-f28f-430e-aee3-994dc18835a3
2019-01-29 10:21:30 -HTTP METHOD : GET
2019-01-29 10:21:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:21:30 -参数 : []
2019-01-29 10:21:30 -耗时 : 1
2019-01-29 10:21:30 -返回值 : login
2019-01-29 10:21:30 -请求地址 : http://localhost:8080/login
2019-01-29 10:21:30 -HTTP METHOD : GET
2019-01-29 10:21:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:21:30 -参数 : []
2019-01-29 10:21:30 -耗时 : 0
2019-01-29 10:21:30 -返回值 : login
2019-01-29 10:21:33 -请求地址 : http://localhost:8080/login
2019-01-29 10:21:33 -HTTP METHOD : POST
2019-01-29 10:21:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 10:21:33 -参数 : [admin, 123456]
2019-01-29 10:21:33 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 10:21:33 -==> Parameters: admin(String)
2019-01-29 10:21:33 -<==      Total: 1
2019-01-29 10:21:33 -耗时 : 8
2019-01-29 10:21:33 -返回值 : {msg=操作成功, code=0}
2019-01-29 10:21:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:21:33 -==> Parameters: 123(String), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 10:21:33.351(Timestamp)
2019-01-29 10:21:33 -<==    Updates: 1
2019-01-29 10:21:33 -请求地址 : http://localhost:8080/index
2019-01-29 10:21:33 -HTTP METHOD : GET
2019-01-29 10:21:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:21:33 -参数 : [{}]
2019-01-29 10:21:33 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:21:33 -==> Parameters: 123(String)
2019-01-29 10:21:33 -<==      Total: 3
2019-01-29 10:21:33 -耗时 : 17
2019-01-29 10:21:33 -返回值 : index_v1
2019-01-29 10:21:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:21:33 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:21:33.472(Timestamp)
2019-01-29 10:21:33 -<==    Updates: 1
2019-01-29 10:26:31 -请求地址 : http://localhost:8080/login;JSESSIONID=0f6cea18-e9f8-4a6e-ae75-10e31a6dbfb7
2019-01-29 10:26:31 -HTTP METHOD : GET
2019-01-29 10:26:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:26:31 -参数 : []
2019-01-29 10:26:31 -耗时 : 0
2019-01-29 10:26:31 -返回值 : login
2019-01-29 10:26:32 -请求地址 : http://localhost:8080/login
2019-01-29 10:26:32 -HTTP METHOD : GET
2019-01-29 10:26:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:26:32 -参数 : []
2019-01-29 10:26:32 -耗时 : 0
2019-01-29 10:26:32 -返回值 : login
2019-01-29 10:26:35 -请求地址 : http://localhost:8080/login
2019-01-29 10:26:35 -HTTP METHOD : POST
2019-01-29 10:26:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 10:26:35 -参数 : [admin, 123456]
2019-01-29 10:26:35 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 10:26:35 -==> Parameters: admin(String)
2019-01-29 10:26:35 -<==      Total: 1
2019-01-29 10:26:35 -耗时 : 20
2019-01-29 10:26:35 -返回值 : {msg=操作成功, code=0}
2019-01-29 10:26:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:26:35 -==> Parameters: 123(String), admin(String), 登录(String), 20(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 10:26:35.476(Timestamp)
2019-01-29 10:26:35 -请求地址 : http://localhost:8080/index
2019-01-29 10:26:35 -HTTP METHOD : GET
2019-01-29 10:26:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:26:35 -参数 : [{}]
2019-01-29 10:26:35 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:26:35 -==> Parameters: 123(String)
2019-01-29 10:26:35 -<==      Total: 3
2019-01-29 10:26:35 -耗时 : 28
2019-01-29 10:26:35 -返回值 : index_v1
2019-01-29 10:26:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:26:35 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:26:35.525(Timestamp)
2019-01-29 10:26:35 -<==    Updates: 1
2019-01-29 10:26:35 -<==    Updates: 1
2019-01-29 10:27:15 -请求地址 : http://localhost:8080/index
2019-01-29 10:27:15 -HTTP METHOD : GET
2019-01-29 10:27:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:27:15 -参数 : [{}]
2019-01-29 10:27:15 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:27:15 -==> Parameters: 123(String)
2019-01-29 10:27:15 -<==      Total: 3
2019-01-29 10:27:15 -耗时 : 26
2019-01-29 10:27:15 -返回值 : index_v1
2019-01-29 10:27:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:27:15 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:27:15.895(Timestamp)
2019-01-29 10:27:15 -<==    Updates: 1
2019-01-29 10:28:43 -请求地址 : http://localhost:8080/index
2019-01-29 10:28:43 -HTTP METHOD : GET
2019-01-29 10:28:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:28:43 -参数 : [{}]
2019-01-29 10:28:43 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:28:43 -==> Parameters: 123(String)
2019-01-29 10:28:43 -<==      Total: 3
2019-01-29 10:28:43 -耗时 : 33
2019-01-29 10:28:43 -返回值 : index_v1
2019-01-29 10:28:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:28:43 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:28:43.162(Timestamp)
2019-01-29 10:28:43 -<==    Updates: 1
2019-01-29 10:31:31 -请求地址 : http://localhost:8080/index
2019-01-29 10:31:31 -HTTP METHOD : GET
2019-01-29 10:31:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:31:31 -参数 : [{}]
2019-01-29 10:31:31 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:31:31 -==> Parameters: 123(String)
2019-01-29 10:31:32 -<==      Total: 3
2019-01-29 10:31:32 -耗时 : 26
2019-01-29 10:31:32 -返回值 : index_v1
2019-01-29 10:31:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:31:32 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:31:32.012(Timestamp)
2019-01-29 10:31:32 -<==    Updates: 1
2019-01-29 10:34:30 -请求地址 : http://localhost:8080/login;JSESSIONID=684cc8e0-c70c-4a42-abdf-f8de378ccf21
2019-01-29 10:34:30 -HTTP METHOD : GET
2019-01-29 10:34:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:34:30 -参数 : []
2019-01-29 10:34:30 -耗时 : 0
2019-01-29 10:34:30 -返回值 : login
2019-01-29 10:34:30 -请求地址 : http://localhost:8080/login
2019-01-29 10:34:30 -HTTP METHOD : GET
2019-01-29 10:34:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:34:30 -参数 : []
2019-01-29 10:34:30 -耗时 : 0
2019-01-29 10:34:30 -返回值 : login
2019-01-29 10:34:33 -请求地址 : http://localhost:8080/login
2019-01-29 10:34:33 -HTTP METHOD : POST
2019-01-29 10:34:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 10:34:33 -参数 : [admin, 123456]
2019-01-29 10:34:33 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 10:34:33 -==> Parameters: admin(String)
2019-01-29 10:34:33 -<==      Total: 1
2019-01-29 10:34:33 -耗时 : 8
2019-01-29 10:34:33 -返回值 : {msg=操作成功, code=0}
2019-01-29 10:34:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:34:33 -==> Parameters: 123(String), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 10:34:33.299(Timestamp)
2019-01-29 10:34:33 -<==    Updates: 1
2019-01-29 10:34:33 -请求地址 : http://localhost:8080/index
2019-01-29 10:34:33 -HTTP METHOD : GET
2019-01-29 10:34:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:34:33 -参数 : [{}]
2019-01-29 10:34:33 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:34:33 -==> Parameters: 123(String)
2019-01-29 10:34:33 -<==      Total: 3
2019-01-29 10:34:33 -耗时 : 15
2019-01-29 10:34:33 -返回值 : index_v1
2019-01-29 10:34:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:34:33 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 15(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:34:33.396(Timestamp)
2019-01-29 10:34:33 -<==    Updates: 1
2019-01-29 10:34:58 -请求地址 : http://localhost:8080/index
2019-01-29 10:34:58 -HTTP METHOD : GET
2019-01-29 10:34:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:34:58 -参数 : [{}]
2019-01-29 10:34:58 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:34:58 -==> Parameters: 123(String)
2019-01-29 10:34:58 -<==      Total: 3
2019-01-29 10:34:58 -耗时 : 23
2019-01-29 10:34:58 -返回值 : index_v1
2019-01-29 10:34:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:34:58 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:34:58.534(Timestamp)
2019-01-29 10:34:58 -<==    Updates: 1
2019-01-29 10:35:57 -请求地址 : http://localhost:8080/login;JSESSIONID=f77088ec-497a-4762-b84c-9db5e7d60ec0
2019-01-29 10:35:57 -HTTP METHOD : GET
2019-01-29 10:35:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:35:57 -参数 : []
2019-01-29 10:35:57 -耗时 : 0
2019-01-29 10:35:57 -返回值 : login
2019-01-29 10:35:58 -请求地址 : http://localhost:8080/login
2019-01-29 10:35:58 -HTTP METHOD : GET
2019-01-29 10:35:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:35:58 -参数 : []
2019-01-29 10:35:58 -耗时 : 0
2019-01-29 10:35:58 -返回值 : login
2019-01-29 10:36:01 -请求地址 : http://localhost:8080/login
2019-01-29 10:36:01 -HTTP METHOD : POST
2019-01-29 10:36:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 10:36:01 -参数 : [admin, 123456]
2019-01-29 10:36:01 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 10:36:01 -==> Parameters: admin(String)
2019-01-29 10:36:01 -<==      Total: 1
2019-01-29 10:36:01 -耗时 : 21
2019-01-29 10:36:01 -返回值 : {msg=操作成功, code=0}
2019-01-29 10:36:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:36:01 -==> Parameters: 123(String), admin(String), 登录(String), 21(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 10:36:01.3(Timestamp)
2019-01-29 10:36:01 -请求地址 : http://localhost:8080/index
2019-01-29 10:36:01 -HTTP METHOD : GET
2019-01-29 10:36:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:36:01 -参数 : [{}]
2019-01-29 10:36:01 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:36:01 -==> Parameters: 123(String)
2019-01-29 10:36:01 -<==      Total: 3
2019-01-29 10:36:01 -耗时 : 22
2019-01-29 10:36:01 -返回值 : index_v1
2019-01-29 10:36:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:36:01 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:36:01.349(Timestamp)
2019-01-29 10:36:01 -<==    Updates: 1
2019-01-29 10:36:01 -<==    Updates: 1
2019-01-29 10:36:26 -请求地址 : http://localhost:8080/index
2019-01-29 10:36:26 -HTTP METHOD : GET
2019-01-29 10:36:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:36:26 -参数 : [{}]
2019-01-29 10:36:26 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:36:26 -==> Parameters: 123(String)
2019-01-29 10:36:26 -<==      Total: 3
2019-01-29 10:36:26 -耗时 : 41
2019-01-29 10:36:26 -返回值 : index_v1
2019-01-29 10:36:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:36:26 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 42(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:36:26.809(Timestamp)
2019-01-29 10:36:26 -<==    Updates: 1
2019-01-29 10:36:39 -请求地址 : http://localhost:8080/index
2019-01-29 10:36:39 -HTTP METHOD : GET
2019-01-29 10:36:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:36:39 -参数 : [{}]
2019-01-29 10:36:39 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:36:39 -==> Parameters: 123(String)
2019-01-29 10:36:39 -<==      Total: 3
2019-01-29 10:36:39 -耗时 : 25
2019-01-29 10:36:39 -返回值 : index_v1
2019-01-29 10:36:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:36:39 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:36:39.361(Timestamp)
2019-01-29 10:36:39 -<==    Updates: 1
2019-01-29 10:36:49 -请求地址 : http://localhost:8080/login;JSESSIONID=c7e1f2dd-6f90-40a1-a60a-ffa1b72d009c
2019-01-29 10:36:49 -HTTP METHOD : GET
2019-01-29 10:36:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:36:49 -参数 : []
2019-01-29 10:36:49 -耗时 : 0
2019-01-29 10:36:49 -返回值 : login
2019-01-29 10:36:49 -请求地址 : http://localhost:8080/login
2019-01-29 10:36:49 -HTTP METHOD : GET
2019-01-29 10:36:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:36:49 -参数 : []
2019-01-29 10:36:49 -耗时 : 0
2019-01-29 10:36:49 -返回值 : login
2019-01-29 10:36:52 -请求地址 : http://localhost:8080/login
2019-01-29 10:36:52 -HTTP METHOD : POST
2019-01-29 10:36:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 10:36:52 -参数 : [admin, 123456]
2019-01-29 10:36:52 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 10:36:52 -==> Parameters: admin(String)
2019-01-29 10:36:52 -<==      Total: 1
2019-01-29 10:36:52 -耗时 : 8
2019-01-29 10:36:52 -返回值 : {msg=操作成功, code=0}
2019-01-29 10:36:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:36:52 -==> Parameters: 123(String), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 10:36:52.683(Timestamp)
2019-01-29 10:36:52 -请求地址 : http://localhost:8080/index
2019-01-29 10:36:52 -HTTP METHOD : GET
2019-01-29 10:36:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:36:52 -参数 : [{}]
2019-01-29 10:36:52 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:36:52 -==> Parameters: 123(String)
2019-01-29 10:36:52 -<==      Total: 3
2019-01-29 10:36:52 -<==    Updates: 1
2019-01-29 10:36:52 -耗时 : 19
2019-01-29 10:36:52 -返回值 : index_v1
2019-01-29 10:36:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:36:52 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:36:52.724(Timestamp)
2019-01-29 10:36:52 -<==    Updates: 1
2019-01-29 10:37:02 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-01-29 10:38:14 -请求地址 : http://localhost:8080/login;JSESSIONID=89c7cc6e-e40f-49f4-8984-48ace68dc718
2019-01-29 10:38:14 -HTTP METHOD : GET
2019-01-29 10:38:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:38:14 -参数 : []
2019-01-29 10:38:14 -耗时 : 0
2019-01-29 10:38:14 -返回值 : login
2019-01-29 10:38:15 -请求地址 : http://localhost:8080/login
2019-01-29 10:38:15 -HTTP METHOD : GET
2019-01-29 10:38:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:38:15 -参数 : []
2019-01-29 10:38:15 -耗时 : 0
2019-01-29 10:38:15 -返回值 : login
2019-01-29 10:38:18 -请求地址 : http://localhost:8080/login
2019-01-29 10:38:18 -HTTP METHOD : POST
2019-01-29 10:38:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 10:38:18 -参数 : [admin, 123456]
2019-01-29 10:38:18 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 10:38:18 -==> Parameters: admin(String)
2019-01-29 10:38:18 -<==      Total: 1
2019-01-29 10:38:18 -耗时 : 11
2019-01-29 10:38:18 -返回值 : {msg=操作成功, code=0}
2019-01-29 10:38:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:38:18 -==> Parameters: 123(String), admin(String), 登录(String), 12(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 10:38:18.106(Timestamp)
2019-01-29 10:38:18 -请求地址 : http://localhost:8080/index
2019-01-29 10:38:18 -HTTP METHOD : GET
2019-01-29 10:38:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:38:18 -参数 : [{}]
2019-01-29 10:38:18 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:38:18 -==> Parameters: 123(String)
2019-01-29 10:38:18 -<==      Total: 3
2019-01-29 10:38:18 -<==    Updates: 1
2019-01-29 10:38:18 -耗时 : 22
2019-01-29 10:38:18 -返回值 : index_v1
2019-01-29 10:38:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:38:18 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:38:18.147(Timestamp)
2019-01-29 10:38:18 -<==    Updates: 1
2019-01-29 10:38:50 -请求地址 : http://localhost:8080/index
2019-01-29 10:38:50 -HTTP METHOD : GET
2019-01-29 10:38:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:38:50 -参数 : [{}]
2019-01-29 10:38:50 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:38:50 -==> Parameters: 123(String)
2019-01-29 10:38:50 -<==      Total: 3
2019-01-29 10:38:50 -耗时 : 36
2019-01-29 10:38:50 -返回值 : index_v1
2019-01-29 10:38:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:38:50 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:38:50.611(Timestamp)
2019-01-29 10:38:50 -<==    Updates: 1
2019-01-29 10:39:39 -请求地址 : http://localhost:8080/index
2019-01-29 10:39:39 -HTTP METHOD : GET
2019-01-29 10:39:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:39:39 -参数 : [{}]
2019-01-29 10:39:39 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:39:39 -==> Parameters: 123(String)
2019-01-29 10:39:39 -<==      Total: 3
2019-01-29 10:39:39 -耗时 : 29
2019-01-29 10:39:39 -返回值 : index_v1
2019-01-29 10:39:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:39:39 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:39:39.948(Timestamp)
2019-01-29 10:39:39 -<==    Updates: 1
2019-01-29 10:40:03 -请求地址 : http://localhost:8080/login;JSESSIONID=fff29776-8d97-4536-835a-29eda0385750
2019-01-29 10:40:03 -HTTP METHOD : GET
2019-01-29 10:40:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:40:03 -参数 : []
2019-01-29 10:40:03 -耗时 : 0
2019-01-29 10:40:03 -返回值 : login
2019-01-29 10:40:03 -请求地址 : http://localhost:8080/login
2019-01-29 10:40:03 -HTTP METHOD : GET
2019-01-29 10:40:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:40:03 -参数 : []
2019-01-29 10:40:03 -耗时 : 0
2019-01-29 10:40:03 -返回值 : login
2019-01-29 10:40:06 -请求地址 : http://localhost:8080/login
2019-01-29 10:40:06 -HTTP METHOD : POST
2019-01-29 10:40:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 10:40:06 -参数 : [admin, 123456]
2019-01-29 10:40:06 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 10:40:06 -==> Parameters: admin(String)
2019-01-29 10:40:06 -<==      Total: 1
2019-01-29 10:40:06 -耗时 : 5
2019-01-29 10:40:06 -返回值 : {msg=操作成功, code=0}
2019-01-29 10:40:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:40:06 -==> Parameters: 123(String), admin(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 10:40:06.562(Timestamp)
2019-01-29 10:40:06 -请求地址 : http://localhost:8080/index
2019-01-29 10:40:06 -HTTP METHOD : GET
2019-01-29 10:40:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:40:06 -参数 : [{}]
2019-01-29 10:40:06 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:40:06 -==> Parameters: 123(String)
2019-01-29 10:40:06 -<==      Total: 3
2019-01-29 10:40:06 -<==    Updates: 1
2019-01-29 10:40:06 -耗时 : 25
2019-01-29 10:40:06 -返回值 : index_v1
2019-01-29 10:40:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:40:06 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:40:06.613(Timestamp)
2019-01-29 10:40:06 -<==    Updates: 1
2019-01-29 10:41:04 -请求地址 : http://localhost:8080/index
2019-01-29 10:41:04 -HTTP METHOD : GET
2019-01-29 10:41:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:41:04 -参数 : [{}]
2019-01-29 10:41:04 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:41:04 -==> Parameters: 123(String)
2019-01-29 10:41:04 -<==      Total: 3
2019-01-29 10:41:04 -耗时 : 29
2019-01-29 10:41:04 -返回值 : index_v1
2019-01-29 10:41:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:41:04 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:41:04.578(Timestamp)
2019-01-29 10:41:04 -<==    Updates: 1
2019-01-29 10:41:26 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 10:41:26 -==> Parameters: 123(String)
2019-01-29 10:41:26 -<==      Total: 7
2019-01-29 10:41:26 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 10:41:26 -HTTP METHOD : GET
2019-01-29 10:41:26 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 10:41:26 -参数 : []
2019-01-29 10:41:26 -耗时 : 0
2019-01-29 10:41:26 -返回值 : system/user/user
2019-01-29 10:41:26 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 10:41:26 -HTTP METHOD : GET
2019-01-29 10:41:26 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 10:41:26 -参数 : [{page=1, limit=15}]
2019-01-29 10:41:27 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 10:41:27 -==> Parameters: 
2019-01-29 10:41:27 -<==      Total: 2
2019-01-29 10:41:27 -==>  Preparing: select count(*) from sys_user 
2019-01-29 10:41:27 -==> Parameters: 
2019-01-29 10:41:27 -<==      Total: 1
2019-01-29 10:41:27 -耗时 : 130
2019-01-29 10:41:27 -返回值 : com.bootdo.common.utils.PageUtils@3421c2f4
2019-01-29 10:42:17 -请求地址 : http://localhost:8080/index
2019-01-29 10:42:17 -HTTP METHOD : GET
2019-01-29 10:42:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:42:17 -参数 : [{}]
2019-01-29 10:42:17 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:42:17 -==> Parameters: 123(String)
2019-01-29 10:42:17 -<==      Total: 3
2019-01-29 10:42:17 -耗时 : 25
2019-01-29 10:42:17 -返回值 : index_v1
2019-01-29 10:42:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:42:17 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:42:17.204(Timestamp)
2019-01-29 10:42:17 -<==    Updates: 1
2019-01-29 10:42:45 -请求地址 : http://localhost:8080/index
2019-01-29 10:42:45 -HTTP METHOD : GET
2019-01-29 10:42:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:42:45 -参数 : [{}]
2019-01-29 10:42:45 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:42:45 -==> Parameters: 123(String)
2019-01-29 10:42:45 -<==      Total: 3
2019-01-29 10:42:45 -耗时 : 34
2019-01-29 10:42:45 -返回值 : index_v1
2019-01-29 10:42:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:42:45 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:42:45.442(Timestamp)
2019-01-29 10:42:45 -<==    Updates: 1
2019-01-29 10:48:57 -请求地址 : http://localhost:8080/index
2019-01-29 10:48:57 -HTTP METHOD : GET
2019-01-29 10:48:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:48:57 -参数 : [{}]
2019-01-29 10:48:57 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:48:57 -==> Parameters: 123(String)
2019-01-29 10:48:57 -<==      Total: 3
2019-01-29 10:48:57 -耗时 : 35
2019-01-29 10:48:57 -返回值 : index_v1
2019-01-29 10:48:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:48:57 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:48:57.412(Timestamp)
2019-01-29 10:48:57 -<==    Updates: 1
2019-01-29 10:50:01 -请求地址 : http://localhost:8080/login;JSESSIONID=043af408-664f-43b6-a182-449355ece69b
2019-01-29 10:50:01 -HTTP METHOD : GET
2019-01-29 10:50:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:50:01 -参数 : []
2019-01-29 10:50:01 -耗时 : 0
2019-01-29 10:50:01 -返回值 : login
2019-01-29 10:50:02 -请求地址 : http://localhost:8080/login
2019-01-29 10:50:02 -HTTP METHOD : GET
2019-01-29 10:50:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:50:02 -参数 : []
2019-01-29 10:50:02 -耗时 : 0
2019-01-29 10:50:02 -返回值 : login
2019-01-29 10:50:05 -请求地址 : http://localhost:8080/login
2019-01-29 10:50:05 -HTTP METHOD : POST
2019-01-29 10:50:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 10:50:05 -参数 : [admin, 123456]
2019-01-29 10:50:05 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 10:50:05 -==> Parameters: admin(String)
2019-01-29 10:50:05 -<==      Total: 1
2019-01-29 10:50:05 -耗时 : 8
2019-01-29 10:50:05 -返回值 : {msg=操作成功, code=0}
2019-01-29 10:50:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:50:05 -==> Parameters: 123(String), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 10:50:05.548(Timestamp)
2019-01-29 10:50:05 -请求地址 : http://localhost:8080/index
2019-01-29 10:50:05 -HTTP METHOD : GET
2019-01-29 10:50:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:50:05 -参数 : [{}]
2019-01-29 10:50:05 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:50:05 -==> Parameters: 123(String)
2019-01-29 10:50:05 -<==      Total: 3
2019-01-29 10:50:05 -耗时 : 24
2019-01-29 10:50:05 -返回值 : index_v1
2019-01-29 10:50:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:50:05 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:50:05.596(Timestamp)
2019-01-29 10:50:05 -<==    Updates: 1
2019-01-29 10:50:05 -<==    Updates: 1
2019-01-29 10:52:09 -请求地址 : http://localhost:8080/login;JSESSIONID=2cff5ebc-a183-48c5-af08-d47ca5d429ba
2019-01-29 10:52:09 -HTTP METHOD : GET
2019-01-29 10:52:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:52:09 -参数 : []
2019-01-29 10:52:09 -耗时 : 1
2019-01-29 10:52:09 -返回值 : login
2019-01-29 10:52:09 -请求地址 : http://localhost:8080/login
2019-01-29 10:52:09 -HTTP METHOD : GET
2019-01-29 10:52:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:52:09 -参数 : []
2019-01-29 10:52:09 -耗时 : 0
2019-01-29 10:52:09 -返回值 : login
2019-01-29 10:52:12 -请求地址 : http://localhost:8080/login
2019-01-29 10:52:12 -HTTP METHOD : POST
2019-01-29 10:52:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 10:52:12 -参数 : [admin, 123456]
2019-01-29 10:52:12 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 10:52:12 -==> Parameters: admin(String)
2019-01-29 10:52:12 -<==      Total: 1
2019-01-29 10:52:12 -耗时 : 8
2019-01-29 10:52:12 -返回值 : {msg=操作成功, code=0}
2019-01-29 10:52:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:52:12 -==> Parameters: 123(String), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 10:52:12.803(Timestamp)
2019-01-29 10:52:12 -请求地址 : http://localhost:8080/index
2019-01-29 10:52:12 -HTTP METHOD : GET
2019-01-29 10:52:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:52:12 -参数 : [{}]
2019-01-29 10:52:12 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:52:12 -==> Parameters: 123(String)
2019-01-29 10:52:12 -<==      Total: 3
2019-01-29 10:52:12 -耗时 : 24
2019-01-29 10:52:12 -返回值 : index_v1
2019-01-29 10:52:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:52:12 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:52:12.851(Timestamp)
2019-01-29 10:52:12 -<==    Updates: 1
2019-01-29 10:52:12 -<==    Updates: 1
2019-01-29 10:52:58 -请求地址 : http://localhost:8080/index
2019-01-29 10:52:58 -HTTP METHOD : GET
2019-01-29 10:52:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:52:58 -参数 : [{}]
2019-01-29 10:52:58 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:52:58 -==> Parameters: 123(String)
2019-01-29 10:52:58 -<==      Total: 3
2019-01-29 10:52:58 -耗时 : 29
2019-01-29 10:52:58 -返回值 : index_v1
2019-01-29 10:52:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:52:58 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:52:58.73(Timestamp)
2019-01-29 10:52:58 -<==    Updates: 1
2019-01-29 10:55:36 -请求地址 : http://localhost:8080/index
2019-01-29 10:55:36 -HTTP METHOD : GET
2019-01-29 10:55:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:55:36 -参数 : [{}]
2019-01-29 10:55:36 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:55:36 -==> Parameters: 123(String)
2019-01-29 10:55:36 -<==      Total: 3
2019-01-29 10:55:36 -耗时 : 29
2019-01-29 10:55:36 -返回值 : index_v1
2019-01-29 10:55:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:55:36 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:55:36.277(Timestamp)
2019-01-29 10:55:36 -<==    Updates: 1
2019-01-29 10:55:46 -请求地址 : http://localhost:8080/login;JSESSIONID=f9050e21-02c5-45a1-ae92-0a8c4a6ec4be
2019-01-29 10:55:46 -HTTP METHOD : GET
2019-01-29 10:55:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:55:46 -参数 : []
2019-01-29 10:55:46 -耗时 : 0
2019-01-29 10:55:46 -返回值 : login
2019-01-29 10:55:46 -请求地址 : http://localhost:8080/login
2019-01-29 10:55:46 -HTTP METHOD : GET
2019-01-29 10:55:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:55:46 -参数 : []
2019-01-29 10:55:46 -耗时 : 0
2019-01-29 10:55:46 -返回值 : login
2019-01-29 10:55:50 -请求地址 : http://localhost:8080/login
2019-01-29 10:55:50 -HTTP METHOD : POST
2019-01-29 10:55:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 10:55:50 -参数 : [admin, 123456]
2019-01-29 10:55:50 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 10:55:50 -==> Parameters: admin(String)
2019-01-29 10:55:50 -<==      Total: 1
2019-01-29 10:55:50 -耗时 : 13
2019-01-29 10:55:50 -返回值 : {msg=操作成功, code=0}
2019-01-29 10:55:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:55:50 -==> Parameters: 123(String), admin(String), 登录(String), 13(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 10:55:50.035(Timestamp)
2019-01-29 10:55:50 -请求地址 : http://localhost:8080/index
2019-01-29 10:55:50 -HTTP METHOD : GET
2019-01-29 10:55:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:55:50 -参数 : [{}]
2019-01-29 10:55:50 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:55:50 -==> Parameters: 123(String)
2019-01-29 10:55:50 -<==      Total: 3
2019-01-29 10:55:50 -耗时 : 23
2019-01-29 10:55:50 -返回值 : index_v1
2019-01-29 10:55:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:55:50 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:55:50.084(Timestamp)
2019-01-29 10:55:50 -<==    Updates: 1
2019-01-29 10:55:50 -<==    Updates: 1
2019-01-29 10:57:18 -请求地址 : http://localhost:8080/login;JSESSIONID=389e83d0-6444-46c0-bb32-21c0862eca4c
2019-01-29 10:57:18 -HTTP METHOD : GET
2019-01-29 10:57:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:57:18 -参数 : []
2019-01-29 10:57:18 -耗时 : 0
2019-01-29 10:57:18 -返回值 : login
2019-01-29 10:57:18 -请求地址 : http://localhost:8080/login
2019-01-29 10:57:18 -HTTP METHOD : GET
2019-01-29 10:57:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:57:18 -参数 : []
2019-01-29 10:57:18 -耗时 : 0
2019-01-29 10:57:18 -返回值 : login
2019-01-29 10:57:19 -请求地址 : http://localhost:8080/login;JSESSIONID=389e83d0-6444-46c0-bb32-21c0862eca4c
2019-01-29 10:57:19 -HTTP METHOD : GET
2019-01-29 10:57:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:57:19 -参数 : []
2019-01-29 10:57:19 -耗时 : 1
2019-01-29 10:57:19 -返回值 : login
2019-01-29 10:57:19 -请求地址 : http://localhost:8080/login
2019-01-29 10:57:19 -HTTP METHOD : GET
2019-01-29 10:57:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 10:57:19 -参数 : []
2019-01-29 10:57:19 -耗时 : 0
2019-01-29 10:57:19 -返回值 : login
2019-01-29 10:57:23 -请求地址 : http://localhost:8080/login
2019-01-29 10:57:23 -HTTP METHOD : POST
2019-01-29 10:57:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 10:57:23 -参数 : [admin, 123456]
2019-01-29 10:57:23 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 10:57:23 -==> Parameters: admin(String)
2019-01-29 10:57:23 -<==      Total: 1
2019-01-29 10:57:23 -耗时 : 8
2019-01-29 10:57:23 -返回值 : {msg=操作成功, code=0}
2019-01-29 10:57:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:57:23 -==> Parameters: 123(String), admin(String), 登录(String), 9(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 10:57:23.362(Timestamp)
2019-01-29 10:57:23 -请求地址 : http://localhost:8080/index
2019-01-29 10:57:23 -HTTP METHOD : GET
2019-01-29 10:57:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 10:57:23 -参数 : [{}]
2019-01-29 10:57:23 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 10:57:23 -==> Parameters: 123(String)
2019-01-29 10:57:23 -<==      Total: 3
2019-01-29 10:57:23 -<==    Updates: 1
2019-01-29 10:57:23 -耗时 : 23
2019-01-29 10:57:23 -返回值 : index_v1
2019-01-29 10:57:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 10:57:23 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 10:57:23.401(Timestamp)
2019-01-29 10:57:23 -<==    Updates: 1
2019-01-29 11:04:18 -请求地址 : http://localhost:8080/index
2019-01-29 11:04:18 -HTTP METHOD : GET
2019-01-29 11:04:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:04:18 -参数 : [{}]
2019-01-29 11:04:18 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:04:18 -==> Parameters: 123(String)
2019-01-29 11:04:18 -<==      Total: 3
2019-01-29 11:04:18 -耗时 : 25
2019-01-29 11:04:18 -返回值 : index_v1
2019-01-29 11:04:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:04:18 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:04:18.689(Timestamp)
2019-01-29 11:04:18 -<==    Updates: 1
2019-01-29 11:05:50 -请求地址 : http://localhost:8080/index
2019-01-29 11:05:50 -HTTP METHOD : GET
2019-01-29 11:05:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:05:50 -参数 : [{}]
2019-01-29 11:05:50 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:05:50 -==> Parameters: 123(String)
2019-01-29 11:05:50 -<==      Total: 3
2019-01-29 11:05:51 -耗时 : 26
2019-01-29 11:05:51 -返回值 : index_v1
2019-01-29 11:05:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:05:51 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:05:51.01(Timestamp)
2019-01-29 11:05:51 -<==    Updates: 1
2019-01-29 11:07:02 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2019-01-29 11:07:38 -Validating all active sessions...
2019-01-29 11:07:38 -Finished session validation.  [9] sessions were stopped.
2019-01-29 11:09:59 -请求地址 : http://localhost:8080/index
2019-01-29 11:09:59 -HTTP METHOD : GET
2019-01-29 11:09:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:09:59 -参数 : [{}]
2019-01-29 11:09:59 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:09:59 -==> Parameters: 123(String)
2019-01-29 11:09:59 -<==      Total: 3
2019-01-29 11:09:59 -耗时 : 26
2019-01-29 11:09:59 -返回值 : index_v1
2019-01-29 11:09:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:09:59 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:09:59.898(Timestamp)
2019-01-29 11:09:59 -<==    Updates: 1
2019-01-29 11:10:32 -请求地址 : http://localhost:8080/index
2019-01-29 11:10:32 -HTTP METHOD : GET
2019-01-29 11:10:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:10:32 -参数 : [{}]
2019-01-29 11:10:32 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:10:32 -==> Parameters: 123(String)
2019-01-29 11:10:32 -<==      Total: 3
2019-01-29 11:10:32 -耗时 : 33
2019-01-29 11:10:32 -返回值 : index_v1
2019-01-29 11:10:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:10:32 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:10:32.39(Timestamp)
2019-01-29 11:10:32 -<==    Updates: 1
2019-01-29 11:11:33 -请求地址 : http://localhost:8080/index
2019-01-29 11:11:33 -HTTP METHOD : GET
2019-01-29 11:11:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:11:33 -参数 : [{}]
2019-01-29 11:11:33 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:11:33 -==> Parameters: 123(String)
2019-01-29 11:11:33 -<==      Total: 3
2019-01-29 11:11:33 -耗时 : 33
2019-01-29 11:11:33 -返回值 : index_v1
2019-01-29 11:11:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:11:33 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:11:33.447(Timestamp)
2019-01-29 11:11:33 -<==    Updates: 1
2019-01-29 11:12:36 -请求地址 : http://localhost:8080/index
2019-01-29 11:12:36 -HTTP METHOD : GET
2019-01-29 11:12:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:12:36 -参数 : [{}]
2019-01-29 11:12:36 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:12:36 -==> Parameters: 123(String)
2019-01-29 11:12:36 -<==      Total: 3
2019-01-29 11:12:36 -耗时 : 31
2019-01-29 11:12:36 -返回值 : index_v1
2019-01-29 11:12:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:12:36 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:12:36.864(Timestamp)
2019-01-29 11:12:36 -<==    Updates: 1
2019-01-29 11:13:10 -请求地址 : http://localhost:8080/index
2019-01-29 11:13:10 -HTTP METHOD : GET
2019-01-29 11:13:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:13:10 -参数 : [{}]
2019-01-29 11:13:10 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:13:10 -==> Parameters: 123(String)
2019-01-29 11:13:10 -<==      Total: 3
2019-01-29 11:13:10 -耗时 : 29
2019-01-29 11:13:10 -返回值 : index_v1
2019-01-29 11:13:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:13:10 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:13:10.414(Timestamp)
2019-01-29 11:13:10 -<==    Updates: 1
2019-01-29 11:13:27 -请求地址 : http://localhost:8080/index
2019-01-29 11:13:27 -HTTP METHOD : GET
2019-01-29 11:13:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:13:27 -参数 : [{}]
2019-01-29 11:13:27 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:13:27 -==> Parameters: 123(String)
2019-01-29 11:13:27 -<==      Total: 3
2019-01-29 11:13:28 -耗时 : 25
2019-01-29 11:13:28 -返回值 : index_v1
2019-01-29 11:13:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:13:28 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:13:28.004(Timestamp)
2019-01-29 11:13:28 -<==    Updates: 1
2019-01-29 11:15:28 -请求地址 : http://localhost:8080/index
2019-01-29 11:15:28 -HTTP METHOD : GET
2019-01-29 11:15:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:15:28 -参数 : [{}]
2019-01-29 11:15:28 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:15:28 -==> Parameters: 123(String)
2019-01-29 11:15:28 -<==      Total: 3
2019-01-29 11:15:28 -耗时 : 24
2019-01-29 11:15:28 -返回值 : index_v1
2019-01-29 11:15:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:15:28 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:15:28.385(Timestamp)
2019-01-29 11:15:28 -<==    Updates: 1
2019-01-29 11:15:56 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 11:15:56 -==> Parameters: 123(String)
2019-01-29 11:15:56 -<==      Total: 7
2019-01-29 11:15:56 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 11:15:56 -HTTP METHOD : GET
2019-01-29 11:15:56 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 11:15:56 -参数 : []
2019-01-29 11:15:56 -耗时 : 0
2019-01-29 11:15:56 -返回值 : system/user/user
2019-01-29 11:15:56 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 11:15:56 -HTTP METHOD : GET
2019-01-29 11:15:56 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 11:15:56 -参数 : [{page=1, limit=15}]
2019-01-29 11:15:56 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 11:15:56 -==> Parameters: 
2019-01-29 11:15:56 -<==      Total: 2
2019-01-29 11:15:56 -==>  Preparing: select count(*) from sys_user 
2019-01-29 11:15:56 -==> Parameters: 
2019-01-29 11:15:56 -<==      Total: 1
2019-01-29 11:15:56 -耗时 : 17
2019-01-29 11:15:56 -返回值 : com.bootdo.common.utils.PageUtils@c430fcc
2019-01-29 11:17:06 -请求地址 : http://localhost:8080/index
2019-01-29 11:17:06 -HTTP METHOD : GET
2019-01-29 11:17:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:17:06 -参数 : [{}]
2019-01-29 11:17:06 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:17:06 -==> Parameters: 123(String)
2019-01-29 11:17:06 -<==      Total: 3
2019-01-29 11:17:06 -耗时 : 24
2019-01-29 11:17:06 -返回值 : index_v1
2019-01-29 11:17:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:17:06 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:17:06.976(Timestamp)
2019-01-29 11:17:07 -<==    Updates: 1
2019-01-29 11:18:18 -请求地址 : http://localhost:8080/index
2019-01-29 11:18:18 -HTTP METHOD : GET
2019-01-29 11:18:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:18:18 -参数 : [{}]
2019-01-29 11:18:18 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:18:18 -==> Parameters: 123(String)
2019-01-29 11:18:18 -<==      Total: 3
2019-01-29 11:18:18 -耗时 : 25
2019-01-29 11:18:18 -返回值 : index_v1
2019-01-29 11:18:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:18:18 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:18:18.031(Timestamp)
2019-01-29 11:18:18 -<==    Updates: 1
2019-01-29 11:18:52 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 11:18:52 -==> Parameters: 123(String)
2019-01-29 11:18:52 -<==      Total: 7
2019-01-29 11:18:52 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 11:18:52 -HTTP METHOD : GET
2019-01-29 11:18:52 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 11:18:52 -参数 : []
2019-01-29 11:18:52 -耗时 : 1
2019-01-29 11:18:52 -返回值 : system/user/user
2019-01-29 11:18:52 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 11:18:52 -HTTP METHOD : GET
2019-01-29 11:18:52 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 11:18:52 -参数 : [{page=1, limit=15}]
2019-01-29 11:18:52 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 11:18:52 -==> Parameters: 
2019-01-29 11:18:52 -<==      Total: 2
2019-01-29 11:18:52 -==>  Preparing: select count(*) from sys_user 
2019-01-29 11:18:52 -==> Parameters: 
2019-01-29 11:18:52 -<==      Total: 1
2019-01-29 11:18:52 -耗时 : 18
2019-01-29 11:18:52 -返回值 : com.bootdo.common.utils.PageUtils@474d2975
2019-01-29 11:19:46 -请求地址 : http://localhost:8080/index
2019-01-29 11:19:46 -HTTP METHOD : GET
2019-01-29 11:19:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:19:46 -参数 : [{}]
2019-01-29 11:19:46 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:19:46 -==> Parameters: 123(String)
2019-01-29 11:19:46 -<==      Total: 3
2019-01-29 11:19:46 -耗时 : 26
2019-01-29 11:19:46 -返回值 : index_v1
2019-01-29 11:19:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:19:46 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:19:46.123(Timestamp)
2019-01-29 11:19:46 -<==    Updates: 1
2019-01-29 11:19:51 -请求地址 : http://localhost:8080/index
2019-01-29 11:19:51 -HTTP METHOD : GET
2019-01-29 11:19:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:19:51 -参数 : [{}]
2019-01-29 11:19:51 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:19:51 -==> Parameters: 123(String)
2019-01-29 11:19:51 -<==      Total: 3
2019-01-29 11:19:51 -耗时 : 29
2019-01-29 11:19:51 -返回值 : index_v1
2019-01-29 11:19:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:19:51 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:19:51.775(Timestamp)
2019-01-29 11:19:51 -<==    Updates: 1
2019-01-29 11:19:55 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 11:19:55 -HTTP METHOD : GET
2019-01-29 11:19:55 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 11:19:55 -参数 : []
2019-01-29 11:19:55 -耗时 : 0
2019-01-29 11:19:55 -返回值 : system/user/user
2019-01-29 11:19:55 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 11:19:55 -HTTP METHOD : GET
2019-01-29 11:19:55 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 11:19:55 -参数 : [{page=1, limit=15}]
2019-01-29 11:19:55 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 11:19:55 -==> Parameters: 
2019-01-29 11:19:55 -<==      Total: 2
2019-01-29 11:19:55 -==>  Preparing: select count(*) from sys_user 
2019-01-29 11:19:55 -==> Parameters: 
2019-01-29 11:19:55 -<==      Total: 1
2019-01-29 11:19:55 -耗时 : 20
2019-01-29 11:19:55 -返回值 : com.bootdo.common.utils.PageUtils@704a0a1d
2019-01-29 11:21:07 -请求地址 : http://localhost:8080/index
2019-01-29 11:21:07 -HTTP METHOD : GET
2019-01-29 11:21:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:21:07 -参数 : [{}]
2019-01-29 11:21:07 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:21:07 -==> Parameters: 123(String)
2019-01-29 11:21:07 -<==      Total: 3
2019-01-29 11:21:07 -耗时 : 27
2019-01-29 11:21:07 -返回值 : index_v1
2019-01-29 11:21:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:21:07 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:21:07.677(Timestamp)
2019-01-29 11:21:07 -<==    Updates: 1
2019-01-29 11:21:10 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 11:21:10 -==> Parameters: 123(String)
2019-01-29 11:21:10 -<==      Total: 7
2019-01-29 11:21:10 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 11:21:10 -HTTP METHOD : GET
2019-01-29 11:21:10 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 11:21:10 -参数 : []
2019-01-29 11:21:10 -耗时 : 0
2019-01-29 11:21:10 -返回值 : system/user/user
2019-01-29 11:21:10 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 11:21:10 -HTTP METHOD : GET
2019-01-29 11:21:10 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 11:21:10 -参数 : [{page=1, limit=15}]
2019-01-29 11:21:10 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 11:21:10 -==> Parameters: 
2019-01-29 11:21:10 -<==      Total: 2
2019-01-29 11:21:10 -==>  Preparing: select count(*) from sys_user 
2019-01-29 11:21:10 -==> Parameters: 
2019-01-29 11:21:10 -<==      Total: 1
2019-01-29 11:21:10 -耗时 : 16
2019-01-29 11:21:10 -返回值 : com.bootdo.common.utils.PageUtils@4749c3dc
2019-01-29 11:21:49 -请求地址 : http://localhost:8080/index
2019-01-29 11:21:49 -HTTP METHOD : GET
2019-01-29 11:21:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:21:49 -参数 : [{}]
2019-01-29 11:21:49 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:21:49 -==> Parameters: 123(String)
2019-01-29 11:21:49 -<==      Total: 3
2019-01-29 11:21:49 -耗时 : 22
2019-01-29 11:21:49 -返回值 : index_v1
2019-01-29 11:21:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:21:49 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:21:49.436(Timestamp)
2019-01-29 11:21:49 -<==    Updates: 1
2019-01-29 11:21:52 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 11:21:52 -HTTP METHOD : GET
2019-01-29 11:21:52 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 11:21:52 -参数 : []
2019-01-29 11:21:52 -耗时 : 1
2019-01-29 11:21:52 -返回值 : system/user/user
2019-01-29 11:21:52 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 11:21:52 -HTTP METHOD : GET
2019-01-29 11:21:52 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 11:21:52 -参数 : [{page=1, limit=15}]
2019-01-29 11:21:52 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 11:21:52 -==> Parameters: 
2019-01-29 11:21:52 -<==      Total: 2
2019-01-29 11:21:52 -==>  Preparing: select count(*) from sys_user 
2019-01-29 11:21:52 -==> Parameters: 
2019-01-29 11:21:52 -<==      Total: 1
2019-01-29 11:21:52 -耗时 : 23
2019-01-29 11:21:52 -返回值 : com.bootdo.common.utils.PageUtils@5a6a4323
2019-01-29 11:22:38 -请求地址 : http://localhost:8080/index
2019-01-29 11:22:38 -HTTP METHOD : GET
2019-01-29 11:22:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:22:38 -参数 : [{}]
2019-01-29 11:22:38 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:22:38 -==> Parameters: 123(String)
2019-01-29 11:22:38 -<==      Total: 3
2019-01-29 11:22:38 -耗时 : 27
2019-01-29 11:22:38 -返回值 : index_v1
2019-01-29 11:22:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:22:38 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:22:38.09(Timestamp)
2019-01-29 11:22:38 -<==    Updates: 1
2019-01-29 11:22:40 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 11:22:40 -HTTP METHOD : GET
2019-01-29 11:22:40 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 11:22:40 -参数 : []
2019-01-29 11:22:40 -耗时 : 0
2019-01-29 11:22:40 -返回值 : system/user/user
2019-01-29 11:22:40 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 11:22:40 -HTTP METHOD : GET
2019-01-29 11:22:40 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 11:22:40 -参数 : [{page=1, limit=15}]
2019-01-29 11:22:40 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 11:22:40 -==> Parameters: 
2019-01-29 11:22:40 -<==      Total: 2
2019-01-29 11:22:40 -==>  Preparing: select count(*) from sys_user 
2019-01-29 11:22:40 -==> Parameters: 
2019-01-29 11:22:40 -<==      Total: 1
2019-01-29 11:22:40 -耗时 : 14
2019-01-29 11:22:40 -返回值 : com.bootdo.common.utils.PageUtils@42717ee2
2019-01-29 11:23:08 -请求地址 : http://localhost:8080/index
2019-01-29 11:23:08 -HTTP METHOD : GET
2019-01-29 11:23:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:23:08 -参数 : [{}]
2019-01-29 11:23:08 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:23:08 -==> Parameters: 123(String)
2019-01-29 11:23:08 -<==      Total: 3
2019-01-29 11:23:08 -耗时 : 24
2019-01-29 11:23:08 -返回值 : index_v1
2019-01-29 11:23:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:23:08 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:23:08.245(Timestamp)
2019-01-29 11:23:08 -<==    Updates: 1
2019-01-29 11:23:11 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 11:23:11 -==> Parameters: 123(String)
2019-01-29 11:23:11 -<==      Total: 7
2019-01-29 11:23:11 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 11:23:11 -HTTP METHOD : GET
2019-01-29 11:23:11 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 11:23:11 -参数 : []
2019-01-29 11:23:11 -耗时 : 1
2019-01-29 11:23:11 -返回值 : system/user/user
2019-01-29 11:23:11 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 11:23:11 -HTTP METHOD : GET
2019-01-29 11:23:11 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 11:23:11 -参数 : [{page=1, limit=15}]
2019-01-29 11:23:11 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 11:23:11 -==> Parameters: 
2019-01-29 11:23:11 -<==      Total: 2
2019-01-29 11:23:11 -==>  Preparing: select count(*) from sys_user 
2019-01-29 11:23:11 -==> Parameters: 
2019-01-29 11:23:11 -<==      Total: 1
2019-01-29 11:23:11 -耗时 : 15
2019-01-29 11:23:11 -返回值 : com.bootdo.common.utils.PageUtils@6200958a
2019-01-29 11:33:41 -请求地址 : http://localhost:8080/index
2019-01-29 11:33:41 -HTTP METHOD : GET
2019-01-29 11:33:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:33:41 -参数 : [{}]
2019-01-29 11:33:41 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:33:41 -==> Parameters: 123(String)
2019-01-29 11:33:41 -<==      Total: 3
2019-01-29 11:33:41 -耗时 : 31
2019-01-29 11:33:41 -返回值 : index_v1
2019-01-29 11:33:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:33:41 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:33:41.643(Timestamp)
2019-01-29 11:33:41 -<==    Updates: 1
2019-01-29 11:36:17 -请求地址 : http://localhost:8080/index
2019-01-29 11:36:17 -HTTP METHOD : GET
2019-01-29 11:36:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:36:17 -参数 : [{}]
2019-01-29 11:36:17 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:36:17 -==> Parameters: 123(String)
2019-01-29 11:36:17 -<==      Total: 3
2019-01-29 11:36:17 -耗时 : 26
2019-01-29 11:36:17 -返回值 : index_v1
2019-01-29 11:36:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:36:17 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:36:17.375(Timestamp)
2019-01-29 11:36:17 -[THYMELEAF][http-nio-8080-exec-2] Exception processing template "index_v1": An error happened during template parsing (template: "class path resource [templates/index_v1.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index_v1.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Could not parse as expression: "fa fa-book" (template: "index_v1" - line 57, col 8)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "fa fa-book" (template: "index_v1" - line 57, col 8)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:103)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
2019-01-29 11:36:17 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/index_v1.html]")] with root cause
org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "fa fa-book" (template: "index_v1" - line 57, col 8)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:103)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-29 11:36:17 -<==    Updates: 1
2019-01-29 11:36:36 -请求地址 : http://localhost:8080/index
2019-01-29 11:36:36 -HTTP METHOD : GET
2019-01-29 11:36:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:36:36 -参数 : [{}]
2019-01-29 11:36:36 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:36:36 -==> Parameters: 123(String)
2019-01-29 11:36:36 -<==      Total: 3
2019-01-29 11:36:36 -耗时 : 23
2019-01-29 11:36:36 -返回值 : index_v1
2019-01-29 11:36:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:36:36 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:36:36.456(Timestamp)
2019-01-29 11:36:36 -<==    Updates: 1
2019-01-29 11:37:02 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 3]
2019-01-29 11:37:38 -请求地址 : http://localhost:8080/index
2019-01-29 11:37:38 -HTTP METHOD : GET
2019-01-29 11:37:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:37:38 -参数 : [{}]
2019-01-29 11:37:38 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:37:38 -==> Parameters: 123(String)
2019-01-29 11:37:38 -<==      Total: 3
2019-01-29 11:37:38 -耗时 : 35
2019-01-29 11:37:38 -返回值 : index_v1
2019-01-29 11:37:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:37:38 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:37:38.063(Timestamp)
2019-01-29 11:37:38 -<==    Updates: 1
2019-01-29 11:37:54 -请求地址 : http://localhost:8080/index
2019-01-29 11:37:54 -HTTP METHOD : GET
2019-01-29 11:37:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:37:54 -参数 : [{}]
2019-01-29 11:37:54 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:37:54 -==> Parameters: 123(String)
2019-01-29 11:37:54 -<==      Total: 3
2019-01-29 11:37:54 -耗时 : 30
2019-01-29 11:37:54 -返回值 : index_v1
2019-01-29 11:37:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:37:54 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:37:54.92(Timestamp)
2019-01-29 11:37:54 -<==    Updates: 1
2019-01-29 11:38:48 -请求地址 : http://localhost:8080/index
2019-01-29 11:38:48 -HTTP METHOD : GET
2019-01-29 11:38:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:38:48 -参数 : [{}]
2019-01-29 11:38:48 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:38:48 -==> Parameters: 123(String)
2019-01-29 11:38:48 -<==      Total: 3
2019-01-29 11:40:07 -耗时 : 79042
2019-01-29 11:40:07 -返回值 : index_v1
2019-01-29 11:40:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:40:07 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 79043(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:40:07.756(Timestamp)
2019-01-29 11:40:07 -<==    Updates: 1
2019-01-29 11:42:06 -请求地址 : http://localhost:8080/index
2019-01-29 11:42:06 -HTTP METHOD : GET
2019-01-29 11:42:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:42:06 -参数 : [{}]
2019-01-29 11:42:06 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:42:06 -==> Parameters: 123(String)
2019-01-29 11:42:06 -<==      Total: 3
2019-01-29 11:42:06 -耗时 : 30
2019-01-29 11:42:06 -返回值 : index_v1
2019-01-29 11:42:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:42:06 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:42:06.554(Timestamp)
2019-01-29 11:42:06 -<==    Updates: 1
2019-01-29 11:42:30 -请求地址 : http://localhost:8080/login;JSESSIONID=5625d21f-061c-4a27-a451-052ee5dcee34
2019-01-29 11:42:30 -HTTP METHOD : GET
2019-01-29 11:42:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 11:42:30 -参数 : []
2019-01-29 11:42:30 -耗时 : 1
2019-01-29 11:42:30 -返回值 : login
2019-01-29 11:42:30 -请求地址 : http://localhost:8080/login
2019-01-29 11:42:30 -HTTP METHOD : GET
2019-01-29 11:42:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 11:42:30 -参数 : []
2019-01-29 11:42:30 -耗时 : 0
2019-01-29 11:42:30 -返回值 : login
2019-01-29 11:42:35 -请求地址 : http://localhost:8080/login
2019-01-29 11:42:35 -HTTP METHOD : POST
2019-01-29 11:42:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 11:42:35 -参数 : [admin, 123456]
2019-01-29 11:42:35 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 11:42:35 -==> Parameters: admin(String)
2019-01-29 11:42:35 -<==      Total: 1
2019-01-29 11:42:35 -耗时 : 5
2019-01-29 11:42:35 -返回值 : {msg=操作成功, code=0}
2019-01-29 11:42:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:42:35 -==> Parameters: 123(String), admin(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 11:42:35.019(Timestamp)
2019-01-29 11:42:35 -请求地址 : http://localhost:8080/index
2019-01-29 11:42:35 -HTTP METHOD : GET
2019-01-29 11:42:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:42:35 -参数 : [{}]
2019-01-29 11:42:35 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:42:35 -==> Parameters: 123(String)
2019-01-29 11:42:35 -<==      Total: 3
2019-01-29 11:42:35 -耗时 : 19
2019-01-29 11:42:35 -返回值 : index_v1
2019-01-29 11:42:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:42:35 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:42:35.054(Timestamp)
2019-01-29 11:42:35 -<==    Updates: 1
2019-01-29 11:42:35 -<==    Updates: 1
2019-01-29 11:44:23 -请求地址 : http://localhost:8080/index
2019-01-29 11:44:23 -HTTP METHOD : GET
2019-01-29 11:44:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:44:23 -参数 : [{}]
2019-01-29 11:44:23 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:44:23 -==> Parameters: 123(String)
2019-01-29 11:44:23 -<==      Total: 3
2019-01-29 11:44:23 -耗时 : 27
2019-01-29 11:44:23 -返回值 : index_v1
2019-01-29 11:44:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:44:24 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:44:23.999(Timestamp)
2019-01-29 11:44:24 -<==    Updates: 1
2019-01-29 11:46:13 -请求地址 : http://localhost:8080/index
2019-01-29 11:46:13 -HTTP METHOD : GET
2019-01-29 11:46:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:46:13 -参数 : [{}]
2019-01-29 11:46:13 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:46:13 -==> Parameters: 123(String)
2019-01-29 11:46:13 -<==      Total: 3
2019-01-29 11:46:13 -耗时 : 30
2019-01-29 11:46:13 -返回值 : index_v1
2019-01-29 11:46:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:46:13 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:46:13.665(Timestamp)
2019-01-29 11:46:13 -<==    Updates: 1
2019-01-29 11:47:21 -请求地址 : http://localhost:8080/index
2019-01-29 11:47:21 -HTTP METHOD : GET
2019-01-29 11:47:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:47:21 -参数 : [{}]
2019-01-29 11:47:21 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:47:21 -==> Parameters: 123(String)
2019-01-29 11:47:21 -<==      Total: 3
2019-01-29 11:47:21 -耗时 : 26
2019-01-29 11:47:21 -返回值 : index_v1
2019-01-29 11:47:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:47:21 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:47:21.096(Timestamp)
2019-01-29 11:47:21 -<==    Updates: 1
2019-01-29 11:48:29 -请求地址 : http://localhost:8080/index
2019-01-29 11:48:29 -HTTP METHOD : GET
2019-01-29 11:48:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:48:29 -参数 : [{}]
2019-01-29 11:48:29 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:48:29 -==> Parameters: 123(String)
2019-01-29 11:48:29 -<==      Total: 3
2019-01-29 11:48:29 -耗时 : 23
2019-01-29 11:48:29 -返回值 : index_v1
2019-01-29 11:48:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:48:29 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:48:29.823(Timestamp)
2019-01-29 11:48:29 -<==    Updates: 1
2019-01-29 11:49:36 -请求地址 : http://localhost:8080/index
2019-01-29 11:49:36 -HTTP METHOD : GET
2019-01-29 11:49:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:49:36 -参数 : [{}]
2019-01-29 11:49:36 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:49:36 -==> Parameters: 123(String)
2019-01-29 11:49:36 -<==      Total: 3
2019-01-29 11:49:36 -耗时 : 26
2019-01-29 11:49:36 -返回值 : index_v1
2019-01-29 11:49:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:49:36 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:49:36.203(Timestamp)
2019-01-29 11:49:36 -<==    Updates: 1
2019-01-29 11:50:26 -请求地址 : http://localhost:8080/index
2019-01-29 11:50:26 -HTTP METHOD : GET
2019-01-29 11:50:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:50:26 -参数 : [{}]
2019-01-29 11:50:26 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:50:26 -==> Parameters: 123(String)
2019-01-29 11:50:26 -<==      Total: 3
2019-01-29 11:50:26 -耗时 : 21
2019-01-29 11:50:26 -返回值 : index_v1
2019-01-29 11:50:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:50:26 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:50:26.91(Timestamp)
2019-01-29 11:50:26 -<==    Updates: 1
2019-01-29 11:53:08 -请求地址 : http://localhost:8080/index
2019-01-29 11:53:08 -HTTP METHOD : GET
2019-01-29 11:53:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:53:08 -参数 : [{}]
2019-01-29 11:53:08 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:53:08 -==> Parameters: 123(String)
2019-01-29 11:53:08 -<==      Total: 3
2019-01-29 11:53:08 -耗时 : 17
2019-01-29 11:53:08 -返回值 : index_v1
2019-01-29 11:53:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:53:08 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:53:08.654(Timestamp)
2019-01-29 11:53:08 -<==    Updates: 1
2019-01-29 11:55:09 -请求地址 : http://localhost:8080/login;JSESSIONID=b64f144f-f146-4542-9229-81368b8c8f68
2019-01-29 11:55:09 -HTTP METHOD : GET
2019-01-29 11:55:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 11:55:09 -参数 : []
2019-01-29 11:55:09 -耗时 : 1
2019-01-29 11:55:09 -返回值 : login
2019-01-29 11:55:10 -请求地址 : http://localhost:8080/login
2019-01-29 11:55:10 -HTTP METHOD : GET
2019-01-29 11:55:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 11:55:10 -参数 : []
2019-01-29 11:55:10 -耗时 : 0
2019-01-29 11:55:10 -返回值 : login
2019-01-29 11:55:13 -请求地址 : http://localhost:8080/login
2019-01-29 11:55:13 -HTTP METHOD : POST
2019-01-29 11:55:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 11:55:13 -参数 : [admin, 123456]
2019-01-29 11:55:13 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 11:55:13 -==> Parameters: admin(String)
2019-01-29 11:55:13 -<==      Total: 1
2019-01-29 11:55:13 -耗时 : 6
2019-01-29 11:55:13 -返回值 : {msg=操作成功, code=0}
2019-01-29 11:55:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:55:13 -==> Parameters: 123(String), admin(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 11:55:13.887(Timestamp)
2019-01-29 11:55:13 -请求地址 : http://localhost:8080/index
2019-01-29 11:55:13 -HTTP METHOD : GET
2019-01-29 11:55:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:55:13 -参数 : [{}]
2019-01-29 11:55:13 -<==    Updates: 1
2019-01-29 11:55:13 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:55:13 -==> Parameters: 123(String)
2019-01-29 11:55:13 -<==      Total: 3
2019-01-29 11:55:13 -耗时 : 31
2019-01-29 11:55:13 -返回值 : index_v1
2019-01-29 11:55:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:55:13 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:55:13.95(Timestamp)
2019-01-29 11:55:14 -<==    Updates: 1
2019-01-29 11:55:40 -请求地址 : http://localhost:8080/index
2019-01-29 11:55:40 -HTTP METHOD : GET
2019-01-29 11:55:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:55:40 -参数 : [{}]
2019-01-29 11:55:40 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:55:40 -==> Parameters: 123(String)
2019-01-29 11:55:40 -<==      Total: 3
2019-01-29 11:55:40 -耗时 : 24
2019-01-29 11:55:40 -返回值 : index_v1
2019-01-29 11:55:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:55:40 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:55:40.558(Timestamp)
2019-01-29 11:55:40 -<==    Updates: 1
2019-01-29 11:55:44 -请求地址 : http://localhost:8080/index
2019-01-29 11:55:44 -HTTP METHOD : GET
2019-01-29 11:55:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:55:44 -参数 : [{}]
2019-01-29 11:55:44 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:55:44 -==> Parameters: 123(String)
2019-01-29 11:55:44 -<==      Total: 3
2019-01-29 11:55:44 -耗时 : 19
2019-01-29 11:55:44 -返回值 : index_v1
2019-01-29 11:55:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:55:44 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:55:44.827(Timestamp)
2019-01-29 11:55:44 -<==    Updates: 1
2019-01-29 11:55:53 -请求地址 : http://localhost:8080/login;JSESSIONID=ce56371b-247f-42fe-be3f-6ab58246fee0
2019-01-29 11:55:53 -HTTP METHOD : GET
2019-01-29 11:55:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 11:55:53 -参数 : []
2019-01-29 11:55:53 -耗时 : 0
2019-01-29 11:55:53 -返回值 : login
2019-01-29 11:55:53 -请求地址 : http://localhost:8080/login
2019-01-29 11:55:53 -HTTP METHOD : GET
2019-01-29 11:55:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 11:55:53 -参数 : []
2019-01-29 11:55:53 -耗时 : 0
2019-01-29 11:55:53 -返回值 : login
2019-01-29 11:55:56 -请求地址 : http://localhost:8080/login
2019-01-29 11:55:56 -HTTP METHOD : POST
2019-01-29 11:55:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 11:55:56 -参数 : [admin, 123456]
2019-01-29 11:55:56 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 11:55:56 -==> Parameters: admin(String)
2019-01-29 11:55:56 -<==      Total: 1
2019-01-29 11:55:56 -耗时 : 8
2019-01-29 11:55:56 -返回值 : {msg=操作成功, code=0}
2019-01-29 11:55:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:55:56 -==> Parameters: 123(String), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 11:55:56.12(Timestamp)
2019-01-29 11:55:56 -请求地址 : http://localhost:8080/index
2019-01-29 11:55:56 -HTTP METHOD : GET
2019-01-29 11:55:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:55:56 -参数 : [{}]
2019-01-29 11:55:56 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:55:56 -==> Parameters: 123(String)
2019-01-29 11:55:56 -<==      Total: 3
2019-01-29 11:55:56 -耗时 : 24
2019-01-29 11:55:56 -返回值 : index_v1
2019-01-29 11:55:56 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:55:56 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:55:56.163(Timestamp)
2019-01-29 11:55:56 -<==    Updates: 1
2019-01-29 11:55:56 -<==    Updates: 1
2019-01-29 11:57:01 -请求地址 : http://localhost:8080/index
2019-01-29 11:57:01 -HTTP METHOD : GET
2019-01-29 11:57:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:57:01 -参数 : [{}]
2019-01-29 11:57:01 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:57:01 -==> Parameters: 123(String)
2019-01-29 11:57:01 -<==      Total: 3
2019-01-29 11:57:01 -耗时 : 27
2019-01-29 11:57:01 -返回值 : index_v1
2019-01-29 11:57:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:57:01 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:57:01.616(Timestamp)
2019-01-29 11:57:01 -<==    Updates: 1
2019-01-29 11:57:49 -请求地址 : http://localhost:8080/index
2019-01-29 11:57:49 -HTTP METHOD : GET
2019-01-29 11:57:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:57:49 -参数 : [{}]
2019-01-29 11:57:49 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:57:49 -==> Parameters: 123(String)
2019-01-29 11:57:49 -<==      Total: 3
2019-01-29 11:57:49 -耗时 : 18
2019-01-29 11:57:49 -返回值 : index_v1
2019-01-29 11:57:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:57:49 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:57:49.331(Timestamp)
2019-01-29 11:57:49 -<==    Updates: 1
2019-01-29 11:58:16 -请求地址 : http://localhost:8080/index
2019-01-29 11:58:16 -HTTP METHOD : GET
2019-01-29 11:58:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 11:58:16 -参数 : [{}]
2019-01-29 11:58:16 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 11:58:16 -==> Parameters: 123(String)
2019-01-29 11:58:16 -<==      Total: 3
2019-01-29 11:58:16 -耗时 : 23
2019-01-29 11:58:16 -返回值 : index_v1
2019-01-29 11:58:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 11:58:16 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 11:58:16.377(Timestamp)
2019-01-29 11:58:16 -<==    Updates: 1
2019-01-29 12:07:02 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 4]
2019-01-29 12:07:39 -Validating all active sessions...
2019-01-29 12:07:39 -Finished session validation.  [5] sessions were stopped.
2019-01-29 12:37:02 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 5]
2019-01-29 13:07:03 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 6]
2019-01-29 13:07:39 -Validating all active sessions...
2019-01-29 13:07:39 -Finished session validation.  [4] sessions were stopped.
2019-01-29 13:36:30 -请求地址 : http://localhost:8080/login;JSESSIONID=33e39288-d538-40dc-addb-9ef0304dd0e8
2019-01-29 13:36:30 -HTTP METHOD : GET
2019-01-29 13:36:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 13:36:30 -参数 : []
2019-01-29 13:36:30 -耗时 : 0
2019-01-29 13:36:30 -返回值 : login
2019-01-29 13:36:35 -请求地址 : http://localhost:8080/login
2019-01-29 13:36:35 -HTTP METHOD : POST
2019-01-29 13:36:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 13:36:35 -参数 : [admin, 123456]
2019-01-29 13:36:35 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 13:36:35 -==> Parameters: admin(String)
2019-01-29 13:36:35 -<==      Total: 1
2019-01-29 13:36:35 -耗时 : 15
2019-01-29 13:36:35 -返回值 : {msg=操作成功, code=0}
2019-01-29 13:36:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 13:36:35 -==> Parameters: 123(String), admin(String), 登录(String), 15(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 13:36:35.405(Timestamp)
2019-01-29 13:36:35 -<==    Updates: 1
2019-01-29 13:36:35 -请求地址 : http://localhost:8080/index
2019-01-29 13:36:35 -HTTP METHOD : GET
2019-01-29 13:36:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 13:36:35 -参数 : [{}]
2019-01-29 13:36:35 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 13:36:35 -==> Parameters: 123(String)
2019-01-29 13:36:35 -<==      Total: 3
2019-01-29 13:36:35 -耗时 : 17
2019-01-29 13:36:35 -返回值 : index_v1
2019-01-29 13:36:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 13:36:35 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 13:36:35.458(Timestamp)
2019-01-29 13:36:35 -<==    Updates: 1
2019-01-29 13:36:42 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 13:36:42 -==> Parameters: 123(String)
2019-01-29 13:36:42 -<==      Total: 7
2019-01-29 13:36:42 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 13:36:42 -HTTP METHOD : GET
2019-01-29 13:36:42 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 13:36:42 -参数 : []
2019-01-29 13:36:42 -耗时 : 0
2019-01-29 13:36:42 -返回值 : system/user/user
2019-01-29 13:36:43 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 13:36:43 -HTTP METHOD : GET
2019-01-29 13:36:43 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 13:36:43 -参数 : [{page=1, limit=15}]
2019-01-29 13:36:43 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 13:36:43 -==> Parameters: 
2019-01-29 13:36:43 -<==      Total: 2
2019-01-29 13:36:43 -==>  Preparing: select count(*) from sys_user 
2019-01-29 13:36:43 -==> Parameters: 
2019-01-29 13:36:43 -<==      Total: 1
2019-01-29 13:36:43 -耗时 : 20
2019-01-29 13:36:43 -返回值 : com.bootdo.common.utils.PageUtils@769e390
2019-01-29 13:37:03 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 7]
2019-01-29 14:07:03 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 8]
2019-01-29 14:07:39 -Validating all active sessions...
2019-01-29 14:07:39 -Finished session validation.  [1] sessions were stopped.
2019-01-29 14:09:09 -Starting BootdoApplication on YH-20180312AAAP with PID 10748 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-29 14:09:09 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-29 14:09:09 -The following profiles are active: dev
2019-01-29 14:09:09 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@12bd8a64: startup date [Tue Jan 29 14:09:09 CST 2019]; root of context hierarchy
2019-01-29 14:09:11 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$220b744a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 14:09:12 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$167f38ee] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 14:09:12 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 14:09:12 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 14:09:12 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 14:09:12 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$b11e05ec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 14:09:12 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d8f93e2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 14:09:12 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$cb526cd3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 14:09:12 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-29 14:09:12 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 14:09:12 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 14:09:12 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 14:09:13 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 14:09:13 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 14:09:13 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-29 14:09:13 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-29 14:09:13 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 14:09:13 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 14:09:13 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 14:09:13 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 14:09:14 -Tomcat initialized with port(s): 8080 (http)
2019-01-29 14:09:14 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 14:09:14 -Starting service [Tomcat]
2019-01-29 14:09:14 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-29 14:09:14 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-29 14:09:14 -Initializing Spring embedded WebApplicationContext
2019-01-29 14:09:14 -Root WebApplicationContext: initialization completed in 4731 ms
2019-01-29 14:09:14 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 14:09:14 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 14:09:14 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 14:09:14 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 14:09:14 -Filter xssFilter was not registered (disabled)
2019-01-29 14:09:14 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-29 14:09:14 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-29 14:09:14 -Servlet statViewServlet mapped to [/druid/*]
2019-01-29 14:09:14 -Servlet dispatcherServlet mapped to [/]
2019-01-29 14:09:15 -{dataSource-1} inited
2019-01-29 14:09:15 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@12bd8a64: startup date [Tue Jan 29 14:09:09 CST 2019]; root of context hierarchy
2019-01-29 14:09:16 -Using default implementation for ThreadExecutor
2019-01-29 14:09:16 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-29 14:09:16 -Quartz Scheduler v.2.2.1 created.
2019-01-29 14:09:16 -RAMJobStore initialized.
2019-01-29 14:09:16 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-29 14:09:16 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-29 14:09:16 -Quartz scheduler version: 2.2.1
2019-01-29 14:09:16 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2f6f4ac4
2019-01-29 14:09:16 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-29 14:09:16 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-29 14:09:17 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 14:09:17 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-29 14:09:17 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-29 14:09:17 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-29 14:09:17 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-29 14:09:17 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-29 14:09:17 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-29 14:09:17 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-29 14:09:17 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-29 14:09:17 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-29 14:09:17 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 14:09:17 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-29 14:09:17 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-29 14:09:17 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-29 14:09:17 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 14:09:17 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-29 14:09:17 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-29 14:09:17 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-29 14:09:17 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 14:09:17 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-29 14:09:17 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 14:09:17 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 14:09:17 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-29 14:09:17 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-29 14:09:17 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-29 14:09:17 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-29 14:09:17 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 14:09:17 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-29 14:09:17 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-29 14:09:17 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-29 14:09:17 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-29 14:09:17 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-29 14:09:17 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-29 14:09:17 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-29 14:09:17 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-29 14:09:17 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-29 14:09:17 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-29 14:09:17 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-29 14:09:17 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-29 14:09:17 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 14:09:17 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-29 14:09:17 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-29 14:09:17 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-29 14:09:17 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-29 14:09:17 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-29 14:09:17 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-29 14:09:17 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-29 14:09:17 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-29 14:09:17 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-29 14:09:17 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-29 14:09:17 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-29 14:09:17 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-29 14:09:17 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 14:09:17 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-29 14:09:17 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-29 14:09:17 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-29 14:09:17 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-29 14:09:17 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-29 14:09:17 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long)
2019-01-29 14:09:17 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long[])
2019-01-29 14:09:17 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-29 14:09:17 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 14:09:17 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-29 14:09:17 -Mapped "{[/system/staff/edit/{staffId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 14:09:17 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-29 14:09:17 -Mapped "{[/system/staff/selectView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.selectView()
2019-01-29 14:09:17 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-29 14:09:17 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-29 14:09:17 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-29 14:09:17 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-29 14:09:17 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 14:09:17 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-29 14:09:17 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-29 14:09:17 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-29 14:09:17 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-29 14:09:17 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 14:09:17 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-29 14:09:17 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-29 14:09:17 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-29 14:09:17 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-29 14:09:17 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-29 14:09:17 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-29 14:09:17 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-29 14:09:17 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-29 14:09:17 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-29 14:09:18 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-29 14:09:18 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-29 14:09:18 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-29 14:09:18 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 14:09:18 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@12bd8a64: startup date [Tue Jan 29 14:09:09 CST 2019]; root of context hierarchy
2019-01-29 14:09:18 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 14:09:18 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 14:09:18 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 14:09:18 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-29 14:09:19 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-29 14:09:19 -Registering beans for JMX exposure on startup
2019-01-29 14:09:19 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-29 14:09:19 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-29 14:09:19 -Starting beans in phase 2147483647
2019-01-29 14:09:19 -Context refreshed
2019-01-29 14:09:19 -Found 1 custom documentation plugin(s)
2019-01-29 14:09:19 -Scanning for api listing references
2019-01-29 14:09:20 -Generating unique operation named: removeUsingPOST_1
2019-01-29 14:09:20 -Generating unique operation named: editUsingGET_1
2019-01-29 14:09:20 -Generating unique operation named: listUsingGET_1
2019-01-29 14:09:20 -Generating unique operation named: updateUsingPOST_1
2019-01-29 14:09:20 -Generating unique operation named: addUsingGET_1
2019-01-29 14:09:20 -Generating unique operation named: editUsingGET_2
2019-01-29 14:09:20 -Generating unique operation named: listUsingGET_2
2019-01-29 14:09:20 -Generating unique operation named: removeUsingPOST_2
2019-01-29 14:09:20 -Generating unique operation named: removeUsingPOST_3
2019-01-29 14:09:20 -Generating unique operation named: saveUsingPOST_1
2019-01-29 14:09:20 -Generating unique operation named: updateUsingPOST_2
2019-01-29 14:09:20 -Generating unique operation named: listUsingGET_3
2019-01-29 14:09:20 -Generating unique operation named: removeUsingPOST_4
2019-01-29 14:09:20 -Generating unique operation named: welcomeUsingGET_1
2019-01-29 14:09:20 -Generating unique operation named: addUsingGET_2
2019-01-29 14:09:20 -Generating unique operation named: editUsingGET_3
2019-01-29 14:09:20 -Generating unique operation named: listUsingGET_4
2019-01-29 14:09:20 -Generating unique operation named: removeUsingPOST_5
2019-01-29 14:09:20 -Generating unique operation named: saveUsingPOST_2
2019-01-29 14:09:20 -Generating unique operation named: treeUsingGET_1
2019-01-29 14:09:20 -Generating unique operation named: updateUsingPOST_3
2019-01-29 14:09:20 -Generating unique operation named: addUsingGET_3
2019-01-29 14:09:20 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-29 14:09:20 -Generating unique operation named: editUsingGET_4
2019-01-29 14:09:20 -Generating unique operation named: listUsingGET_5
2019-01-29 14:09:20 -Generating unique operation named: saveUsingPOST_3
2019-01-29 14:09:20 -Generating unique operation named: saveUsingPOST_4
2019-01-29 14:09:20 -Generating unique operation named: updateUsingPOST_4
2019-01-29 14:09:20 -Generating unique operation named: listUsingGET_6
2019-01-29 14:09:20 -Generating unique operation named: listUsingHEAD_1
2019-01-29 14:09:20 -Generating unique operation named: listUsingPOST_1
2019-01-29 14:09:20 -Generating unique operation named: listUsingPUT_1
2019-01-29 14:09:20 -Generating unique operation named: listUsingPATCH_1
2019-01-29 14:09:20 -Generating unique operation named: listUsingDELETE_1
2019-01-29 14:09:20 -Generating unique operation named: listUsingOPTIONS_1
2019-01-29 14:09:20 -Generating unique operation named: listUsingTRACE_1
2019-01-29 14:09:20 -Generating unique operation named: addUsingGET_4
2019-01-29 14:09:20 -Generating unique operation named: editUsingGET_5
2019-01-29 14:09:20 -Generating unique operation named: listUsingGET_7
2019-01-29 14:09:20 -Generating unique operation named: removeUsingPOST_6
2019-01-29 14:09:20 -Generating unique operation named: removeUsingPOST_7
2019-01-29 14:09:20 -Generating unique operation named: saveUsingPOST_5
2019-01-29 14:09:20 -Generating unique operation named: updateUsingGET_1
2019-01-29 14:09:20 -Generating unique operation named: updateUsingHEAD_1
2019-01-29 14:09:20 -Generating unique operation named: updateUsingPOST_5
2019-01-29 14:09:20 -Generating unique operation named: updateUsingPUT_1
2019-01-29 14:09:20 -Generating unique operation named: updateUsingPATCH_1
2019-01-29 14:09:20 -Generating unique operation named: updateUsingDELETE_1
2019-01-29 14:09:20 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-29 14:09:20 -Generating unique operation named: updateUsingTRACE_1
2019-01-29 14:09:20 -Generating unique operation named: addUsingGET_5
2019-01-29 14:09:20 -Generating unique operation named: editUsingGET_6
2019-01-29 14:09:20 -Generating unique operation named: listUsingGET_8
2019-01-29 14:09:20 -Generating unique operation named: removeUsingPOST_8
2019-01-29 14:09:20 -Generating unique operation named: removeUsingPOST_9
2019-01-29 14:09:20 -Generating unique operation named: saveUsingPOST_6
2019-01-29 14:09:20 -Generating unique operation named: updateUsingGET_2
2019-01-29 14:09:20 -Generating unique operation named: updateUsingHEAD_2
2019-01-29 14:09:20 -Generating unique operation named: updateUsingPOST_6
2019-01-29 14:09:20 -Generating unique operation named: updateUsingPUT_2
2019-01-29 14:09:20 -Generating unique operation named: updateUsingPATCH_2
2019-01-29 14:09:20 -Generating unique operation named: updateUsingDELETE_2
2019-01-29 14:09:20 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-29 14:09:20 -Generating unique operation named: updateUsingTRACE_2
2019-01-29 14:09:20 -Generating unique operation named: addUsingGET_6
2019-01-29 14:09:20 -Generating unique operation named: editUsingGET_7
2019-01-29 14:09:20 -Generating unique operation named: listUsingGET_9
2019-01-29 14:09:20 -Generating unique operation named: roleUsingGET_1
2019-01-29 14:09:20 -Generating unique operation named: saveUsingPOST_7
2019-01-29 14:09:20 -Starting Quartz Scheduler now
2019-01-29 14:09:20 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-29 14:09:20 -Starting...
2019-01-29 14:09:20 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-29 14:09:20 -Started.
2019-01-29 14:09:20 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 14:09:20 -Using a shared selector for servlet write/read
2019-01-29 14:09:20 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-29 14:09:20 -Started BootdoApplication in 12.062 seconds (JVM running for 13.322)
2019-01-29 14:09:20 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-29 14:09:20 -==> Parameters: 
2019-01-29 14:09:20 -<==      Total: 1
2019-01-29 14:10:09 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 14:10:09 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 14:10:09 -FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
2019-01-29 14:10:09 -Enabling session validation scheduler...
2019-01-29 14:10:09 -请求地址 : http://localhost:8080/login;JSESSIONID=17690e6b-a71e-4b1b-ae17-1ca1a953f7c1
2019-01-29 14:10:09 -HTTP METHOD : GET
2019-01-29 14:10:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 14:10:09 -参数 : []
2019-01-29 14:10:09 -耗时 : 1
2019-01-29 14:10:09 -返回值 : login
2019-01-29 14:10:13 -请求地址 : http://localhost:8080/login
2019-01-29 14:10:13 -HTTP METHOD : POST
2019-01-29 14:10:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 14:10:13 -参数 : [admin, 123456]
2019-01-29 14:10:13 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 14:10:13 -==> Parameters: admin(String)
2019-01-29 14:10:13 -<==      Total: 1
2019-01-29 14:10:13 -耗时 : 46
2019-01-29 14:10:13 -返回值 : {msg=操作成功, code=0}
2019-01-29 14:10:13 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-29 14:10:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 14:10:13 -==> Parameters: 123(String), admin(String), 登录(String), 46(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 14:10:13.388(Timestamp)
2019-01-29 14:10:13 -<==    Updates: 1
2019-01-29 14:10:13 -请求地址 : http://localhost:8080/index
2019-01-29 14:10:13 -HTTP METHOD : GET
2019-01-29 14:10:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 14:10:13 -参数 : [{}]
2019-01-29 14:10:13 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 14:10:13 -==> Parameters: 123(String)
2019-01-29 14:10:13 -<==      Total: 3
2019-01-29 14:10:13 -耗时 : 98
2019-01-29 14:10:13 -返回值 : index_v1
2019-01-29 14:10:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 14:10:13 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 98(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 14:10:13.592(Timestamp)
2019-01-29 14:10:13 -<==    Updates: 1
2019-01-29 14:10:16 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 14:10:16 -==> Parameters: 123(String)
2019-01-29 14:10:16 -<==      Total: 7
2019-01-29 14:10:16 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 14:10:16 -HTTP METHOD : GET
2019-01-29 14:10:16 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 14:10:16 -参数 : []
2019-01-29 14:10:16 -耗时 : 0
2019-01-29 14:10:16 -返回值 : system/user/user
2019-01-29 14:10:16 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 14:10:16 -HTTP METHOD : GET
2019-01-29 14:10:16 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 14:10:16 -参数 : [{page=1, limit=15}]
2019-01-29 14:10:16 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 14:10:16 -==> Parameters: 
2019-01-29 14:10:16 -<==      Total: 2
2019-01-29 14:10:16 -==>  Preparing: select count(*) from sys_user 
2019-01-29 14:10:16 -==> Parameters: 
2019-01-29 14:10:16 -<==      Total: 1
2019-01-29 14:10:16 -耗时 : 66
2019-01-29 14:10:16 -返回值 : com.bootdo.common.utils.PageUtils@68925d6e
2019-01-29 14:10:18 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-29 14:10:42 -请求地址 : http://localhost:8080/login;JSESSIONID=b155477c-16e0-4803-817c-0d4bc706ecff
2019-01-29 14:10:42 -HTTP METHOD : GET
2019-01-29 14:10:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 14:10:42 -参数 : []
2019-01-29 14:10:42 -耗时 : 1
2019-01-29 14:10:42 -返回值 : login
2019-01-29 14:10:42 -请求地址 : http://localhost:8080/login
2019-01-29 14:10:42 -HTTP METHOD : GET
2019-01-29 14:10:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 14:10:42 -参数 : []
2019-01-29 14:10:42 -耗时 : 0
2019-01-29 14:10:42 -返回值 : login
2019-01-29 14:10:46 -请求地址 : http://localhost:8080/login
2019-01-29 14:10:46 -HTTP METHOD : POST
2019-01-29 14:10:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 14:10:46 -参数 : [admin, 123456]
2019-01-29 14:10:46 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 14:10:46 -==> Parameters: admin(String)
2019-01-29 14:10:46 -<==      Total: 1
2019-01-29 14:10:46 -耗时 : 8
2019-01-29 14:10:46 -返回值 : {msg=操作成功, code=0}
2019-01-29 14:10:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 14:10:46 -==> Parameters: 123(String), admin(String), 登录(String), 9(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 14:10:46.354(Timestamp)
2019-01-29 14:10:46 -请求地址 : http://localhost:8080/index
2019-01-29 14:10:46 -HTTP METHOD : GET
2019-01-29 14:10:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 14:10:46 -参数 : [{}]
2019-01-29 14:10:46 -<==    Updates: 1
2019-01-29 14:10:46 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 14:10:46 -==> Parameters: 123(String)
2019-01-29 14:10:46 -<==      Total: 3
2019-01-29 14:10:46 -耗时 : 54
2019-01-29 14:10:46 -返回值 : index_v1
2019-01-29 14:10:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 14:10:46 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 54(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 14:10:46.432(Timestamp)
2019-01-29 14:10:46 -<==    Updates: 1
2019-01-29 14:10:51 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 14:10:51 -==> Parameters: 123(String)
2019-01-29 14:10:51 -<==      Total: 7
2019-01-29 14:10:51 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 14:10:51 -HTTP METHOD : GET
2019-01-29 14:10:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 14:10:51 -参数 : []
2019-01-29 14:10:51 -耗时 : 0
2019-01-29 14:10:51 -返回值 : system/user/user
2019-01-29 14:10:51 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 14:10:51 -HTTP METHOD : GET
2019-01-29 14:10:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 14:10:51 -参数 : [{page=1, limit=15}]
2019-01-29 14:10:51 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 14:10:51 -==> Parameters: 
2019-01-29 14:10:51 -<==      Total: 2
2019-01-29 14:10:51 -==>  Preparing: select count(*) from sys_user 
2019-01-29 14:10:51 -==> Parameters: 
2019-01-29 14:10:51 -<==      Total: 1
2019-01-29 14:10:51 -耗时 : 27
2019-01-29 14:10:51 -返回值 : com.bootdo.common.utils.PageUtils@56606462
2019-01-29 14:10:54 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:10:54 -HTTP METHOD : GET
2019-01-29 14:10:54 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:10:54 -参数 : []
2019-01-29 14:10:54 -耗时 : 0
2019-01-29 14:10:54 -返回值 : system/user/add
2019-01-29 14:22:40 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 14:22:40 -==> Parameters: 123(String)
2019-01-29 14:22:40 -<==      Total: 7
2019-01-29 14:22:40 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:22:40 -HTTP METHOD : GET
2019-01-29 14:22:40 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:22:40 -参数 : []
2019-01-29 14:22:40 -耗时 : 0
2019-01-29 14:22:40 -返回值 : system/user/add
2019-01-29 14:23:02 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:23:02 -HTTP METHOD : GET
2019-01-29 14:23:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:23:02 -参数 : []
2019-01-29 14:23:02 -耗时 : 1
2019-01-29 14:23:02 -返回值 : system/user/add
2019-01-29 14:28:54 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 14:28:54 -==> Parameters: 123(String)
2019-01-29 14:28:54 -<==      Total: 7
2019-01-29 14:28:54 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:28:54 -HTTP METHOD : GET
2019-01-29 14:28:54 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:28:54 -参数 : []
2019-01-29 14:28:54 -耗时 : 0
2019-01-29 14:28:54 -返回值 : system/user/add
2019-01-29 14:29:38 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:29:38 -HTTP METHOD : GET
2019-01-29 14:29:38 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:29:38 -参数 : []
2019-01-29 14:29:38 -耗时 : 1
2019-01-29 14:29:38 -返回值 : system/user/add
2019-01-29 14:36:27 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 14:36:27 -==> Parameters: 123(String)
2019-01-29 14:36:27 -<==      Total: 7
2019-01-29 14:36:27 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:36:27 -HTTP METHOD : GET
2019-01-29 14:36:27 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:36:27 -参数 : []
2019-01-29 14:36:27 -耗时 : 1
2019-01-29 14:36:27 -返回值 : system/user/add
2019-01-29 14:38:33 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 14:38:33 -==> Parameters: 123(String)
2019-01-29 14:38:33 -<==      Total: 7
2019-01-29 14:38:33 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:38:33 -HTTP METHOD : GET
2019-01-29 14:38:33 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:38:33 -参数 : []
2019-01-29 14:38:33 -耗时 : 0
2019-01-29 14:38:33 -返回值 : system/user/add
2019-01-29 14:39:17 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:39:17 -HTTP METHOD : GET
2019-01-29 14:39:17 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:39:17 -参数 : []
2019-01-29 14:39:17 -耗时 : 2
2019-01-29 14:39:17 -返回值 : system/user/add
2019-01-29 14:40:18 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-01-29 14:41:14 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 14:41:14 -==> Parameters: 123(String)
2019-01-29 14:41:14 -<==      Total: 7
2019-01-29 14:41:14 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:41:14 -HTTP METHOD : GET
2019-01-29 14:41:14 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:41:14 -参数 : []
2019-01-29 14:41:14 -耗时 : 0
2019-01-29 14:41:14 -返回值 : system/user/add
2019-01-29 14:42:23 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:42:23 -HTTP METHOD : GET
2019-01-29 14:42:23 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:42:23 -参数 : []
2019-01-29 14:42:23 -耗时 : 1
2019-01-29 14:42:23 -返回值 : system/user/add
2019-01-29 14:42:27 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 14:42:27 -HTTP METHOD : GET
2019-01-29 14:42:27 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 14:42:27 -参数 : []
2019-01-29 14:42:27 -耗时 : 0
2019-01-29 14:42:27 -返回值 : system/user/user
2019-01-29 14:42:27 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 14:42:27 -HTTP METHOD : GET
2019-01-29 14:42:27 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 14:42:27 -参数 : [{page=1, limit=15}]
2019-01-29 14:42:27 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 14:42:27 -==> Parameters: 
2019-01-29 14:42:27 -<==      Total: 2
2019-01-29 14:42:27 -==>  Preparing: select count(*) from sys_user 
2019-01-29 14:42:27 -==> Parameters: 
2019-01-29 14:42:27 -<==      Total: 1
2019-01-29 14:42:27 -耗时 : 27
2019-01-29 14:42:27 -返回值 : com.bootdo.common.utils.PageUtils@556f3fc6
2019-01-29 14:42:29 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:42:29 -HTTP METHOD : GET
2019-01-29 14:42:29 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:42:29 -参数 : []
2019-01-29 14:42:29 -耗时 : 1
2019-01-29 14:42:29 -返回值 : system/user/add
2019-01-29 14:43:08 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 14:43:08 -HTTP METHOD : GET
2019-01-29 14:43:08 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 14:43:08 -参数 : []
2019-01-29 14:43:08 -耗时 : 0
2019-01-29 14:43:08 -返回值 : system/user/user
2019-01-29 14:43:08 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 14:43:08 -HTTP METHOD : GET
2019-01-29 14:43:08 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 14:43:08 -参数 : [{page=1, limit=15}]
2019-01-29 14:43:08 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 14:43:08 -==> Parameters: 
2019-01-29 14:43:08 -<==      Total: 2
2019-01-29 14:43:08 -==>  Preparing: select count(*) from sys_user 
2019-01-29 14:43:08 -==> Parameters: 
2019-01-29 14:43:08 -<==      Total: 1
2019-01-29 14:43:08 -耗时 : 21
2019-01-29 14:43:08 -返回值 : com.bootdo.common.utils.PageUtils@75b5ab2e
2019-01-29 14:43:09 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:43:09 -HTTP METHOD : GET
2019-01-29 14:43:09 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:43:09 -参数 : []
2019-01-29 14:43:09 -耗时 : 0
2019-01-29 14:43:09 -返回值 : system/user/add
2019-01-29 14:45:55 -请求地址 : http://localhost:8080/index
2019-01-29 14:45:55 -HTTP METHOD : GET
2019-01-29 14:45:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 14:45:55 -参数 : [{}]
2019-01-29 14:45:55 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 14:45:55 -==> Parameters: 123(String)
2019-01-29 14:45:55 -<==      Total: 3
2019-01-29 14:45:55 -耗时 : 32
2019-01-29 14:45:55 -返回值 : index_v1
2019-01-29 14:45:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 14:45:55 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 14:45:55.078(Timestamp)
2019-01-29 14:45:55 -<==    Updates: 1
2019-01-29 14:45:58 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 14:45:58 -==> Parameters: 123(String)
2019-01-29 14:45:58 -<==      Total: 7
2019-01-29 14:45:58 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 14:45:58 -HTTP METHOD : GET
2019-01-29 14:45:58 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 14:45:58 -参数 : []
2019-01-29 14:45:58 -耗时 : 1
2019-01-29 14:45:58 -返回值 : system/user/user
2019-01-29 14:45:58 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 14:45:58 -HTTP METHOD : GET
2019-01-29 14:45:58 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 14:45:58 -参数 : [{page=1, limit=15}]
2019-01-29 14:45:58 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 14:45:58 -==> Parameters: 
2019-01-29 14:45:58 -<==      Total: 2
2019-01-29 14:45:58 -==>  Preparing: select count(*) from sys_user 
2019-01-29 14:45:58 -==> Parameters: 
2019-01-29 14:45:58 -<==      Total: 1
2019-01-29 14:45:58 -耗时 : 21
2019-01-29 14:45:58 -返回值 : com.bootdo.common.utils.PageUtils@10606f3e
2019-01-29 14:45:59 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:45:59 -HTTP METHOD : GET
2019-01-29 14:45:59 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:45:59 -参数 : []
2019-01-29 14:45:59 -耗时 : 1
2019-01-29 14:45:59 -返回值 : system/user/add
2019-01-29 14:47:00 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 14:47:00 -HTTP METHOD : GET
2019-01-29 14:47:00 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 14:47:00 -参数 : []
2019-01-29 14:47:00 -耗时 : 1
2019-01-29 14:47:00 -返回值 : system/user/user
2019-01-29 14:47:00 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 14:47:00 -HTTP METHOD : GET
2019-01-29 14:47:00 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 14:47:00 -参数 : [{page=1, limit=15}]
2019-01-29 14:47:00 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 14:47:00 -==> Parameters: 
2019-01-29 14:47:00 -<==      Total: 2
2019-01-29 14:47:00 -==>  Preparing: select count(*) from sys_user 
2019-01-29 14:47:00 -==> Parameters: 
2019-01-29 14:47:00 -<==      Total: 1
2019-01-29 14:47:00 -耗时 : 18
2019-01-29 14:47:00 -返回值 : com.bootdo.common.utils.PageUtils@6f8e7cb8
2019-01-29 14:47:02 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:47:02 -HTTP METHOD : GET
2019-01-29 14:47:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:47:02 -参数 : []
2019-01-29 14:47:02 -耗时 : 0
2019-01-29 14:47:02 -返回值 : system/user/add
2019-01-29 14:47:36 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 14:47:36 -HTTP METHOD : GET
2019-01-29 14:47:36 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 14:47:36 -参数 : []
2019-01-29 14:47:36 -耗时 : 0
2019-01-29 14:47:36 -返回值 : system/user/user
2019-01-29 14:47:36 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 14:47:36 -HTTP METHOD : GET
2019-01-29 14:47:36 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 14:47:36 -参数 : [{page=1, limit=15}]
2019-01-29 14:47:36 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 14:47:36 -==> Parameters: 
2019-01-29 14:47:36 -<==      Total: 2
2019-01-29 14:47:36 -==>  Preparing: select count(*) from sys_user 
2019-01-29 14:47:36 -==> Parameters: 
2019-01-29 14:47:36 -<==      Total: 1
2019-01-29 14:47:36 -耗时 : 18
2019-01-29 14:47:36 -返回值 : com.bootdo.common.utils.PageUtils@20dade5b
2019-01-29 14:47:37 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:47:37 -HTTP METHOD : GET
2019-01-29 14:47:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:47:37 -参数 : []
2019-01-29 14:47:37 -耗时 : 1
2019-01-29 14:47:37 -返回值 : system/user/add
2019-01-29 14:50:59 -请求地址 : http://localhost:8080/index
2019-01-29 14:50:59 -HTTP METHOD : GET
2019-01-29 14:50:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 14:50:59 -参数 : [{}]
2019-01-29 14:50:59 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 14:50:59 -==> Parameters: 123(String)
2019-01-29 14:50:59 -<==      Total: 3
2019-01-29 14:50:59 -耗时 : 27
2019-01-29 14:50:59 -返回值 : index_v1
2019-01-29 14:50:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 14:50:59 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 14:50:59.275(Timestamp)
2019-01-29 14:50:59 -<==    Updates: 1
2019-01-29 14:51:01 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 14:51:01 -==> Parameters: 123(String)
2019-01-29 14:51:01 -<==      Total: 7
2019-01-29 14:51:01 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 14:51:01 -HTTP METHOD : GET
2019-01-29 14:51:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 14:51:01 -参数 : []
2019-01-29 14:51:01 -耗时 : 0
2019-01-29 14:51:01 -返回值 : system/user/user
2019-01-29 14:51:02 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 14:51:02 -HTTP METHOD : GET
2019-01-29 14:51:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 14:51:02 -参数 : [{page=1, limit=15}]
2019-01-29 14:51:02 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 14:51:02 -==> Parameters: 
2019-01-29 14:51:02 -<==      Total: 2
2019-01-29 14:51:02 -==>  Preparing: select count(*) from sys_user 
2019-01-29 14:51:02 -==> Parameters: 
2019-01-29 14:51:02 -<==      Total: 1
2019-01-29 14:51:02 -耗时 : 18
2019-01-29 14:51:02 -返回值 : com.bootdo.common.utils.PageUtils@7226d8b3
2019-01-29 14:51:03 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:51:03 -HTTP METHOD : GET
2019-01-29 14:51:03 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:51:03 -参数 : []
2019-01-29 14:51:03 -耗时 : 1
2019-01-29 14:51:03 -返回值 : system/user/add
2019-01-29 14:51:33 -请求地址 : http://localhost:8080/index
2019-01-29 14:51:33 -HTTP METHOD : GET
2019-01-29 14:51:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 14:51:33 -参数 : [{}]
2019-01-29 14:51:33 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 14:51:33 -==> Parameters: 123(String)
2019-01-29 14:51:33 -<==      Total: 3
2019-01-29 14:51:33 -耗时 : 23
2019-01-29 14:51:33 -返回值 : index_v1
2019-01-29 14:51:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 14:51:33 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 14:51:33.041(Timestamp)
2019-01-29 14:51:33 -<==    Updates: 1
2019-01-29 14:51:42 -请求地址 : http://localhost:8080/login;JSESSIONID=5ca2b579-6079-4a17-a4ae-9d49d3cf6e7a
2019-01-29 14:51:42 -HTTP METHOD : GET
2019-01-29 14:51:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 14:51:42 -参数 : []
2019-01-29 14:51:42 -耗时 : 0
2019-01-29 14:51:42 -返回值 : login
2019-01-29 14:51:42 -请求地址 : http://localhost:8080/login
2019-01-29 14:51:42 -HTTP METHOD : GET
2019-01-29 14:51:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 14:51:42 -参数 : []
2019-01-29 14:51:42 -耗时 : 0
2019-01-29 14:51:42 -返回值 : login
2019-01-29 14:51:45 -请求地址 : http://localhost:8080/login
2019-01-29 14:51:45 -HTTP METHOD : POST
2019-01-29 14:51:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 14:51:45 -参数 : [admin, 123456]
2019-01-29 14:51:45 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 14:51:45 -==> Parameters: admin(String)
2019-01-29 14:51:45 -<==      Total: 1
2019-01-29 14:51:45 -耗时 : 6
2019-01-29 14:51:45 -返回值 : {msg=操作成功, code=0}
2019-01-29 14:51:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 14:51:45 -==> Parameters: 123(String), admin(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 14:51:45.896(Timestamp)
2019-01-29 14:51:45 -请求地址 : http://localhost:8080/index
2019-01-29 14:51:45 -HTTP METHOD : GET
2019-01-29 14:51:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 14:51:45 -参数 : [{}]
2019-01-29 14:51:45 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 14:51:45 -==> Parameters: 123(String)
2019-01-29 14:51:45 -<==      Total: 3
2019-01-29 14:51:45 -<==    Updates: 1
2019-01-29 14:51:45 -耗时 : 37
2019-01-29 14:51:45 -返回值 : index_v1
2019-01-29 14:51:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 14:51:45 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 38(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 14:51:45.957(Timestamp)
2019-01-29 14:51:46 -<==    Updates: 1
2019-01-29 14:51:49 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 14:51:49 -==> Parameters: 123(String)
2019-01-29 14:51:49 -<==      Total: 7
2019-01-29 14:51:49 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 14:51:49 -HTTP METHOD : GET
2019-01-29 14:51:49 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 14:51:49 -参数 : []
2019-01-29 14:51:49 -耗时 : 1
2019-01-29 14:51:49 -返回值 : system/user/user
2019-01-29 14:51:50 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 14:51:50 -HTTP METHOD : GET
2019-01-29 14:51:50 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 14:51:50 -参数 : [{page=1, limit=15}]
2019-01-29 14:51:50 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 14:51:50 -==> Parameters: 
2019-01-29 14:51:50 -<==      Total: 2
2019-01-29 14:51:50 -==>  Preparing: select count(*) from sys_user 
2019-01-29 14:51:50 -==> Parameters: 
2019-01-29 14:51:50 -<==      Total: 1
2019-01-29 14:51:50 -耗时 : 25
2019-01-29 14:51:50 -返回值 : com.bootdo.common.utils.PageUtils@1e1d40df
2019-01-29 14:51:51 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:51:51 -HTTP METHOD : GET
2019-01-29 14:51:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:51:51 -参数 : []
2019-01-29 14:51:51 -耗时 : 1
2019-01-29 14:51:51 -返回值 : system/user/add
2019-01-29 14:53:10 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 14:53:10 -HTTP METHOD : GET
2019-01-29 14:53:10 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 14:53:10 -参数 : []
2019-01-29 14:53:10 -耗时 : 1
2019-01-29 14:53:10 -返回值 : system/user/user
2019-01-29 14:53:10 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 14:53:10 -HTTP METHOD : GET
2019-01-29 14:53:10 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 14:53:10 -参数 : [{page=1, limit=15}]
2019-01-29 14:53:10 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 14:53:10 -==> Parameters: 
2019-01-29 14:53:10 -<==      Total: 2
2019-01-29 14:53:10 -==>  Preparing: select count(*) from sys_user 
2019-01-29 14:53:10 -==> Parameters: 
2019-01-29 14:53:10 -<==      Total: 1
2019-01-29 14:53:10 -耗时 : 21
2019-01-29 14:53:10 -返回值 : com.bootdo.common.utils.PageUtils@3919b80a
2019-01-29 14:53:11 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:53:11 -HTTP METHOD : GET
2019-01-29 14:53:11 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:53:11 -参数 : []
2019-01-29 14:53:11 -耗时 : 0
2019-01-29 14:53:11 -返回值 : system/user/add
2019-01-29 14:58:11 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 14:58:11 -==> Parameters: 123(String)
2019-01-29 14:58:11 -<==      Total: 7
2019-01-29 14:58:11 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 14:58:11 -HTTP METHOD : GET
2019-01-29 14:58:11 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 14:58:11 -参数 : []
2019-01-29 14:58:11 -耗时 : 1
2019-01-29 14:58:11 -返回值 : system/user/user
2019-01-29 14:58:12 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 14:58:12 -HTTP METHOD : GET
2019-01-29 14:58:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 14:58:12 -参数 : [{page=1, limit=15}]
2019-01-29 14:58:12 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 14:58:12 -==> Parameters: 
2019-01-29 14:58:12 -<==      Total: 2
2019-01-29 14:58:12 -==>  Preparing: select count(*) from sys_user 
2019-01-29 14:58:12 -==> Parameters: 
2019-01-29 14:58:12 -<==      Total: 1
2019-01-29 14:58:12 -耗时 : 16
2019-01-29 14:58:12 -返回值 : com.bootdo.common.utils.PageUtils@2bb35c44
2019-01-29 14:58:13 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:58:13 -HTTP METHOD : GET
2019-01-29 14:58:13 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:58:13 -参数 : []
2019-01-29 14:58:13 -耗时 : 0
2019-01-29 14:58:13 -返回值 : system/user/add
2019-01-29 14:59:08 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 14:59:08 -HTTP METHOD : GET
2019-01-29 14:59:08 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 14:59:08 -参数 : []
2019-01-29 14:59:08 -耗时 : 0
2019-01-29 14:59:08 -返回值 : system/user/user
2019-01-29 14:59:09 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 14:59:09 -HTTP METHOD : GET
2019-01-29 14:59:09 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 14:59:09 -参数 : [{page=1, limit=15}]
2019-01-29 14:59:09 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 14:59:09 -==> Parameters: 
2019-01-29 14:59:09 -<==      Total: 2
2019-01-29 14:59:09 -==>  Preparing: select count(*) from sys_user 
2019-01-29 14:59:09 -==> Parameters: 
2019-01-29 14:59:09 -<==      Total: 1
2019-01-29 14:59:09 -耗时 : 17
2019-01-29 14:59:09 -返回值 : com.bootdo.common.utils.PageUtils@115bb6b4
2019-01-29 14:59:10 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:59:10 -HTTP METHOD : GET
2019-01-29 14:59:10 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:59:10 -参数 : []
2019-01-29 14:59:10 -耗时 : 0
2019-01-29 14:59:10 -返回值 : system/user/add
2019-01-29 14:59:24 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 14:59:24 -HTTP METHOD : GET
2019-01-29 14:59:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 14:59:24 -参数 : []
2019-01-29 14:59:24 -耗时 : 0
2019-01-29 14:59:24 -返回值 : system/user/user
2019-01-29 14:59:24 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 14:59:24 -HTTP METHOD : GET
2019-01-29 14:59:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 14:59:24 -参数 : [{page=1, limit=15}]
2019-01-29 14:59:24 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 14:59:24 -==> Parameters: 
2019-01-29 14:59:24 -<==      Total: 2
2019-01-29 14:59:24 -==>  Preparing: select count(*) from sys_user 
2019-01-29 14:59:24 -==> Parameters: 
2019-01-29 14:59:24 -<==      Total: 1
2019-01-29 14:59:24 -耗时 : 18
2019-01-29 14:59:24 -返回值 : com.bootdo.common.utils.PageUtils@4644804f
2019-01-29 14:59:25 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 14:59:25 -HTTP METHOD : GET
2019-01-29 14:59:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 14:59:25 -参数 : []
2019-01-29 14:59:25 -耗时 : 0
2019-01-29 14:59:25 -返回值 : system/user/add
2019-01-29 15:00:17 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 15:00:17 -==> Parameters: 123(String)
2019-01-29 15:00:17 -<==      Total: 7
2019-01-29 15:00:17 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 15:00:17 -HTTP METHOD : GET
2019-01-29 15:00:17 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 15:00:17 -参数 : []
2019-01-29 15:00:17 -耗时 : 1
2019-01-29 15:00:17 -返回值 : system/user/user
2019-01-29 15:00:17 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 15:00:17 -HTTP METHOD : GET
2019-01-29 15:00:17 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 15:00:17 -参数 : [{page=1, limit=15}]
2019-01-29 15:00:17 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 15:00:17 -==> Parameters: 
2019-01-29 15:00:17 -<==      Total: 2
2019-01-29 15:00:17 -==>  Preparing: select count(*) from sys_user 
2019-01-29 15:00:17 -==> Parameters: 
2019-01-29 15:00:17 -<==      Total: 1
2019-01-29 15:00:17 -耗时 : 22
2019-01-29 15:00:17 -返回值 : com.bootdo.common.utils.PageUtils@675c80d3
2019-01-29 15:00:24 -请求地址 : http://localhost:8080/login;JSESSIONID=90c00a38-e121-49b4-af56-4b9b34cd0701
2019-01-29 15:00:24 -HTTP METHOD : GET
2019-01-29 15:00:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 15:00:24 -参数 : []
2019-01-29 15:00:24 -耗时 : 0
2019-01-29 15:00:24 -返回值 : login
2019-01-29 15:00:24 -请求地址 : http://localhost:8080/login
2019-01-29 15:00:24 -HTTP METHOD : GET
2019-01-29 15:00:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 15:00:24 -参数 : []
2019-01-29 15:00:24 -耗时 : 0
2019-01-29 15:00:24 -返回值 : login
2019-01-29 15:00:28 -请求地址 : http://localhost:8080/login
2019-01-29 15:00:28 -HTTP METHOD : POST
2019-01-29 15:00:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 15:00:28 -参数 : [admin, 123456]
2019-01-29 15:00:28 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 15:00:28 -==> Parameters: admin(String)
2019-01-29 15:00:28 -<==      Total: 1
2019-01-29 15:00:28 -耗时 : 5
2019-01-29 15:00:28 -返回值 : {msg=操作成功, code=0}
2019-01-29 15:00:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:00:28 -==> Parameters: 123(String), admin(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 15:00:28.38(Timestamp)
2019-01-29 15:00:28 -请求地址 : http://localhost:8080/index
2019-01-29 15:00:28 -HTTP METHOD : GET
2019-01-29 15:00:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 15:00:28 -参数 : [{}]
2019-01-29 15:00:28 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 15:00:28 -==> Parameters: 123(String)
2019-01-29 15:00:28 -<==      Total: 3
2019-01-29 15:00:28 -耗时 : 30
2019-01-29 15:00:28 -返回值 : index_v1
2019-01-29 15:00:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:00:28 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 15:00:28.432(Timestamp)
2019-01-29 15:00:28 -<==    Updates: 1
2019-01-29 15:00:28 -<==    Updates: 1
2019-01-29 15:00:31 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 15:00:31 -==> Parameters: 123(String)
2019-01-29 15:00:31 -<==      Total: 7
2019-01-29 15:00:31 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 15:00:31 -HTTP METHOD : GET
2019-01-29 15:00:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 15:00:31 -参数 : []
2019-01-29 15:00:31 -耗时 : 0
2019-01-29 15:00:31 -返回值 : system/user/user
2019-01-29 15:00:31 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 15:00:31 -HTTP METHOD : GET
2019-01-29 15:00:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 15:00:31 -参数 : [{page=1, limit=15}]
2019-01-29 15:00:31 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 15:00:31 -==> Parameters: 
2019-01-29 15:00:31 -<==      Total: 2
2019-01-29 15:00:31 -==>  Preparing: select count(*) from sys_user 
2019-01-29 15:00:31 -==> Parameters: 
2019-01-29 15:00:31 -<==      Total: 1
2019-01-29 15:00:31 -耗时 : 19
2019-01-29 15:00:31 -返回值 : com.bootdo.common.utils.PageUtils@5a226038
2019-01-29 15:00:33 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 15:00:33 -HTTP METHOD : GET
2019-01-29 15:00:33 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 15:00:33 -参数 : []
2019-01-29 15:00:33 -耗时 : 0
2019-01-29 15:00:33 -返回值 : system/user/add
2019-01-29 15:02:47 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 15:02:47 -==> Parameters: 123(String)
2019-01-29 15:02:47 -<==      Total: 7
2019-01-29 15:02:47 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 15:02:47 -HTTP METHOD : GET
2019-01-29 15:02:47 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 15:02:47 -参数 : []
2019-01-29 15:02:47 -耗时 : 0
2019-01-29 15:02:47 -返回值 : system/user/user
2019-01-29 15:02:47 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 15:02:47 -HTTP METHOD : GET
2019-01-29 15:02:47 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 15:02:47 -参数 : [{page=1, limit=15}]
2019-01-29 15:02:47 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 15:02:47 -==> Parameters: 
2019-01-29 15:02:47 -<==      Total: 2
2019-01-29 15:02:47 -==>  Preparing: select count(*) from sys_user 
2019-01-29 15:02:47 -==> Parameters: 
2019-01-29 15:02:47 -<==      Total: 1
2019-01-29 15:02:47 -耗时 : 18
2019-01-29 15:02:47 -返回值 : com.bootdo.common.utils.PageUtils@74b3edb5
2019-01-29 15:02:48 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 15:02:48 -HTTP METHOD : GET
2019-01-29 15:02:48 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 15:02:48 -参数 : []
2019-01-29 15:02:48 -耗时 : 0
2019-01-29 15:02:48 -返回值 : system/user/add
2019-01-29 15:04:00 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 15:04:00 -HTTP METHOD : GET
2019-01-29 15:04:00 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 15:04:00 -参数 : []
2019-01-29 15:04:00 -耗时 : 1
2019-01-29 15:04:00 -返回值 : system/user/user
2019-01-29 15:04:00 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 15:04:00 -HTTP METHOD : GET
2019-01-29 15:04:00 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 15:04:00 -参数 : [{page=1, limit=15}]
2019-01-29 15:04:00 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 15:04:00 -==> Parameters: 
2019-01-29 15:04:00 -<==      Total: 2
2019-01-29 15:04:00 -==>  Preparing: select count(*) from sys_user 
2019-01-29 15:04:00 -==> Parameters: 
2019-01-29 15:04:00 -<==      Total: 1
2019-01-29 15:04:00 -耗时 : 17
2019-01-29 15:04:00 -返回值 : com.bootdo.common.utils.PageUtils@4881b07f
2019-01-29 15:04:01 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 15:04:01 -HTTP METHOD : GET
2019-01-29 15:04:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 15:04:01 -参数 : []
2019-01-29 15:04:01 -耗时 : 0
2019-01-29 15:04:01 -返回值 : system/user/add
2019-01-29 15:04:11 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 15:04:11 -HTTP METHOD : GET
2019-01-29 15:04:11 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 15:04:11 -参数 : []
2019-01-29 15:04:11 -耗时 : 0
2019-01-29 15:04:11 -返回值 : system/user/add
2019-01-29 15:07:46 -请求地址 : http://localhost:8080/index
2019-01-29 15:07:46 -HTTP METHOD : GET
2019-01-29 15:07:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 15:07:46 -参数 : [{}]
2019-01-29 15:07:46 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 15:07:46 -==> Parameters: 123(String)
2019-01-29 15:07:46 -<==      Total: 3
2019-01-29 15:07:46 -耗时 : 26
2019-01-29 15:07:46 -返回值 : index_v1
2019-01-29 15:07:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:07:46 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 15:07:46.561(Timestamp)
2019-01-29 15:07:46 -<==    Updates: 1
2019-01-29 15:07:48 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 15:07:48 -==> Parameters: 123(String)
2019-01-29 15:07:48 -<==      Total: 7
2019-01-29 15:07:48 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 15:07:48 -HTTP METHOD : GET
2019-01-29 15:07:48 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 15:07:48 -参数 : []
2019-01-29 15:07:48 -耗时 : 0
2019-01-29 15:07:48 -返回值 : system/user/user
2019-01-29 15:07:48 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 15:07:48 -HTTP METHOD : GET
2019-01-29 15:07:48 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 15:07:48 -参数 : [{page=1, limit=15}]
2019-01-29 15:07:48 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 15:07:48 -==> Parameters: 
2019-01-29 15:07:48 -<==      Total: 2
2019-01-29 15:07:48 -==>  Preparing: select count(*) from sys_user 
2019-01-29 15:07:48 -==> Parameters: 
2019-01-29 15:07:48 -<==      Total: 1
2019-01-29 15:07:48 -耗时 : 17
2019-01-29 15:07:48 -返回值 : com.bootdo.common.utils.PageUtils@21bcbcd6
2019-01-29 15:07:49 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 15:07:49 -HTTP METHOD : GET
2019-01-29 15:07:49 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 15:07:49 -参数 : []
2019-01-29 15:07:49 -耗时 : 0
2019-01-29 15:07:49 -返回值 : system/user/add
2019-01-29 15:09:31 -请求地址 : http://localhost:8080/sys/user/save
2019-01-29 15:09:31 -HTTP METHOD : POST
2019-01-29 15:09:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.save
2019-01-29 15:09:31 -参数 : [com.bootdo.system.domain.UserDO@70178fb9]
2019-01-29 15:10:09 -Validating all active sessions...
2019-01-29 15:10:09 -Finished session validation.  [1] sessions were stopped.
2019-01-29 15:10:18 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2019-01-29 15:10:25 -==>  Preparing: insert into sys_user ( `user_id`, `dept_id`, `username`, `usernikename`, `userpwd`, `userstatus`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:10:25 -==> Parameters: (String), null, aaa(String), (String), 111111(String), 1(Integer), null, null, null, null, null, null
2019-01-29 15:10:25 -<==    Updates: 1
2019-01-29 15:10:25 -耗时 : 53941
2019-01-29 15:10:25 -返回值 : {msg=操作成功, code=0}
2019-01-29 15:10:25 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 15:10:25 -==> Parameters: 123(String)
2019-01-29 15:10:25 -<==      Total: 7
2019-01-29 15:10:25 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 15:10:25 -HTTP METHOD : GET
2019-01-29 15:10:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 15:10:25 -参数 : []
2019-01-29 15:10:25 -耗时 : 0
2019-01-29 15:10:25 -返回值 : system/user/user
2019-01-29 15:10:25 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 15:10:25 -HTTP METHOD : GET
2019-01-29 15:10:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 15:10:25 -参数 : [{page=1, limit=15}]
2019-01-29 15:10:25 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 15:10:25 -==> Parameters: 
2019-01-29 15:10:25 -<==      Total: 3
2019-01-29 15:10:25 -==>  Preparing: select count(*) from sys_user 
2019-01-29 15:10:25 -==> Parameters: 
2019-01-29 15:10:25 -<==      Total: 1
2019-01-29 15:10:25 -耗时 : 26
2019-01-29 15:10:25 -返回值 : com.bootdo.common.utils.PageUtils@1c89097a
2019-01-29 15:13:48 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 15:13:48 -==> Parameters: 123(String)
2019-01-29 15:13:48 -<==      Total: 7
2019-01-29 15:13:48 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 15:13:48 -HTTP METHOD : GET
2019-01-29 15:13:48 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 15:13:48 -参数 : []
2019-01-29 15:13:48 -耗时 : 0
2019-01-29 15:13:48 -返回值 : system/user/add
2019-01-29 15:13:54 -请求地址 : http://localhost:8080/sys/user/save
2019-01-29 15:13:54 -HTTP METHOD : POST
2019-01-29 15:13:54 -CLASS_METHOD : com.bootdo.system.controller.UserController.save
2019-01-29 15:13:54 -参数 : [com.bootdo.system.domain.UserDO@5916aaa9]
2019-01-29 15:14:14 -==>  Preparing: insert into sys_user ( `user_id`, `dept_id`, `username`, `usernikename`, `userpwd`, `userstatus`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:14:14 -==> Parameters: (String), null, bbb(String), (String), 111111(String), 1(Integer), null, null, null, null, null, null
2019-01-29 15:14:14 -{conn-10001, pstmt-20013} execute error. insert into sys_user
		(
		`user_id`,
		`dept_id`,
		`username`,
		`usernikename`,
		`userpwd`,
		`userstatus`,
		`edit_user`,
		`edit_time`,
		`deleteflag`,
		`ext1`,
		`ext2`,
		`ext3`
		)
		values
		(
		?,
		?,
		?,
		?,
		?,
		?,
		?,
		?,
		?,
		?,
		?,
		?
		)
com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '' for key 'PRIMARY'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor106.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy124.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy90.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at com.bootdo.system.service.impl.UserServiceImpl.save(UserServiceImpl.java:38)
	at com.bootdo.system.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$2c95b2d0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$b076eed9.save(<generated>)
	at com.bootdo.system.controller.UserController.save(UserController.java:69)
	at com.bootdo.system.controller.UserController$$FastClassBySpringCGLIB$$53b170de.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.UserController$$EnhancerBySpringCGLIB$$df33377f.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-29 15:14:15 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-01-29 15:14:15 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-01-29 15:14:15 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:14:15 -
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '' for key 'PRIMARY'
### The error may involve com.bootdo.system.dao.UserDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into sys_user   (   `user_id`,   `dept_id`,   `username`,   `usernikename`,   `userpwd`,   `userstatus`,   `edit_user`,   `edit_time`,   `deleteflag`,   `ext1`,   `ext2`,   `ext3`   )   values   (   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '' for key 'PRIMARY'
; ]; Duplicate entry '' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '' for key 'PRIMARY'
org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '' for key 'PRIMARY'
### The error may involve com.bootdo.system.dao.UserDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into sys_user   (   `user_id`,   `dept_id`,   `username`,   `usernikename`,   `userpwd`,   `userstatus`,   `edit_user`,   `edit_time`,   `deleteflag`,   `ext1`,   `ext2`,   `ext3`   )   values   (   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '' for key 'PRIMARY'
; ]; Duplicate entry '' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '' for key 'PRIMARY'
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:242)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy90.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at com.bootdo.system.service.impl.UserServiceImpl.save(UserServiceImpl.java:38)
	at com.bootdo.system.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$2c95b2d0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$b076eed9.save(<generated>)
	at com.bootdo.system.controller.UserController.save(UserController.java:69)
	at com.bootdo.system.controller.UserController$$FastClassBySpringCGLIB$$53b170de.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.UserController$$EnhancerBySpringCGLIB$$df33377f.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '' for key 'PRIMARY'
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:936)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor106.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy124.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 112 common frames omitted
2019-01-29 15:14:15 -==> Parameters: 123(String), admin(String), error(String), null, http://localhost:8080/sys/user/save(String), org.springframework.dao.DuplicateKeyException: 
### Error updating database.  Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '' for key 'PRIMARY'
### The error may involve com.bootdo.system.dao.UserDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into sys_user   (   `user_id`,   `dept_id`,   `username`,   `usernikename`,   `userpwd`,   `userstatus`,   `edit_user`,   `edit_time`,   `deleteflag`,   `ext1`,   `ext2`,   `ext3`   )   values   (   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?,   ?   )
### Cause: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '' for key 'PRIMARY'
; ]; Duplicate entry '' for key 'PRIMARY'; nested exception is com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Duplicate entry '' for key 'PRIMARY'(String), null, 2019-01-29 15:14:15.076(Timestamp)
2019-01-29 15:14:15 -<==    Updates: 1
2019-01-29 15:18:11 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 15:18:11 -==> Parameters: 123(String)
2019-01-29 15:18:11 -<==      Total: 7
2019-01-29 15:18:11 -请求地址 : http://localhost:8080/sys/user/save
2019-01-29 15:18:11 -HTTP METHOD : POST
2019-01-29 15:18:11 -CLASS_METHOD : com.bootdo.system.controller.UserController.save
2019-01-29 15:18:11 -参数 : [com.bootdo.system.domain.UserDO@326aa668]
2019-01-29 15:18:13 -==>  Preparing: insert into sys_user ( `user_id`, `dept_id`, `username`, `usernikename`, `userpwd`, `userstatus`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:18:13 -getMaxFieldSize error
java.sql.SQLException: No operations allowed after statement closed.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:442)
	at com.mysql.jdbc.StatementImpl.getMaxFieldSize(StatementImpl.java:1854)
	at com.alibaba.druid.filter.FilterChainImpl.statement_getMaxFieldSize(FilterChainImpl.java:2394)
	at com.alibaba.druid.filter.FilterAdapter.statement_getMaxFieldSize(FilterAdapter.java:2529)
	at com.alibaba.druid.filter.FilterChainImpl.statement_getMaxFieldSize(FilterChainImpl.java:2392)
	at com.alibaba.druid.filter.FilterAdapter.statement_getMaxFieldSize(FilterAdapter.java:2529)
	at com.alibaba.druid.filter.FilterChainImpl.statement_getMaxFieldSize(FilterChainImpl.java:2392)
	at com.alibaba.druid.filter.FilterAdapter.statement_getMaxFieldSize(FilterAdapter.java:2529)
	at com.alibaba.druid.filter.FilterChainImpl.statement_getMaxFieldSize(FilterChainImpl.java:2392)
	at com.alibaba.druid.proxy.jdbc.StatementProxyImpl.getMaxFieldSize(StatementProxyImpl.java:307)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.<init>(DruidPooledPreparedStatement.java:80)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:340)
	at sun.reflect.GeneratedMethodAccessor113.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy123.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy90.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at com.bootdo.system.service.impl.UserServiceImpl.save(UserServiceImpl.java:38)
	at com.bootdo.system.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$2c95b2d0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$b076eed9.save(<generated>)
	at com.bootdo.system.controller.UserController.save(UserController.java:69)
	at com.bootdo.system.controller.UserController$$FastClassBySpringCGLIB$$53b170de.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.UserController$$EnhancerBySpringCGLIB$$df33377f.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-29 15:18:13 -getMaxRows error
java.sql.SQLException: No operations allowed after statement closed.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:442)
	at com.mysql.jdbc.StatementImpl.getMaxRows(StatementImpl.java:1870)
	at com.alibaba.druid.filter.FilterChainImpl.statement_getMaxRows(FilterChainImpl.java:2411)
	at com.alibaba.druid.filter.FilterAdapter.statement_getMaxRows(FilterAdapter.java:2534)
	at com.alibaba.druid.filter.FilterChainImpl.statement_getMaxRows(FilterChainImpl.java:2409)
	at com.alibaba.druid.filter.FilterAdapter.statement_getMaxRows(FilterAdapter.java:2534)
	at com.alibaba.druid.filter.FilterChainImpl.statement_getMaxRows(FilterChainImpl.java:2409)
	at com.alibaba.druid.filter.FilterAdapter.statement_getMaxRows(FilterAdapter.java:2534)
	at com.alibaba.druid.filter.FilterChainImpl.statement_getMaxRows(FilterChainImpl.java:2409)
	at com.alibaba.druid.proxy.jdbc.StatementProxyImpl.getMaxRows(StatementProxyImpl.java:315)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.<init>(DruidPooledPreparedStatement.java:86)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:340)
	at sun.reflect.GeneratedMethodAccessor113.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy123.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy90.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at com.bootdo.system.service.impl.UserServiceImpl.save(UserServiceImpl.java:38)
	at com.bootdo.system.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$2c95b2d0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$b076eed9.save(<generated>)
	at com.bootdo.system.controller.UserController.save(UserController.java:69)
	at com.bootdo.system.controller.UserController$$FastClassBySpringCGLIB$$53b170de.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.UserController$$EnhancerBySpringCGLIB$$df33377f.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-29 15:18:13 -getMaxRows error
java.sql.SQLException: No operations allowed after statement closed.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:442)
	at com.mysql.jdbc.StatementImpl.getQueryTimeout(StatementImpl.java:1985)
	at com.alibaba.druid.filter.FilterChainImpl.statement_getQueryTimeout(FilterChainImpl.java:2437)
	at com.alibaba.druid.filter.FilterAdapter.statement_getQueryTimeout(FilterAdapter.java:2550)
	at com.alibaba.druid.filter.FilterChainImpl.statement_getQueryTimeout(FilterChainImpl.java:2435)
	at com.alibaba.druid.filter.FilterAdapter.statement_getQueryTimeout(FilterAdapter.java:2550)
	at com.alibaba.druid.filter.FilterChainImpl.statement_getQueryTimeout(FilterChainImpl.java:2435)
	at com.alibaba.druid.filter.FilterAdapter.statement_getQueryTimeout(FilterAdapter.java:2550)
	at com.alibaba.druid.filter.FilterChainImpl.statement_getQueryTimeout(FilterChainImpl.java:2435)
	at com.alibaba.druid.proxy.jdbc.StatementProxyImpl.getQueryTimeout(StatementProxyImpl.java:341)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.<init>(DruidPooledPreparedStatement.java:92)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:340)
	at sun.reflect.GeneratedMethodAccessor113.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy123.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy90.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at com.bootdo.system.service.impl.UserServiceImpl.save(UserServiceImpl.java:38)
	at com.bootdo.system.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$2c95b2d0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$b076eed9.save(<generated>)
	at com.bootdo.system.controller.UserController.save(UserController.java:69)
	at com.bootdo.system.controller.UserController$$FastClassBySpringCGLIB$$53b170de.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.UserController$$EnhancerBySpringCGLIB$$df33377f.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-29 15:18:13 -getFetchSize error
java.sql.SQLException: No operations allowed after statement closed.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:442)
	at com.mysql.jdbc.StatementImpl.getFetchSize(StatementImpl.java:1682)
	at com.alibaba.druid.filter.FilterChainImpl.statement_getFetchSize(FilterChainImpl.java:2554)
	at com.alibaba.druid.filter.FilterAdapter.statement_getFetchSize(FilterAdapter.java:2519)
	at com.alibaba.druid.filter.FilterChainImpl.statement_getFetchSize(FilterChainImpl.java:2552)
	at com.alibaba.druid.filter.FilterAdapter.statement_getFetchSize(FilterAdapter.java:2519)
	at com.alibaba.druid.filter.FilterChainImpl.statement_getFetchSize(FilterChainImpl.java:2552)
	at com.alibaba.druid.filter.FilterAdapter.statement_getFetchSize(FilterAdapter.java:2519)
	at com.alibaba.druid.filter.FilterChainImpl.statement_getFetchSize(FilterChainImpl.java:2552)
	at com.alibaba.druid.proxy.jdbc.StatementProxyImpl.getFetchSize(StatementProxyImpl.java:291)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.<init>(DruidPooledPreparedStatement.java:104)
	at com.alibaba.druid.pool.DruidPooledConnection.prepareStatement(DruidPooledConnection.java:340)
	at sun.reflect.GeneratedMethodAccessor113.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.ConnectionLogger.invoke(ConnectionLogger.java:55)
	at com.sun.proxy.$Proxy123.prepareStatement(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy90.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at com.bootdo.system.service.impl.UserServiceImpl.save(UserServiceImpl.java:38)
	at com.bootdo.system.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$2c95b2d0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$b076eed9.save(<generated>)
	at com.bootdo.system.controller.UserController.save(UserController.java:69)
	at com.bootdo.system.controller.UserController$$FastClassBySpringCGLIB$$53b170de.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.UserController$$EnhancerBySpringCGLIB$$df33377f.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-29 15:18:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:18:13 -==> Parameters: 123(String), admin(String), error(String), null, http://localhost:8080/sys/user/save(String), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #1 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: No operations allowed after statement closed.(String), null, 2019-01-29 15:18:13.571(Timestamp)
2019-01-29 15:18:13 -nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #1 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: No operations allowed after statement closed.
org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #1 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: No operations allowed after statement closed.
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:79)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy90.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy108.save(Unknown Source)
	at com.bootdo.system.service.impl.UserServiceImpl.save(UserServiceImpl.java:38)
	at com.bootdo.system.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$2c95b2d0.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$b076eed9.save(<generated>)
	at com.bootdo.system.controller.UserController.save(UserController.java:69)
	at com.bootdo.system.controller.UserController$$FastClassBySpringCGLIB$$53b170de.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.UserController$$EnhancerBySpringCGLIB$$df33377f.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.ibatis.type.TypeException: Could not set parameters for mapping: ParameterMapping{property='userId', mode=IN, javaType=class java.lang.String, jdbcType=null, numericScale=null, resultMapId='null', jdbcTypeName='null', expression='null'}. Cause: org.apache.ibatis.type.TypeException: Error setting non null for parameter #1 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: No operations allowed after statement closed.
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:89)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.parameterize(PreparedStatementHandler.java:93)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.parameterize(RoutingStatementHandler.java:64)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:86)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:49)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 112 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Error setting non null for parameter #1 with JdbcType null . Try setting a different JdbcType for this parameter or a different configuration property. Cause: java.sql.SQLException: No operations allowed after statement closed.
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:55)
	at org.apache.ibatis.scripting.defaults.DefaultParameterHandler.setParameters(DefaultParameterHandler.java:87)
	... 125 common frames omitted
Caused by: java.sql.SQLException: No operations allowed after statement closed.
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:965)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.StatementImpl.checkClosed(StatementImpl.java:442)
	at com.mysql.jdbc.PreparedStatement.setString(PreparedStatement.java:3875)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2823)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.filter.FilterAdapter.preparedStatement_setString(FilterAdapter.java:1340)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_setString(FilterChainImpl.java:2820)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.setString(PreparedStatementProxyImpl.java:560)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.setString(DruidPooledPreparedStatement.java:365)
	at sun.reflect.GeneratedMethodAccessor104.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:67)
	at com.sun.proxy.$Proxy124.setString(Unknown Source)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:31)
	at org.apache.ibatis.type.StringTypeHandler.setNonNullParameter(StringTypeHandler.java:26)
	at org.apache.ibatis.type.BaseTypeHandler.setParameter(BaseTypeHandler.java:53)
	... 126 common frames omitted
2019-01-29 15:18:13 -<==    Updates: 1
2019-01-29 15:19:01 -Starting BootdoApplication on YH-20180312AAAP with PID 9196 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-29 15:19:01 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-29 15:19:01 -The following profiles are active: dev
2019-01-29 15:19:01 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1d730606: startup date [Tue Jan 29 15:19:01 CST 2019]; root of context hierarchy
2019-01-29 15:19:03 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$704e9e2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:19:04 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$64c262cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:19:04 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:19:04 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:19:04 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:19:04 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$ff612fcd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:19:04 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$273c680d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:19:04 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$199596b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:19:04 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-29 15:19:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:19:04 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:19:04 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:19:05 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:19:05 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:19:05 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-29 15:19:05 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-29 15:19:05 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:19:05 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:19:05 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:19:05 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:19:06 -Tomcat initialized with port(s): 8080 (http)
2019-01-29 15:19:06 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 15:19:06 -Starting service [Tomcat]
2019-01-29 15:19:06 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-29 15:19:06 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-29 15:19:06 -Initializing Spring embedded WebApplicationContext
2019-01-29 15:19:06 -Root WebApplicationContext: initialization completed in 4371 ms
2019-01-29 15:19:06 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 15:19:06 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 15:19:06 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 15:19:06 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 15:19:06 -Filter xssFilter was not registered (disabled)
2019-01-29 15:19:06 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-29 15:19:06 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-29 15:19:06 -Servlet statViewServlet mapped to [/druid/*]
2019-01-29 15:19:06 -Servlet dispatcherServlet mapped to [/]
2019-01-29 15:19:07 -{dataSource-1} inited
2019-01-29 15:19:07 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1d730606: startup date [Tue Jan 29 15:19:01 CST 2019]; root of context hierarchy
2019-01-29 15:19:08 -Using default implementation for ThreadExecutor
2019-01-29 15:19:08 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-29 15:19:08 -Quartz Scheduler v.2.2.1 created.
2019-01-29 15:19:08 -RAMJobStore initialized.
2019-01-29 15:19:08 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-29 15:19:08 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-29 15:19:08 -Quartz scheduler version: 2.2.1
2019-01-29 15:19:08 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2a075e70
2019-01-29 15:19:08 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-29 15:19:08 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-29 15:19:09 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:19:09 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-29 15:19:09 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-29 15:19:09 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-29 15:19:09 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-29 15:19:09 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-29 15:19:09 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-29 15:19:09 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-29 15:19:09 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-29 15:19:09 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-29 15:19:09 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:19:09 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-29 15:19:09 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-29 15:19:09 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-29 15:19:09 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 15:19:09 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-29 15:19:09 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-29 15:19:09 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-29 15:19:09 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:19:09 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-29 15:19:09 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 15:19:09 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 15:19:09 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-29 15:19:09 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-29 15:19:09 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-29 15:19:09 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-29 15:19:09 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:19:09 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-29 15:19:09 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-29 15:19:09 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-29 15:19:09 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-29 15:19:09 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-29 15:19:09 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-29 15:19:09 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-29 15:19:09 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-29 15:19:09 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-29 15:19:09 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-29 15:19:09 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-29 15:19:09 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-29 15:19:09 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:19:09 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-29 15:19:09 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-29 15:19:09 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-29 15:19:09 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-29 15:19:09 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-29 15:19:09 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-29 15:19:09 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-29 15:19:09 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-29 15:19:09 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-29 15:19:09 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-29 15:19:09 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-29 15:19:09 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-29 15:19:09 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 15:19:09 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-29 15:19:09 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-29 15:19:09 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-29 15:19:09 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-29 15:19:09 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-29 15:19:09 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long)
2019-01-29 15:19:09 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long[])
2019-01-29 15:19:09 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-29 15:19:09 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:19:09 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-29 15:19:09 -Mapped "{[/system/staff/edit/{staffId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 15:19:09 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-29 15:19:09 -Mapped "{[/system/staff/selectView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.selectView()
2019-01-29 15:19:09 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-29 15:19:09 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-29 15:19:09 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-29 15:19:09 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-29 15:19:09 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:19:09 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-29 15:19:09 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-29 15:19:09 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-29 15:19:09 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-29 15:19:09 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:19:09 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-29 15:19:09 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-29 15:19:09 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-29 15:19:09 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-29 15:19:09 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-29 15:19:09 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-29 15:19:09 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-29 15:19:09 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-29 15:19:09 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-29 15:19:10 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-29 15:19:10 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-29 15:19:10 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-29 15:19:10 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:19:10 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1d730606: startup date [Tue Jan 29 15:19:01 CST 2019]; root of context hierarchy
2019-01-29 15:19:11 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:19:11 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:19:11 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:19:11 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-29 15:19:11 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-29 15:19:11 -Registering beans for JMX exposure on startup
2019-01-29 15:19:11 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-29 15:19:11 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-29 15:19:11 -Starting beans in phase 2147483647
2019-01-29 15:19:11 -Context refreshed
2019-01-29 15:19:11 -Found 1 custom documentation plugin(s)
2019-01-29 15:19:11 -Scanning for api listing references
2019-01-29 15:19:12 -Generating unique operation named: removeUsingPOST_1
2019-01-29 15:19:12 -Generating unique operation named: editUsingGET_1
2019-01-29 15:19:12 -Generating unique operation named: listUsingGET_1
2019-01-29 15:19:12 -Generating unique operation named: updateUsingPOST_1
2019-01-29 15:19:12 -Generating unique operation named: addUsingGET_1
2019-01-29 15:19:12 -Generating unique operation named: editUsingGET_2
2019-01-29 15:19:12 -Generating unique operation named: listUsingGET_2
2019-01-29 15:19:12 -Generating unique operation named: removeUsingPOST_2
2019-01-29 15:19:12 -Generating unique operation named: removeUsingPOST_3
2019-01-29 15:19:12 -Generating unique operation named: saveUsingPOST_1
2019-01-29 15:19:12 -Generating unique operation named: updateUsingPOST_2
2019-01-29 15:19:12 -Generating unique operation named: listUsingGET_3
2019-01-29 15:19:12 -Generating unique operation named: removeUsingPOST_4
2019-01-29 15:19:12 -Generating unique operation named: welcomeUsingGET_1
2019-01-29 15:19:12 -Generating unique operation named: addUsingGET_2
2019-01-29 15:19:12 -Generating unique operation named: editUsingGET_3
2019-01-29 15:19:12 -Generating unique operation named: listUsingGET_4
2019-01-29 15:19:12 -Generating unique operation named: removeUsingPOST_5
2019-01-29 15:19:12 -Generating unique operation named: saveUsingPOST_2
2019-01-29 15:19:12 -Generating unique operation named: treeUsingGET_1
2019-01-29 15:19:12 -Generating unique operation named: updateUsingPOST_3
2019-01-29 15:19:12 -Generating unique operation named: addUsingGET_3
2019-01-29 15:19:12 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-29 15:19:12 -Generating unique operation named: editUsingGET_4
2019-01-29 15:19:12 -Generating unique operation named: listUsingGET_5
2019-01-29 15:19:12 -Generating unique operation named: saveUsingPOST_3
2019-01-29 15:19:12 -Generating unique operation named: saveUsingPOST_4
2019-01-29 15:19:12 -Generating unique operation named: updateUsingPOST_4
2019-01-29 15:19:12 -Generating unique operation named: listUsingGET_6
2019-01-29 15:19:12 -Generating unique operation named: listUsingHEAD_1
2019-01-29 15:19:12 -Generating unique operation named: listUsingPOST_1
2019-01-29 15:19:12 -Generating unique operation named: listUsingPUT_1
2019-01-29 15:19:12 -Generating unique operation named: listUsingPATCH_1
2019-01-29 15:19:12 -Generating unique operation named: listUsingDELETE_1
2019-01-29 15:19:12 -Generating unique operation named: listUsingOPTIONS_1
2019-01-29 15:19:12 -Generating unique operation named: listUsingTRACE_1
2019-01-29 15:19:12 -Generating unique operation named: addUsingGET_4
2019-01-29 15:19:12 -Generating unique operation named: editUsingGET_5
2019-01-29 15:19:12 -Generating unique operation named: listUsingGET_7
2019-01-29 15:19:12 -Generating unique operation named: removeUsingPOST_6
2019-01-29 15:19:12 -Generating unique operation named: removeUsingPOST_7
2019-01-29 15:19:12 -Generating unique operation named: saveUsingPOST_5
2019-01-29 15:19:12 -Generating unique operation named: updateUsingGET_1
2019-01-29 15:19:12 -Generating unique operation named: updateUsingHEAD_1
2019-01-29 15:19:12 -Generating unique operation named: updateUsingPOST_5
2019-01-29 15:19:12 -Generating unique operation named: updateUsingPUT_1
2019-01-29 15:19:12 -Generating unique operation named: updateUsingPATCH_1
2019-01-29 15:19:12 -Generating unique operation named: updateUsingDELETE_1
2019-01-29 15:19:12 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-29 15:19:12 -Generating unique operation named: updateUsingTRACE_1
2019-01-29 15:19:12 -Generating unique operation named: addUsingGET_5
2019-01-29 15:19:12 -Generating unique operation named: editUsingGET_6
2019-01-29 15:19:12 -Generating unique operation named: listUsingGET_8
2019-01-29 15:19:12 -Generating unique operation named: removeUsingPOST_8
2019-01-29 15:19:12 -Generating unique operation named: removeUsingPOST_9
2019-01-29 15:19:12 -Generating unique operation named: saveUsingPOST_6
2019-01-29 15:19:12 -Generating unique operation named: updateUsingGET_2
2019-01-29 15:19:12 -Generating unique operation named: updateUsingHEAD_2
2019-01-29 15:19:12 -Generating unique operation named: updateUsingPOST_6
2019-01-29 15:19:12 -Generating unique operation named: updateUsingPUT_2
2019-01-29 15:19:12 -Generating unique operation named: updateUsingPATCH_2
2019-01-29 15:19:12 -Generating unique operation named: updateUsingDELETE_2
2019-01-29 15:19:12 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-29 15:19:12 -Generating unique operation named: updateUsingTRACE_2
2019-01-29 15:19:12 -Generating unique operation named: addUsingGET_6
2019-01-29 15:19:12 -Generating unique operation named: editUsingGET_7
2019-01-29 15:19:12 -Generating unique operation named: listUsingGET_9
2019-01-29 15:19:12 -Generating unique operation named: roleUsingGET_1
2019-01-29 15:19:12 -Generating unique operation named: saveUsingPOST_7
2019-01-29 15:19:12 -Starting Quartz Scheduler now
2019-01-29 15:19:12 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-29 15:19:12 -Starting...
2019-01-29 15:19:12 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-29 15:19:12 -Started.
2019-01-29 15:19:12 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 15:19:13 -Using a shared selector for servlet write/read
2019-01-29 15:19:13 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-29 15:19:13 -Started BootdoApplication in 12.262 seconds (JVM running for 13.405)
2019-01-29 15:19:13 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-29 15:19:13 -==> Parameters: 
2019-01-29 15:19:13 -<==      Total: 1
2019-01-29 15:19:24 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 15:19:24 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 15:19:24 -FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2019-01-29 15:19:24 -Enabling session validation scheduler...
2019-01-29 15:19:24 -请求地址 : http://localhost:8080/login;JSESSIONID=d71599bb-5a9f-484e-9075-b98a438a20d5
2019-01-29 15:19:24 -HTTP METHOD : GET
2019-01-29 15:19:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 15:19:24 -参数 : []
2019-01-29 15:19:24 -耗时 : 3
2019-01-29 15:19:24 -返回值 : login
2019-01-29 15:19:25 -请求地址 : http://localhost:8080/login
2019-01-29 15:19:25 -HTTP METHOD : GET
2019-01-29 15:19:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 15:19:25 -参数 : []
2019-01-29 15:19:25 -耗时 : 1
2019-01-29 15:19:25 -返回值 : login
2019-01-29 15:19:26 -请求地址 : http://localhost:8080/login;JSESSIONID=d71599bb-5a9f-484e-9075-b98a438a20d5
2019-01-29 15:19:26 -HTTP METHOD : GET
2019-01-29 15:19:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 15:19:26 -参数 : []
2019-01-29 15:19:26 -耗时 : 1
2019-01-29 15:19:26 -返回值 : login
2019-01-29 15:19:27 -请求地址 : http://localhost:8080/login
2019-01-29 15:19:27 -HTTP METHOD : GET
2019-01-29 15:19:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 15:19:27 -参数 : []
2019-01-29 15:19:27 -耗时 : 0
2019-01-29 15:19:27 -返回值 : login
2019-01-29 15:19:30 -请求地址 : http://localhost:8080/login
2019-01-29 15:19:30 -HTTP METHOD : POST
2019-01-29 15:19:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 15:19:30 -参数 : [admin, 123456]
2019-01-29 15:19:30 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 15:19:30 -==> Parameters: admin(String)
2019-01-29 15:19:30 -<==      Total: 1
2019-01-29 15:19:30 -耗时 : 53
2019-01-29 15:19:30 -返回值 : {msg=操作成功, code=0}
2019-01-29 15:19:30 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-29 15:19:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:19:30 -==> Parameters: 123(String), admin(String), 登录(String), 53(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 15:19:30.884(Timestamp)
2019-01-29 15:19:30 -请求地址 : http://localhost:8080/index
2019-01-29 15:19:30 -HTTP METHOD : GET
2019-01-29 15:19:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 15:19:30 -参数 : [{}]
2019-01-29 15:19:30 -<==    Updates: 1
2019-01-29 15:19:30 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 15:19:31 -==> Parameters: 123(String)
2019-01-29 15:19:31 -<==      Total: 3
2019-01-29 15:19:31 -耗时 : 140
2019-01-29 15:19:31 -返回值 : index_v1
2019-01-29 15:19:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:19:31 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 140(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 15:19:31.124(Timestamp)
2019-01-29 15:19:31 -<==    Updates: 1
2019-01-29 15:19:33 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 15:19:33 -==> Parameters: 123(String)
2019-01-29 15:19:33 -<==      Total: 7
2019-01-29 15:19:33 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 15:19:33 -HTTP METHOD : GET
2019-01-29 15:19:33 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 15:19:33 -参数 : []
2019-01-29 15:19:33 -耗时 : 0
2019-01-29 15:19:33 -返回值 : system/user/user
2019-01-29 15:19:33 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 15:19:33 -HTTP METHOD : GET
2019-01-29 15:19:33 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 15:19:33 -参数 : [{page=1, limit=15}]
2019-01-29 15:19:33 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 15:19:33 -==> Parameters: 
2019-01-29 15:19:33 -<==      Total: 2
2019-01-29 15:19:33 -==>  Preparing: select count(*) from sys_user 
2019-01-29 15:19:33 -==> Parameters: 
2019-01-29 15:19:33 -<==      Total: 1
2019-01-29 15:19:33 -耗时 : 109
2019-01-29 15:19:33 -返回值 : com.bootdo.common.utils.PageUtils@2fe6c24e
2019-01-29 15:19:35 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 15:19:35 -HTTP METHOD : GET
2019-01-29 15:19:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 15:19:35 -参数 : []
2019-01-29 15:19:35 -耗时 : 1
2019-01-29 15:19:35 -返回值 : system/user/add
2019-01-29 15:19:44 -请求地址 : http://localhost:8080/sys/user/save
2019-01-29 15:19:44 -HTTP METHOD : POST
2019-01-29 15:19:44 -CLASS_METHOD : com.bootdo.system.controller.UserController.save
2019-01-29 15:19:44 -参数 : [com.bootdo.system.domain.UserDO@797e3b73]
2019-01-29 15:19:44 -==>  Preparing: insert into sys_user ( `user_id`, `dept_id`, `username`, `usernikename`, `userpwd`, `userstatus`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:19:44 -==> Parameters: (String), null, ccc(String), (String), 111111(String), 1(Integer), null, null, null, null, null, null
2019-01-29 15:19:44 -<==    Updates: 1
2019-01-29 15:19:44 -耗时 : 48
2019-01-29 15:19:44 -返回值 : {msg=操作成功, code=0}
2019-01-29 15:19:44 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 15:19:44 -HTTP METHOD : GET
2019-01-29 15:19:44 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 15:19:44 -参数 : []
2019-01-29 15:19:44 -耗时 : 0
2019-01-29 15:19:44 -返回值 : system/user/user
2019-01-29 15:19:44 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 15:19:44 -HTTP METHOD : GET
2019-01-29 15:19:44 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 15:19:44 -参数 : [{page=1, limit=15}]
2019-01-29 15:19:44 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 15:19:44 -==> Parameters: 
2019-01-29 15:19:44 -<==      Total: 3
2019-01-29 15:19:44 -==>  Preparing: select count(*) from sys_user 
2019-01-29 15:19:44 -==> Parameters: 
2019-01-29 15:19:44 -<==      Total: 1
2019-01-29 15:19:44 -耗时 : 10
2019-01-29 15:19:44 -返回值 : com.bootdo.common.utils.PageUtils@2c8e3844
2019-01-29 15:20:10 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-29 15:22:51 -Starting BootdoApplication on YH-20180312AAAP with PID 15160 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-29 15:22:51 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-29 15:22:51 -The following profiles are active: dev
2019-01-29 15:22:51 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@39ad977d: startup date [Tue Jan 29 15:22:51 CST 2019]; root of context hierarchy
2019-01-29 15:22:52 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$b15452f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:22:52 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$a5c8179d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:22:52 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:22:52 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:22:52 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:22:52 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$4066e49b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:22:52 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$68421cdb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:22:53 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5a9b4b82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:22:53 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-29 15:22:53 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:22:53 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:22:53 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:22:53 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:22:53 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:22:53 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-29 15:22:53 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-29 15:22:53 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:22:53 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:22:53 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:22:53 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:22:54 -Tomcat initialized with port(s): 8080 (http)
2019-01-29 15:22:54 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 15:22:54 -Starting service [Tomcat]
2019-01-29 15:22:54 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-29 15:22:54 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-29 15:22:54 -Initializing Spring embedded WebApplicationContext
2019-01-29 15:22:54 -Root WebApplicationContext: initialization completed in 3073 ms
2019-01-29 15:22:54 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 15:22:54 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 15:22:54 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 15:22:54 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 15:22:54 -Filter xssFilter was not registered (disabled)
2019-01-29 15:22:54 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-29 15:22:54 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-29 15:22:54 -Servlet statViewServlet mapped to [/druid/*]
2019-01-29 15:22:54 -Servlet dispatcherServlet mapped to [/]
2019-01-29 15:22:55 -{dataSource-1} inited
2019-01-29 15:22:55 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@39ad977d: startup date [Tue Jan 29 15:22:51 CST 2019]; root of context hierarchy
2019-01-29 15:22:56 -Using default implementation for ThreadExecutor
2019-01-29 15:22:56 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-29 15:22:56 -Quartz Scheduler v.2.2.1 created.
2019-01-29 15:22:56 -RAMJobStore initialized.
2019-01-29 15:22:56 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-29 15:22:56 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-29 15:22:56 -Quartz scheduler version: 2.2.1
2019-01-29 15:22:56 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5e6522a6
2019-01-29 15:22:56 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-29 15:22:56 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-29 15:22:57 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:22:57 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-29 15:22:57 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-29 15:22:57 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-29 15:22:57 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-29 15:22:57 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-29 15:22:57 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-29 15:22:57 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-29 15:22:57 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-29 15:22:57 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-29 15:22:57 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:22:57 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-29 15:22:57 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-29 15:22:57 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-29 15:22:57 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 15:22:57 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-29 15:22:57 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-29 15:22:57 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-29 15:22:57 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:22:57 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-29 15:22:57 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 15:22:57 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 15:22:57 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-29 15:22:57 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-29 15:22:57 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-29 15:22:57 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-29 15:22:57 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:22:57 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-29 15:22:57 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-29 15:22:57 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-29 15:22:57 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-29 15:22:57 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-29 15:22:57 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-29 15:22:57 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-29 15:22:57 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-29 15:22:57 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-29 15:22:57 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-29 15:22:57 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-29 15:22:57 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-29 15:22:57 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:22:57 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-29 15:22:57 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-29 15:22:57 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-29 15:22:57 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-29 15:22:57 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-29 15:22:57 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-29 15:22:57 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-29 15:22:57 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-29 15:22:57 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-29 15:22:57 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-29 15:22:57 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-29 15:22:57 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-29 15:22:57 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 15:22:57 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-29 15:22:57 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-29 15:22:57 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-29 15:22:57 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-29 15:22:57 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-29 15:22:57 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long)
2019-01-29 15:22:57 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long[])
2019-01-29 15:22:57 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-29 15:22:57 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:22:57 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-29 15:22:57 -Mapped "{[/system/staff/edit/{staffId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 15:22:57 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-29 15:22:57 -Mapped "{[/system/staff/selectView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.selectView()
2019-01-29 15:22:57 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-29 15:22:57 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-29 15:22:57 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-29 15:22:57 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-29 15:22:57 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:22:57 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-29 15:22:57 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-29 15:22:57 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-29 15:22:57 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-29 15:22:57 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:22:57 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-29 15:22:57 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-29 15:22:57 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-29 15:22:57 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-29 15:22:57 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-29 15:22:57 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-29 15:22:57 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-29 15:22:57 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-29 15:22:57 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-29 15:22:57 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-29 15:22:57 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-29 15:22:58 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-29 15:22:58 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:22:58 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@39ad977d: startup date [Tue Jan 29 15:22:51 CST 2019]; root of context hierarchy
2019-01-29 15:22:58 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:22:58 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:22:58 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:22:58 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-29 15:22:58 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-29 15:22:59 -Registering beans for JMX exposure on startup
2019-01-29 15:22:59 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-29 15:22:59 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-29 15:22:59 -Starting beans in phase 2147483647
2019-01-29 15:22:59 -Context refreshed
2019-01-29 15:22:59 -Found 1 custom documentation plugin(s)
2019-01-29 15:22:59 -Scanning for api listing references
2019-01-29 15:22:59 -Generating unique operation named: removeUsingPOST_1
2019-01-29 15:22:59 -Generating unique operation named: editUsingGET_1
2019-01-29 15:22:59 -Generating unique operation named: listUsingGET_1
2019-01-29 15:22:59 -Generating unique operation named: updateUsingPOST_1
2019-01-29 15:22:59 -Generating unique operation named: addUsingGET_1
2019-01-29 15:22:59 -Generating unique operation named: editUsingGET_2
2019-01-29 15:22:59 -Generating unique operation named: listUsingGET_2
2019-01-29 15:22:59 -Generating unique operation named: removeUsingPOST_2
2019-01-29 15:22:59 -Generating unique operation named: removeUsingPOST_3
2019-01-29 15:22:59 -Generating unique operation named: saveUsingPOST_1
2019-01-29 15:22:59 -Generating unique operation named: updateUsingPOST_2
2019-01-29 15:22:59 -Generating unique operation named: listUsingGET_3
2019-01-29 15:22:59 -Generating unique operation named: removeUsingPOST_4
2019-01-29 15:23:00 -Generating unique operation named: welcomeUsingGET_1
2019-01-29 15:23:00 -Generating unique operation named: addUsingGET_2
2019-01-29 15:23:00 -Generating unique operation named: editUsingGET_3
2019-01-29 15:23:00 -Generating unique operation named: listUsingGET_4
2019-01-29 15:23:00 -Generating unique operation named: removeUsingPOST_5
2019-01-29 15:23:00 -Generating unique operation named: saveUsingPOST_2
2019-01-29 15:23:00 -Generating unique operation named: treeUsingGET_1
2019-01-29 15:23:00 -Generating unique operation named: updateUsingPOST_3
2019-01-29 15:23:00 -Generating unique operation named: addUsingGET_3
2019-01-29 15:23:00 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-29 15:23:00 -Generating unique operation named: editUsingGET_4
2019-01-29 15:23:00 -Generating unique operation named: listUsingGET_5
2019-01-29 15:23:00 -Generating unique operation named: saveUsingPOST_3
2019-01-29 15:23:00 -Generating unique operation named: saveUsingPOST_4
2019-01-29 15:23:00 -Generating unique operation named: updateUsingPOST_4
2019-01-29 15:23:00 -Generating unique operation named: listUsingGET_6
2019-01-29 15:23:00 -Generating unique operation named: listUsingHEAD_1
2019-01-29 15:23:00 -Generating unique operation named: listUsingPOST_1
2019-01-29 15:23:00 -Generating unique operation named: listUsingPUT_1
2019-01-29 15:23:00 -Generating unique operation named: listUsingPATCH_1
2019-01-29 15:23:00 -Generating unique operation named: listUsingDELETE_1
2019-01-29 15:23:00 -Generating unique operation named: listUsingOPTIONS_1
2019-01-29 15:23:00 -Generating unique operation named: listUsingTRACE_1
2019-01-29 15:23:00 -Generating unique operation named: addUsingGET_4
2019-01-29 15:23:00 -Generating unique operation named: editUsingGET_5
2019-01-29 15:23:00 -Generating unique operation named: listUsingGET_7
2019-01-29 15:23:00 -Generating unique operation named: removeUsingPOST_6
2019-01-29 15:23:00 -Generating unique operation named: removeUsingPOST_7
2019-01-29 15:23:00 -Generating unique operation named: saveUsingPOST_5
2019-01-29 15:23:00 -Generating unique operation named: updateUsingGET_1
2019-01-29 15:23:00 -Generating unique operation named: updateUsingHEAD_1
2019-01-29 15:23:00 -Generating unique operation named: updateUsingPOST_5
2019-01-29 15:23:00 -Generating unique operation named: updateUsingPUT_1
2019-01-29 15:23:00 -Generating unique operation named: updateUsingPATCH_1
2019-01-29 15:23:00 -Generating unique operation named: updateUsingDELETE_1
2019-01-29 15:23:00 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-29 15:23:00 -Generating unique operation named: updateUsingTRACE_1
2019-01-29 15:23:00 -Generating unique operation named: addUsingGET_5
2019-01-29 15:23:00 -Generating unique operation named: editUsingGET_6
2019-01-29 15:23:00 -Generating unique operation named: listUsingGET_8
2019-01-29 15:23:00 -Generating unique operation named: removeUsingPOST_8
2019-01-29 15:23:00 -Generating unique operation named: removeUsingPOST_9
2019-01-29 15:23:00 -Generating unique operation named: saveUsingPOST_6
2019-01-29 15:23:00 -Generating unique operation named: updateUsingGET_2
2019-01-29 15:23:00 -Generating unique operation named: updateUsingHEAD_2
2019-01-29 15:23:00 -Generating unique operation named: updateUsingPOST_6
2019-01-29 15:23:00 -Generating unique operation named: updateUsingPUT_2
2019-01-29 15:23:00 -Generating unique operation named: updateUsingPATCH_2
2019-01-29 15:23:00 -Generating unique operation named: updateUsingDELETE_2
2019-01-29 15:23:00 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-29 15:23:00 -Generating unique operation named: updateUsingTRACE_2
2019-01-29 15:23:00 -Generating unique operation named: addUsingGET_6
2019-01-29 15:23:00 -Generating unique operation named: editUsingGET_7
2019-01-29 15:23:00 -Generating unique operation named: listUsingGET_9
2019-01-29 15:23:00 -Generating unique operation named: roleUsingGET_1
2019-01-29 15:23:00 -Generating unique operation named: saveUsingPOST_7
2019-01-29 15:23:00 -Starting Quartz Scheduler now
2019-01-29 15:23:00 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-29 15:23:00 -Starting...
2019-01-29 15:23:00 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-29 15:23:00 -Started.
2019-01-29 15:23:00 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 15:23:00 -Using a shared selector for servlet write/read
2019-01-29 15:23:00 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-29 15:23:00 -Started BootdoApplication in 9.623 seconds (JVM running for 10.175)
2019-01-29 15:23:00 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-29 15:23:00 -==> Parameters: 
2019-01-29 15:23:00 -<==      Total: 1
2019-01-29 15:23:23 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 15:23:23 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 15:23:23 -FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
2019-01-29 15:23:23 -Enabling session validation scheduler...
2019-01-29 15:23:23 -请求地址 : http://localhost:8080/login;JSESSIONID=23c8de41-da4c-4e3c-b5b7-d79737c1bb1c
2019-01-29 15:23:23 -HTTP METHOD : GET
2019-01-29 15:23:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 15:23:23 -参数 : []
2019-01-29 15:23:23 -耗时 : 2
2019-01-29 15:23:23 -返回值 : login
2019-01-29 15:23:24 -请求地址 : http://localhost:8080/login
2019-01-29 15:23:24 -HTTP METHOD : GET
2019-01-29 15:23:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 15:23:24 -参数 : []
2019-01-29 15:23:24 -耗时 : 1
2019-01-29 15:23:24 -返回值 : login
2019-01-29 15:23:27 -请求地址 : http://localhost:8080/login
2019-01-29 15:23:27 -HTTP METHOD : POST
2019-01-29 15:23:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 15:23:27 -参数 : [admin, 123456]
2019-01-29 15:23:27 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 15:23:27 -==> Parameters: admin(String)
2019-01-29 15:23:27 -<==      Total: 1
2019-01-29 15:23:27 -耗时 : 47
2019-01-29 15:23:27 -返回值 : {msg=操作成功, code=0}
2019-01-29 15:23:27 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-29 15:23:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:23:27 -==> Parameters: 123(String), admin(String), 登录(String), 47(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 15:23:27.389(Timestamp)
2019-01-29 15:23:27 -请求地址 : http://localhost:8080/index
2019-01-29 15:23:27 -HTTP METHOD : GET
2019-01-29 15:23:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 15:23:27 -参数 : [{}]
2019-01-29 15:23:27 -<==    Updates: 1
2019-01-29 15:23:27 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 15:23:27 -==> Parameters: 123(String)
2019-01-29 15:23:27 -<==      Total: 3
2019-01-29 15:23:27 -耗时 : 88
2019-01-29 15:23:27 -返回值 : index_v1
2019-01-29 15:23:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:23:27 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 88(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 15:23:27.566(Timestamp)
2019-01-29 15:23:27 -<==    Updates: 1
2019-01-29 15:23:29 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 15:23:29 -==> Parameters: 123(String)
2019-01-29 15:23:29 -<==      Total: 7
2019-01-29 15:23:29 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 15:23:29 -HTTP METHOD : GET
2019-01-29 15:23:29 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 15:23:29 -参数 : []
2019-01-29 15:23:29 -耗时 : 0
2019-01-29 15:23:29 -返回值 : system/user/user
2019-01-29 15:23:30 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 15:23:30 -HTTP METHOD : GET
2019-01-29 15:23:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 15:23:30 -参数 : [{page=1, limit=15}]
2019-01-29 15:23:30 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 15:23:30 -==> Parameters: 
2019-01-29 15:23:30 -<==      Total: 2
2019-01-29 15:23:30 -==>  Preparing: select count(*) from sys_user 
2019-01-29 15:23:30 -==> Parameters: 
2019-01-29 15:23:30 -<==      Total: 1
2019-01-29 15:23:30 -耗时 : 55
2019-01-29 15:23:30 -返回值 : com.bootdo.common.utils.PageUtils@14aeb617
2019-01-29 15:23:31 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 15:23:31 -HTTP METHOD : GET
2019-01-29 15:23:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 15:23:31 -参数 : []
2019-01-29 15:23:31 -耗时 : 2
2019-01-29 15:23:31 -返回值 : system/user/add
2019-01-29 15:23:37 -请求地址 : http://localhost:8080/sys/user/save
2019-01-29 15:23:37 -HTTP METHOD : POST
2019-01-29 15:23:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.save
2019-01-29 15:23:37 -参数 : [com.bootdo.system.domain.UserDO@35116f00]
2019-01-29 15:23:37 -==>  Preparing: insert into sys_user ( `user_id`, `dept_id`, `username`, `usernikename`, `userpwd`, `userstatus`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:23:37 -==> Parameters: 7cb9be19-5686-4eca-a529-f96677838eb4(String), null, ggg(String), (String), 111111(String), 1(Integer), null, null, null, null, null, null
2019-01-29 15:23:37 -<==    Updates: 1
2019-01-29 15:23:37 -耗时 : 44
2019-01-29 15:23:37 -返回值 : {msg=操作成功, code=0}
2019-01-29 15:23:37 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 15:23:37 -HTTP METHOD : GET
2019-01-29 15:23:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 15:23:37 -参数 : []
2019-01-29 15:23:37 -耗时 : 0
2019-01-29 15:23:37 -返回值 : system/user/user
2019-01-29 15:23:37 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 15:23:37 -HTTP METHOD : GET
2019-01-29 15:23:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 15:23:37 -参数 : [{page=1, limit=15}]
2019-01-29 15:23:37 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 15:23:37 -==> Parameters: 
2019-01-29 15:23:37 -<==      Total: 3
2019-01-29 15:23:37 -==>  Preparing: select count(*) from sys_user 
2019-01-29 15:23:37 -==> Parameters: 
2019-01-29 15:23:37 -<==      Total: 1
2019-01-29 15:23:37 -耗时 : 17
2019-01-29 15:23:37 -返回值 : com.bootdo.common.utils.PageUtils@6a42c229
2019-01-29 15:23:58 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-29 15:24:33 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 15:24:33 -HTTP METHOD : GET
2019-01-29 15:24:33 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 15:24:33 -参数 : []
2019-01-29 15:24:33 -耗时 : 0
2019-01-29 15:24:33 -返回值 : system/user/add
2019-01-29 15:24:40 -请求地址 : http://localhost:8080/sys/user/save
2019-01-29 15:24:40 -HTTP METHOD : POST
2019-01-29 15:24:40 -CLASS_METHOD : com.bootdo.system.controller.UserController.save
2019-01-29 15:24:40 -参数 : [com.bootdo.system.domain.UserDO@68cadf40]
2019-01-29 15:24:40 -==>  Preparing: insert into sys_user ( `user_id`, `dept_id`, `username`, `usernikename`, `userpwd`, `userstatus`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:24:40 -==> Parameters: 1ed66412-b6c2-45c1-bf4a-d6d3b1de22ce(String), null, ddd(String), ddd(String), 111111(String), 1(Integer), null, null, null, null, null, null
2019-01-29 15:24:40 -<==    Updates: 1
2019-01-29 15:24:40 -耗时 : 58
2019-01-29 15:24:40 -返回值 : {msg=操作成功, code=0}
2019-01-29 15:24:40 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 15:24:40 -HTTP METHOD : GET
2019-01-29 15:24:40 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 15:24:40 -参数 : []
2019-01-29 15:24:40 -耗时 : 0
2019-01-29 15:24:40 -返回值 : system/user/user
2019-01-29 15:24:40 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 15:24:40 -HTTP METHOD : GET
2019-01-29 15:24:40 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 15:24:40 -参数 : [{page=1, limit=15}]
2019-01-29 15:24:40 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 15:24:40 -==> Parameters: 
2019-01-29 15:24:40 -<==      Total: 4
2019-01-29 15:24:40 -==>  Preparing: select count(*) from sys_user 
2019-01-29 15:24:40 -==> Parameters: 
2019-01-29 15:24:40 -<==      Total: 1
2019-01-29 15:24:40 -耗时 : 10
2019-01-29 15:24:40 -返回值 : com.bootdo.common.utils.PageUtils@17f7603e
2019-01-29 15:54:30 -Starting BootdoApplication on YH-20180312AAAP with PID 14612 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-29 15:54:30 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-29 15:54:30 -The following profiles are active: dev
2019-01-29 15:54:30 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6da00fb9: startup date [Tue Jan 29 15:54:30 CST 2019]; root of context hierarchy
2019-01-29 15:54:31 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$7aef9eae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:54:32 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$6f636352] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:54:32 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:54:32 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:54:32 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:54:32 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$a023050] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:54:32 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$31dd6890] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:54:32 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$24369737] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:54:32 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-29 15:54:32 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:54:32 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:54:32 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:54:33 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:54:33 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:54:33 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-29 15:54:33 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-29 15:54:33 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:54:33 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:54:33 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:54:33 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 15:54:33 -Tomcat initialized with port(s): 8080 (http)
2019-01-29 15:54:33 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 15:54:33 -Starting service [Tomcat]
2019-01-29 15:54:33 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-29 15:54:33 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-29 15:54:33 -Initializing Spring embedded WebApplicationContext
2019-01-29 15:54:33 -Root WebApplicationContext: initialization completed in 3085 ms
2019-01-29 15:54:34 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 15:54:34 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 15:54:34 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 15:54:34 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 15:54:34 -Filter xssFilter was not registered (disabled)
2019-01-29 15:54:34 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-29 15:54:34 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-29 15:54:34 -Servlet statViewServlet mapped to [/druid/*]
2019-01-29 15:54:34 -Servlet dispatcherServlet mapped to [/]
2019-01-29 15:54:34 -{dataSource-1} inited
2019-01-29 15:54:35 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6da00fb9: startup date [Tue Jan 29 15:54:30 CST 2019]; root of context hierarchy
2019-01-29 15:54:35 -Using default implementation for ThreadExecutor
2019-01-29 15:54:35 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-29 15:54:35 -Quartz Scheduler v.2.2.1 created.
2019-01-29 15:54:35 -RAMJobStore initialized.
2019-01-29 15:54:35 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-29 15:54:35 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-29 15:54:35 -Quartz scheduler version: 2.2.1
2019-01-29 15:54:35 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3d59933
2019-01-29 15:54:35 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-29 15:54:35 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-29 15:54:36 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:54:36 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-29 15:54:36 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-29 15:54:36 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-29 15:54:36 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-29 15:54:36 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-29 15:54:36 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-29 15:54:36 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-29 15:54:36 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-29 15:54:36 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-29 15:54:36 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:54:36 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-29 15:54:36 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-29 15:54:36 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-29 15:54:36 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 15:54:36 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-29 15:54:36 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-29 15:54:36 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-29 15:54:36 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:54:36 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-29 15:54:36 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 15:54:36 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 15:54:36 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-29 15:54:36 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-29 15:54:36 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-29 15:54:36 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-29 15:54:36 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:54:36 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-29 15:54:36 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-29 15:54:36 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-29 15:54:36 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-29 15:54:36 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-29 15:54:36 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-29 15:54:36 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-29 15:54:36 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-29 15:54:36 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-29 15:54:36 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-29 15:54:36 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-29 15:54:36 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-29 15:54:36 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:54:36 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-29 15:54:36 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-29 15:54:36 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-29 15:54:36 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-29 15:54:36 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-29 15:54:36 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-29 15:54:36 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-29 15:54:36 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-29 15:54:36 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-29 15:54:36 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-29 15:54:36 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-29 15:54:36 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-29 15:54:36 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 15:54:36 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-29 15:54:36 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-29 15:54:36 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-29 15:54:36 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-29 15:54:36 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-29 15:54:36 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long)
2019-01-29 15:54:36 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long[])
2019-01-29 15:54:36 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-29 15:54:36 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:54:36 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-29 15:54:36 -Mapped "{[/system/staff/edit/{staffId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 15:54:36 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-29 15:54:36 -Mapped "{[/system/staff/selectView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.selectView()
2019-01-29 15:54:36 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-29 15:54:36 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-29 15:54:36 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-29 15:54:36 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-29 15:54:36 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:54:36 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-29 15:54:36 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-29 15:54:36 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-29 15:54:36 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-29 15:54:36 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 15:54:36 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-29 15:54:36 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-29 15:54:36 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-29 15:54:36 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-29 15:54:36 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-29 15:54:36 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-29 15:54:36 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-29 15:54:36 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-29 15:54:36 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-29 15:54:37 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-29 15:54:37 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-29 15:54:37 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-29 15:54:37 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:54:37 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6da00fb9: startup date [Tue Jan 29 15:54:30 CST 2019]; root of context hierarchy
2019-01-29 15:54:38 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:54:38 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:54:38 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 15:54:38 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-29 15:54:38 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-29 15:54:38 -Registering beans for JMX exposure on startup
2019-01-29 15:54:38 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-29 15:54:38 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-29 15:54:38 -Starting beans in phase 2147483647
2019-01-29 15:54:38 -Context refreshed
2019-01-29 15:54:38 -Found 1 custom documentation plugin(s)
2019-01-29 15:54:38 -Scanning for api listing references
2019-01-29 15:54:39 -Generating unique operation named: removeUsingPOST_1
2019-01-29 15:54:39 -Generating unique operation named: editUsingGET_1
2019-01-29 15:54:39 -Generating unique operation named: listUsingGET_1
2019-01-29 15:54:39 -Generating unique operation named: updateUsingPOST_1
2019-01-29 15:54:39 -Generating unique operation named: addUsingGET_1
2019-01-29 15:54:39 -Generating unique operation named: editUsingGET_2
2019-01-29 15:54:39 -Generating unique operation named: listUsingGET_2
2019-01-29 15:54:39 -Generating unique operation named: removeUsingPOST_2
2019-01-29 15:54:39 -Generating unique operation named: removeUsingPOST_3
2019-01-29 15:54:39 -Generating unique operation named: saveUsingPOST_1
2019-01-29 15:54:39 -Generating unique operation named: updateUsingPOST_2
2019-01-29 15:54:39 -Generating unique operation named: listUsingGET_3
2019-01-29 15:54:39 -Generating unique operation named: removeUsingPOST_4
2019-01-29 15:54:39 -Generating unique operation named: welcomeUsingGET_1
2019-01-29 15:54:39 -Generating unique operation named: addUsingGET_2
2019-01-29 15:54:39 -Generating unique operation named: editUsingGET_3
2019-01-29 15:54:39 -Generating unique operation named: listUsingGET_4
2019-01-29 15:54:39 -Generating unique operation named: removeUsingPOST_5
2019-01-29 15:54:39 -Generating unique operation named: saveUsingPOST_2
2019-01-29 15:54:39 -Generating unique operation named: treeUsingGET_1
2019-01-29 15:54:39 -Generating unique operation named: updateUsingPOST_3
2019-01-29 15:54:39 -Generating unique operation named: addUsingGET_3
2019-01-29 15:54:39 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-29 15:54:39 -Generating unique operation named: editUsingGET_4
2019-01-29 15:54:39 -Generating unique operation named: listUsingGET_5
2019-01-29 15:54:39 -Generating unique operation named: saveUsingPOST_3
2019-01-29 15:54:39 -Generating unique operation named: saveUsingPOST_4
2019-01-29 15:54:39 -Generating unique operation named: updateUsingPOST_4
2019-01-29 15:54:39 -Generating unique operation named: listUsingGET_6
2019-01-29 15:54:39 -Generating unique operation named: listUsingHEAD_1
2019-01-29 15:54:39 -Generating unique operation named: listUsingPOST_1
2019-01-29 15:54:39 -Generating unique operation named: listUsingPUT_1
2019-01-29 15:54:39 -Generating unique operation named: listUsingPATCH_1
2019-01-29 15:54:39 -Generating unique operation named: listUsingDELETE_1
2019-01-29 15:54:39 -Generating unique operation named: listUsingOPTIONS_1
2019-01-29 15:54:39 -Generating unique operation named: listUsingTRACE_1
2019-01-29 15:54:39 -Generating unique operation named: addUsingGET_4
2019-01-29 15:54:39 -Generating unique operation named: editUsingGET_5
2019-01-29 15:54:39 -Generating unique operation named: listUsingGET_7
2019-01-29 15:54:39 -Generating unique operation named: removeUsingPOST_6
2019-01-29 15:54:39 -Generating unique operation named: removeUsingPOST_7
2019-01-29 15:54:39 -Generating unique operation named: saveUsingPOST_5
2019-01-29 15:54:39 -Generating unique operation named: updateUsingGET_1
2019-01-29 15:54:39 -Generating unique operation named: updateUsingHEAD_1
2019-01-29 15:54:39 -Generating unique operation named: updateUsingPOST_5
2019-01-29 15:54:39 -Generating unique operation named: updateUsingPUT_1
2019-01-29 15:54:39 -Generating unique operation named: updateUsingPATCH_1
2019-01-29 15:54:39 -Generating unique operation named: updateUsingDELETE_1
2019-01-29 15:54:39 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-29 15:54:39 -Generating unique operation named: updateUsingTRACE_1
2019-01-29 15:54:39 -Generating unique operation named: addUsingGET_5
2019-01-29 15:54:39 -Generating unique operation named: editUsingGET_6
2019-01-29 15:54:39 -Generating unique operation named: listUsingGET_8
2019-01-29 15:54:39 -Generating unique operation named: removeUsingPOST_8
2019-01-29 15:54:39 -Generating unique operation named: removeUsingPOST_9
2019-01-29 15:54:39 -Generating unique operation named: saveUsingPOST_6
2019-01-29 15:54:39 -Generating unique operation named: updateUsingGET_2
2019-01-29 15:54:39 -Generating unique operation named: updateUsingHEAD_2
2019-01-29 15:54:39 -Generating unique operation named: updateUsingPOST_6
2019-01-29 15:54:39 -Generating unique operation named: updateUsingPUT_2
2019-01-29 15:54:39 -Generating unique operation named: updateUsingPATCH_2
2019-01-29 15:54:39 -Generating unique operation named: updateUsingDELETE_2
2019-01-29 15:54:39 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-29 15:54:39 -Generating unique operation named: updateUsingTRACE_2
2019-01-29 15:54:39 -Generating unique operation named: addUsingGET_6
2019-01-29 15:54:39 -Generating unique operation named: editUsingGET_7
2019-01-29 15:54:39 -Generating unique operation named: listUsingGET_9
2019-01-29 15:54:39 -Generating unique operation named: roleUsingGET_1
2019-01-29 15:54:39 -Generating unique operation named: saveUsingPOST_7
2019-01-29 15:54:39 -Starting Quartz Scheduler now
2019-01-29 15:54:39 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-29 15:54:39 -Starting...
2019-01-29 15:54:39 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-29 15:54:39 -Started.
2019-01-29 15:54:39 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 15:54:39 -Using a shared selector for servlet write/read
2019-01-29 15:54:39 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-29 15:54:39 -Started BootdoApplication in 9.652 seconds (JVM running for 10.159)
2019-01-29 15:54:39 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-29 15:54:39 -==> Parameters: 
2019-01-29 15:54:39 -<==      Total: 1
2019-01-29 15:54:55 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 15:54:55 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 15:54:55 -FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2019-01-29 15:54:55 -Enabling session validation scheduler...
2019-01-29 15:54:55 -请求地址 : http://localhost:8080/login;JSESSIONID=0f20cd92-2b55-45c6-83ff-29be2de8fccf
2019-01-29 15:54:55 -HTTP METHOD : GET
2019-01-29 15:54:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 15:54:55 -参数 : []
2019-01-29 15:54:55 -耗时 : 2
2019-01-29 15:54:55 -返回值 : login
2019-01-29 15:54:56 -请求地址 : http://localhost:8080/login
2019-01-29 15:54:56 -HTTP METHOD : GET
2019-01-29 15:54:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 15:54:56 -参数 : []
2019-01-29 15:54:56 -耗时 : 1
2019-01-29 15:54:56 -返回值 : login
2019-01-29 15:55:00 -请求地址 : http://localhost:8080/login
2019-01-29 15:55:00 -HTTP METHOD : POST
2019-01-29 15:55:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 15:55:00 -参数 : [admin, 123456]
2019-01-29 15:55:00 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 15:55:00 -==> Parameters: admin(String)
2019-01-29 15:55:00 -<==      Total: 1
2019-01-29 15:55:00 -耗时 : 51
2019-01-29 15:55:00 -返回值 : {msg=操作成功, code=0}
2019-01-29 15:55:00 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-29 15:55:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:55:00 -==> Parameters: 123(String), admin(String), 登录(String), 51(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 15:55:00.308(Timestamp)
2019-01-29 15:55:00 -请求地址 : http://localhost:8080/index
2019-01-29 15:55:00 -HTTP METHOD : GET
2019-01-29 15:55:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 15:55:00 -参数 : [{}]
2019-01-29 15:55:00 -<==    Updates: 1
2019-01-29 15:55:00 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 15:55:00 -==> Parameters: 123(String)
2019-01-29 15:55:00 -<==      Total: 3
2019-01-29 15:55:00 -耗时 : 97
2019-01-29 15:55:00 -返回值 : index_v1
2019-01-29 15:55:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:55:00 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 97(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 15:55:00.529(Timestamp)
2019-01-29 15:55:00 -<==    Updates: 1
2019-01-29 15:55:05 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 15:55:05 -==> Parameters: 123(String)
2019-01-29 15:55:05 -<==      Total: 7
2019-01-29 15:55:05 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 15:55:05 -HTTP METHOD : GET
2019-01-29 15:55:05 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 15:55:05 -参数 : []
2019-01-29 15:55:05 -耗时 : 0
2019-01-29 15:55:05 -返回值 : system/user/user
2019-01-29 15:55:06 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 15:55:06 -HTTP METHOD : GET
2019-01-29 15:55:06 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 15:55:06 -参数 : [{page=1, limit=15}]
2019-01-29 15:55:06 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 15:55:06 -==> Parameters: 
2019-01-29 15:55:06 -<==      Total: 4
2019-01-29 15:55:06 -==>  Preparing: select count(*) from sys_user 
2019-01-29 15:55:06 -==> Parameters: 
2019-01-29 15:55:06 -<==      Total: 1
2019-01-29 15:55:06 -耗时 : 78
2019-01-29 15:55:06 -返回值 : com.bootdo.common.utils.PageUtils@61b9dbf2
2019-01-29 15:55:08 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 15:55:08 -HTTP METHOD : GET
2019-01-29 15:55:08 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 15:55:08 -参数 : []
2019-01-29 15:55:08 -耗时 : 0
2019-01-29 15:55:08 -返回值 : system/user/add
2019-01-29 15:55:16 -请求地址 : http://localhost:8080/sys/user/save
2019-01-29 15:55:16 -HTTP METHOD : POST
2019-01-29 15:55:16 -CLASS_METHOD : com.bootdo.system.controller.UserController.save
2019-01-29 15:55:16 -参数 : [com.bootdo.system.domain.UserDO@261e6470]
2019-01-29 15:55:16 -==>  Preparing: insert into sys_user ( `user_id`, `dept_id`, `username`, `usernikename`, `userpwd`, `userstatus`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:55:16 -==> Parameters: 9815109e-5edb-4d3d-8c46-03144af47e31(String), null, 7777(String), (String), 51756da82c66d3ebb23348c17e45d066(String), 1(Integer), null, null, null, null, null, null
2019-01-29 15:55:16 -<==    Updates: 1
2019-01-29 15:55:16 -耗时 : 37
2019-01-29 15:55:16 -返回值 : {msg=操作成功, code=0}
2019-01-29 15:55:16 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 15:55:16 -HTTP METHOD : GET
2019-01-29 15:55:16 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 15:55:16 -参数 : []
2019-01-29 15:55:16 -耗时 : 1
2019-01-29 15:55:16 -返回值 : system/user/user
2019-01-29 15:55:16 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 15:55:16 -HTTP METHOD : GET
2019-01-29 15:55:16 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 15:55:16 -参数 : [{page=1, limit=15}]
2019-01-29 15:55:16 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 15:55:16 -==> Parameters: 
2019-01-29 15:55:16 -<==      Total: 5
2019-01-29 15:55:16 -==>  Preparing: select count(*) from sys_user 
2019-01-29 15:55:16 -==> Parameters: 
2019-01-29 15:55:16 -<==      Total: 1
2019-01-29 15:55:16 -耗时 : 14
2019-01-29 15:55:16 -返回值 : com.bootdo.common.utils.PageUtils@28a49850
2019-01-29 15:55:26 -请求地址 : http://localhost:8080/
2019-01-29 15:55:26 -HTTP METHOD : GET
2019-01-29 15:55:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-29 15:55:26 -参数 : [{}]
2019-01-29 15:55:26 -耗时 : 0
2019-01-29 15:55:26 -返回值 : redirect:/login
2019-01-29 15:55:26 -请求地址 : http://localhost:8080/login
2019-01-29 15:55:26 -HTTP METHOD : GET
2019-01-29 15:55:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 15:55:26 -参数 : []
2019-01-29 15:55:26 -耗时 : 0
2019-01-29 15:55:26 -返回值 : login
2019-01-29 15:55:33 -请求地址 : http://localhost:8080/login
2019-01-29 15:55:33 -HTTP METHOD : POST
2019-01-29 15:55:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 15:55:33 -参数 : [7777, 111111]
2019-01-29 15:55:33 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 15:55:33 -==> Parameters: 7777(String)
2019-01-29 15:55:33 -<==      Total: 1
2019-01-29 15:55:33 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 7777, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.NullPointerException: null
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:64)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$d1224dc5.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-29 15:55:33 -耗时 : 20
2019-01-29 15:55:33 -返回值 : {msg=用户或密码错误, code=500}
2019-01-29 15:55:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:55:33 -==> Parameters: -1L(String), 获取用户信息为空(String), 登录(String), 21(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 15:55:33.185(Timestamp)
2019-01-29 15:55:33 -<==    Updates: 1
2019-01-29 15:55:37 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-29 15:56:01 -请求地址 : http://localhost:8080/login
2019-01-29 15:56:01 -HTTP METHOD : POST
2019-01-29 15:56:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 15:56:01 -参数 : [7777, 111111]
2019-01-29 15:56:01 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 15:56:01 -==> Parameters: 7777(String)
2019-01-29 15:56:01 -<==      Total: 1
2019-01-29 15:56:01 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 7777, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.NullPointerException: null
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:64)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$d1224dc5.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-29 15:56:01 -耗时 : 8
2019-01-29 15:56:01 -返回值 : {msg=用户或密码错误, code=500}
2019-01-29 15:56:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:56:01 -==> Parameters: -1L(String), 获取用户信息为空(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 15:56:01.611(Timestamp)
2019-01-29 15:56:01 -<==    Updates: 1
2019-01-29 15:56:14 -请求地址 : http://localhost:8080/login
2019-01-29 15:56:14 -HTTP METHOD : POST
2019-01-29 15:56:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 15:56:14 -参数 : [ggg, 111111]
2019-01-29 15:56:14 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 15:56:14 -==> Parameters: ggg(String)
2019-01-29 15:56:14 -<==      Total: 1
2019-01-29 15:56:14 -耗时 : 14
2019-01-29 15:56:14 -返回值 : {msg=用户或密码错误, code=500}
2019-01-29 15:56:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:56:14 -==> Parameters: -1L(String), 获取用户信息为空(String), 登录(String), 14(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 15:56:14.346(Timestamp)
2019-01-29 15:56:14 -<==    Updates: 1
2019-01-29 15:56:20 -请求地址 : http://localhost:8080/login
2019-01-29 15:56:20 -HTTP METHOD : POST
2019-01-29 15:56:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 15:56:20 -参数 : [ggg, 111111]
2019-01-29 15:56:20 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 15:56:20 -==> Parameters: ggg(String)
2019-01-29 15:56:20 -<==      Total: 1
2019-01-29 15:56:20 -耗时 : 8
2019-01-29 15:56:20 -返回值 : {msg=用户或密码错误, code=500}
2019-01-29 15:56:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:56:20 -==> Parameters: -1L(String), 获取用户信息为空(String), 登录(String), 9(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 15:56:20.394(Timestamp)
2019-01-29 15:56:20 -<==    Updates: 1
2019-01-29 15:57:04 -请求地址 : http://localhost:8080/login
2019-01-29 15:57:04 -HTTP METHOD : POST
2019-01-29 15:57:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 15:57:04 -参数 : [7777, 111111]
2019-01-29 15:57:56 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 15:57:56 -==> Parameters: 7777(String)
2019-01-29 15:57:56 -<==      Total: 1
2019-01-29 15:57:56 -Authentication failed for token submission [org.apache.shiro.authc.UsernamePasswordToken - 7777, rememberMe=false].  Possible unexpected error? (Typical or expected login exceptions should extend from AuthenticationException).
java.lang.NullPointerException: null
	at com.bootdo.system.shiro.UserRealm.doGetAuthenticationInfo(UserRealm.java:64)
	at org.apache.shiro.realm.AuthenticatingRealm.getAuthenticationInfo(AuthenticatingRealm.java:568)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doSingleRealmAuthentication(ModularRealmAuthenticator.java:180)
	at org.apache.shiro.authc.pam.ModularRealmAuthenticator.doAuthenticate(ModularRealmAuthenticator.java:267)
	at org.apache.shiro.authc.AbstractAuthenticator.authenticate(AbstractAuthenticator.java:198)
	at org.apache.shiro.mgt.AuthenticatingSecurityManager.authenticate(AuthenticatingSecurityManager.java:106)
	at org.apache.shiro.mgt.DefaultSecurityManager.login(DefaultSecurityManager.java:270)
	at org.apache.shiro.subject.support.DelegatingSubject.login(DelegatingSubject.java:256)
	at com.bootdo.system.controller.LoginController.ajaxLogin(LoginController.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.bootdo.common.aspect.LogAspect.around(LogAspect.java:50)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.LoginController$$EnhancerBySpringCGLIB$$d1224dc5.ajaxLogin(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-29 15:57:58 -耗时 : 54207
2019-01-29 15:57:58 -返回值 : {msg=用户或密码错误, code=500}
2019-01-29 15:57:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:57:58 -==> Parameters: -1L(String), 获取用户信息为空(String), 登录(String), 54208(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 15:57:58.708(Timestamp)
2019-01-29 15:57:58 -<==    Updates: 1
2019-01-29 15:58:15 -请求地址 : http://localhost:8080/login
2019-01-29 15:58:15 -HTTP METHOD : POST
2019-01-29 15:58:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 15:58:15 -参数 : [7777, 111111]
2019-01-29 15:58:18 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 15:58:18 -==> Parameters: 7777(String)
2019-01-29 15:58:18 -<==      Total: 1
2019-01-29 15:58:18 -耗时 : 2863
2019-01-29 15:58:18 -返回值 : {msg=操作成功, code=0}
2019-01-29 15:58:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:58:18 -==> Parameters: 9815109e-5edb-4d3d-8c46-03144af47e31(String), 7777(String), 登录(String), 2863(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 15:58:18.14(Timestamp)
2019-01-29 15:58:18 -请求地址 : http://localhost:8080/index
2019-01-29 15:58:18 -HTTP METHOD : GET
2019-01-29 15:58:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 15:58:18 -参数 : [{}]
2019-01-29 15:58:18 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 15:58:18 -==> Parameters: 9815109e-5edb-4d3d-8c46-03144af47e31(String)
2019-01-29 15:58:18 -<==    Updates: 1
2019-01-29 15:58:18 -<==      Total: 0
2019-01-29 15:58:18 -耗时 : 23
2019-01-29 15:58:18 -返回值 : index_v1
2019-01-29 15:58:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 15:58:18 -==> Parameters: 9815109e-5edb-4d3d-8c46-03144af47e31(String), 7777(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 15:58:18.195(Timestamp)
2019-01-29 15:58:18 -<==    Updates: 1
2019-01-29 16:00:46 -请求地址 : http://localhost:8080/
2019-01-29 16:00:46 -HTTP METHOD : GET
2019-01-29 16:00:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-29 16:00:46 -参数 : [{}]
2019-01-29 16:00:46 -耗时 : 1
2019-01-29 16:00:46 -返回值 : redirect:/login
2019-01-29 16:00:46 -请求地址 : http://localhost:8080/login
2019-01-29 16:00:46 -HTTP METHOD : GET
2019-01-29 16:00:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 16:00:46 -参数 : []
2019-01-29 16:00:46 -耗时 : 0
2019-01-29 16:00:46 -返回值 : login
2019-01-29 16:00:51 -请求地址 : http://localhost:8080/login
2019-01-29 16:00:51 -HTTP METHOD : POST
2019-01-29 16:00:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 16:00:51 -参数 : [admin, 123456]
2019-01-29 16:00:51 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 16:00:51 -==> Parameters: admin(String)
2019-01-29 16:00:51 -<==      Total: 1
2019-01-29 16:00:51 -耗时 : 6
2019-01-29 16:00:51 -返回值 : {msg=操作成功, code=0}
2019-01-29 16:00:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:00:51 -==> Parameters: 123(String), admin(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 16:00:51.451(Timestamp)
2019-01-29 16:00:51 -请求地址 : http://localhost:8080/index
2019-01-29 16:00:51 -HTTP METHOD : GET
2019-01-29 16:00:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 16:00:51 -参数 : [{}]
2019-01-29 16:00:51 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 16:00:51 -==> Parameters: 123(String)
2019-01-29 16:00:51 -<==      Total: 3
2019-01-29 16:00:51 -耗时 : 17
2019-01-29 16:00:51 -返回值 : index_v1
2019-01-29 16:00:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:00:51 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 16:00:51.493(Timestamp)
2019-01-29 16:00:51 -<==    Updates: 1
2019-01-29 16:00:51 -<==    Updates: 1
2019-01-29 16:00:53 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 16:00:53 -==> Parameters: 123(String)
2019-01-29 16:00:53 -<==      Total: 7
2019-01-29 16:00:53 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 16:00:53 -HTTP METHOD : GET
2019-01-29 16:00:53 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 16:00:53 -参数 : []
2019-01-29 16:00:53 -耗时 : 0
2019-01-29 16:00:53 -返回值 : system/user/user
2019-01-29 16:00:53 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:00:53 -HTTP METHOD : GET
2019-01-29 16:00:53 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:00:53 -参数 : [{page=1, limit=15}]
2019-01-29 16:00:53 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:00:53 -==> Parameters: 
2019-01-29 16:00:53 -<==      Total: 5
2019-01-29 16:00:53 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:00:53 -==> Parameters: 
2019-01-29 16:00:53 -<==      Total: 1
2019-01-29 16:00:53 -耗时 : 16
2019-01-29 16:00:53 -返回值 : com.bootdo.common.utils.PageUtils@16f5d5be
2019-01-29 16:00:54 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 16:00:54 -HTTP METHOD : GET
2019-01-29 16:00:54 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 16:00:54 -参数 : []
2019-01-29 16:00:54 -耗时 : 0
2019-01-29 16:00:54 -返回值 : system/user/add
2019-01-29 16:01:01 -请求地址 : http://localhost:8080/sys/user/save
2019-01-29 16:01:01 -HTTP METHOD : POST
2019-01-29 16:01:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.save
2019-01-29 16:01:01 -参数 : [com.bootdo.system.domain.UserDO@194baa7b]
2019-01-29 16:01:01 -==>  Preparing: insert into sys_user ( `user_id`, `dept_id`, `username`, `usernikename`, `userpwd`, `userstatus`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:01:01 -==> Parameters: d9c5c70d-e43e-46c8-b58f-1bbc331b82a8(String), null, 888(String), (String), ff3b358c8c8697fef0fa6102b28e43de(String), 1(Integer), null, null, 1(Integer), null, null, null
2019-01-29 16:01:01 -<==    Updates: 1
2019-01-29 16:01:01 -耗时 : 68
2019-01-29 16:01:01 -返回值 : {msg=操作成功, code=0}
2019-01-29 16:01:01 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 16:01:01 -HTTP METHOD : GET
2019-01-29 16:01:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 16:01:01 -参数 : []
2019-01-29 16:01:01 -耗时 : 0
2019-01-29 16:01:01 -返回值 : system/user/user
2019-01-29 16:01:01 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:01:01 -HTTP METHOD : GET
2019-01-29 16:01:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:01:01 -参数 : [{page=1, limit=15}]
2019-01-29 16:01:01 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:01:01 -==> Parameters: 
2019-01-29 16:01:01 -<==      Total: 6
2019-01-29 16:01:01 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:01:01 -==> Parameters: 
2019-01-29 16:01:01 -<==      Total: 1
2019-01-29 16:01:01 -耗时 : 16
2019-01-29 16:01:01 -返回值 : com.bootdo.common.utils.PageUtils@10bf6105
2019-01-29 16:07:00 -请求地址 : http://localhost:8080/login;JSESSIONID=fbb32ce1-b3c4-4236-bb76-7c2cf238d8a8
2019-01-29 16:07:00 -HTTP METHOD : GET
2019-01-29 16:07:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 16:07:00 -参数 : []
2019-01-29 16:07:00 -耗时 : 1
2019-01-29 16:07:00 -返回值 : login
2019-01-29 16:07:00 -请求地址 : http://localhost:8080/login
2019-01-29 16:07:00 -HTTP METHOD : GET
2019-01-29 16:07:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 16:07:00 -参数 : []
2019-01-29 16:07:00 -耗时 : 1
2019-01-29 16:07:00 -返回值 : login
2019-01-29 16:07:04 -请求地址 : http://localhost:8080/login
2019-01-29 16:07:04 -HTTP METHOD : POST
2019-01-29 16:07:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 16:07:04 -参数 : [admin, 123456]
2019-01-29 16:07:04 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 16:07:04 -==> Parameters: admin(String)
2019-01-29 16:07:04 -<==      Total: 1
2019-01-29 16:07:04 -耗时 : 7
2019-01-29 16:07:04 -返回值 : {msg=操作成功, code=0}
2019-01-29 16:07:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:07:04 -==> Parameters: 123(String), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 16:07:04.011(Timestamp)
2019-01-29 16:07:04 -请求地址 : http://localhost:8080/index
2019-01-29 16:07:04 -HTTP METHOD : GET
2019-01-29 16:07:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 16:07:04 -参数 : [{}]
2019-01-29 16:07:04 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 16:07:04 -==> Parameters: 123(String)
2019-01-29 16:07:04 -<==    Updates: 1
2019-01-29 16:07:04 -<==      Total: 3
2019-01-29 16:07:04 -耗时 : 24
2019-01-29 16:07:04 -返回值 : index_v1
2019-01-29 16:07:04 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:07:04 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 16:07:04.06(Timestamp)
2019-01-29 16:07:04 -<==    Updates: 1
2019-01-29 16:07:05 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 16:07:05 -==> Parameters: 123(String)
2019-01-29 16:07:05 -<==      Total: 7
2019-01-29 16:07:05 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 16:07:05 -HTTP METHOD : GET
2019-01-29 16:07:05 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 16:07:05 -参数 : []
2019-01-29 16:07:05 -耗时 : 0
2019-01-29 16:07:05 -返回值 : system/user/user
2019-01-29 16:07:06 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:07:06 -HTTP METHOD : GET
2019-01-29 16:07:06 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:07:06 -参数 : [{page=1, limit=15}]
2019-01-29 16:07:06 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:07:06 -==> Parameters: 
2019-01-29 16:07:06 -<==      Total: 6
2019-01-29 16:07:06 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:07:06 -==> Parameters: 
2019-01-29 16:07:06 -<==      Total: 1
2019-01-29 16:07:06 -耗时 : 22
2019-01-29 16:07:06 -返回值 : com.bootdo.common.utils.PageUtils@6265356f
2019-01-29 16:08:13 -请求地址 : http://localhost:8080/index
2019-01-29 16:08:13 -HTTP METHOD : GET
2019-01-29 16:08:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 16:08:13 -参数 : [{}]
2019-01-29 16:08:13 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 16:08:13 -==> Parameters: 123(String)
2019-01-29 16:08:13 -<==      Total: 3
2019-01-29 16:08:13 -耗时 : 12
2019-01-29 16:08:13 -返回值 : index_v1
2019-01-29 16:08:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:08:13 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 12(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 16:08:13.11(Timestamp)
2019-01-29 16:08:13 -<==    Updates: 1
2019-01-29 16:08:15 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 16:08:15 -HTTP METHOD : GET
2019-01-29 16:08:15 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 16:08:15 -参数 : []
2019-01-29 16:08:15 -耗时 : 0
2019-01-29 16:08:15 -返回值 : system/user/user
2019-01-29 16:08:15 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:08:15 -HTTP METHOD : GET
2019-01-29 16:08:15 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:08:15 -参数 : [{page=1, limit=15}]
2019-01-29 16:08:15 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:08:15 -==> Parameters: 
2019-01-29 16:08:15 -<==      Total: 6
2019-01-29 16:08:15 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:08:15 -==> Parameters: 
2019-01-29 16:08:15 -<==      Total: 1
2019-01-29 16:08:15 -耗时 : 11
2019-01-29 16:08:15 -返回值 : com.bootdo.common.utils.PageUtils@49157248
2019-01-29 16:08:19 -请求地址 : http://localhost:8080/sys/user/remove
2019-01-29 16:08:19 -HTTP METHOD : POST
2019-01-29 16:08:19 -CLASS_METHOD : com.bootdo.system.controller.UserController.remove
2019-01-29 16:08:19 -参数 : [1ed66412-b6c2-45c1-bf4a-d6d3b1de22ce]
2019-01-29 16:08:19 -==>  Preparing: delete from sys_user where user_id = ? 
2019-01-29 16:08:19 -==> Parameters: 1ed66412-b6c2-45c1-bf4a-d6d3b1de22ce(String)
2019-01-29 16:08:19 -<==    Updates: 1
2019-01-29 16:08:19 -耗时 : 45
2019-01-29 16:08:19 -返回值 : {msg=操作成功, code=0}
2019-01-29 16:08:19 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:08:19 -HTTP METHOD : GET
2019-01-29 16:08:19 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:08:19 -参数 : [{page=1, limit=15}]
2019-01-29 16:08:19 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:08:19 -==> Parameters: 
2019-01-29 16:08:19 -<==      Total: 5
2019-01-29 16:08:19 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:08:19 -==> Parameters: 
2019-01-29 16:08:19 -<==      Total: 1
2019-01-29 16:08:19 -耗时 : 22
2019-01-29 16:08:19 -返回值 : com.bootdo.common.utils.PageUtils@5dadec48
2019-01-29 16:08:29 -请求地址 : http://localhost:8080/sys/user/remove
2019-01-29 16:08:29 -HTTP METHOD : POST
2019-01-29 16:08:29 -CLASS_METHOD : com.bootdo.system.controller.UserController.remove
2019-01-29 16:08:29 -参数 : [7cb9be19-5686-4eca-a529-f96677838eb4]
2019-01-29 16:08:29 -==>  Preparing: delete from sys_user where user_id = ? 
2019-01-29 16:08:29 -==> Parameters: 7cb9be19-5686-4eca-a529-f96677838eb4(String)
2019-01-29 16:08:29 -<==    Updates: 1
2019-01-29 16:08:29 -耗时 : 40
2019-01-29 16:08:29 -返回值 : {msg=操作成功, code=0}
2019-01-29 16:08:29 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:08:29 -HTTP METHOD : GET
2019-01-29 16:08:29 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:08:29 -参数 : [{page=1, limit=15}]
2019-01-29 16:08:29 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:08:29 -==> Parameters: 
2019-01-29 16:08:29 -<==      Total: 4
2019-01-29 16:08:29 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:08:29 -==> Parameters: 
2019-01-29 16:08:29 -<==      Total: 1
2019-01-29 16:08:29 -耗时 : 20
2019-01-29 16:08:29 -返回值 : com.bootdo.common.utils.PageUtils@4554711
2019-01-29 16:11:28 -请求地址 : http://localhost:8080/index
2019-01-29 16:11:28 -HTTP METHOD : GET
2019-01-29 16:11:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 16:11:28 -参数 : [{}]
2019-01-29 16:11:28 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 16:11:28 -==> Parameters: 123(String)
2019-01-29 16:11:28 -<==      Total: 3
2019-01-29 16:11:28 -耗时 : 16
2019-01-29 16:11:28 -返回值 : index_v1
2019-01-29 16:11:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:11:28 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 16:11:28.291(Timestamp)
2019-01-29 16:11:28 -<==    Updates: 1
2019-01-29 16:11:30 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 16:11:30 -==> Parameters: 123(String)
2019-01-29 16:11:30 -<==      Total: 7
2019-01-29 16:11:30 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 16:11:30 -HTTP METHOD : GET
2019-01-29 16:11:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 16:11:30 -参数 : []
2019-01-29 16:11:30 -耗时 : 1
2019-01-29 16:11:30 -返回值 : system/user/user
2019-01-29 16:11:31 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:11:31 -HTTP METHOD : GET
2019-01-29 16:11:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:11:31 -参数 : [{page=1, limit=15}]
2019-01-29 16:11:31 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:11:31 -==> Parameters: 
2019-01-29 16:11:31 -<==      Total: 4
2019-01-29 16:11:31 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:11:31 -==> Parameters: 
2019-01-29 16:11:31 -<==      Total: 1
2019-01-29 16:11:31 -耗时 : 23
2019-01-29 16:11:31 -返回值 : com.bootdo.common.utils.PageUtils@caafb72
2019-01-29 16:11:37 -请求地址 : http://localhost:8080/sys/user/batchRemove
2019-01-29 16:11:37 -HTTP METHOD : POST
2019-01-29 16:11:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.remove
2019-01-29 16:11:37 -参数 : [[Ljava.lang.String;@40e67ecf]
2019-01-29 16:11:37 -==>  Preparing: delete from sys_user where user_id in ( ? , ? ) 
2019-01-29 16:11:37 -==> Parameters: d9c5c70d-e43e-46c8-b58f-1bbc331b82a8(String), 9815109e-5edb-4d3d-8c46-03144af47e31(String)
2019-01-29 16:11:37 -<==    Updates: 2
2019-01-29 16:11:37 -耗时 : 57
2019-01-29 16:11:37 -返回值 : {msg=操作成功, code=0}
2019-01-29 16:11:37 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:11:37 -HTTP METHOD : GET
2019-01-29 16:11:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:11:37 -参数 : [{page=1, limit=15}]
2019-01-29 16:11:37 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:11:37 -==> Parameters: 
2019-01-29 16:11:37 -<==      Total: 2
2019-01-29 16:11:37 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:11:37 -==> Parameters: 
2019-01-29 16:11:37 -<==      Total: 1
2019-01-29 16:11:37 -耗时 : 17
2019-01-29 16:11:37 -返回值 : com.bootdo.common.utils.PageUtils@7dd6822c
2019-01-29 16:26:13 -Starting BootdoApplication on YH-20180312AAAP with PID 5712 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-29 16:26:13 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-29 16:26:13 -The following profiles are active: dev
2019-01-29 16:26:13 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37efd131: startup date [Tue Jan 29 16:26:13 CST 2019]; root of context hierarchy
2019-01-29 16:26:15 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$af2c4464] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 16:26:15 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$a3a00908] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 16:26:15 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 16:26:15 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 16:26:15 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 16:26:15 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$3e3ed606] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 16:26:15 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$661a0e46] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 16:26:15 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$58733ced] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 16:26:15 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-29 16:26:15 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 16:26:15 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 16:26:15 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 16:26:16 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 16:26:16 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 16:26:16 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-29 16:26:16 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-29 16:26:16 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 16:26:16 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 16:26:16 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 16:26:16 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 16:26:16 -Tomcat initialized with port(s): 8080 (http)
2019-01-29 16:26:16 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 16:26:16 -Starting service [Tomcat]
2019-01-29 16:26:16 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-29 16:26:17 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-29 16:26:17 -Initializing Spring embedded WebApplicationContext
2019-01-29 16:26:17 -Root WebApplicationContext: initialization completed in 3330 ms
2019-01-29 16:26:17 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 16:26:17 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 16:26:17 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 16:26:17 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 16:26:17 -Filter xssFilter was not registered (disabled)
2019-01-29 16:26:17 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-29 16:26:17 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-29 16:26:17 -Servlet statViewServlet mapped to [/druid/*]
2019-01-29 16:26:17 -Servlet dispatcherServlet mapped to [/]
2019-01-29 16:26:18 -{dataSource-1} inited
2019-01-29 16:26:18 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37efd131: startup date [Tue Jan 29 16:26:13 CST 2019]; root of context hierarchy
2019-01-29 16:26:18 -Using default implementation for ThreadExecutor
2019-01-29 16:26:18 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-29 16:26:18 -Quartz Scheduler v.2.2.1 created.
2019-01-29 16:26:18 -RAMJobStore initialized.
2019-01-29 16:26:18 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-29 16:26:18 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-29 16:26:18 -Quartz scheduler version: 2.2.1
2019-01-29 16:26:18 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@5072e638
2019-01-29 16:26:19 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-29 16:26:19 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-29 16:26:20 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 16:26:20 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-29 16:26:20 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-29 16:26:20 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-29 16:26:20 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-29 16:26:20 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-29 16:26:20 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-29 16:26:20 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-29 16:26:20 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-29 16:26:20 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-29 16:26:20 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 16:26:20 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-29 16:26:20 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-29 16:26:20 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-29 16:26:20 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 16:26:20 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-29 16:26:20 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-29 16:26:20 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-29 16:26:20 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 16:26:20 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-29 16:26:20 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 16:26:20 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 16:26:20 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-29 16:26:20 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-29 16:26:20 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-29 16:26:20 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-29 16:26:20 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 16:26:20 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-29 16:26:20 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-29 16:26:20 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-29 16:26:20 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-29 16:26:20 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-29 16:26:20 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-29 16:26:20 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-29 16:26:20 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-29 16:26:20 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-29 16:26:20 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-29 16:26:20 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-29 16:26:20 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-29 16:26:20 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 16:26:20 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-29 16:26:20 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-29 16:26:20 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-29 16:26:20 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-29 16:26:20 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-29 16:26:20 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-29 16:26:20 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-29 16:26:20 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-29 16:26:20 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-29 16:26:20 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-29 16:26:20 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-29 16:26:20 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-29 16:26:20 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 16:26:20 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-29 16:26:20 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-29 16:26:20 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-29 16:26:20 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-29 16:26:20 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-29 16:26:20 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long)
2019-01-29 16:26:20 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long[])
2019-01-29 16:26:20 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-29 16:26:20 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 16:26:20 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-29 16:26:20 -Mapped "{[/system/staff/edit/{staffId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 16:26:20 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-29 16:26:20 -Mapped "{[/system/staff/selectView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.selectView()
2019-01-29 16:26:20 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-29 16:26:20 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-29 16:26:20 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-29 16:26:20 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-29 16:26:20 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 16:26:20 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-29 16:26:20 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-29 16:26:20 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-29 16:26:20 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.lang.String)
2019-01-29 16:26:20 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-29 16:26:20 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 16:26:20 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-29 16:26:20 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-29 16:26:20 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-29 16:26:20 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-29 16:26:20 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-29 16:26:20 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-29 16:26:20 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-29 16:26:20 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-29 16:26:20 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-29 16:26:20 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-29 16:26:20 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-29 16:26:20 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-29 16:26:21 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:26:21 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@37efd131: startup date [Tue Jan 29 16:26:13 CST 2019]; root of context hierarchy
2019-01-29 16:26:21 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:26:21 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:26:21 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 16:26:21 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-29 16:26:21 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-29 16:26:22 -Registering beans for JMX exposure on startup
2019-01-29 16:26:22 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-29 16:26:22 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-29 16:26:22 -Starting beans in phase 2147483647
2019-01-29 16:26:22 -Context refreshed
2019-01-29 16:26:22 -Found 1 custom documentation plugin(s)
2019-01-29 16:26:22 -Scanning for api listing references
2019-01-29 16:26:23 -Generating unique operation named: removeUsingPOST_1
2019-01-29 16:26:23 -Generating unique operation named: editUsingGET_1
2019-01-29 16:26:23 -Generating unique operation named: listUsingGET_1
2019-01-29 16:26:23 -Generating unique operation named: updateUsingPOST_1
2019-01-29 16:26:23 -Generating unique operation named: addUsingGET_1
2019-01-29 16:26:23 -Generating unique operation named: editUsingGET_2
2019-01-29 16:26:23 -Generating unique operation named: listUsingGET_2
2019-01-29 16:26:23 -Generating unique operation named: removeUsingPOST_2
2019-01-29 16:26:23 -Generating unique operation named: removeUsingPOST_3
2019-01-29 16:26:23 -Generating unique operation named: saveUsingPOST_1
2019-01-29 16:26:23 -Generating unique operation named: updateUsingPOST_2
2019-01-29 16:26:23 -Generating unique operation named: listUsingGET_3
2019-01-29 16:26:23 -Generating unique operation named: removeUsingPOST_4
2019-01-29 16:26:23 -Generating unique operation named: welcomeUsingGET_1
2019-01-29 16:26:23 -Generating unique operation named: addUsingGET_2
2019-01-29 16:26:23 -Generating unique operation named: editUsingGET_3
2019-01-29 16:26:23 -Generating unique operation named: listUsingGET_4
2019-01-29 16:26:23 -Generating unique operation named: removeUsingPOST_5
2019-01-29 16:26:23 -Generating unique operation named: saveUsingPOST_2
2019-01-29 16:26:23 -Generating unique operation named: treeUsingGET_1
2019-01-29 16:26:23 -Generating unique operation named: updateUsingPOST_3
2019-01-29 16:26:23 -Generating unique operation named: addUsingGET_3
2019-01-29 16:26:23 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-29 16:26:23 -Generating unique operation named: editUsingGET_4
2019-01-29 16:26:23 -Generating unique operation named: listUsingGET_5
2019-01-29 16:26:23 -Generating unique operation named: saveUsingPOST_3
2019-01-29 16:26:23 -Generating unique operation named: saveUsingPOST_4
2019-01-29 16:26:23 -Generating unique operation named: updateUsingPOST_4
2019-01-29 16:26:23 -Generating unique operation named: listUsingGET_6
2019-01-29 16:26:23 -Generating unique operation named: listUsingHEAD_1
2019-01-29 16:26:23 -Generating unique operation named: listUsingPOST_1
2019-01-29 16:26:23 -Generating unique operation named: listUsingPUT_1
2019-01-29 16:26:23 -Generating unique operation named: listUsingPATCH_1
2019-01-29 16:26:23 -Generating unique operation named: listUsingDELETE_1
2019-01-29 16:26:23 -Generating unique operation named: listUsingOPTIONS_1
2019-01-29 16:26:23 -Generating unique operation named: listUsingTRACE_1
2019-01-29 16:26:23 -Generating unique operation named: addUsingGET_4
2019-01-29 16:26:23 -Generating unique operation named: editUsingGET_5
2019-01-29 16:26:23 -Generating unique operation named: listUsingGET_7
2019-01-29 16:26:23 -Generating unique operation named: removeUsingPOST_6
2019-01-29 16:26:23 -Generating unique operation named: removeUsingPOST_7
2019-01-29 16:26:23 -Generating unique operation named: saveUsingPOST_5
2019-01-29 16:26:23 -Generating unique operation named: updateUsingGET_1
2019-01-29 16:26:23 -Generating unique operation named: updateUsingHEAD_1
2019-01-29 16:26:23 -Generating unique operation named: updateUsingPOST_5
2019-01-29 16:26:23 -Generating unique operation named: updateUsingPUT_1
2019-01-29 16:26:23 -Generating unique operation named: updateUsingPATCH_1
2019-01-29 16:26:23 -Generating unique operation named: updateUsingDELETE_1
2019-01-29 16:26:23 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-29 16:26:23 -Generating unique operation named: updateUsingTRACE_1
2019-01-29 16:26:23 -Generating unique operation named: addUsingGET_5
2019-01-29 16:26:23 -Generating unique operation named: editUsingGET_6
2019-01-29 16:26:23 -Generating unique operation named: listUsingGET_8
2019-01-29 16:26:23 -Generating unique operation named: removeUsingPOST_8
2019-01-29 16:26:23 -Generating unique operation named: removeUsingPOST_9
2019-01-29 16:26:23 -Generating unique operation named: saveUsingPOST_6
2019-01-29 16:26:23 -Generating unique operation named: updateUsingGET_2
2019-01-29 16:26:23 -Generating unique operation named: updateUsingHEAD_2
2019-01-29 16:26:23 -Generating unique operation named: updateUsingPOST_6
2019-01-29 16:26:23 -Generating unique operation named: updateUsingPUT_2
2019-01-29 16:26:23 -Generating unique operation named: updateUsingPATCH_2
2019-01-29 16:26:23 -Generating unique operation named: updateUsingDELETE_2
2019-01-29 16:26:23 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-29 16:26:23 -Generating unique operation named: updateUsingTRACE_2
2019-01-29 16:26:23 -Generating unique operation named: addUsingGET_6
2019-01-29 16:26:23 -Generating unique operation named: editUsingGET_7
2019-01-29 16:26:23 -Generating unique operation named: listUsingGET_9
2019-01-29 16:26:23 -Generating unique operation named: roleUsingGET_1
2019-01-29 16:26:23 -Generating unique operation named: saveUsingPOST_7
2019-01-29 16:26:23 -Starting Quartz Scheduler now
2019-01-29 16:26:23 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-29 16:26:23 -Starting...
2019-01-29 16:26:23 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-29 16:26:23 -Started.
2019-01-29 16:26:23 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 16:26:23 -Using a shared selector for servlet write/read
2019-01-29 16:26:23 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-29 16:26:23 -Started BootdoApplication in 10.768 seconds (JVM running for 11.147)
2019-01-29 16:26:23 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-29 16:26:23 -==> Parameters: 
2019-01-29 16:26:23 -<==      Total: 1
2019-01-29 16:26:30 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 16:26:30 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 16:26:30 -FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2019-01-29 16:26:30 -Enabling session validation scheduler...
2019-01-29 16:26:30 -请求地址 : http://localhost:8080/login;JSESSIONID=c99dab17-a0bd-4d84-98e4-dba641830ae1
2019-01-29 16:26:30 -HTTP METHOD : GET
2019-01-29 16:26:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 16:26:30 -参数 : []
2019-01-29 16:26:30 -耗时 : 2
2019-01-29 16:26:30 -返回值 : login
2019-01-29 16:26:31 -请求地址 : http://localhost:8080/login
2019-01-29 16:26:31 -HTTP METHOD : GET
2019-01-29 16:26:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 16:26:31 -参数 : []
2019-01-29 16:26:31 -耗时 : 0
2019-01-29 16:26:31 -返回值 : login
2019-01-29 16:26:34 -请求地址 : http://localhost:8080/login
2019-01-29 16:26:34 -HTTP METHOD : POST
2019-01-29 16:26:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 16:26:34 -参数 : [admin, 123456]
2019-01-29 16:26:34 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 16:26:34 -==> Parameters: admin(String)
2019-01-29 16:26:34 -<==      Total: 1
2019-01-29 16:26:34 -耗时 : 47
2019-01-29 16:26:34 -返回值 : {msg=操作成功, code=0}
2019-01-29 16:26:34 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-29 16:26:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:26:34 -==> Parameters: 123(String), admin(String), 登录(String), 47(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 16:26:34.741(Timestamp)
2019-01-29 16:26:34 -请求地址 : http://localhost:8080/index
2019-01-29 16:26:34 -HTTP METHOD : GET
2019-01-29 16:26:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 16:26:34 -参数 : [{}]
2019-01-29 16:26:34 -<==    Updates: 1
2019-01-29 16:26:34 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 16:26:34 -==> Parameters: 123(String)
2019-01-29 16:26:34 -<==      Total: 3
2019-01-29 16:26:34 -耗时 : 86
2019-01-29 16:26:34 -返回值 : index_v1
2019-01-29 16:26:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:26:34 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 86(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 16:26:34.891(Timestamp)
2019-01-29 16:26:34 -<==    Updates: 1
2019-01-29 16:26:37 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 16:26:37 -==> Parameters: 123(String)
2019-01-29 16:26:37 -<==      Total: 7
2019-01-29 16:26:37 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 16:26:37 -HTTP METHOD : GET
2019-01-29 16:26:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 16:26:37 -参数 : []
2019-01-29 16:26:37 -耗时 : 0
2019-01-29 16:26:37 -返回值 : system/user/user
2019-01-29 16:26:38 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:26:38 -HTTP METHOD : GET
2019-01-29 16:26:38 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:26:38 -参数 : [{page=1, limit=15}]
2019-01-29 16:26:38 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:26:38 -==> Parameters: 
2019-01-29 16:26:38 -<==      Total: 2
2019-01-29 16:26:38 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:26:38 -==> Parameters: 
2019-01-29 16:26:38 -<==      Total: 1
2019-01-29 16:26:38 -耗时 : 86
2019-01-29 16:26:38 -返回值 : com.bootdo.common.utils.PageUtils@5448232a
2019-01-29 16:26:40 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 16:26:40 -HTTP METHOD : GET
2019-01-29 16:26:40 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 16:26:40 -参数 : []
2019-01-29 16:26:40 -耗时 : 0
2019-01-29 16:26:40 -返回值 : system/user/add
2019-01-29 16:26:45 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 16:26:45 -HTTP METHOD : POST
2019-01-29 16:26:45 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 16:26:45 -参数 : [gzl]
2019-01-29 16:26:45 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? 
2019-01-29 16:26:45 -==> Parameters: gzl(String)
2019-01-29 16:26:45 -<==      Total: 1
2019-01-29 16:26:45 -耗时 : 16
2019-01-29 16:26:45 -返回值 : {msg=操作失败, code=1}
2019-01-29 16:27:20 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-29 16:27:37 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 16:27:37 -HTTP METHOD : POST
2019-01-29 16:27:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 16:27:37 -参数 : [gzl]
2019-01-29 16:27:45 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? 
2019-01-29 16:27:45 -==> Parameters: gzl(String)
2019-01-29 16:27:45 -<==      Total: 1
2019-01-29 16:28:11 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? 
2019-01-29 16:28:11 -==> Parameters: gzl(String)
2019-01-29 16:28:12 -<==      Total: 1
2019-01-29 16:28:15 -耗时 : 37307
2019-01-29 16:28:15 -返回值 : {msg=用户名已存在！, code=500}
2019-01-29 16:28:25 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 16:28:25 -HTTP METHOD : GET
2019-01-29 16:28:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 16:28:25 -参数 : []
2019-01-29 16:28:25 -耗时 : 0
2019-01-29 16:28:25 -返回值 : system/user/add
2019-01-29 16:28:28 -请求地址 : http://localhost:8080/index
2019-01-29 16:28:28 -HTTP METHOD : GET
2019-01-29 16:28:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 16:28:28 -参数 : [{}]
2019-01-29 16:28:28 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 16:28:28 -==> Parameters: 123(String)
2019-01-29 16:28:28 -<==      Total: 3
2019-01-29 16:28:28 -耗时 : 29
2019-01-29 16:28:28 -返回值 : index_v1
2019-01-29 16:28:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:28:28 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 16:28:28.3(Timestamp)
2019-01-29 16:28:28 -<==    Updates: 1
2019-01-29 16:28:30 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 16:28:30 -HTTP METHOD : GET
2019-01-29 16:28:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 16:28:30 -参数 : []
2019-01-29 16:28:30 -耗时 : 0
2019-01-29 16:28:30 -返回值 : system/user/user
2019-01-29 16:28:30 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:28:30 -HTTP METHOD : GET
2019-01-29 16:28:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:28:30 -参数 : [{page=1, limit=15}]
2019-01-29 16:28:30 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:28:30 -==> Parameters: 
2019-01-29 16:28:30 -<==      Total: 2
2019-01-29 16:28:30 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:28:30 -==> Parameters: 
2019-01-29 16:28:30 -<==      Total: 1
2019-01-29 16:28:30 -耗时 : 29
2019-01-29 16:28:30 -返回值 : com.bootdo.common.utils.PageUtils@773a2e58
2019-01-29 16:28:31 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 16:28:31 -HTTP METHOD : GET
2019-01-29 16:28:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 16:28:31 -参数 : []
2019-01-29 16:28:31 -耗时 : 0
2019-01-29 16:28:31 -返回值 : system/user/add
2019-01-29 16:28:37 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 16:28:37 -HTTP METHOD : POST
2019-01-29 16:28:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 16:28:37 -参数 : [gzl]
2019-01-29 16:28:37 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? 
2019-01-29 16:28:37 -==> Parameters: gzl(String)
2019-01-29 16:28:37 -<==      Total: 1
2019-01-29 16:28:37 -耗时 : 15
2019-01-29 16:28:37 -返回值 : {msg=用户名已存在！, code=500}
2019-01-29 16:29:30 -请求地址 : http://localhost:8080/login;JSESSIONID=d2e3bed2-dd87-4795-9a01-0f8fc494eb42
2019-01-29 16:29:30 -HTTP METHOD : GET
2019-01-29 16:29:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 16:29:30 -参数 : []
2019-01-29 16:29:30 -耗时 : 2
2019-01-29 16:29:30 -返回值 : login
2019-01-29 16:29:30 -请求地址 : http://localhost:8080/login
2019-01-29 16:29:30 -HTTP METHOD : GET
2019-01-29 16:29:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 16:29:30 -参数 : []
2019-01-29 16:29:30 -耗时 : 0
2019-01-29 16:29:30 -返回值 : login
2019-01-29 16:29:33 -请求地址 : http://localhost:8080/login
2019-01-29 16:29:33 -HTTP METHOD : POST
2019-01-29 16:29:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 16:29:33 -参数 : [admin, 123456]
2019-01-29 16:29:33 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 16:29:33 -==> Parameters: admin(String)
2019-01-29 16:29:33 -<==      Total: 1
2019-01-29 16:29:33 -耗时 : 9
2019-01-29 16:29:33 -返回值 : {msg=操作成功, code=0}
2019-01-29 16:29:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:29:33 -==> Parameters: 123(String), admin(String), 登录(String), 9(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 16:29:33.651(Timestamp)
2019-01-29 16:29:33 -请求地址 : http://localhost:8080/index
2019-01-29 16:29:33 -HTTP METHOD : GET
2019-01-29 16:29:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 16:29:33 -参数 : [{}]
2019-01-29 16:29:33 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 16:29:33 -==> Parameters: 123(String)
2019-01-29 16:29:33 -<==      Total: 3
2019-01-29 16:29:33 -耗时 : 16
2019-01-29 16:29:33 -返回值 : index_v1
2019-01-29 16:29:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:29:33 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 16(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 16:29:33.687(Timestamp)
2019-01-29 16:29:33 -<==    Updates: 1
2019-01-29 16:29:33 -<==    Updates: 1
2019-01-29 16:29:35 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 16:29:35 -==> Parameters: 123(String)
2019-01-29 16:29:35 -<==      Total: 7
2019-01-29 16:29:35 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 16:29:35 -HTTP METHOD : GET
2019-01-29 16:29:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 16:29:35 -参数 : []
2019-01-29 16:29:35 -耗时 : 1
2019-01-29 16:29:35 -返回值 : system/user/user
2019-01-29 16:29:35 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:29:35 -HTTP METHOD : GET
2019-01-29 16:29:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:29:35 -参数 : [{page=1, limit=15}]
2019-01-29 16:29:35 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:29:35 -==> Parameters: 
2019-01-29 16:29:35 -<==      Total: 2
2019-01-29 16:29:35 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:29:35 -==> Parameters: 
2019-01-29 16:29:35 -<==      Total: 1
2019-01-29 16:29:35 -耗时 : 19
2019-01-29 16:29:35 -返回值 : com.bootdo.common.utils.PageUtils@2902348c
2019-01-29 16:29:36 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 16:29:36 -HTTP METHOD : GET
2019-01-29 16:29:36 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 16:29:36 -参数 : []
2019-01-29 16:29:36 -耗时 : 0
2019-01-29 16:29:36 -返回值 : system/user/add
2019-01-29 16:44:01 -请求地址 : http://localhost:8080/index
2019-01-29 16:44:01 -HTTP METHOD : GET
2019-01-29 16:44:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 16:44:01 -参数 : [{}]
2019-01-29 16:44:01 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 16:44:01 -==> Parameters: 123(String)
2019-01-29 16:44:01 -<==      Total: 3
2019-01-29 16:44:01 -耗时 : 23
2019-01-29 16:44:01 -返回值 : index_v1
2019-01-29 16:44:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:44:01 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 16:44:01.88(Timestamp)
2019-01-29 16:44:01 -<==    Updates: 1
2019-01-29 16:44:04 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 16:44:04 -==> Parameters: 123(String)
2019-01-29 16:44:04 -<==      Total: 7
2019-01-29 16:44:04 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 16:44:04 -HTTP METHOD : GET
2019-01-29 16:44:04 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 16:44:04 -参数 : []
2019-01-29 16:44:04 -耗时 : 0
2019-01-29 16:44:04 -返回值 : system/user/user
2019-01-29 16:44:04 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:44:04 -HTTP METHOD : GET
2019-01-29 16:44:04 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:44:04 -参数 : [{page=1, limit=15}]
2019-01-29 16:44:04 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:44:04 -==> Parameters: 
2019-01-29 16:44:04 -<==      Total: 2
2019-01-29 16:44:04 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:44:04 -==> Parameters: 
2019-01-29 16:44:04 -<==      Total: 1
2019-01-29 16:44:04 -耗时 : 18
2019-01-29 16:44:04 -返回值 : com.bootdo.common.utils.PageUtils@2c41620d
2019-01-29 16:44:21 -请求地址 : http://localhost:8080/login;JSESSIONID=e4dd27f2-31fa-4e75-8b90-6991370c4572
2019-01-29 16:44:21 -HTTP METHOD : GET
2019-01-29 16:44:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 16:44:21 -参数 : []
2019-01-29 16:44:21 -耗时 : 1
2019-01-29 16:44:21 -返回值 : login
2019-01-29 16:44:22 -请求地址 : http://localhost:8080/login
2019-01-29 16:44:22 -HTTP METHOD : GET
2019-01-29 16:44:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 16:44:22 -参数 : []
2019-01-29 16:44:22 -耗时 : 0
2019-01-29 16:44:22 -返回值 : login
2019-01-29 16:44:25 -请求地址 : http://localhost:8080/login
2019-01-29 16:44:25 -HTTP METHOD : POST
2019-01-29 16:44:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 16:44:25 -参数 : [admin, 123456]
2019-01-29 16:44:25 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 16:44:25 -==> Parameters: admin(String)
2019-01-29 16:44:25 -<==      Total: 1
2019-01-29 16:44:25 -耗时 : 8
2019-01-29 16:44:25 -返回值 : {msg=操作成功, code=0}
2019-01-29 16:44:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:44:25 -==> Parameters: 123(String), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 16:44:25.64(Timestamp)
2019-01-29 16:44:25 -请求地址 : http://localhost:8080/index
2019-01-29 16:44:25 -HTTP METHOD : GET
2019-01-29 16:44:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 16:44:25 -参数 : [{}]
2019-01-29 16:44:25 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 16:44:25 -==> Parameters: 123(String)
2019-01-29 16:44:25 -<==      Total: 3
2019-01-29 16:44:25 -<==    Updates: 1
2019-01-29 16:44:25 -耗时 : 28
2019-01-29 16:44:25 -返回值 : index_v1
2019-01-29 16:44:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:44:25 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 16:44:25.689(Timestamp)
2019-01-29 16:44:25 -<==    Updates: 1
2019-01-29 16:44:27 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 16:44:27 -==> Parameters: 123(String)
2019-01-29 16:44:27 -<==      Total: 7
2019-01-29 16:44:27 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 16:44:27 -HTTP METHOD : GET
2019-01-29 16:44:27 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 16:44:27 -参数 : []
2019-01-29 16:44:27 -耗时 : 0
2019-01-29 16:44:27 -返回值 : system/user/user
2019-01-29 16:44:27 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:44:27 -HTTP METHOD : GET
2019-01-29 16:44:27 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:44:27 -参数 : [{page=1, limit=15}]
2019-01-29 16:44:27 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:44:27 -==> Parameters: 
2019-01-29 16:44:27 -<==      Total: 2
2019-01-29 16:44:27 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:44:27 -==> Parameters: 
2019-01-29 16:44:27 -<==      Total: 1
2019-01-29 16:44:27 -耗时 : 28
2019-01-29 16:44:27 -返回值 : com.bootdo.common.utils.PageUtils@7c3b62ce
2019-01-29 16:46:47 -请求地址 : http://localhost:8080/login;JSESSIONID=0df6aeb4-b98f-44b9-af8d-1e7f18142206
2019-01-29 16:46:47 -HTTP METHOD : GET
2019-01-29 16:46:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 16:46:47 -参数 : []
2019-01-29 16:46:47 -耗时 : 1
2019-01-29 16:46:47 -返回值 : login
2019-01-29 16:46:47 -请求地址 : http://localhost:8080/login
2019-01-29 16:46:47 -HTTP METHOD : GET
2019-01-29 16:46:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 16:46:47 -参数 : []
2019-01-29 16:46:47 -耗时 : 1
2019-01-29 16:46:47 -返回值 : login
2019-01-29 16:46:50 -请求地址 : http://localhost:8080/login
2019-01-29 16:46:50 -HTTP METHOD : POST
2019-01-29 16:46:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 16:46:50 -参数 : [admin, 123456]
2019-01-29 16:46:50 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 16:46:50 -==> Parameters: admin(String)
2019-01-29 16:46:50 -<==      Total: 1
2019-01-29 16:46:50 -耗时 : 10
2019-01-29 16:46:50 -返回值 : {msg=操作成功, code=0}
2019-01-29 16:46:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:46:50 -==> Parameters: 123(String), admin(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 16:46:50.812(Timestamp)
2019-01-29 16:46:50 -请求地址 : http://localhost:8080/index
2019-01-29 16:46:50 -HTTP METHOD : GET
2019-01-29 16:46:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 16:46:50 -参数 : [{}]
2019-01-29 16:46:50 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 16:46:50 -==> Parameters: 123(String)
2019-01-29 16:46:50 -<==      Total: 3
2019-01-29 16:46:50 -耗时 : 20
2019-01-29 16:46:50 -返回值 : index_v1
2019-01-29 16:46:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:46:50 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 16:46:50.854(Timestamp)
2019-01-29 16:46:50 -<==    Updates: 1
2019-01-29 16:46:51 -<==    Updates: 1
2019-01-29 16:46:52 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 16:46:52 -==> Parameters: 123(String)
2019-01-29 16:46:52 -<==      Total: 7
2019-01-29 16:46:52 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 16:46:52 -HTTP METHOD : GET
2019-01-29 16:46:52 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 16:46:52 -参数 : []
2019-01-29 16:46:52 -耗时 : 0
2019-01-29 16:46:52 -返回值 : system/user/user
2019-01-29 16:46:53 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:46:53 -HTTP METHOD : GET
2019-01-29 16:46:53 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:46:53 -参数 : [{page=1, limit=15}]
2019-01-29 16:46:53 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:46:53 -==> Parameters: 
2019-01-29 16:46:53 -<==      Total: 2
2019-01-29 16:46:53 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:46:53 -==> Parameters: 
2019-01-29 16:46:53 -<==      Total: 1
2019-01-29 16:46:53 -耗时 : 18
2019-01-29 16:46:53 -返回值 : com.bootdo.common.utils.PageUtils@70178fb9
2019-01-29 16:46:55 -请求地址 : http://localhost:8080/sys/user/edit/234
2019-01-29 16:46:55 -HTTP METHOD : GET
2019-01-29 16:46:55 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 16:46:55 -参数 : [234, {}]
2019-01-29 16:46:55 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 16:46:55 -==> Parameters: 234(String)
2019-01-29 16:46:55 -<==      Total: 1
2019-01-29 16:46:55 -耗时 : 10
2019-01-29 16:46:55 -返回值 : system/user/edit
2019-01-29 16:46:55 -[THYMELEAF][http-nio-8080-exec-8] Exception processing template "system/user/edit": An error happened during template parsing (template: "class path resource [templates/system/user/edit.html]" - line 11, col 40)
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/user/edit.html]" - line 11, col 40)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: (Line = 11, Column = 40) Malformed markup: Attribute "name" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
2019-01-29 16:46:55 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/user/edit.html]" - line 11, col 40)] with root cause
org.attoparser.ParseException: (Line = 11, Column = 40) Malformed markup: Attribute "name" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-29 16:49:52 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 16:49:52 -==> Parameters: 123(String)
2019-01-29 16:49:52 -<==      Total: 7
2019-01-29 16:49:52 -请求地址 : http://localhost:8080/sys/user/edit/234
2019-01-29 16:49:52 -HTTP METHOD : GET
2019-01-29 16:49:52 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 16:49:52 -参数 : [234, {}]
2019-01-29 16:49:57 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 16:49:57 -==> Parameters: 234(String)
2019-01-29 16:49:57 -<==      Total: 1
2019-01-29 16:50:09 -耗时 : 17596
2019-01-29 16:50:09 -返回值 : system/user/edit
2019-01-29 16:50:09 -[THYMELEAF][http-nio-8080-exec-5] Exception processing template "system/user/edit": An error happened during template parsing (template: "class path resource [templates/system/user/edit.html]" - line 11, col 40)
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/user/edit.html]" - line 11, col 40)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: (Line = 11, Column = 40) Malformed markup: Attribute "name" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
2019-01-29 16:50:09 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/user/edit.html]" - line 11, col 40)] with root cause
org.attoparser.ParseException: (Line = 11, Column = 40) Malformed markup: Attribute "name" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-29 16:50:54 -请求地址 : http://localhost:8080/index
2019-01-29 16:50:54 -HTTP METHOD : GET
2019-01-29 16:50:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 16:50:54 -参数 : [{}]
2019-01-29 16:50:54 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 16:50:54 -==> Parameters: 123(String)
2019-01-29 16:50:54 -<==      Total: 3
2019-01-29 16:50:54 -耗时 : 23
2019-01-29 16:50:54 -返回值 : index_v1
2019-01-29 16:50:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:50:54 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 16:50:54.958(Timestamp)
2019-01-29 16:50:54 -<==    Updates: 1
2019-01-29 16:50:57 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 16:50:57 -HTTP METHOD : GET
2019-01-29 16:50:57 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 16:50:57 -参数 : []
2019-01-29 16:50:57 -耗时 : 0
2019-01-29 16:50:57 -返回值 : system/user/user
2019-01-29 16:50:57 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:50:57 -HTTP METHOD : GET
2019-01-29 16:50:57 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:50:57 -参数 : [{page=1, limit=15}]
2019-01-29 16:50:57 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:50:57 -==> Parameters: 
2019-01-29 16:50:57 -<==      Total: 2
2019-01-29 16:50:57 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:50:57 -==> Parameters: 
2019-01-29 16:50:57 -<==      Total: 1
2019-01-29 16:50:57 -耗时 : 17
2019-01-29 16:50:57 -返回值 : com.bootdo.common.utils.PageUtils@39ac3de8
2019-01-29 16:50:58 -请求地址 : http://localhost:8080/sys/user/edit/234
2019-01-29 16:50:58 -HTTP METHOD : GET
2019-01-29 16:50:58 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 16:50:58 -参数 : [234, {}]
2019-01-29 16:51:02 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 16:51:02 -==> Parameters: 234(String)
2019-01-29 16:51:02 -<==      Total: 1
2019-01-29 16:51:02 -耗时 : 3953
2019-01-29 16:51:02 -返回值 : system/user/edit
2019-01-29 16:51:02 -[THYMELEAF][http-nio-8080-exec-9] Exception processing template "system/user/edit": An error happened during template parsing (template: "class path resource [templates/system/user/edit.html]" - line 11, col 40)
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/user/edit.html]" - line 11, col 40)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: (Line = 11, Column = 40) Malformed markup: Attribute "name" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
2019-01-29 16:51:02 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/user/edit.html]" - line 11, col 40)] with root cause
org.attoparser.ParseException: (Line = 11, Column = 40) Malformed markup: Attribute "name" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseOpenElement(ParsingElementMarkupUtil.java:153)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:710)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-29 16:54:16 -请求地址 : http://localhost:8080/index
2019-01-29 16:54:16 -HTTP METHOD : GET
2019-01-29 16:54:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 16:54:16 -参数 : [{}]
2019-01-29 16:54:16 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 16:54:16 -==> Parameters: 123(String)
2019-01-29 16:54:16 -<==      Total: 3
2019-01-29 16:54:16 -耗时 : 21
2019-01-29 16:54:16 -返回值 : index_v1
2019-01-29 16:54:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:54:16 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 16:54:16.41(Timestamp)
2019-01-29 16:54:16 -<==    Updates: 1
2019-01-29 16:54:18 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 16:54:18 -==> Parameters: 123(String)
2019-01-29 16:54:18 -<==      Total: 7
2019-01-29 16:54:18 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 16:54:18 -HTTP METHOD : GET
2019-01-29 16:54:18 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 16:54:18 -参数 : []
2019-01-29 16:54:18 -耗时 : 1
2019-01-29 16:54:18 -返回值 : system/user/user
2019-01-29 16:54:18 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:54:18 -HTTP METHOD : GET
2019-01-29 16:54:18 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:54:18 -参数 : [{page=1, limit=15}]
2019-01-29 16:54:18 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:54:18 -==> Parameters: 
2019-01-29 16:54:18 -<==      Total: 2
2019-01-29 16:54:18 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:54:18 -==> Parameters: 
2019-01-29 16:54:18 -<==      Total: 1
2019-01-29 16:54:18 -耗时 : 17
2019-01-29 16:54:18 -返回值 : com.bootdo.common.utils.PageUtils@52ba9cb7
2019-01-29 16:54:19 -请求地址 : http://localhost:8080/sys/user/edit/234
2019-01-29 16:54:19 -HTTP METHOD : GET
2019-01-29 16:54:19 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 16:54:19 -参数 : [234, {}]
2019-01-29 16:54:19 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 16:54:19 -==> Parameters: 234(String)
2019-01-29 16:54:19 -<==      Total: 1
2019-01-29 16:54:19 -耗时 : 12
2019-01-29 16:54:19 -返回值 : system/user/edit
2019-01-29 16:54:19 -[THYMELEAF][http-nio-8080-exec-8] Exception processing template "system/user/edit": An error happened during template parsing (template: "class path resource [templates/system/user/edit.html]" - line 10, col 54)
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/user/edit.html]" - line 10, col 54)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: (Line = 10, Column = 54) Malformed markup: Attribute "name" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseStandaloneElement(ParsingElementMarkupUtil.java:90)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:706)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
2019-01-29 16:54:19 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/user/edit.html]" - line 10, col 54)] with root cause
org.attoparser.ParseException: (Line = 10, Column = 54) Malformed markup: Attribute "name" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseStandaloneElement(ParsingElementMarkupUtil.java:90)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:706)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-29 16:56:05 -请求地址 : http://localhost:8080/index
2019-01-29 16:56:05 -HTTP METHOD : GET
2019-01-29 16:56:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 16:56:05 -参数 : [{}]
2019-01-29 16:56:05 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 16:56:05 -==> Parameters: 123(String)
2019-01-29 16:56:05 -<==      Total: 3
2019-01-29 16:56:05 -耗时 : 17
2019-01-29 16:56:05 -返回值 : index_v1
2019-01-29 16:56:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:56:05 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 16:56:05.787(Timestamp)
2019-01-29 16:56:05 -<==    Updates: 1
2019-01-29 16:56:07 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 16:56:07 -HTTP METHOD : GET
2019-01-29 16:56:07 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 16:56:07 -参数 : []
2019-01-29 16:56:07 -耗时 : 1
2019-01-29 16:56:07 -返回值 : system/user/user
2019-01-29 16:56:08 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:56:08 -HTTP METHOD : GET
2019-01-29 16:56:08 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:56:08 -参数 : [{page=1, limit=15}]
2019-01-29 16:56:08 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:56:08 -==> Parameters: 
2019-01-29 16:56:08 -<==      Total: 2
2019-01-29 16:56:08 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:56:08 -==> Parameters: 
2019-01-29 16:56:08 -<==      Total: 1
2019-01-29 16:56:08 -耗时 : 17
2019-01-29 16:56:08 -返回值 : com.bootdo.common.utils.PageUtils@61b5722a
2019-01-29 16:56:09 -请求地址 : http://localhost:8080/sys/user/edit/234
2019-01-29 16:56:09 -HTTP METHOD : GET
2019-01-29 16:56:09 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 16:56:09 -参数 : [234, {}]
2019-01-29 16:56:09 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 16:56:09 -==> Parameters: 234(String)
2019-01-29 16:56:09 -<==      Total: 1
2019-01-29 16:56:09 -耗时 : 12
2019-01-29 16:56:09 -返回值 : system/user/edit
2019-01-29 16:56:57 -请求地址 : http://localhost:8080/index
2019-01-29 16:56:57 -HTTP METHOD : GET
2019-01-29 16:56:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 16:56:57 -参数 : [{}]
2019-01-29 16:56:57 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 16:56:57 -==> Parameters: 123(String)
2019-01-29 16:56:57 -<==      Total: 3
2019-01-29 16:56:57 -耗时 : 18
2019-01-29 16:56:57 -返回值 : index_v1
2019-01-29 16:56:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:56:57 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 16:56:57.565(Timestamp)
2019-01-29 16:56:57 -<==    Updates: 1
2019-01-29 16:56:59 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 16:56:59 -==> Parameters: 123(String)
2019-01-29 16:56:59 -<==      Total: 7
2019-01-29 16:56:59 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 16:56:59 -HTTP METHOD : GET
2019-01-29 16:56:59 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 16:56:59 -参数 : []
2019-01-29 16:56:59 -耗时 : 1
2019-01-29 16:56:59 -返回值 : system/user/user
2019-01-29 16:56:59 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:56:59 -HTTP METHOD : GET
2019-01-29 16:56:59 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:56:59 -参数 : [{page=1, limit=15}]
2019-01-29 16:56:59 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:56:59 -==> Parameters: 
2019-01-29 16:56:59 -<==      Total: 2
2019-01-29 16:56:59 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:56:59 -==> Parameters: 
2019-01-29 16:56:59 -<==      Total: 1
2019-01-29 16:56:59 -耗时 : 19
2019-01-29 16:56:59 -返回值 : com.bootdo.common.utils.PageUtils@6c258347
2019-01-29 16:57:01 -请求地址 : http://localhost:8080/sys/user/edit/234
2019-01-29 16:57:01 -HTTP METHOD : GET
2019-01-29 16:57:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 16:57:01 -参数 : [234, {}]
2019-01-29 16:57:01 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 16:57:01 -==> Parameters: 234(String)
2019-01-29 16:57:01 -<==      Total: 1
2019-01-29 16:57:01 -耗时 : 15
2019-01-29 16:57:01 -返回值 : system/user/edit
2019-01-29 16:57:21 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-01-29 16:57:59 -请求地址 : http://localhost:8080/index
2019-01-29 16:57:59 -HTTP METHOD : GET
2019-01-29 16:57:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 16:57:59 -参数 : [{}]
2019-01-29 16:57:59 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 16:57:59 -==> Parameters: 123(String)
2019-01-29 16:57:59 -<==      Total: 3
2019-01-29 16:57:59 -耗时 : 22
2019-01-29 16:57:59 -返回值 : index_v1
2019-01-29 16:57:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 16:57:59 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 16:57:59.761(Timestamp)
2019-01-29 16:57:59 -<==    Updates: 1
2019-01-29 16:58:02 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 16:58:02 -HTTP METHOD : GET
2019-01-29 16:58:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 16:58:02 -参数 : []
2019-01-29 16:58:02 -耗时 : 0
2019-01-29 16:58:02 -返回值 : system/user/user
2019-01-29 16:58:02 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 16:58:02 -HTTP METHOD : GET
2019-01-29 16:58:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 16:58:02 -参数 : [{page=1, limit=15}]
2019-01-29 16:58:02 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 16:58:02 -==> Parameters: 
2019-01-29 16:58:02 -<==      Total: 2
2019-01-29 16:58:02 -==>  Preparing: select count(*) from sys_user 
2019-01-29 16:58:02 -==> Parameters: 
2019-01-29 16:58:02 -<==      Total: 1
2019-01-29 16:58:02 -耗时 : 17
2019-01-29 16:58:02 -返回值 : com.bootdo.common.utils.PageUtils@64621960
2019-01-29 16:58:04 -请求地址 : http://localhost:8080/sys/user/edit/234
2019-01-29 16:58:04 -HTTP METHOD : GET
2019-01-29 16:58:04 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 16:58:04 -参数 : [234, {}]
2019-01-29 16:58:04 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 16:58:04 -==> Parameters: 234(String)
2019-01-29 16:58:04 -<==      Total: 1
2019-01-29 16:58:04 -耗时 : 20
2019-01-29 16:58:04 -返回值 : system/user/edit
2019-01-29 16:58:23 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 16:58:23 -HTTP METHOD : POST
2019-01-29 16:58:23 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 16:58:23 -参数 : [gzl]
2019-01-29 16:58:23 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? 
2019-01-29 16:58:23 -==> Parameters: gzl(String)
2019-01-29 16:58:23 -<==      Total: 1
2019-01-29 16:58:23 -耗时 : 13
2019-01-29 16:58:23 -返回值 : {msg=用户名已存在！, code=500}
2019-01-29 17:04:02 -Starting BootdoApplication on YH-20180312AAAP with PID 15948 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-29 17:04:02 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-29 17:04:02 -The following profiles are active: dev
2019-01-29 17:04:02 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53d102a2: startup date [Tue Jan 29 17:04:02 CST 2019]; root of context hierarchy
2019-01-29 17:04:03 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$7a7e3997] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:04:03 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$6ef1fe3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:04:03 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:04:03 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:04:03 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:04:03 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$990cb39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:04:03 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$316c0379] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:04:04 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$23c53220] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:04:04 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-29 17:04:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:04:04 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:04:04 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:04:04 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:04:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:04:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-29 17:04:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-29 17:04:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:04:04 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:04:04 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:04:04 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:04:05 -Tomcat initialized with port(s): 8080 (http)
2019-01-29 17:04:05 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 17:04:05 -Starting service [Tomcat]
2019-01-29 17:04:05 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-29 17:04:05 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-29 17:04:05 -Initializing Spring embedded WebApplicationContext
2019-01-29 17:04:05 -Root WebApplicationContext: initialization completed in 3174 ms
2019-01-29 17:04:05 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 17:04:05 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 17:04:05 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 17:04:05 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 17:04:05 -Filter xssFilter was not registered (disabled)
2019-01-29 17:04:05 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-29 17:04:05 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-29 17:04:05 -Servlet statViewServlet mapped to [/druid/*]
2019-01-29 17:04:05 -Servlet dispatcherServlet mapped to [/]
2019-01-29 17:04:06 -{dataSource-1} inited
2019-01-29 17:04:07 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53d102a2: startup date [Tue Jan 29 17:04:02 CST 2019]; root of context hierarchy
2019-01-29 17:04:07 -Using default implementation for ThreadExecutor
2019-01-29 17:04:07 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-29 17:04:07 -Quartz Scheduler v.2.2.1 created.
2019-01-29 17:04:07 -RAMJobStore initialized.
2019-01-29 17:04:07 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-29 17:04:07 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-29 17:04:07 -Quartz scheduler version: 2.2.1
2019-01-29 17:04:07 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@2c56eba5
2019-01-29 17:04:07 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-29 17:04:07 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-29 17:04:08 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 17:04:08 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-29 17:04:08 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-29 17:04:08 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-29 17:04:08 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-29 17:04:08 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-29 17:04:08 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-29 17:04:08 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-29 17:04:08 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-29 17:04:08 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-29 17:04:08 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 17:04:08 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-29 17:04:08 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-29 17:04:08 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-29 17:04:08 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 17:04:08 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-29 17:04:08 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-29 17:04:08 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-29 17:04:08 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 17:04:08 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-29 17:04:08 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 17:04:08 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 17:04:08 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-29 17:04:08 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-29 17:04:08 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-29 17:04:08 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-29 17:04:08 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 17:04:08 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-29 17:04:08 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-29 17:04:08 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-29 17:04:08 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-29 17:04:08 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-29 17:04:08 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-29 17:04:08 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-29 17:04:08 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-29 17:04:08 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-29 17:04:08 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-29 17:04:08 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-29 17:04:08 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-29 17:04:08 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 17:04:08 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-29 17:04:08 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-29 17:04:08 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-29 17:04:08 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-29 17:04:08 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-29 17:04:08 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-29 17:04:08 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-29 17:04:08 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-29 17:04:08 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-29 17:04:08 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-29 17:04:08 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-29 17:04:08 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-29 17:04:08 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 17:04:08 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-29 17:04:08 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-29 17:04:08 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-29 17:04:08 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-29 17:04:08 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-29 17:04:08 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long)
2019-01-29 17:04:08 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long[])
2019-01-29 17:04:08 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-29 17:04:08 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 17:04:08 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-29 17:04:08 -Mapped "{[/system/staff/edit/{staffId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 17:04:08 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-29 17:04:08 -Mapped "{[/system/staff/selectView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.selectView()
2019-01-29 17:04:08 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-29 17:04:08 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-29 17:04:08 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-29 17:04:08 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-29 17:04:08 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 17:04:08 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-29 17:04:08 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-29 17:04:08 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-29 17:04:08 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 17:04:08 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-29 17:04:08 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 17:04:08 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-29 17:04:08 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-29 17:04:08 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-29 17:04:08 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-29 17:04:08 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-29 17:04:08 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-29 17:04:08 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-29 17:04:08 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-29 17:04:08 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-29 17:04:09 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-29 17:04:09 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-29 17:04:09 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-29 17:04:09 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 17:04:09 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@53d102a2: startup date [Tue Jan 29 17:04:02 CST 2019]; root of context hierarchy
2019-01-29 17:04:10 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 17:04:10 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 17:04:10 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 17:04:10 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-29 17:04:10 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-29 17:04:10 -Registering beans for JMX exposure on startup
2019-01-29 17:04:10 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-29 17:04:10 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-29 17:04:10 -Starting beans in phase 2147483647
2019-01-29 17:04:10 -Context refreshed
2019-01-29 17:04:10 -Found 1 custom documentation plugin(s)
2019-01-29 17:04:10 -Scanning for api listing references
2019-01-29 17:04:11 -Generating unique operation named: removeUsingPOST_1
2019-01-29 17:04:11 -Generating unique operation named: editUsingGET_1
2019-01-29 17:04:11 -Generating unique operation named: listUsingGET_1
2019-01-29 17:04:11 -Generating unique operation named: updateUsingPOST_1
2019-01-29 17:04:11 -Generating unique operation named: addUsingGET_1
2019-01-29 17:04:11 -Generating unique operation named: editUsingGET_2
2019-01-29 17:04:11 -Generating unique operation named: listUsingGET_2
2019-01-29 17:04:11 -Generating unique operation named: removeUsingPOST_2
2019-01-29 17:04:11 -Generating unique operation named: removeUsingPOST_3
2019-01-29 17:04:11 -Generating unique operation named: saveUsingPOST_1
2019-01-29 17:04:11 -Generating unique operation named: updateUsingPOST_2
2019-01-29 17:04:11 -Generating unique operation named: listUsingGET_3
2019-01-29 17:04:11 -Generating unique operation named: removeUsingPOST_4
2019-01-29 17:04:11 -Generating unique operation named: welcomeUsingGET_1
2019-01-29 17:04:11 -Generating unique operation named: addUsingGET_2
2019-01-29 17:04:11 -Generating unique operation named: editUsingGET_3
2019-01-29 17:04:11 -Generating unique operation named: listUsingGET_4
2019-01-29 17:04:11 -Generating unique operation named: removeUsingPOST_5
2019-01-29 17:04:11 -Generating unique operation named: saveUsingPOST_2
2019-01-29 17:04:11 -Generating unique operation named: treeUsingGET_1
2019-01-29 17:04:11 -Generating unique operation named: updateUsingPOST_3
2019-01-29 17:04:11 -Generating unique operation named: addUsingGET_3
2019-01-29 17:04:11 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-29 17:04:11 -Generating unique operation named: editUsingGET_4
2019-01-29 17:04:11 -Generating unique operation named: listUsingGET_5
2019-01-29 17:04:11 -Generating unique operation named: saveUsingPOST_3
2019-01-29 17:04:11 -Generating unique operation named: saveUsingPOST_4
2019-01-29 17:04:11 -Generating unique operation named: updateUsingPOST_4
2019-01-29 17:04:11 -Generating unique operation named: listUsingGET_6
2019-01-29 17:04:11 -Generating unique operation named: listUsingHEAD_1
2019-01-29 17:04:11 -Generating unique operation named: listUsingPOST_1
2019-01-29 17:04:11 -Generating unique operation named: listUsingPUT_1
2019-01-29 17:04:11 -Generating unique operation named: listUsingPATCH_1
2019-01-29 17:04:11 -Generating unique operation named: listUsingDELETE_1
2019-01-29 17:04:11 -Generating unique operation named: listUsingOPTIONS_1
2019-01-29 17:04:11 -Generating unique operation named: listUsingTRACE_1
2019-01-29 17:04:11 -Generating unique operation named: addUsingGET_4
2019-01-29 17:04:11 -Generating unique operation named: editUsingGET_5
2019-01-29 17:04:11 -Generating unique operation named: listUsingGET_7
2019-01-29 17:04:11 -Generating unique operation named: removeUsingPOST_6
2019-01-29 17:04:11 -Generating unique operation named: removeUsingPOST_7
2019-01-29 17:04:11 -Generating unique operation named: saveUsingPOST_5
2019-01-29 17:04:11 -Generating unique operation named: updateUsingGET_1
2019-01-29 17:04:11 -Generating unique operation named: updateUsingHEAD_1
2019-01-29 17:04:11 -Generating unique operation named: updateUsingPOST_5
2019-01-29 17:04:11 -Generating unique operation named: updateUsingPUT_1
2019-01-29 17:04:11 -Generating unique operation named: updateUsingPATCH_1
2019-01-29 17:04:11 -Generating unique operation named: updateUsingDELETE_1
2019-01-29 17:04:11 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-29 17:04:11 -Generating unique operation named: updateUsingTRACE_1
2019-01-29 17:04:11 -Generating unique operation named: addUsingGET_5
2019-01-29 17:04:11 -Generating unique operation named: editUsingGET_6
2019-01-29 17:04:11 -Generating unique operation named: listUsingGET_8
2019-01-29 17:04:11 -Generating unique operation named: removeUsingPOST_8
2019-01-29 17:04:11 -Generating unique operation named: removeUsingPOST_9
2019-01-29 17:04:11 -Generating unique operation named: saveUsingPOST_6
2019-01-29 17:04:11 -Generating unique operation named: updateUsingGET_2
2019-01-29 17:04:11 -Generating unique operation named: updateUsingHEAD_2
2019-01-29 17:04:11 -Generating unique operation named: updateUsingPOST_6
2019-01-29 17:04:11 -Generating unique operation named: updateUsingPUT_2
2019-01-29 17:04:11 -Generating unique operation named: updateUsingPATCH_2
2019-01-29 17:04:11 -Generating unique operation named: updateUsingDELETE_2
2019-01-29 17:04:11 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-29 17:04:11 -Generating unique operation named: updateUsingTRACE_2
2019-01-29 17:04:11 -Generating unique operation named: addUsingGET_6
2019-01-29 17:04:11 -Generating unique operation named: editUsingGET_7
2019-01-29 17:04:11 -Generating unique operation named: listUsingGET_9
2019-01-29 17:04:11 -Generating unique operation named: roleUsingGET_1
2019-01-29 17:04:11 -Generating unique operation named: saveUsingPOST_7
2019-01-29 17:04:11 -Starting Quartz Scheduler now
2019-01-29 17:04:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-29 17:04:11 -Starting...
2019-01-29 17:04:11 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-29 17:04:11 -Started.
2019-01-29 17:04:11 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 17:04:11 -Using a shared selector for servlet write/read
2019-01-29 17:04:11 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-29 17:04:11 -Started BootdoApplication in 10.088 seconds (JVM running for 10.542)
2019-01-29 17:04:11 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-29 17:04:12 -==> Parameters: 
2019-01-29 17:04:12 -<==      Total: 1
2019-01-29 17:04:26 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 17:04:26 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 17:04:26 -FrameworkServlet 'dispatcherServlet': initialization completed in 33 ms
2019-01-29 17:04:26 -Enabling session validation scheduler...
2019-01-29 17:04:27 -请求地址 : http://localhost:8080/login;JSESSIONID=a3f46ef7-7550-440e-b8e0-24ac2e35e759
2019-01-29 17:04:27 -HTTP METHOD : GET
2019-01-29 17:04:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 17:04:27 -参数 : []
2019-01-29 17:04:27 -耗时 : 1
2019-01-29 17:04:27 -返回值 : login
2019-01-29 17:04:27 -请求地址 : http://localhost:8080/login
2019-01-29 17:04:27 -HTTP METHOD : GET
2019-01-29 17:04:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 17:04:27 -参数 : []
2019-01-29 17:04:27 -耗时 : 0
2019-01-29 17:04:27 -返回值 : login
2019-01-29 17:04:31 -请求地址 : http://localhost:8080/login
2019-01-29 17:04:31 -HTTP METHOD : POST
2019-01-29 17:04:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 17:04:31 -参数 : [admin, 123456]
2019-01-29 17:04:31 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 17:04:31 -==> Parameters: admin(String)
2019-01-29 17:04:31 -<==      Total: 1
2019-01-29 17:04:31 -耗时 : 40
2019-01-29 17:04:31 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:04:31 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-29 17:04:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:04:31 -==> Parameters: 123(String), admin(String), 登录(String), 40(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 17:04:31.51(Timestamp)
2019-01-29 17:04:31 -请求地址 : http://localhost:8080/index
2019-01-29 17:04:31 -HTTP METHOD : GET
2019-01-29 17:04:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 17:04:31 -参数 : [{}]
2019-01-29 17:04:31 -<==    Updates: 1
2019-01-29 17:04:31 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 17:04:31 -==> Parameters: 123(String)
2019-01-29 17:04:31 -<==      Total: 3
2019-01-29 17:04:31 -耗时 : 64
2019-01-29 17:04:31 -返回值 : index_v1
2019-01-29 17:04:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:04:31 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 64(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 17:04:31.645(Timestamp)
2019-01-29 17:04:31 -<==    Updates: 1
2019-01-29 17:04:33 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 17:04:33 -==> Parameters: 123(String)
2019-01-29 17:04:33 -<==      Total: 7
2019-01-29 17:04:34 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:04:34 -HTTP METHOD : GET
2019-01-29 17:04:34 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:04:34 -参数 : []
2019-01-29 17:04:34 -耗时 : 1
2019-01-29 17:04:34 -返回值 : system/user/user
2019-01-29 17:04:34 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:04:34 -HTTP METHOD : GET
2019-01-29 17:04:34 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:04:34 -参数 : [{page=1, limit=15}]
2019-01-29 17:04:34 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:04:34 -==> Parameters: 
2019-01-29 17:04:34 -<==      Total: 2
2019-01-29 17:04:34 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:04:34 -==> Parameters: 
2019-01-29 17:04:34 -<==      Total: 1
2019-01-29 17:04:34 -耗时 : 48
2019-01-29 17:04:34 -返回值 : com.bootdo.common.utils.PageUtils@1978ccd8
2019-01-29 17:04:35 -请求地址 : http://localhost:8080/sys/user/edit/234
2019-01-29 17:04:35 -HTTP METHOD : GET
2019-01-29 17:04:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 17:04:35 -参数 : [234, {}]
2019-01-29 17:04:35 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 17:04:35 -==> Parameters: 234(String)
2019-01-29 17:04:35 -<==      Total: 1
2019-01-29 17:04:35 -耗时 : 16
2019-01-29 17:04:35 -返回值 : system/user/edit
2019-01-29 17:04:39 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 17:04:39 -HTTP METHOD : POST
2019-01-29 17:04:39 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 17:04:39 -参数 : [{username=gzl, userId=234}]
2019-01-29 17:04:39 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-29 17:04:39 -==> Parameters: gzl(String), null
2019-01-29 17:04:39 -<==      Total: 0
2019-01-29 17:04:39 -耗时 : 15
2019-01-29 17:04:39 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:04:39 -请求地址 : http://localhost:8080/sys/user/update
2019-01-29 17:04:39 -HTTP METHOD : POST
2019-01-29 17:04:39 -CLASS_METHOD : com.bootdo.system.controller.UserController.update
2019-01-29 17:04:39 -参数 : [com.bootdo.system.domain.UserDO@7d5c6e11]
2019-01-29 17:04:39 -==>  Preparing: update sys_user SET `username` = ?, `usernikename` = ?, `userstatus` = ?, `deleteflag` = ? where user_id = ? 
2019-01-29 17:04:39 -==> Parameters: gzl(String), (String), 1(Integer), 1(Integer), 234(String)
2019-01-29 17:04:39 -<==    Updates: 1
2019-01-29 17:04:39 -耗时 : 87
2019-01-29 17:04:39 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:04:39 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:04:39 -HTTP METHOD : GET
2019-01-29 17:04:39 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:04:39 -参数 : []
2019-01-29 17:04:39 -耗时 : 0
2019-01-29 17:04:39 -返回值 : system/user/user
2019-01-29 17:04:39 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:04:39 -HTTP METHOD : GET
2019-01-29 17:04:39 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:04:39 -参数 : [{page=1, limit=15}]
2019-01-29 17:04:39 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:04:39 -==> Parameters: 
2019-01-29 17:04:39 -<==      Total: 2
2019-01-29 17:04:39 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:04:39 -==> Parameters: 
2019-01-29 17:04:39 -<==      Total: 1
2019-01-29 17:04:39 -耗时 : 11
2019-01-29 17:04:39 -返回值 : com.bootdo.common.utils.PageUtils@714ae430
2019-01-29 17:04:44 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 17:04:44 -HTTP METHOD : GET
2019-01-29 17:04:44 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 17:04:44 -参数 : []
2019-01-29 17:04:44 -耗时 : 0
2019-01-29 17:04:44 -返回值 : system/user/add
2019-01-29 17:04:51 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 17:04:51 -HTTP METHOD : POST
2019-01-29 17:04:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 17:04:51 -参数 : [{username=gzl}]
2019-01-29 17:04:51 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-29 17:04:51 -==> Parameters: gzl(String), null
2019-01-29 17:04:51 -<==      Total: 0
2019-01-29 17:04:51 -耗时 : 11
2019-01-29 17:04:51 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:04:51 -请求地址 : http://localhost:8080/sys/user/save
2019-01-29 17:04:51 -HTTP METHOD : POST
2019-01-29 17:04:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.save
2019-01-29 17:04:51 -参数 : [com.bootdo.system.domain.UserDO@17c37555]
2019-01-29 17:04:51 -==>  Preparing: insert into sys_user ( `user_id`, `dept_id`, `username`, `usernikename`, `userpwd`, `userstatus`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:04:51 -==> Parameters: 182181c2-9d55-45a4-a482-895b3cb73c97(String), null, gzl(String), (String), 11d1d957f5a735f324d0a3f2849c9834(String), 1(Integer), null, null, 1(Integer), null, null, null
2019-01-29 17:04:51 -<==    Updates: 1
2019-01-29 17:04:51 -耗时 : 44
2019-01-29 17:04:51 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:04:51 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:04:51 -HTTP METHOD : GET
2019-01-29 17:04:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:04:51 -参数 : []
2019-01-29 17:04:51 -耗时 : 0
2019-01-29 17:04:51 -返回值 : system/user/user
2019-01-29 17:04:51 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:04:51 -HTTP METHOD : GET
2019-01-29 17:04:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:04:51 -参数 : [{page=1, limit=15}]
2019-01-29 17:04:51 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:04:51 -==> Parameters: 
2019-01-29 17:04:51 -<==      Total: 3
2019-01-29 17:04:51 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:04:51 -==> Parameters: 
2019-01-29 17:04:51 -<==      Total: 1
2019-01-29 17:04:51 -耗时 : 15
2019-01-29 17:04:51 -返回值 : com.bootdo.common.utils.PageUtils@22618de2
2019-01-29 17:05:09 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-29 17:05:21 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 17:05:21 -HTTP METHOD : GET
2019-01-29 17:05:21 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 17:05:21 -参数 : []
2019-01-29 17:05:21 -耗时 : 0
2019-01-29 17:05:21 -返回值 : system/user/add
2019-01-29 17:05:24 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 17:05:24 -HTTP METHOD : POST
2019-01-29 17:05:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 17:05:24 -参数 : [{username=gzl}]
2019-01-29 17:06:25 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-29 17:06:25 -==> Parameters: gzl(String), null
2019-01-29 17:06:25 -<==      Total: 0
2019-01-29 17:06:25 -耗时 : 60739
2019-01-29 17:06:25 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:06:25 -请求地址 : http://localhost:8080/sys/user/save
2019-01-29 17:06:25 -HTTP METHOD : POST
2019-01-29 17:06:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.save
2019-01-29 17:06:25 -参数 : [com.bootdo.system.domain.UserDO@5b78fc08]
2019-01-29 17:06:25 -==>  Preparing: insert into sys_user ( `user_id`, `dept_id`, `username`, `usernikename`, `userpwd`, `userstatus`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:06:25 -==> Parameters: e29e7cb8-40c8-4063-a291-02b5c630260d(String), null, gzl(String), (String), 11d1d957f5a735f324d0a3f2849c9834(String), 1(Integer), null, null, 1(Integer), null, null, null
2019-01-29 17:06:25 -<==    Updates: 1
2019-01-29 17:06:25 -耗时 : 74
2019-01-29 17:06:25 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:06:25 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:06:25 -HTTP METHOD : GET
2019-01-29 17:06:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:06:25 -参数 : []
2019-01-29 17:06:25 -耗时 : 0
2019-01-29 17:06:25 -返回值 : system/user/user
2019-01-29 17:06:25 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:06:25 -HTTP METHOD : GET
2019-01-29 17:06:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:06:25 -参数 : [{page=1, limit=15}]
2019-01-29 17:06:25 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:06:25 -==> Parameters: 
2019-01-29 17:06:25 -<==      Total: 4
2019-01-29 17:06:25 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:06:25 -==> Parameters: 
2019-01-29 17:06:25 -<==      Total: 1
2019-01-29 17:06:25 -耗时 : 17
2019-01-29 17:06:25 -返回值 : com.bootdo.common.utils.PageUtils@135f6a13
2019-01-29 17:06:30 -请求地址 : http://localhost:8080/sys/user/edit/e29e7cb8-40c8-4063-a291-02b5c630260d
2019-01-29 17:06:30 -HTTP METHOD : GET
2019-01-29 17:06:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 17:06:30 -参数 : [e29e7cb8-40c8-4063-a291-02b5c630260d, {}]
2019-01-29 17:06:30 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 17:06:30 -==> Parameters: e29e7cb8-40c8-4063-a291-02b5c630260d(String)
2019-01-29 17:06:30 -<==      Total: 1
2019-01-29 17:06:30 -耗时 : 13
2019-01-29 17:06:30 -返回值 : system/user/edit
2019-01-29 17:06:42 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 17:06:42 -HTTP METHOD : POST
2019-01-29 17:06:42 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 17:06:42 -参数 : [{username=gzl, userId=e29e7cb8-40c8-4063-a291-02b5c630260d}]
2019-01-29 17:07:00 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-29 17:07:00 -==> Parameters: gzl(String), null
2019-01-29 17:07:00 -<==      Total: 0
2019-01-29 17:07:00 -耗时 : 17466
2019-01-29 17:07:00 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:07:00 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 17:07:00 -==> Parameters: 123(String)
2019-01-29 17:07:00 -<==      Total: 7
2019-01-29 17:07:00 -请求地址 : http://localhost:8080/sys/user/update
2019-01-29 17:07:00 -HTTP METHOD : POST
2019-01-29 17:07:00 -CLASS_METHOD : com.bootdo.system.controller.UserController.update
2019-01-29 17:07:00 -参数 : [com.bootdo.system.domain.UserDO@2627296f]
2019-01-29 17:07:00 -==>  Preparing: update sys_user SET `username` = ?, `usernikename` = ?, `userstatus` = ?, `deleteflag` = ? where user_id = ? 
2019-01-29 17:07:00 -==> Parameters: gzl(String), (String), 0(Integer), 1(Integer), e29e7cb8-40c8-4063-a291-02b5c630260d(String)
2019-01-29 17:07:00 -<==    Updates: 1
2019-01-29 17:07:00 -耗时 : 41
2019-01-29 17:07:00 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:07:00 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:07:00 -HTTP METHOD : GET
2019-01-29 17:07:00 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:07:00 -参数 : []
2019-01-29 17:07:00 -耗时 : 0
2019-01-29 17:07:00 -返回值 : system/user/user
2019-01-29 17:07:00 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:07:00 -HTTP METHOD : GET
2019-01-29 17:07:00 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:07:00 -参数 : [{page=1, limit=15}]
2019-01-29 17:07:00 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:07:00 -==> Parameters: 
2019-01-29 17:07:00 -<==      Total: 4
2019-01-29 17:07:00 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:07:00 -==> Parameters: 
2019-01-29 17:07:00 -<==      Total: 1
2019-01-29 17:07:00 -耗时 : 10
2019-01-29 17:07:00 -返回值 : com.bootdo.common.utils.PageUtils@35fdb303
2019-01-29 17:07:35 -请求地址 : http://localhost:8080/sys/user/edit/234
2019-01-29 17:07:35 -HTTP METHOD : GET
2019-01-29 17:07:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 17:07:35 -参数 : [234, {}]
2019-01-29 17:07:35 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 17:07:35 -==> Parameters: 234(String)
2019-01-29 17:07:35 -<==      Total: 1
2019-01-29 17:07:35 -耗时 : 10
2019-01-29 17:07:35 -返回值 : system/user/edit
2019-01-29 17:07:38 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 17:07:38 -HTTP METHOD : POST
2019-01-29 17:07:38 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 17:07:38 -参数 : [{username=gzl1, userId=234}]
2019-01-29 17:07:40 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-29 17:07:40 -==> Parameters: gzl1(String), null
2019-01-29 17:07:40 -<==      Total: 0
2019-01-29 17:07:40 -耗时 : 2035
2019-01-29 17:07:40 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:07:40 -请求地址 : http://localhost:8080/sys/user/update
2019-01-29 17:07:40 -HTTP METHOD : POST
2019-01-29 17:07:40 -CLASS_METHOD : com.bootdo.system.controller.UserController.update
2019-01-29 17:07:40 -参数 : [com.bootdo.system.domain.UserDO@55b7a9c0]
2019-01-29 17:07:40 -==>  Preparing: update sys_user SET `username` = ?, `usernikename` = ?, `userstatus` = ?, `deleteflag` = ? where user_id = ? 
2019-01-29 17:07:40 -==> Parameters: gzl1(String), (String), 1(Integer), 1(Integer), 234(String)
2019-01-29 17:07:40 -<==    Updates: 1
2019-01-29 17:07:40 -耗时 : 53
2019-01-29 17:07:40 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:07:40 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:07:40 -HTTP METHOD : GET
2019-01-29 17:07:40 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:07:40 -参数 : []
2019-01-29 17:07:40 -耗时 : 1
2019-01-29 17:07:40 -返回值 : system/user/user
2019-01-29 17:07:40 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:07:40 -HTTP METHOD : GET
2019-01-29 17:07:40 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:07:40 -参数 : [{page=1, limit=15}]
2019-01-29 17:07:40 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:07:40 -==> Parameters: 
2019-01-29 17:07:40 -<==      Total: 4
2019-01-29 17:07:40 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:07:40 -==> Parameters: 
2019-01-29 17:07:40 -<==      Total: 1
2019-01-29 17:07:40 -耗时 : 7
2019-01-29 17:07:40 -返回值 : com.bootdo.common.utils.PageUtils@5f7fa2ed
2019-01-29 17:07:43 -请求地址 : http://localhost:8080/sys/user/edit/e29e7cb8-40c8-4063-a291-02b5c630260d
2019-01-29 17:07:43 -HTTP METHOD : GET
2019-01-29 17:07:43 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 17:07:43 -参数 : [e29e7cb8-40c8-4063-a291-02b5c630260d, {}]
2019-01-29 17:07:43 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 17:07:43 -==> Parameters: e29e7cb8-40c8-4063-a291-02b5c630260d(String)
2019-01-29 17:07:43 -<==      Total: 1
2019-01-29 17:07:43 -耗时 : 16
2019-01-29 17:07:43 -返回值 : system/user/edit
2019-01-29 17:07:46 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 17:07:46 -HTTP METHOD : POST
2019-01-29 17:07:46 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 17:07:46 -参数 : [{username=gzl1, userId=e29e7cb8-40c8-4063-a291-02b5c630260d}]
2019-01-29 17:07:48 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-29 17:07:48 -==> Parameters: gzl1(String), null
2019-01-29 17:07:48 -<==      Total: 0
2019-01-29 17:07:51 -耗时 : 4837
2019-01-29 17:07:51 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:07:51 -请求地址 : http://localhost:8080/sys/user/update
2019-01-29 17:07:51 -HTTP METHOD : POST
2019-01-29 17:07:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.update
2019-01-29 17:07:51 -参数 : [com.bootdo.system.domain.UserDO@50a6a8a5]
2019-01-29 17:07:51 -==>  Preparing: update sys_user SET `username` = ?, `usernikename` = ?, `userstatus` = ?, `deleteflag` = ? where user_id = ? 
2019-01-29 17:07:51 -==> Parameters: gzl1(String), (String), 0(Integer), 1(Integer), e29e7cb8-40c8-4063-a291-02b5c630260d(String)
2019-01-29 17:07:51 -<==    Updates: 1
2019-01-29 17:07:51 -耗时 : 66
2019-01-29 17:07:51 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:07:51 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:07:51 -HTTP METHOD : GET
2019-01-29 17:07:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:07:51 -参数 : []
2019-01-29 17:07:51 -耗时 : 1
2019-01-29 17:07:51 -返回值 : system/user/user
2019-01-29 17:07:51 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:07:51 -HTTP METHOD : GET
2019-01-29 17:07:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:07:51 -参数 : [{page=1, limit=15}]
2019-01-29 17:07:51 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:07:51 -==> Parameters: 
2019-01-29 17:07:51 -<==      Total: 4
2019-01-29 17:07:51 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:07:51 -==> Parameters: 
2019-01-29 17:07:51 -<==      Total: 1
2019-01-29 17:07:51 -耗时 : 11
2019-01-29 17:07:51 -返回值 : com.bootdo.common.utils.PageUtils@64653579
2019-01-29 17:10:08 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 17:10:08 -==> Parameters: 123(String)
2019-01-29 17:10:08 -<==      Total: 7
2019-01-29 17:10:08 -请求地址 : http://localhost:8080/sys/user/edit/e29e7cb8-40c8-4063-a291-02b5c630260d
2019-01-29 17:10:08 -HTTP METHOD : GET
2019-01-29 17:10:08 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 17:10:08 -参数 : [e29e7cb8-40c8-4063-a291-02b5c630260d, {}]
2019-01-29 17:10:08 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 17:10:08 -==> Parameters: e29e7cb8-40c8-4063-a291-02b5c630260d(String)
2019-01-29 17:10:08 -<==      Total: 1
2019-01-29 17:10:08 -耗时 : 12
2019-01-29 17:10:08 -返回值 : system/user/edit
2019-01-29 17:10:17 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 17:10:17 -HTTP METHOD : POST
2019-01-29 17:10:17 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 17:10:17 -参数 : [{username=gzl1, userId=e29e7cb8-40c8-4063-a291-02b5c630260d}]
2019-01-29 17:10:39 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-29 17:10:39 -==> Parameters: gzl1(String), null
2019-01-29 17:10:39 -<==      Total: 0
2019-01-29 17:10:39 -耗时 : 21786
2019-01-29 17:10:39 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:10:39 -请求地址 : http://localhost:8080/sys/user/update
2019-01-29 17:10:39 -HTTP METHOD : POST
2019-01-29 17:10:39 -CLASS_METHOD : com.bootdo.system.controller.UserController.update
2019-01-29 17:10:39 -参数 : [com.bootdo.system.domain.UserDO@8cfc4a7]
2019-01-29 17:10:39 -==>  Preparing: update sys_user SET `username` = ?, `usernikename` = ?, `userstatus` = ?, `deleteflag` = ? where user_id = ? 
2019-01-29 17:10:39 -==> Parameters: gzl1(String), (String), 0(Integer), 1(Integer), e29e7cb8-40c8-4063-a291-02b5c630260d(String)
2019-01-29 17:10:39 -<==    Updates: 1
2019-01-29 17:10:39 -耗时 : 67
2019-01-29 17:10:39 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:10:39 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:10:39 -HTTP METHOD : GET
2019-01-29 17:10:39 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:10:39 -参数 : []
2019-01-29 17:10:39 -耗时 : 1
2019-01-29 17:10:39 -返回值 : system/user/user
2019-01-29 17:10:39 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:10:39 -HTTP METHOD : GET
2019-01-29 17:10:39 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:10:39 -参数 : [{page=1, limit=15}]
2019-01-29 17:10:39 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:10:39 -==> Parameters: 
2019-01-29 17:10:39 -<==      Total: 4
2019-01-29 17:10:39 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:10:39 -==> Parameters: 
2019-01-29 17:10:39 -<==      Total: 1
2019-01-29 17:10:39 -耗时 : 18
2019-01-29 17:10:39 -返回值 : com.bootdo.common.utils.PageUtils@4d3cd763
2019-01-29 17:11:16 -Starting BootdoApplication on YH-20180312AAAP with PID 9796 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-29 17:11:16 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-29 17:11:16 -The following profiles are active: dev
2019-01-29 17:11:16 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6436a7db: startup date [Tue Jan 29 17:11:16 CST 2019]; root of context hierarchy
2019-01-29 17:11:17 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$12dd111a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:11:17 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$750d5be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:11:17 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:11:17 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:11:17 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:11:17 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$a1efa2bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:11:17 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c9cadafc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:11:17 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$bc2409a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:11:17 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-29 17:11:18 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:11:18 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:11:18 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:11:18 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:11:18 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:11:18 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-29 17:11:18 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-29 17:11:18 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:11:18 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:11:18 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:11:18 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-29 17:11:19 -Tomcat initialized with port(s): 8080 (http)
2019-01-29 17:11:19 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-29 17:11:19 -Starting service [Tomcat]
2019-01-29 17:11:19 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-29 17:11:19 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-29 17:11:19 -Initializing Spring embedded WebApplicationContext
2019-01-29 17:11:19 -Root WebApplicationContext: initialization completed in 3067 ms
2019-01-29 17:11:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-29 17:11:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-29 17:11:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-29 17:11:19 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-29 17:11:19 -Filter xssFilter was not registered (disabled)
2019-01-29 17:11:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-29 17:11:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-29 17:11:19 -Servlet statViewServlet mapped to [/druid/*]
2019-01-29 17:11:19 -Servlet dispatcherServlet mapped to [/]
2019-01-29 17:11:20 -{dataSource-1} inited
2019-01-29 17:11:20 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6436a7db: startup date [Tue Jan 29 17:11:16 CST 2019]; root of context hierarchy
2019-01-29 17:11:20 -Using default implementation for ThreadExecutor
2019-01-29 17:11:20 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-29 17:11:20 -Quartz Scheduler v.2.2.1 created.
2019-01-29 17:11:20 -RAMJobStore initialized.
2019-01-29 17:11:20 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-29 17:11:20 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-29 17:11:20 -Quartz scheduler version: 2.2.1
2019-01-29 17:11:20 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@37d3aa8c
2019-01-29 17:11:21 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-29 17:11:21 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-29 17:11:22 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 17:11:22 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-29 17:11:22 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-29 17:11:22 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-29 17:11:22 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-29 17:11:22 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-29 17:11:22 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-29 17:11:22 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-29 17:11:22 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-29 17:11:22 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-29 17:11:22 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 17:11:22 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-29 17:11:22 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-29 17:11:22 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-29 17:11:22 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 17:11:22 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-29 17:11:22 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-29 17:11:22 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-29 17:11:22 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 17:11:22 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-29 17:11:22 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 17:11:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-29 17:11:22 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-29 17:11:22 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-29 17:11:22 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-29 17:11:22 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-29 17:11:22 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 17:11:22 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-29 17:11:22 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-29 17:11:22 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-29 17:11:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-29 17:11:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-29 17:11:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-29 17:11:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-29 17:11:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-29 17:11:22 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-29 17:11:22 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-29 17:11:22 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-29 17:11:22 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-29 17:11:22 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 17:11:22 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-29 17:11:22 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-29 17:11:22 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-29 17:11:22 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-29 17:11:22 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-29 17:11:22 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-29 17:11:22 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-29 17:11:22 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-29 17:11:22 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-29 17:11:22 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-29 17:11:22 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-29 17:11:22 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-29 17:11:22 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 17:11:22 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-29 17:11:22 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-29 17:11:22 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-29 17:11:22 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-29 17:11:22 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-29 17:11:22 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long)
2019-01-29 17:11:22 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long[])
2019-01-29 17:11:22 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-29 17:11:22 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 17:11:22 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-29 17:11:22 -Mapped "{[/system/staff/edit/{staffId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-29 17:11:22 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-29 17:11:22 -Mapped "{[/system/staff/selectView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.selectView()
2019-01-29 17:11:22 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-29 17:11:22 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-29 17:11:22 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-29 17:11:22 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-29 17:11:22 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 17:11:22 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-29 17:11:22 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-29 17:11:22 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-29 17:11:22 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 17:11:22 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-29 17:11:22 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-29 17:11:22 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-29 17:11:22 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-29 17:11:22 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-29 17:11:22 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-29 17:11:22 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-29 17:11:22 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-29 17:11:22 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-29 17:11:22 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-29 17:11:22 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-29 17:11:22 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-29 17:11:22 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-29 17:11:22 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-29 17:11:23 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 17:11:23 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6436a7db: startup date [Tue Jan 29 17:11:16 CST 2019]; root of context hierarchy
2019-01-29 17:11:23 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 17:11:23 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 17:11:23 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-29 17:11:23 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-29 17:11:23 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-29 17:11:24 -Registering beans for JMX exposure on startup
2019-01-29 17:11:24 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-29 17:11:24 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-29 17:11:24 -Starting beans in phase 2147483647
2019-01-29 17:11:24 -Context refreshed
2019-01-29 17:11:24 -Found 1 custom documentation plugin(s)
2019-01-29 17:11:24 -Scanning for api listing references
2019-01-29 17:11:24 -Generating unique operation named: removeUsingPOST_1
2019-01-29 17:11:24 -Generating unique operation named: editUsingGET_1
2019-01-29 17:11:24 -Generating unique operation named: listUsingGET_1
2019-01-29 17:11:24 -Generating unique operation named: updateUsingPOST_1
2019-01-29 17:11:24 -Generating unique operation named: addUsingGET_1
2019-01-29 17:11:24 -Generating unique operation named: editUsingGET_2
2019-01-29 17:11:24 -Generating unique operation named: listUsingGET_2
2019-01-29 17:11:24 -Generating unique operation named: removeUsingPOST_2
2019-01-29 17:11:24 -Generating unique operation named: removeUsingPOST_3
2019-01-29 17:11:24 -Generating unique operation named: saveUsingPOST_1
2019-01-29 17:11:24 -Generating unique operation named: updateUsingPOST_2
2019-01-29 17:11:24 -Generating unique operation named: listUsingGET_3
2019-01-29 17:11:24 -Generating unique operation named: removeUsingPOST_4
2019-01-29 17:11:24 -Generating unique operation named: welcomeUsingGET_1
2019-01-29 17:11:24 -Generating unique operation named: addUsingGET_2
2019-01-29 17:11:24 -Generating unique operation named: editUsingGET_3
2019-01-29 17:11:24 -Generating unique operation named: listUsingGET_4
2019-01-29 17:11:24 -Generating unique operation named: removeUsingPOST_5
2019-01-29 17:11:24 -Generating unique operation named: saveUsingPOST_2
2019-01-29 17:11:24 -Generating unique operation named: treeUsingGET_1
2019-01-29 17:11:24 -Generating unique operation named: updateUsingPOST_3
2019-01-29 17:11:24 -Generating unique operation named: addUsingGET_3
2019-01-29 17:11:24 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-29 17:11:24 -Generating unique operation named: editUsingGET_4
2019-01-29 17:11:24 -Generating unique operation named: listUsingGET_5
2019-01-29 17:11:24 -Generating unique operation named: saveUsingPOST_3
2019-01-29 17:11:24 -Generating unique operation named: saveUsingPOST_4
2019-01-29 17:11:24 -Generating unique operation named: updateUsingPOST_4
2019-01-29 17:11:24 -Generating unique operation named: listUsingGET_6
2019-01-29 17:11:24 -Generating unique operation named: listUsingHEAD_1
2019-01-29 17:11:24 -Generating unique operation named: listUsingPOST_1
2019-01-29 17:11:24 -Generating unique operation named: listUsingPUT_1
2019-01-29 17:11:24 -Generating unique operation named: listUsingPATCH_1
2019-01-29 17:11:24 -Generating unique operation named: listUsingDELETE_1
2019-01-29 17:11:24 -Generating unique operation named: listUsingOPTIONS_1
2019-01-29 17:11:24 -Generating unique operation named: listUsingTRACE_1
2019-01-29 17:11:24 -Generating unique operation named: addUsingGET_4
2019-01-29 17:11:24 -Generating unique operation named: editUsingGET_5
2019-01-29 17:11:25 -Generating unique operation named: listUsingGET_7
2019-01-29 17:11:25 -Generating unique operation named: removeUsingPOST_6
2019-01-29 17:11:25 -Generating unique operation named: removeUsingPOST_7
2019-01-29 17:11:25 -Generating unique operation named: saveUsingPOST_5
2019-01-29 17:11:25 -Generating unique operation named: updateUsingGET_1
2019-01-29 17:11:25 -Generating unique operation named: updateUsingHEAD_1
2019-01-29 17:11:25 -Generating unique operation named: updateUsingPOST_5
2019-01-29 17:11:25 -Generating unique operation named: updateUsingPUT_1
2019-01-29 17:11:25 -Generating unique operation named: updateUsingPATCH_1
2019-01-29 17:11:25 -Generating unique operation named: updateUsingDELETE_1
2019-01-29 17:11:25 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-29 17:11:25 -Generating unique operation named: updateUsingTRACE_1
2019-01-29 17:11:25 -Generating unique operation named: addUsingGET_5
2019-01-29 17:11:25 -Generating unique operation named: editUsingGET_6
2019-01-29 17:11:25 -Generating unique operation named: listUsingGET_8
2019-01-29 17:11:25 -Generating unique operation named: removeUsingPOST_8
2019-01-29 17:11:25 -Generating unique operation named: removeUsingPOST_9
2019-01-29 17:11:25 -Generating unique operation named: saveUsingPOST_6
2019-01-29 17:11:25 -Generating unique operation named: updateUsingGET_2
2019-01-29 17:11:25 -Generating unique operation named: updateUsingHEAD_2
2019-01-29 17:11:25 -Generating unique operation named: updateUsingPOST_6
2019-01-29 17:11:25 -Generating unique operation named: updateUsingPUT_2
2019-01-29 17:11:25 -Generating unique operation named: updateUsingPATCH_2
2019-01-29 17:11:25 -Generating unique operation named: updateUsingDELETE_2
2019-01-29 17:11:25 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-29 17:11:25 -Generating unique operation named: updateUsingTRACE_2
2019-01-29 17:11:25 -Generating unique operation named: addUsingGET_6
2019-01-29 17:11:25 -Generating unique operation named: editUsingGET_7
2019-01-29 17:11:25 -Generating unique operation named: listUsingGET_9
2019-01-29 17:11:25 -Generating unique operation named: roleUsingGET_1
2019-01-29 17:11:25 -Generating unique operation named: saveUsingPOST_7
2019-01-29 17:11:25 -Starting Quartz Scheduler now
2019-01-29 17:11:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-29 17:11:25 -Starting...
2019-01-29 17:11:25 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-29 17:11:25 -Started.
2019-01-29 17:11:25 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-29 17:11:25 -Using a shared selector for servlet write/read
2019-01-29 17:11:25 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-29 17:11:25 -Started BootdoApplication in 9.688 seconds (JVM running for 10.305)
2019-01-29 17:11:25 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-29 17:11:25 -==> Parameters: 
2019-01-29 17:11:25 -<==      Total: 1
2019-01-29 17:11:39 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-29 17:11:39 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-29 17:11:39 -FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2019-01-29 17:11:39 -Enabling session validation scheduler...
2019-01-29 17:11:39 -请求地址 : http://localhost:8080/login;JSESSIONID=df7f58f5-ecbf-4959-84c3-e778f7e30dfc
2019-01-29 17:11:39 -HTTP METHOD : GET
2019-01-29 17:11:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 17:11:39 -参数 : []
2019-01-29 17:11:39 -耗时 : 1
2019-01-29 17:11:39 -返回值 : login
2019-01-29 17:11:40 -请求地址 : http://localhost:8080/login
2019-01-29 17:11:40 -HTTP METHOD : GET
2019-01-29 17:11:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 17:11:40 -参数 : []
2019-01-29 17:11:40 -耗时 : 0
2019-01-29 17:11:40 -返回值 : login
2019-01-29 17:11:43 -请求地址 : http://localhost:8080/login
2019-01-29 17:11:43 -HTTP METHOD : POST
2019-01-29 17:11:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 17:11:43 -参数 : [admin, 123456]
2019-01-29 17:11:43 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 17:11:43 -==> Parameters: admin(String)
2019-01-29 17:11:43 -<==      Total: 1
2019-01-29 17:11:43 -耗时 : 52
2019-01-29 17:11:43 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:11:43 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-29 17:11:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:11:43 -==> Parameters: 123(String), admin(String), 登录(String), 53(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 17:11:43.628(Timestamp)
2019-01-29 17:11:43 -请求地址 : http://localhost:8080/index
2019-01-29 17:11:43 -HTTP METHOD : GET
2019-01-29 17:11:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 17:11:43 -参数 : [{}]
2019-01-29 17:11:43 -<==    Updates: 1
2019-01-29 17:11:43 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 17:11:43 -==> Parameters: 123(String)
2019-01-29 17:11:43 -<==      Total: 3
2019-01-29 17:11:43 -耗时 : 75
2019-01-29 17:11:43 -返回值 : index_v1
2019-01-29 17:11:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:11:43 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 75(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 17:11:43.807(Timestamp)
2019-01-29 17:11:43 -<==    Updates: 1
2019-01-29 17:11:45 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 17:11:45 -==> Parameters: 123(String)
2019-01-29 17:11:45 -<==      Total: 7
2019-01-29 17:11:45 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:11:45 -HTTP METHOD : GET
2019-01-29 17:11:45 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:11:45 -参数 : []
2019-01-29 17:11:45 -耗时 : 0
2019-01-29 17:11:45 -返回值 : system/user/user
2019-01-29 17:11:45 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:11:45 -HTTP METHOD : GET
2019-01-29 17:11:45 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:11:45 -参数 : [{page=1, limit=15}]
2019-01-29 17:11:45 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:11:45 -==> Parameters: 
2019-01-29 17:11:45 -<==      Total: 4
2019-01-29 17:11:45 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:11:45 -==> Parameters: 
2019-01-29 17:11:45 -<==      Total: 1
2019-01-29 17:11:45 -耗时 : 66
2019-01-29 17:11:45 -返回值 : com.bootdo.common.utils.PageUtils@3e072ef4
2019-01-29 17:11:47 -请求地址 : http://localhost:8080/sys/user/edit/e29e7cb8-40c8-4063-a291-02b5c630260d
2019-01-29 17:11:47 -HTTP METHOD : GET
2019-01-29 17:11:47 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 17:11:47 -参数 : [e29e7cb8-40c8-4063-a291-02b5c630260d, {}]
2019-01-29 17:11:47 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 17:11:47 -==> Parameters: e29e7cb8-40c8-4063-a291-02b5c630260d(String)
2019-01-29 17:11:47 -<==      Total: 1
2019-01-29 17:11:47 -耗时 : 14
2019-01-29 17:11:47 -返回值 : system/user/edit
2019-01-29 17:11:49 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 17:11:49 -HTTP METHOD : POST
2019-01-29 17:11:49 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 17:11:49 -参数 : [{username=gzl1, userId=e29e7cb8-40c8-4063-a291-02b5c630260d}]
2019-01-29 17:11:52 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-29 17:11:52 -==> Parameters: gzl1(String), e29e7cb8-40c8-4063-a291-02b5c630260d(String)
2019-01-29 17:11:52 -<==      Total: 1
2019-01-29 17:11:56 -耗时 : 7741
2019-01-29 17:11:56 -返回值 : {msg=用户名已存在！, code=500}
2019-01-29 17:12:06 -请求地址 : http://localhost:8080/sys/user/batchRemove
2019-01-29 17:12:06 -HTTP METHOD : POST
2019-01-29 17:12:06 -CLASS_METHOD : com.bootdo.system.controller.UserController.remove
2019-01-29 17:12:06 -参数 : [[Ljava.lang.String;@749cd547]
2019-01-29 17:12:06 -==>  Preparing: delete from sys_user where user_id in ( ? , ? , ? ) 
2019-01-29 17:12:06 -==> Parameters: e29e7cb8-40c8-4063-a291-02b5c630260d(String), 234(String), 182181c2-9d55-45a4-a482-895b3cb73c97(String)
2019-01-29 17:12:06 -<==    Updates: 3
2019-01-29 17:12:06 -耗时 : 91
2019-01-29 17:12:06 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:12:06 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:12:06 -HTTP METHOD : GET
2019-01-29 17:12:06 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:12:06 -参数 : [{page=1, limit=15}]
2019-01-29 17:12:06 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:12:06 -==> Parameters: 
2019-01-29 17:12:06 -<==      Total: 1
2019-01-29 17:12:06 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:12:06 -==> Parameters: 
2019-01-29 17:12:06 -<==      Total: 1
2019-01-29 17:12:06 -耗时 : 19
2019-01-29 17:12:06 -返回值 : com.bootdo.common.utils.PageUtils@1f728745
2019-01-29 17:12:07 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 17:12:07 -HTTP METHOD : GET
2019-01-29 17:12:07 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 17:12:07 -参数 : []
2019-01-29 17:12:07 -耗时 : 1
2019-01-29 17:12:07 -返回值 : system/user/add
2019-01-29 17:12:19 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 17:12:19 -HTTP METHOD : POST
2019-01-29 17:12:19 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 17:12:19 -参数 : [{username=gzl}]
2019-01-29 17:12:19 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-29 17:12:19 -==> Parameters: gzl(String), null
2019-01-29 17:12:19 -<==      Total: 0
2019-01-29 17:12:19 -耗时 : 6
2019-01-29 17:12:19 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:12:19 -请求地址 : http://localhost:8080/sys/user/save
2019-01-29 17:12:19 -HTTP METHOD : POST
2019-01-29 17:12:19 -CLASS_METHOD : com.bootdo.system.controller.UserController.save
2019-01-29 17:12:19 -参数 : [com.bootdo.system.domain.UserDO@5331d37f]
2019-01-29 17:12:19 -==>  Preparing: insert into sys_user ( `user_id`, `dept_id`, `username`, `usernikename`, `userpwd`, `userstatus`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:12:19 -==> Parameters: 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String), null, gzl(String), gzl(String), 11d1d957f5a735f324d0a3f2849c9834(String), 1(Integer), null, null, 1(Integer), null, null, null
2019-01-29 17:12:19 -<==    Updates: 1
2019-01-29 17:12:19 -耗时 : 46
2019-01-29 17:12:19 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:12:19 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:12:19 -HTTP METHOD : GET
2019-01-29 17:12:19 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:12:19 -参数 : []
2019-01-29 17:12:19 -耗时 : 1
2019-01-29 17:12:19 -返回值 : system/user/user
2019-01-29 17:12:19 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:12:19 -HTTP METHOD : GET
2019-01-29 17:12:19 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:12:19 -参数 : [{page=1, limit=15}]
2019-01-29 17:12:19 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:12:19 -==> Parameters: 
2019-01-29 17:12:19 -<==      Total: 2
2019-01-29 17:12:19 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:12:19 -==> Parameters: 
2019-01-29 17:12:19 -<==      Total: 1
2019-01-29 17:12:19 -耗时 : 15
2019-01-29 17:12:19 -返回值 : com.bootdo.common.utils.PageUtils@33d5fa4d
2019-01-29 17:12:22 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-29 17:12:24 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 17:12:24 -HTTP METHOD : GET
2019-01-29 17:12:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 17:12:24 -参数 : []
2019-01-29 17:12:24 -耗时 : 5
2019-01-29 17:12:24 -返回值 : system/user/add
2019-01-29 17:12:28 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 17:12:28 -HTTP METHOD : POST
2019-01-29 17:12:28 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 17:12:28 -参数 : [{username=gzl}]
2019-01-29 17:12:28 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-29 17:12:28 -==> Parameters: gzl(String), null
2019-01-29 17:12:28 -<==      Total: 0
2019-01-29 17:12:28 -耗时 : 20
2019-01-29 17:12:28 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:12:28 -请求地址 : http://localhost:8080/sys/user/save
2019-01-29 17:12:28 -HTTP METHOD : POST
2019-01-29 17:12:28 -CLASS_METHOD : com.bootdo.system.controller.UserController.save
2019-01-29 17:12:28 -参数 : [com.bootdo.system.domain.UserDO@e5f9b6a]
2019-01-29 17:12:28 -==>  Preparing: insert into sys_user ( `user_id`, `dept_id`, `username`, `usernikename`, `userpwd`, `userstatus`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:12:28 -==> Parameters: eb7435e8-1816-4bc3-a673-2d68c41285f5(String), null, gzl(String), (String), 11d1d957f5a735f324d0a3f2849c9834(String), 1(Integer), null, null, 1(Integer), null, null, null
2019-01-29 17:12:28 -<==    Updates: 1
2019-01-29 17:12:28 -耗时 : 59
2019-01-29 17:12:28 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:12:28 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:12:28 -HTTP METHOD : GET
2019-01-29 17:12:28 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:12:28 -参数 : []
2019-01-29 17:12:28 -耗时 : 1
2019-01-29 17:12:28 -返回值 : system/user/user
2019-01-29 17:12:28 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:12:28 -HTTP METHOD : GET
2019-01-29 17:12:28 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:12:28 -参数 : [{page=1, limit=15}]
2019-01-29 17:12:28 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:12:28 -==> Parameters: 
2019-01-29 17:12:28 -<==      Total: 3
2019-01-29 17:12:28 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:12:28 -==> Parameters: 
2019-01-29 17:12:28 -<==      Total: 1
2019-01-29 17:12:28 -耗时 : 17
2019-01-29 17:12:28 -返回值 : com.bootdo.common.utils.PageUtils@19aed4b6
2019-01-29 17:12:42 -请求地址 : http://localhost:8080/sys/user/remove
2019-01-29 17:12:42 -HTTP METHOD : POST
2019-01-29 17:12:42 -CLASS_METHOD : com.bootdo.system.controller.UserController.remove
2019-01-29 17:12:42 -参数 : [eb7435e8-1816-4bc3-a673-2d68c41285f5]
2019-01-29 17:12:42 -==>  Preparing: delete from sys_user where user_id = ? 
2019-01-29 17:12:42 -==> Parameters: eb7435e8-1816-4bc3-a673-2d68c41285f5(String)
2019-01-29 17:12:42 -<==    Updates: 1
2019-01-29 17:12:42 -耗时 : 39
2019-01-29 17:12:42 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:12:42 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:12:42 -HTTP METHOD : GET
2019-01-29 17:12:42 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:12:42 -参数 : [{page=1, limit=15}]
2019-01-29 17:12:42 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:12:42 -==> Parameters: 
2019-01-29 17:12:42 -<==      Total: 2
2019-01-29 17:12:42 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:12:42 -==> Parameters: 
2019-01-29 17:12:42 -<==      Total: 1
2019-01-29 17:12:42 -耗时 : 17
2019-01-29 17:12:42 -返回值 : com.bootdo.common.utils.PageUtils@bd798e5
2019-01-29 17:12:43 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 17:12:43 -HTTP METHOD : GET
2019-01-29 17:12:43 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 17:12:43 -参数 : []
2019-01-29 17:12:43 -耗时 : 1
2019-01-29 17:12:43 -返回值 : system/user/add
2019-01-29 17:12:53 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 17:12:53 -HTTP METHOD : POST
2019-01-29 17:12:53 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 17:12:53 -参数 : [{username=gzl}]
2019-01-29 17:13:06 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-29 17:13:06 -==> Parameters: gzl(String), null
2019-01-29 17:13:06 -<==      Total: 0
2019-01-29 17:13:06 -耗时 : 12911
2019-01-29 17:13:06 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:13:06 -请求地址 : http://localhost:8080/sys/user/save
2019-01-29 17:13:06 -HTTP METHOD : POST
2019-01-29 17:13:06 -CLASS_METHOD : com.bootdo.system.controller.UserController.save
2019-01-29 17:13:06 -参数 : [com.bootdo.system.domain.UserDO@34131566]
2019-01-29 17:13:06 -==>  Preparing: insert into sys_user ( `user_id`, `dept_id`, `username`, `usernikename`, `userpwd`, `userstatus`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:13:06 -==> Parameters: 359636b3-aafd-4bd9-ad2b-6afc3646a8e7(String), null, gzl(String), (String), 11d1d957f5a735f324d0a3f2849c9834(String), 1(Integer), null, null, 1(Integer), null, null, null
2019-01-29 17:13:06 -<==    Updates: 1
2019-01-29 17:13:06 -耗时 : 72
2019-01-29 17:13:06 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:13:06 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:13:06 -HTTP METHOD : GET
2019-01-29 17:13:06 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:13:06 -参数 : []
2019-01-29 17:13:06 -耗时 : 0
2019-01-29 17:13:06 -返回值 : system/user/user
2019-01-29 17:13:06 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:13:06 -HTTP METHOD : GET
2019-01-29 17:13:06 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:13:06 -参数 : [{page=1, limit=15}]
2019-01-29 17:13:06 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:13:06 -==> Parameters: 
2019-01-29 17:13:06 -<==      Total: 3
2019-01-29 17:13:06 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:13:06 -==> Parameters: 
2019-01-29 17:13:06 -<==      Total: 1
2019-01-29 17:13:06 -耗时 : 19
2019-01-29 17:13:06 -返回值 : com.bootdo.common.utils.PageUtils@475bdba7
2019-01-29 17:13:12 -请求地址 : http://localhost:8080/sys/user/remove
2019-01-29 17:13:12 -HTTP METHOD : POST
2019-01-29 17:13:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.remove
2019-01-29 17:13:12 -参数 : [359636b3-aafd-4bd9-ad2b-6afc3646a8e7]
2019-01-29 17:13:12 -==>  Preparing: delete from sys_user where user_id = ? 
2019-01-29 17:13:12 -==> Parameters: 359636b3-aafd-4bd9-ad2b-6afc3646a8e7(String)
2019-01-29 17:13:12 -<==    Updates: 1
2019-01-29 17:13:12 -耗时 : 44
2019-01-29 17:13:12 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:13:12 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:13:12 -HTTP METHOD : GET
2019-01-29 17:13:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:13:12 -参数 : [{page=1, limit=15}]
2019-01-29 17:13:12 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:13:12 -==> Parameters: 
2019-01-29 17:13:12 -<==      Total: 2
2019-01-29 17:13:12 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:13:12 -==> Parameters: 
2019-01-29 17:13:12 -<==      Total: 1
2019-01-29 17:13:12 -耗时 : 21
2019-01-29 17:13:12 -返回值 : com.bootdo.common.utils.PageUtils@56990b87
2019-01-29 17:14:01 -请求地址 : http://localhost:8080/index
2019-01-29 17:14:01 -HTTP METHOD : GET
2019-01-29 17:14:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 17:14:01 -参数 : [{}]
2019-01-29 17:14:01 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 17:14:01 -==> Parameters: 123(String)
2019-01-29 17:14:01 -<==      Total: 3
2019-01-29 17:14:01 -耗时 : 23
2019-01-29 17:14:01 -返回值 : index_v1
2019-01-29 17:14:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:14:01 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 17:14:01.75(Timestamp)
2019-01-29 17:14:01 -<==    Updates: 1
2019-01-29 17:14:04 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 17:14:04 -==> Parameters: 123(String)
2019-01-29 17:14:04 -<==      Total: 7
2019-01-29 17:14:04 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:14:04 -HTTP METHOD : GET
2019-01-29 17:14:04 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:14:04 -参数 : []
2019-01-29 17:14:04 -耗时 : 0
2019-01-29 17:14:04 -返回值 : system/user/user
2019-01-29 17:14:04 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:14:04 -HTTP METHOD : GET
2019-01-29 17:14:04 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:14:04 -参数 : [{page=1, limit=15}]
2019-01-29 17:14:04 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:14:04 -==> Parameters: 
2019-01-29 17:14:04 -<==      Total: 2
2019-01-29 17:14:04 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:14:04 -==> Parameters: 
2019-01-29 17:14:04 -<==      Total: 1
2019-01-29 17:14:04 -耗时 : 15
2019-01-29 17:14:04 -返回值 : com.bootdo.common.utils.PageUtils@8083b7d
2019-01-29 17:14:17 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 17:14:17 -HTTP METHOD : GET
2019-01-29 17:14:17 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 17:14:17 -参数 : []
2019-01-29 17:14:17 -耗时 : 1
2019-01-29 17:14:17 -返回值 : system/user/add
2019-01-29 17:15:22 -请求地址 : http://localhost:8080/login;JSESSIONID=697657d6-e06d-4b48-839f-f3b74a89ad6c
2019-01-29 17:15:22 -HTTP METHOD : GET
2019-01-29 17:15:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 17:15:22 -参数 : []
2019-01-29 17:15:22 -耗时 : 0
2019-01-29 17:15:22 -返回值 : login
2019-01-29 17:15:22 -请求地址 : http://localhost:8080/login
2019-01-29 17:15:22 -HTTP METHOD : GET
2019-01-29 17:15:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 17:15:22 -参数 : []
2019-01-29 17:15:22 -耗时 : 1
2019-01-29 17:15:22 -返回值 : login
2019-01-29 17:15:25 -请求地址 : http://localhost:8080/login
2019-01-29 17:15:25 -HTTP METHOD : POST
2019-01-29 17:15:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 17:15:25 -参数 : [admin, 123456]
2019-01-29 17:15:25 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 17:15:25 -==> Parameters: admin(String)
2019-01-29 17:15:25 -<==      Total: 1
2019-01-29 17:15:25 -耗时 : 12
2019-01-29 17:15:25 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:15:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:15:25 -==> Parameters: 123(String), admin(String), 登录(String), 12(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 17:15:25.928(Timestamp)
2019-01-29 17:15:25 -请求地址 : http://localhost:8080/index
2019-01-29 17:15:25 -HTTP METHOD : GET
2019-01-29 17:15:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 17:15:25 -参数 : [{}]
2019-01-29 17:15:25 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 17:15:25 -==> Parameters: 123(String)
2019-01-29 17:15:25 -<==    Updates: 1
2019-01-29 17:15:25 -<==      Total: 3
2019-01-29 17:15:25 -耗时 : 40
2019-01-29 17:15:25 -返回值 : index_v1
2019-01-29 17:15:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:15:25 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 40(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 17:15:25.993(Timestamp)
2019-01-29 17:15:26 -<==    Updates: 1
2019-01-29 17:15:27 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 17:15:27 -==> Parameters: 123(String)
2019-01-29 17:15:27 -<==      Total: 7
2019-01-29 17:15:27 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:15:27 -HTTP METHOD : GET
2019-01-29 17:15:27 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:15:27 -参数 : []
2019-01-29 17:15:27 -耗时 : 0
2019-01-29 17:15:27 -返回值 : system/user/user
2019-01-29 17:15:28 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:15:28 -HTTP METHOD : GET
2019-01-29 17:15:28 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:15:28 -参数 : [{page=1, limit=15}]
2019-01-29 17:15:28 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:15:28 -==> Parameters: 
2019-01-29 17:15:28 -<==      Total: 2
2019-01-29 17:15:28 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:15:28 -==> Parameters: 
2019-01-29 17:15:28 -<==      Total: 1
2019-01-29 17:15:28 -耗时 : 21
2019-01-29 17:15:28 -返回值 : com.bootdo.common.utils.PageUtils@31d9f5ca
2019-01-29 17:15:29 -请求地址 : http://localhost:8080/sys/user/add
2019-01-29 17:15:29 -HTTP METHOD : GET
2019-01-29 17:15:29 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-29 17:15:29 -参数 : []
2019-01-29 17:15:29 -耗时 : 1
2019-01-29 17:15:29 -返回值 : system/user/add
2019-01-29 17:15:35 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 17:15:35 -HTTP METHOD : POST
2019-01-29 17:15:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 17:15:35 -参数 : [{username=gzl, userId=}]
2019-01-29 17:15:43 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-29 17:15:43 -==> Parameters: gzl(String), (String)
2019-01-29 17:15:43 -<==      Total: 1
2019-01-29 17:15:49 -耗时 : 13295
2019-01-29 17:15:49 -返回值 : {msg=用户名已存在！, code=500}
2019-01-29 17:15:56 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 17:15:56 -HTTP METHOD : POST
2019-01-29 17:15:56 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 17:15:56 -参数 : [{username=gzl, userId=}]
2019-01-29 17:15:56 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-29 17:15:56 -==> Parameters: gzl(String), (String)
2019-01-29 17:15:56 -<==      Total: 1
2019-01-29 17:15:56 -耗时 : 24
2019-01-29 17:15:56 -返回值 : {msg=用户名已存在！, code=500}
2019-01-29 17:16:02 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 17:16:02 -HTTP METHOD : POST
2019-01-29 17:16:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 17:16:02 -参数 : [{username=gzl1, userId=}]
2019-01-29 17:16:02 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-29 17:16:02 -==> Parameters: gzl1(String), (String)
2019-01-29 17:16:02 -<==      Total: 0
2019-01-29 17:16:02 -耗时 : 18
2019-01-29 17:16:02 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:16:02 -请求地址 : http://localhost:8080/sys/user/save
2019-01-29 17:16:02 -HTTP METHOD : POST
2019-01-29 17:16:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.save
2019-01-29 17:16:02 -参数 : [com.bootdo.system.domain.UserDO@3620cd7b]
2019-01-29 17:16:02 -==>  Preparing: insert into sys_user ( `user_id`, `dept_id`, `username`, `usernikename`, `userpwd`, `userstatus`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:16:02 -==> Parameters: 54fb2e44-183d-4700-b4a3-c30072f474a3(String), null, gzl1(String), (String), 10bbf82f675b8ecc5e392dadda01d1eb(String), 1(Integer), null, null, 1(Integer), null, null, null
2019-01-29 17:16:02 -<==    Updates: 1
2019-01-29 17:16:02 -耗时 : 74
2019-01-29 17:16:02 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:16:02 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:16:02 -HTTP METHOD : GET
2019-01-29 17:16:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:16:02 -参数 : []
2019-01-29 17:16:02 -耗时 : 0
2019-01-29 17:16:02 -返回值 : system/user/user
2019-01-29 17:16:02 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:16:02 -HTTP METHOD : GET
2019-01-29 17:16:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:16:02 -参数 : [{page=1, limit=15}]
2019-01-29 17:16:02 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:16:02 -==> Parameters: 
2019-01-29 17:16:02 -<==      Total: 3
2019-01-29 17:16:02 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:16:02 -==> Parameters: 
2019-01-29 17:16:02 -<==      Total: 1
2019-01-29 17:16:02 -耗时 : 27
2019-01-29 17:16:02 -返回值 : com.bootdo.common.utils.PageUtils@3f2a5315
2019-01-29 17:16:05 -请求地址 : http://localhost:8080/sys/user/edit/6ac74b9e-7d0f-4642-84fd-79fde67a0178
2019-01-29 17:16:05 -HTTP METHOD : GET
2019-01-29 17:16:05 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 17:16:05 -参数 : [6ac74b9e-7d0f-4642-84fd-79fde67a0178, {}]
2019-01-29 17:16:05 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 17:16:05 -==> Parameters: 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String)
2019-01-29 17:16:05 -<==      Total: 1
2019-01-29 17:16:05 -耗时 : 12
2019-01-29 17:16:05 -返回值 : system/user/edit
2019-01-29 17:16:09 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 17:16:09 -HTTP METHOD : POST
2019-01-29 17:16:09 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 17:16:09 -参数 : [{username=gzl1, userId=6ac74b9e-7d0f-4642-84fd-79fde67a0178}]
2019-01-29 17:16:09 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-29 17:16:09 -==> Parameters: gzl1(String), 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String)
2019-01-29 17:16:09 -<==      Total: 1
2019-01-29 17:16:09 -耗时 : 15
2019-01-29 17:16:09 -返回值 : {msg=用户名已存在！, code=500}
2019-01-29 17:16:13 -请求地址 : http://localhost:8080/sys/user/edit/6ac74b9e-7d0f-4642-84fd-79fde67a0178
2019-01-29 17:16:13 -HTTP METHOD : GET
2019-01-29 17:16:13 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 17:16:13 -参数 : [6ac74b9e-7d0f-4642-84fd-79fde67a0178, {}]
2019-01-29 17:16:13 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 17:16:13 -==> Parameters: 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String)
2019-01-29 17:16:13 -<==      Total: 1
2019-01-29 17:16:13 -耗时 : 19
2019-01-29 17:16:13 -返回值 : system/user/edit
2019-01-29 17:17:10 -请求地址 : http://localhost:8080/login;JSESSIONID=f0c009d7-0b59-4f46-be5e-fd70d7f84fff
2019-01-29 17:17:10 -HTTP METHOD : GET
2019-01-29 17:17:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 17:17:10 -参数 : []
2019-01-29 17:17:10 -耗时 : 0
2019-01-29 17:17:10 -返回值 : login
2019-01-29 17:17:11 -请求地址 : http://localhost:8080/login
2019-01-29 17:17:11 -HTTP METHOD : GET
2019-01-29 17:17:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 17:17:11 -参数 : []
2019-01-29 17:17:11 -耗时 : 0
2019-01-29 17:17:11 -返回值 : login
2019-01-29 17:17:14 -请求地址 : http://localhost:8080/login
2019-01-29 17:17:14 -HTTP METHOD : POST
2019-01-29 17:17:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 17:17:14 -参数 : [admin, 123456]
2019-01-29 17:17:14 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 17:17:14 -==> Parameters: admin(String)
2019-01-29 17:17:14 -<==      Total: 1
2019-01-29 17:17:14 -耗时 : 10
2019-01-29 17:17:14 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:17:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:17:14 -==> Parameters: 123(String), admin(String), 登录(String), 10(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 17:17:14.524(Timestamp)
2019-01-29 17:17:14 -请求地址 : http://localhost:8080/index
2019-01-29 17:17:14 -HTTP METHOD : GET
2019-01-29 17:17:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 17:17:14 -参数 : [{}]
2019-01-29 17:17:14 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 17:17:14 -==> Parameters: 123(String)
2019-01-29 17:17:14 -<==      Total: 3
2019-01-29 17:17:14 -<==    Updates: 1
2019-01-29 17:17:14 -耗时 : 29
2019-01-29 17:17:14 -返回值 : index_v1
2019-01-29 17:17:14 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:17:14 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 17:17:14.573(Timestamp)
2019-01-29 17:17:14 -<==    Updates: 1
2019-01-29 17:17:16 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 17:17:16 -==> Parameters: 123(String)
2019-01-29 17:17:16 -<==      Total: 7
2019-01-29 17:17:16 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:17:16 -HTTP METHOD : GET
2019-01-29 17:17:16 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:17:16 -参数 : []
2019-01-29 17:17:16 -耗时 : 1
2019-01-29 17:17:16 -返回值 : system/user/user
2019-01-29 17:17:16 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:17:16 -HTTP METHOD : GET
2019-01-29 17:17:16 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:17:16 -参数 : [{page=1, limit=15}]
2019-01-29 17:17:16 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:17:16 -==> Parameters: 
2019-01-29 17:17:16 -<==      Total: 3
2019-01-29 17:17:16 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:17:16 -==> Parameters: 
2019-01-29 17:17:16 -<==      Total: 1
2019-01-29 17:17:16 -耗时 : 15
2019-01-29 17:17:16 -返回值 : com.bootdo.common.utils.PageUtils@4ace182d
2019-01-29 17:17:19 -请求地址 : http://localhost:8080/sys/user/edit/6ac74b9e-7d0f-4642-84fd-79fde67a0178
2019-01-29 17:17:19 -HTTP METHOD : GET
2019-01-29 17:17:19 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 17:17:19 -参数 : [6ac74b9e-7d0f-4642-84fd-79fde67a0178, {}]
2019-01-29 17:17:19 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 17:17:19 -==> Parameters: 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String)
2019-01-29 17:17:19 -<==      Total: 1
2019-01-29 17:17:19 -耗时 : 10
2019-01-29 17:17:19 -返回值 : system/user/edit
2019-01-29 17:20:50 -请求地址 : http://localhost:8080/login;JSESSIONID=ffe58c6b-4471-4dbb-aea6-917c160d896a
2019-01-29 17:20:50 -HTTP METHOD : GET
2019-01-29 17:20:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 17:20:50 -参数 : []
2019-01-29 17:20:50 -耗时 : 1
2019-01-29 17:20:50 -返回值 : login
2019-01-29 17:20:51 -请求地址 : http://localhost:8080/login
2019-01-29 17:20:51 -HTTP METHOD : GET
2019-01-29 17:20:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 17:20:51 -参数 : []
2019-01-29 17:20:51 -耗时 : 12
2019-01-29 17:20:51 -返回值 : login
2019-01-29 17:20:54 -请求地址 : http://localhost:8080/login
2019-01-29 17:20:54 -HTTP METHOD : POST
2019-01-29 17:20:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 17:20:54 -参数 : [admin, 123456]
2019-01-29 17:20:54 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 17:20:54 -==> Parameters: admin(String)
2019-01-29 17:20:54 -<==      Total: 1
2019-01-29 17:20:54 -耗时 : 7
2019-01-29 17:20:54 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:20:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:20:54 -==> Parameters: 123(String), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 17:20:54.539(Timestamp)
2019-01-29 17:20:54 -请求地址 : http://localhost:8080/index
2019-01-29 17:20:54 -HTTP METHOD : GET
2019-01-29 17:20:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 17:20:54 -参数 : [{}]
2019-01-29 17:20:54 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 17:20:54 -==> Parameters: 123(String)
2019-01-29 17:20:54 -<==      Total: 3
2019-01-29 17:20:54 -耗时 : 28
2019-01-29 17:20:54 -返回值 : index_v1
2019-01-29 17:20:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:20:54 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 17:20:54.597(Timestamp)
2019-01-29 17:20:54 -<==    Updates: 1
2019-01-29 17:20:54 -<==    Updates: 1
2019-01-29 17:20:56 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 17:20:56 -==> Parameters: 123(String)
2019-01-29 17:20:56 -<==      Total: 7
2019-01-29 17:20:56 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:20:56 -HTTP METHOD : GET
2019-01-29 17:20:56 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:20:56 -参数 : []
2019-01-29 17:20:56 -耗时 : 0
2019-01-29 17:20:56 -返回值 : system/user/user
2019-01-29 17:20:56 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:20:56 -HTTP METHOD : GET
2019-01-29 17:20:56 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:20:56 -参数 : [{page=1, limit=15}]
2019-01-29 17:20:56 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:20:56 -==> Parameters: 
2019-01-29 17:20:56 -<==      Total: 3
2019-01-29 17:20:56 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:20:56 -==> Parameters: 
2019-01-29 17:20:56 -<==      Total: 1
2019-01-29 17:20:56 -耗时 : 22
2019-01-29 17:20:56 -返回值 : com.bootdo.common.utils.PageUtils@19ecfb21
2019-01-29 17:20:58 -请求地址 : http://localhost:8080/sys/user/edit/6ac74b9e-7d0f-4642-84fd-79fde67a0178
2019-01-29 17:20:58 -HTTP METHOD : GET
2019-01-29 17:20:58 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 17:20:58 -参数 : [6ac74b9e-7d0f-4642-84fd-79fde67a0178, {}]
2019-01-29 17:20:58 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 17:20:58 -==> Parameters: 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String)
2019-01-29 17:20:58 -<==      Total: 1
2019-01-29 17:20:58 -耗时 : 18
2019-01-29 17:20:58 -返回值 : system/user/edit
2019-01-29 17:21:02 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-29 17:21:02 -HTTP METHOD : POST
2019-01-29 17:21:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-29 17:21:02 -参数 : [{username=gzl, userId=6ac74b9e-7d0f-4642-84fd-79fde67a0178}]
2019-01-29 17:21:02 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-29 17:21:02 -==> Parameters: gzl(String), 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String)
2019-01-29 17:21:02 -<==      Total: 0
2019-01-29 17:21:02 -耗时 : 12
2019-01-29 17:21:02 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:21:02 -请求地址 : http://localhost:8080/sys/user/update
2019-01-29 17:21:02 -HTTP METHOD : POST
2019-01-29 17:21:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.update
2019-01-29 17:21:02 -参数 : [com.bootdo.system.domain.UserDO@7d96cb5d]
2019-01-29 17:21:02 -==>  Preparing: update sys_user SET `username` = ?, `usernikename` = ?, `userstatus` = ?, `deleteflag` = ? where user_id = ? 
2019-01-29 17:21:02 -==> Parameters: gzl(String), gzl(String), 0(Integer), 1(Integer), 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String)
2019-01-29 17:21:02 -<==    Updates: 1
2019-01-29 17:21:02 -耗时 : 44
2019-01-29 17:21:02 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:21:02 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:21:02 -HTTP METHOD : GET
2019-01-29 17:21:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:21:02 -参数 : []
2019-01-29 17:21:02 -耗时 : 0
2019-01-29 17:21:02 -返回值 : system/user/user
2019-01-29 17:21:03 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:21:03 -HTTP METHOD : GET
2019-01-29 17:21:03 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:21:03 -参数 : [{page=1, limit=15}]
2019-01-29 17:21:03 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:21:03 -==> Parameters: 
2019-01-29 17:21:03 -<==      Total: 3
2019-01-29 17:21:03 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:21:03 -==> Parameters: 
2019-01-29 17:21:03 -<==      Total: 1
2019-01-29 17:21:03 -耗时 : 36
2019-01-29 17:21:03 -返回值 : com.bootdo.common.utils.PageUtils@45d82a18
2019-01-29 17:21:09 -请求地址 : http://localhost:8080/sys/user/edit/6ac74b9e-7d0f-4642-84fd-79fde67a0178
2019-01-29 17:21:09 -HTTP METHOD : GET
2019-01-29 17:21:09 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 17:21:09 -参数 : [6ac74b9e-7d0f-4642-84fd-79fde67a0178, {}]
2019-01-29 17:21:09 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 17:21:09 -==> Parameters: 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String)
2019-01-29 17:21:09 -<==      Total: 1
2019-01-29 17:21:09 -耗时 : 12
2019-01-29 17:21:09 -返回值 : system/user/edit
2019-01-29 17:21:12 -请求地址 : http://localhost:8080/sys/user/edit/54fb2e44-183d-4700-b4a3-c30072f474a3
2019-01-29 17:21:12 -HTTP METHOD : GET
2019-01-29 17:21:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 17:21:12 -参数 : [54fb2e44-183d-4700-b4a3-c30072f474a3, {}]
2019-01-29 17:21:12 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 17:21:12 -==> Parameters: 54fb2e44-183d-4700-b4a3-c30072f474a3(String)
2019-01-29 17:21:12 -<==      Total: 1
2019-01-29 17:21:12 -耗时 : 13
2019-01-29 17:21:12 -返回值 : system/user/edit
2019-01-29 17:21:19 -请求地址 : http://localhost:8080/sys/user/edit/123
2019-01-29 17:21:19 -HTTP METHOD : GET
2019-01-29 17:21:19 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 17:21:19 -参数 : [123, {}]
2019-01-29 17:21:19 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 17:21:19 -==> Parameters: 123(String)
2019-01-29 17:21:19 -<==      Total: 1
2019-01-29 17:21:19 -耗时 : 17
2019-01-29 17:21:19 -返回值 : system/user/edit
2019-01-29 17:21:22 -请求地址 : http://localhost:8080/sys/user/edit/6ac74b9e-7d0f-4642-84fd-79fde67a0178
2019-01-29 17:21:22 -HTTP METHOD : GET
2019-01-29 17:21:22 -CLASS_METHOD : com.bootdo.system.controller.UserController.edit
2019-01-29 17:21:22 -参数 : [6ac74b9e-7d0f-4642-84fd-79fde67a0178, {}]
2019-01-29 17:21:22 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-29 17:21:22 -==> Parameters: 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String)
2019-01-29 17:21:22 -<==      Total: 1
2019-01-29 17:21:22 -耗时 : 17
2019-01-29 17:21:22 -返回值 : system/user/edit
2019-01-29 17:21:52 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:21:52 -HTTP METHOD : GET
2019-01-29 17:21:52 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:21:52 -参数 : []
2019-01-29 17:21:52 -耗时 : 0
2019-01-29 17:21:52 -返回值 : system/user/user
2019-01-29 17:21:52 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:21:52 -HTTP METHOD : GET
2019-01-29 17:21:52 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:21:52 -参数 : [{page=1, limit=15}]
2019-01-29 17:21:52 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:21:52 -==> Parameters: 
2019-01-29 17:21:52 -<==      Total: 3
2019-01-29 17:21:52 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:21:52 -==> Parameters: 
2019-01-29 17:21:52 -<==      Total: 1
2019-01-29 17:21:52 -耗时 : 23
2019-01-29 17:21:52 -返回值 : com.bootdo.common.utils.PageUtils@4671a055
2019-01-29 17:26:54 -请求地址 : http://localhost:8080/login;JSESSIONID=720bd407-2a0e-459d-87d1-454f89288ad8
2019-01-29 17:26:54 -HTTP METHOD : GET
2019-01-29 17:26:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 17:26:54 -参数 : []
2019-01-29 17:26:54 -耗时 : 0
2019-01-29 17:26:54 -返回值 : login
2019-01-29 17:26:55 -请求地址 : http://localhost:8080/login
2019-01-29 17:26:55 -HTTP METHOD : GET
2019-01-29 17:26:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-29 17:26:55 -参数 : []
2019-01-29 17:26:55 -耗时 : 0
2019-01-29 17:26:55 -返回值 : login
2019-01-29 17:26:57 -请求地址 : http://localhost:8080/login
2019-01-29 17:26:57 -HTTP METHOD : POST
2019-01-29 17:26:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-29 17:26:57 -参数 : [admin, 123456]
2019-01-29 17:26:57 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-29 17:26:57 -==> Parameters: admin(String)
2019-01-29 17:26:57 -<==      Total: 1
2019-01-29 17:26:57 -耗时 : 8
2019-01-29 17:26:57 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:26:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:26:57 -==> Parameters: 123(String), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-29 17:26:57.802(Timestamp)
2019-01-29 17:26:57 -请求地址 : http://localhost:8080/index
2019-01-29 17:26:57 -HTTP METHOD : GET
2019-01-29 17:26:57 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 17:26:57 -参数 : [{}]
2019-01-29 17:26:57 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 17:26:57 -==> Parameters: 123(String)
2019-01-29 17:26:57 -<==      Total: 3
2019-01-29 17:26:57 -<==    Updates: 1
2019-01-29 17:26:57 -耗时 : 30
2019-01-29 17:26:57 -返回值 : index_v1
2019-01-29 17:26:57 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:26:57 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 17:26:57.857(Timestamp)
2019-01-29 17:26:57 -<==    Updates: 1
2019-01-29 17:26:59 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-29 17:26:59 -==> Parameters: 123(String)
2019-01-29 17:26:59 -<==      Total: 7
2019-01-29 17:26:59 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:26:59 -HTTP METHOD : GET
2019-01-29 17:26:59 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:26:59 -参数 : []
2019-01-29 17:26:59 -耗时 : 0
2019-01-29 17:26:59 -返回值 : system/user/user
2019-01-29 17:26:59 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:26:59 -HTTP METHOD : GET
2019-01-29 17:26:59 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:26:59 -参数 : [{page=1, limit=15}]
2019-01-29 17:26:59 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:26:59 -==> Parameters: 
2019-01-29 17:26:59 -<==      Total: 3
2019-01-29 17:26:59 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:26:59 -==> Parameters: 
2019-01-29 17:26:59 -<==      Total: 1
2019-01-29 17:26:59 -耗时 : 20
2019-01-29 17:26:59 -返回值 : com.bootdo.common.utils.PageUtils@32889f69
2019-01-29 17:27:20 -请求地址 : http://localhost:8080/index
2019-01-29 17:27:20 -HTTP METHOD : GET
2019-01-29 17:27:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 17:27:20 -参数 : [{}]
2019-01-29 17:27:20 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 17:27:20 -==> Parameters: 123(String)
2019-01-29 17:27:20 -<==      Total: 3
2019-01-29 17:27:20 -耗时 : 22
2019-01-29 17:27:20 -返回值 : index_v1
2019-01-29 17:27:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:27:20 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 17:27:20.742(Timestamp)
2019-01-29 17:27:20 -<==    Updates: 1
2019-01-29 17:27:23 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:27:23 -HTTP METHOD : GET
2019-01-29 17:27:23 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:27:23 -参数 : []
2019-01-29 17:27:23 -耗时 : 1
2019-01-29 17:27:23 -返回值 : system/user/user
2019-01-29 17:27:23 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:27:23 -HTTP METHOD : GET
2019-01-29 17:27:23 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:27:23 -参数 : [{page=1, limit=15}]
2019-01-29 17:27:23 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:27:23 -==> Parameters: 
2019-01-29 17:27:23 -<==      Total: 3
2019-01-29 17:27:23 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:27:23 -==> Parameters: 
2019-01-29 17:27:23 -<==      Total: 1
2019-01-29 17:27:23 -耗时 : 19
2019-01-29 17:27:23 -返回值 : com.bootdo.common.utils.PageUtils@491c2179
2019-01-29 17:28:20 -请求地址 : http://localhost:8080/index
2019-01-29 17:28:20 -HTTP METHOD : GET
2019-01-29 17:28:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-29 17:28:20 -参数 : [{}]
2019-01-29 17:28:20 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-29 17:28:20 -==> Parameters: 123(String)
2019-01-29 17:28:20 -<==      Total: 3
2019-01-29 17:28:20 -耗时 : 22
2019-01-29 17:28:20 -返回值 : index_v1
2019-01-29 17:28:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-29 17:28:20 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-29 17:28:20.738(Timestamp)
2019-01-29 17:28:20 -<==    Updates: 1
2019-01-29 17:28:22 -请求地址 : http://localhost:8080/sys/user/
2019-01-29 17:28:22 -HTTP METHOD : GET
2019-01-29 17:28:22 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-29 17:28:22 -参数 : []
2019-01-29 17:28:22 -耗时 : 0
2019-01-29 17:28:22 -返回值 : system/user/user
2019-01-29 17:28:23 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:28:23 -HTTP METHOD : GET
2019-01-29 17:28:23 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:28:23 -参数 : [{page=1, limit=15}]
2019-01-29 17:28:23 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:28:23 -==> Parameters: 
2019-01-29 17:28:23 -<==      Total: 3
2019-01-29 17:28:23 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:28:23 -==> Parameters: 
2019-01-29 17:28:23 -<==      Total: 1
2019-01-29 17:28:23 -耗时 : 14
2019-01-29 17:28:23 -返回值 : com.bootdo.common.utils.PageUtils@53f04642
2019-01-29 17:28:26 -请求地址 : http://localhost:8080/sys/user/update
2019-01-29 17:28:26 -HTTP METHOD : POST
2019-01-29 17:28:26 -CLASS_METHOD : com.bootdo.system.controller.UserController.update
2019-01-29 17:28:26 -参数 : [com.bootdo.system.domain.UserDO@5f87414c]
2019-01-29 17:28:26 -==>  Preparing: update sys_user SET `userstatus` = ? where user_id = ? 
2019-01-29 17:28:26 -==> Parameters: 1(Integer), 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String)
2019-01-29 17:28:26 -<==    Updates: 1
2019-01-29 17:28:26 -耗时 : 42
2019-01-29 17:28:26 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:28:26 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:28:26 -HTTP METHOD : GET
2019-01-29 17:28:26 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:28:26 -参数 : [{page=1, limit=15}]
2019-01-29 17:28:26 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:28:26 -==> Parameters: 
2019-01-29 17:28:26 -<==      Total: 3
2019-01-29 17:28:26 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:28:26 -==> Parameters: 
2019-01-29 17:28:26 -<==      Total: 1
2019-01-29 17:28:26 -耗时 : 19
2019-01-29 17:28:26 -返回值 : com.bootdo.common.utils.PageUtils@170eb115
2019-01-29 17:28:31 -请求地址 : http://localhost:8080/sys/user/update
2019-01-29 17:28:31 -HTTP METHOD : POST
2019-01-29 17:28:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.update
2019-01-29 17:28:31 -参数 : [com.bootdo.system.domain.UserDO@5820f635]
2019-01-29 17:28:31 -==>  Preparing: update sys_user SET `userstatus` = ? where user_id = ? 
2019-01-29 17:28:31 -==> Parameters: 0(Integer), 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String)
2019-01-29 17:28:31 -<==    Updates: 1
2019-01-29 17:28:31 -耗时 : 43
2019-01-29 17:28:31 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:28:31 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:28:31 -HTTP METHOD : GET
2019-01-29 17:28:31 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:28:31 -参数 : [{page=1, limit=15}]
2019-01-29 17:28:31 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:28:31 -==> Parameters: 
2019-01-29 17:28:31 -<==      Total: 3
2019-01-29 17:28:31 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:28:31 -==> Parameters: 
2019-01-29 17:28:31 -<==      Total: 1
2019-01-29 17:28:31 -耗时 : 16
2019-01-29 17:28:31 -返回值 : com.bootdo.common.utils.PageUtils@33344b28
2019-01-29 17:28:35 -请求地址 : http://localhost:8080/sys/user/update
2019-01-29 17:28:35 -HTTP METHOD : POST
2019-01-29 17:28:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.update
2019-01-29 17:28:35 -参数 : [com.bootdo.system.domain.UserDO@746d847f]
2019-01-29 17:28:35 -==>  Preparing: update sys_user SET `userstatus` = ? where user_id = ? 
2019-01-29 17:28:35 -==> Parameters: 1(Integer), 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String)
2019-01-29 17:28:35 -<==    Updates: 1
2019-01-29 17:28:35 -耗时 : 45
2019-01-29 17:28:35 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:28:35 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:28:35 -HTTP METHOD : GET
2019-01-29 17:28:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:28:35 -参数 : [{page=1, limit=15}]
2019-01-29 17:28:35 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:28:35 -==> Parameters: 
2019-01-29 17:28:35 -<==      Total: 3
2019-01-29 17:28:35 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:28:35 -==> Parameters: 
2019-01-29 17:28:35 -<==      Total: 1
2019-01-29 17:28:35 -耗时 : 25
2019-01-29 17:28:35 -返回值 : com.bootdo.common.utils.PageUtils@52e07f50
2019-01-29 17:28:38 -请求地址 : http://localhost:8080/sys/user/update
2019-01-29 17:28:38 -HTTP METHOD : POST
2019-01-29 17:28:38 -CLASS_METHOD : com.bootdo.system.controller.UserController.update
2019-01-29 17:28:38 -参数 : [com.bootdo.system.domain.UserDO@21393530]
2019-01-29 17:28:38 -==>  Preparing: update sys_user SET `userstatus` = ? where user_id = ? 
2019-01-29 17:28:38 -==> Parameters: 0(Integer), 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String)
2019-01-29 17:28:38 -<==    Updates: 1
2019-01-29 17:28:38 -耗时 : 42
2019-01-29 17:28:38 -返回值 : {msg=操作成功, code=0}
2019-01-29 17:28:38 -请求地址 : http://localhost:8080/sys/user/list
2019-01-29 17:28:38 -HTTP METHOD : GET
2019-01-29 17:28:38 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-29 17:28:38 -参数 : [{page=1, limit=15}]
2019-01-29 17:28:38 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-29 17:28:38 -==> Parameters: 
2019-01-29 17:28:38 -<==      Total: 3
2019-01-29 17:28:38 -==>  Preparing: select count(*) from sys_user 
2019-01-29 17:28:38 -==> Parameters: 
2019-01-29 17:28:38 -<==      Total: 1
2019-01-29 17:28:38 -耗时 : 17
2019-01-29 17:28:38 -返回值 : com.bootdo.common.utils.PageUtils@6ac9a090
