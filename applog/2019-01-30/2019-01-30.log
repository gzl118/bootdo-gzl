2019-01-30 09:48:16 -Starting BootdoApplication on YH-20180312AAAP with PID 12832 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-30 09:48:16 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-30 09:48:16 -The following profiles are active: dev
2019-01-30 09:48:16 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@178213b: startup date [Wed Jan 30 09:48:16 CST 2019]; root of context hierarchy
2019-01-30 09:48:19 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$9fd43666] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 09:48:20 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$9447fb0a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 09:48:20 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 09:48:20 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 09:48:20 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 09:48:20 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$2ee6c808] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 09:48:20 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$56c20048] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 09:48:20 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$491b2eef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 09:48:20 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-30 09:48:20 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 09:48:20 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 09:48:20 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 09:48:21 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 09:48:21 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 09:48:21 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-30 09:48:21 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-30 09:48:21 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 09:48:21 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 09:48:21 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 09:48:21 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 09:48:22 -Tomcat initialized with port(s): 8080 (http)
2019-01-30 09:48:22 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-30 09:48:22 -Starting service [Tomcat]
2019-01-30 09:48:22 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-30 09:48:22 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-30 09:48:22 -Initializing Spring embedded WebApplicationContext
2019-01-30 09:48:22 -Root WebApplicationContext: initialization completed in 5317 ms
2019-01-30 09:48:22 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-30 09:48:22 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-30 09:48:22 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-30 09:48:22 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-30 09:48:22 -Filter xssFilter was not registered (disabled)
2019-01-30 09:48:22 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-30 09:48:22 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-30 09:48:22 -Servlet statViewServlet mapped to [/druid/*]
2019-01-30 09:48:22 -Servlet dispatcherServlet mapped to [/]
2019-01-30 09:48:23 -{dataSource-1} inited
2019-01-30 09:48:24 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@178213b: startup date [Wed Jan 30 09:48:16 CST 2019]; root of context hierarchy
2019-01-30 09:48:24 -Using default implementation for ThreadExecutor
2019-01-30 09:48:24 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-30 09:48:24 -Quartz Scheduler v.2.2.1 created.
2019-01-30 09:48:24 -RAMJobStore initialized.
2019-01-30 09:48:24 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-30 09:48:24 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-30 09:48:24 -Quartz scheduler version: 2.2.1
2019-01-30 09:48:24 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@6814262d
2019-01-30 09:48:25 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-30 09:48:25 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-30 09:48:26 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 09:48:26 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-30 09:48:26 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-30 09:48:26 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-30 09:48:26 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-30 09:48:26 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-30 09:48:26 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-30 09:48:26 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-30 09:48:26 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-30 09:48:26 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-30 09:48:26 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 09:48:26 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-30 09:48:26 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-30 09:48:26 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 09:48:26 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-30 09:48:26 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-30 09:48:26 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-30 09:48:26 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-30 09:48:26 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 09:48:26 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-30 09:48:26 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-30 09:48:26 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-30 09:48:26 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-30 09:48:26 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-30 09:48:26 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-30 09:48:26 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-30 09:48:26 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 09:48:26 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-30 09:48:26 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 09:48:26 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-30 09:48:26 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-30 09:48:26 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-30 09:48:26 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-30 09:48:26 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-30 09:48:26 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-30 09:48:26 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-30 09:48:26 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-30 09:48:26 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-30 09:48:26 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-30 09:48:26 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 09:48:26 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-30 09:48:26 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-30 09:48:26 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-30 09:48:26 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-30 09:48:26 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-30 09:48:26 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-30 09:48:26 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-30 09:48:26 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-30 09:48:26 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-30 09:48:26 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-30 09:48:26 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-30 09:48:26 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-30 09:48:26 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 09:48:26 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-30 09:48:26 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-30 09:48:26 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-30 09:48:26 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-30 09:48:26 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-30 09:48:26 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long)
2019-01-30 09:48:26 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long[])
2019-01-30 09:48:26 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-30 09:48:26 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 09:48:26 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-30 09:48:26 -Mapped "{[/system/staff/edit/{staffId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 09:48:26 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-30 09:48:26 -Mapped "{[/system/staff/selectView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.selectView()
2019-01-30 09:48:26 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-30 09:48:26 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-30 09:48:26 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-30 09:48:26 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-30 09:48:26 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 09:48:26 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-30 09:48:26 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-30 09:48:26 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 09:48:26 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 09:48:26 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-30 09:48:26 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-30 09:48:26 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-30 09:48:26 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 09:48:26 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-30 09:48:26 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-30 09:48:26 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-30 09:48:26 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-30 09:48:26 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-30 09:48:26 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-30 09:48:26 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-30 09:48:26 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-30 09:48:26 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-30 09:48:26 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-30 09:48:26 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-30 09:48:26 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-30 09:48:27 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 09:48:27 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@178213b: startup date [Wed Jan 30 09:48:16 CST 2019]; root of context hierarchy
2019-01-30 09:48:27 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 09:48:27 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 09:48:27 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 09:48:27 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-30 09:48:27 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-30 09:48:28 -Registering beans for JMX exposure on startup
2019-01-30 09:48:28 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-30 09:48:28 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-30 09:48:28 -Starting beans in phase 2147483647
2019-01-30 09:48:28 -Context refreshed
2019-01-30 09:48:28 -Found 1 custom documentation plugin(s)
2019-01-30 09:48:28 -Scanning for api listing references
2019-01-30 09:48:28 -Generating unique operation named: removeUsingPOST_1
2019-01-30 09:48:28 -Generating unique operation named: editUsingGET_1
2019-01-30 09:48:28 -Generating unique operation named: listUsingGET_1
2019-01-30 09:48:28 -Generating unique operation named: updateUsingPOST_1
2019-01-30 09:48:28 -Generating unique operation named: addUsingGET_1
2019-01-30 09:48:29 -Generating unique operation named: editUsingGET_2
2019-01-30 09:48:29 -Generating unique operation named: listUsingGET_2
2019-01-30 09:48:29 -Generating unique operation named: removeUsingPOST_2
2019-01-30 09:48:29 -Generating unique operation named: removeUsingPOST_3
2019-01-30 09:48:29 -Generating unique operation named: saveUsingPOST_1
2019-01-30 09:48:29 -Generating unique operation named: updateUsingPOST_2
2019-01-30 09:48:29 -Generating unique operation named: listUsingGET_3
2019-01-30 09:48:29 -Generating unique operation named: removeUsingPOST_4
2019-01-30 09:48:29 -Generating unique operation named: welcomeUsingGET_1
2019-01-30 09:48:29 -Generating unique operation named: addUsingGET_2
2019-01-30 09:48:29 -Generating unique operation named: editUsingGET_3
2019-01-30 09:48:29 -Generating unique operation named: listUsingGET_4
2019-01-30 09:48:29 -Generating unique operation named: removeUsingPOST_5
2019-01-30 09:48:29 -Generating unique operation named: saveUsingPOST_2
2019-01-30 09:48:29 -Generating unique operation named: treeUsingGET_1
2019-01-30 09:48:29 -Generating unique operation named: updateUsingPOST_3
2019-01-30 09:48:29 -Generating unique operation named: addUsingGET_3
2019-01-30 09:48:29 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-30 09:48:29 -Generating unique operation named: editUsingGET_4
2019-01-30 09:48:29 -Generating unique operation named: listUsingGET_5
2019-01-30 09:48:29 -Generating unique operation named: saveUsingPOST_3
2019-01-30 09:48:29 -Generating unique operation named: saveUsingPOST_4
2019-01-30 09:48:29 -Generating unique operation named: updateUsingPOST_4
2019-01-30 09:48:29 -Generating unique operation named: listUsingGET_6
2019-01-30 09:48:29 -Generating unique operation named: listUsingHEAD_1
2019-01-30 09:48:29 -Generating unique operation named: listUsingPOST_1
2019-01-30 09:48:29 -Generating unique operation named: listUsingPUT_1
2019-01-30 09:48:29 -Generating unique operation named: listUsingPATCH_1
2019-01-30 09:48:29 -Generating unique operation named: listUsingDELETE_1
2019-01-30 09:48:29 -Generating unique operation named: listUsingOPTIONS_1
2019-01-30 09:48:29 -Generating unique operation named: listUsingTRACE_1
2019-01-30 09:48:29 -Generating unique operation named: addUsingGET_4
2019-01-30 09:48:29 -Generating unique operation named: editUsingGET_5
2019-01-30 09:48:29 -Generating unique operation named: listUsingGET_7
2019-01-30 09:48:29 -Generating unique operation named: removeUsingPOST_6
2019-01-30 09:48:29 -Generating unique operation named: removeUsingPOST_7
2019-01-30 09:48:29 -Generating unique operation named: saveUsingPOST_5
2019-01-30 09:48:29 -Generating unique operation named: updateUsingGET_1
2019-01-30 09:48:29 -Generating unique operation named: updateUsingHEAD_1
2019-01-30 09:48:29 -Generating unique operation named: updateUsingPOST_5
2019-01-30 09:48:29 -Generating unique operation named: updateUsingPUT_1
2019-01-30 09:48:29 -Generating unique operation named: updateUsingPATCH_1
2019-01-30 09:48:29 -Generating unique operation named: updateUsingDELETE_1
2019-01-30 09:48:29 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-30 09:48:29 -Generating unique operation named: updateUsingTRACE_1
2019-01-30 09:48:29 -Generating unique operation named: addUsingGET_5
2019-01-30 09:48:29 -Generating unique operation named: editUsingGET_6
2019-01-30 09:48:29 -Generating unique operation named: listUsingGET_8
2019-01-30 09:48:29 -Generating unique operation named: removeUsingPOST_8
2019-01-30 09:48:29 -Generating unique operation named: removeUsingPOST_9
2019-01-30 09:48:29 -Generating unique operation named: saveUsingPOST_6
2019-01-30 09:48:29 -Generating unique operation named: updateUsingGET_2
2019-01-30 09:48:29 -Generating unique operation named: updateUsingHEAD_2
2019-01-30 09:48:29 -Generating unique operation named: updateUsingPOST_6
2019-01-30 09:48:29 -Generating unique operation named: updateUsingPUT_2
2019-01-30 09:48:29 -Generating unique operation named: updateUsingPATCH_2
2019-01-30 09:48:29 -Generating unique operation named: updateUsingDELETE_2
2019-01-30 09:48:29 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-30 09:48:29 -Generating unique operation named: updateUsingTRACE_2
2019-01-30 09:48:29 -Generating unique operation named: addUsingGET_6
2019-01-30 09:48:29 -Generating unique operation named: editUsingGET_7
2019-01-30 09:48:29 -Generating unique operation named: listUsingGET_9
2019-01-30 09:48:29 -Generating unique operation named: roleUsingGET_1
2019-01-30 09:48:29 -Generating unique operation named: saveUsingPOST_7
2019-01-30 09:48:29 -Starting Quartz Scheduler now
2019-01-30 09:48:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-30 09:48:29 -Starting...
2019-01-30 09:48:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-30 09:48:29 -Started.
2019-01-30 09:48:29 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-30 09:48:29 -Using a shared selector for servlet write/read
2019-01-30 09:48:29 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-30 09:48:29 -Started BootdoApplication in 14.787 seconds (JVM running for 16.514)
2019-01-30 09:48:29 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-30 09:48:29 -==> Parameters: 
2019-01-30 09:48:29 -<==      Total: 1
2019-01-30 09:49:03 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-30 09:49:03 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-30 09:49:03 -FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
2019-01-30 09:49:03 -Enabling session validation scheduler...
2019-01-30 09:49:03 -请求地址 : http://localhost:8080/login;JSESSIONID=15c27197-5601-472a-9acc-e84e0ca7b745
2019-01-30 09:49:03 -HTTP METHOD : GET
2019-01-30 09:49:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 09:49:03 -参数 : []
2019-01-30 09:49:03 -耗时 : 2
2019-01-30 09:49:03 -返回值 : login
2019-01-30 09:49:18 -请求地址 : http://localhost:8080/login
2019-01-30 09:49:18 -HTTP METHOD : POST
2019-01-30 09:49:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 09:49:18 -参数 : [admin, 123456]
2019-01-30 09:49:18 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 09:49:18 -==> Parameters: admin(String)
2019-01-30 09:49:18 -<==      Total: 1
2019-01-30 09:49:18 -耗时 : 135
2019-01-30 09:49:18 -返回值 : {msg=操作成功, code=0}
2019-01-30 09:49:18 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-30 09:49:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 09:49:18 -==> Parameters: 123(String), admin(String), 登录(String), 136(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 09:49:18.58(Timestamp)
2019-01-30 09:49:18 -请求地址 : http://localhost:8080/index
2019-01-30 09:49:18 -HTTP METHOD : GET
2019-01-30 09:49:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 09:49:18 -参数 : [{}]
2019-01-30 09:49:18 -<==    Updates: 1
2019-01-30 09:49:18 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 09:49:18 -==> Parameters: 123(String)
2019-01-30 09:49:18 -<==      Total: 3
2019-01-30 09:49:18 -耗时 : 295
2019-01-30 09:49:18 -返回值 : index_v1
2019-01-30 09:49:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 09:49:19 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 295(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 09:49:19.053(Timestamp)
2019-01-30 09:49:19 -<==    Updates: 1
2019-01-30 09:49:22 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 09:49:22 -==> Parameters: 123(String)
2019-01-30 09:49:22 -<==      Total: 7
2019-01-30 09:49:22 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 09:49:22 -HTTP METHOD : GET
2019-01-30 09:49:22 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 09:49:22 -参数 : []
2019-01-30 09:49:22 -耗时 : 0
2019-01-30 09:49:22 -返回值 : system/user/user
2019-01-30 09:49:23 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 09:49:23 -HTTP METHOD : GET
2019-01-30 09:49:23 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 09:49:23 -参数 : [{page=1, limit=15}]
2019-01-30 09:49:23 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 09:49:23 -==> Parameters: 
2019-01-30 09:49:23 -<==      Total: 3
2019-01-30 09:49:23 -==>  Preparing: select count(*) from sys_user 
2019-01-30 09:49:23 -==> Parameters: 
2019-01-30 09:49:23 -<==      Total: 1
2019-01-30 09:49:23 -耗时 : 63
2019-01-30 09:49:23 -返回值 : com.bootdo.common.utils.PageUtils@795ff0f8
2019-01-30 09:49:26 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-30 09:49:39 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 09:49:39 -HTTP METHOD : GET
2019-01-30 09:49:39 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 09:49:39 -参数 : []
2019-01-30 09:49:39 -耗时 : 0
2019-01-30 09:49:39 -返回值 : system/user/user
2019-01-30 09:49:39 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 09:49:39 -HTTP METHOD : GET
2019-01-30 09:49:39 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 09:49:39 -参数 : [{page=1, limit=15}]
2019-01-30 09:49:39 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 09:49:39 -==> Parameters: 
2019-01-30 09:49:39 -<==      Total: 3
2019-01-30 09:49:39 -==>  Preparing: select count(*) from sys_user 
2019-01-30 09:49:39 -==> Parameters: 
2019-01-30 09:49:39 -<==      Total: 1
2019-01-30 09:49:39 -耗时 : 20
2019-01-30 09:49:39 -返回值 : com.bootdo.common.utils.PageUtils@20e258d
2019-01-30 09:49:46 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 09:49:46 -HTTP METHOD : GET
2019-01-30 09:49:46 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 09:49:46 -参数 : []
2019-01-30 09:49:46 -耗时 : 1
2019-01-30 09:49:46 -返回值 : system/user/user
2019-01-30 09:49:46 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 09:49:46 -HTTP METHOD : GET
2019-01-30 09:49:46 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 09:49:46 -参数 : [{page=1, limit=15}]
2019-01-30 09:49:46 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 09:49:46 -==> Parameters: 
2019-01-30 09:49:46 -<==      Total: 3
2019-01-30 09:49:46 -==>  Preparing: select count(*) from sys_user 
2019-01-30 09:49:46 -==> Parameters: 
2019-01-30 09:49:46 -<==      Total: 1
2019-01-30 09:49:46 -耗时 : 20
2019-01-30 09:49:46 -返回值 : com.bootdo.common.utils.PageUtils@3128b678
2019-01-30 09:50:29 -请求地址 : http://localhost:8080/
2019-01-30 09:50:29 -HTTP METHOD : GET
2019-01-30 09:50:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-30 09:50:29 -参数 : [{}]
2019-01-30 09:50:29 -耗时 : 0
2019-01-30 09:50:29 -返回值 : redirect:/login
2019-01-30 09:50:29 -请求地址 : http://localhost:8080/login
2019-01-30 09:50:29 -HTTP METHOD : GET
2019-01-30 09:50:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 09:50:29 -参数 : []
2019-01-30 09:50:29 -耗时 : 0
2019-01-30 09:50:29 -返回值 : login
2019-01-30 09:50:35 -请求地址 : http://localhost:8080/login
2019-01-30 09:50:35 -HTTP METHOD : POST
2019-01-30 09:50:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 09:50:35 -参数 : [gzl, 111111]
2019-01-30 09:50:35 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 09:50:35 -==> Parameters: gzl(String)
2019-01-30 09:50:35 -<==      Total: 1
2019-01-30 09:50:35 -耗时 : 13
2019-01-30 09:50:35 -返回值 : {msg=用户或密码错误, code=500}
2019-01-30 09:50:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 09:50:35 -==> Parameters: -1L(String), 获取用户信息为空(String), 登录(String), 14(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 09:50:35.146(Timestamp)
2019-01-30 09:50:35 -<==    Updates: 1
2019-01-30 09:50:39 -请求地址 : http://localhost:8080/login
2019-01-30 09:50:39 -HTTP METHOD : POST
2019-01-30 09:50:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 09:50:39 -参数 : [gzl1, 111111]
2019-01-30 09:50:39 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 09:50:39 -==> Parameters: gzl1(String)
2019-01-30 09:50:39 -<==      Total: 1
2019-01-30 09:50:39 -耗时 : 5
2019-01-30 09:50:39 -返回值 : {msg=操作成功, code=0}
2019-01-30 09:50:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 09:50:39 -==> Parameters: 54fb2e44-183d-4700-b4a3-c30072f474a3(String), gzl1(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 09:50:39.932(Timestamp)
2019-01-30 09:50:39 -请求地址 : http://localhost:8080/index
2019-01-30 09:50:39 -HTTP METHOD : GET
2019-01-30 09:50:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 09:50:39 -参数 : [{}]
2019-01-30 09:50:39 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 09:50:39 -==> Parameters: 54fb2e44-183d-4700-b4a3-c30072f474a3(String)
2019-01-30 09:50:39 -<==      Total: 0
2019-01-30 09:50:39 -耗时 : 17
2019-01-30 09:50:39 -返回值 : index_v1
2019-01-30 09:50:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 09:50:39 -==> Parameters: 54fb2e44-183d-4700-b4a3-c30072f474a3(String), gzl1(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 09:50:39.97(Timestamp)
2019-01-30 09:50:39 -<==    Updates: 1
2019-01-30 09:50:40 -<==    Updates: 1
2019-01-30 09:50:46 -请求地址 : http://localhost:8080/
2019-01-30 09:50:46 -HTTP METHOD : GET
2019-01-30 09:50:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-30 09:50:46 -参数 : [{}]
2019-01-30 09:50:46 -耗时 : 0
2019-01-30 09:50:46 -返回值 : redirect:/login
2019-01-30 09:50:46 -请求地址 : http://localhost:8080/login
2019-01-30 09:50:46 -HTTP METHOD : GET
2019-01-30 09:50:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 09:50:46 -参数 : []
2019-01-30 09:50:46 -耗时 : 1
2019-01-30 09:50:46 -返回值 : login
2019-01-30 09:50:49 -请求地址 : http://localhost:8080/login
2019-01-30 09:50:49 -HTTP METHOD : POST
2019-01-30 09:50:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 09:50:49 -参数 : [admin, 123456]
2019-01-30 09:50:49 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 09:50:49 -==> Parameters: admin(String)
2019-01-30 09:50:49 -<==      Total: 1
2019-01-30 09:50:49 -耗时 : 8
2019-01-30 09:50:49 -返回值 : {msg=操作成功, code=0}
2019-01-30 09:50:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 09:50:49 -==> Parameters: 123(String), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 09:50:49.768(Timestamp)
2019-01-30 09:50:49 -请求地址 : http://localhost:8080/index
2019-01-30 09:50:49 -HTTP METHOD : GET
2019-01-30 09:50:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 09:50:49 -参数 : [{}]
2019-01-30 09:50:49 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 09:50:49 -==> Parameters: 123(String)
2019-01-30 09:50:49 -<==      Total: 3
2019-01-30 09:50:49 -耗时 : 18
2019-01-30 09:50:49 -返回值 : index_v1
2019-01-30 09:50:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 09:50:49 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 09:50:49.812(Timestamp)
2019-01-30 09:50:49 -<==    Updates: 1
2019-01-30 09:50:49 -<==    Updates: 1
2019-01-30 09:50:54 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 09:50:54 -==> Parameters: 123(String)
2019-01-30 09:50:54 -<==      Total: 7
2019-01-30 09:50:54 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 09:50:54 -HTTP METHOD : GET
2019-01-30 09:50:54 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 09:50:54 -参数 : []
2019-01-30 09:50:54 -耗时 : 1
2019-01-30 09:50:54 -返回值 : system/user/user
2019-01-30 09:50:55 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 09:50:55 -HTTP METHOD : GET
2019-01-30 09:50:55 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 09:50:55 -参数 : [{page=1, limit=15}]
2019-01-30 09:50:55 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 09:50:55 -==> Parameters: 
2019-01-30 09:50:55 -<==      Total: 3
2019-01-30 09:50:55 -==>  Preparing: select count(*) from sys_user 
2019-01-30 09:50:55 -==> Parameters: 
2019-01-30 09:50:55 -<==      Total: 1
2019-01-30 09:50:55 -耗时 : 24
2019-01-30 09:50:55 -返回值 : com.bootdo.common.utils.PageUtils@230d6957
2019-01-30 09:51:43 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 09:51:43 -HTTP METHOD : GET
2019-01-30 09:51:43 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 09:51:43 -参数 : []
2019-01-30 09:51:43 -耗时 : 1
2019-01-30 09:51:43 -返回值 : system/user/user
2019-01-30 09:51:43 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 09:51:43 -HTTP METHOD : GET
2019-01-30 09:51:43 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 09:51:43 -参数 : [{page=1, limit=15}]
2019-01-30 09:51:43 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 09:51:43 -==> Parameters: 
2019-01-30 09:51:43 -<==      Total: 3
2019-01-30 09:51:43 -==>  Preparing: select count(*) from sys_user 
2019-01-30 09:51:43 -==> Parameters: 
2019-01-30 09:51:43 -<==      Total: 1
2019-01-30 09:51:43 -耗时 : 17
2019-01-30 09:51:43 -返回值 : com.bootdo.common.utils.PageUtils@6be0a9fe
2019-01-30 09:51:55 -Subject does not have permission [sys:user:adminresetpwd]
org.apache.shiro.authz.UnauthorizedException: Subject does not have permission [sys:user:adminresetpwd]
	at org.apache.shiro.authz.ModularRealmAuthorizer.checkPermission(ModularRealmAuthorizer.java:323)
	at org.apache.shiro.mgt.AuthorizingSecurityManager.checkPermission(AuthorizingSecurityManager.java:137)
	at org.apache.shiro.subject.support.DelegatingSubject.checkPermission(DelegatingSubject.java:205)
	at org.apache.shiro.authz.aop.PermissionAnnotationHandler.assertAuthorized(PermissionAnnotationHandler.java:74)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:84)
	at org.apache.shiro.authz.aop.AnnotationsAuthorizingMethodInterceptor.assertAuthorized(AnnotationsAuthorizingMethodInterceptor.java:100)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:38)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.UserController$$EnhancerBySpringCGLIB$$9fdd37f4.adminresetpwd(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.authz.AuthorizationException: Not authorized to invoke method: public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
	at org.apache.shiro.authz.aop.AuthorizingAnnotationMethodInterceptor.assertAuthorized(AuthorizingAnnotationMethodInterceptor.java:90)
	... 79 common frames omitted
2019-01-30 09:55:46 -请求地址 : http://localhost:8080/login;JSESSIONID=141ee9d3-5f60-425e-8bd6-10649aff3c1c
2019-01-30 09:55:46 -HTTP METHOD : GET
2019-01-30 09:55:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 09:55:46 -参数 : []
2019-01-30 09:55:46 -耗时 : 1
2019-01-30 09:55:46 -返回值 : login
2019-01-30 09:55:46 -请求地址 : http://localhost:8080/login
2019-01-30 09:55:46 -HTTP METHOD : GET
2019-01-30 09:55:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 09:55:46 -参数 : []
2019-01-30 09:55:46 -耗时 : 0
2019-01-30 09:55:46 -返回值 : login
2019-01-30 09:55:49 -请求地址 : http://localhost:8080/login
2019-01-30 09:55:49 -HTTP METHOD : POST
2019-01-30 09:55:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 09:55:49 -参数 : [admin, 123456]
2019-01-30 09:55:49 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 09:55:49 -==> Parameters: admin(String)
2019-01-30 09:55:49 -<==      Total: 1
2019-01-30 09:55:49 -耗时 : 14
2019-01-30 09:55:49 -返回值 : {msg=操作成功, code=0}
2019-01-30 09:55:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 09:55:49 -==> Parameters: 123(String), admin(String), 登录(String), 14(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 09:55:49.623(Timestamp)
2019-01-30 09:55:49 -请求地址 : http://localhost:8080/index
2019-01-30 09:55:49 -HTTP METHOD : GET
2019-01-30 09:55:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 09:55:49 -参数 : [{}]
2019-01-30 09:55:49 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 09:55:49 -==> Parameters: 123(String)
2019-01-30 09:55:49 -<==      Total: 3
2019-01-30 09:55:49 -<==    Updates: 1
2019-01-30 09:55:49 -耗时 : 20
2019-01-30 09:55:49 -返回值 : index_v1
2019-01-30 09:55:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 09:55:49 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 09:55:49.673(Timestamp)
2019-01-30 09:55:49 -<==    Updates: 1
2019-01-30 09:55:53 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 09:55:53 -==> Parameters: 123(String)
2019-01-30 09:55:53 -<==      Total: 7
2019-01-30 09:55:53 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 09:55:53 -HTTP METHOD : GET
2019-01-30 09:55:53 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 09:55:53 -参数 : []
2019-01-30 09:55:53 -耗时 : 0
2019-01-30 09:55:53 -返回值 : system/user/user
2019-01-30 09:55:53 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 09:55:53 -HTTP METHOD : GET
2019-01-30 09:55:53 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 09:55:53 -参数 : [{page=1, limit=15}]
2019-01-30 09:55:53 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 09:55:53 -==> Parameters: 
2019-01-30 09:55:53 -<==      Total: 3
2019-01-30 09:55:53 -==>  Preparing: select count(*) from sys_user 
2019-01-30 09:55:53 -==> Parameters: 
2019-01-30 09:55:53 -<==      Total: 1
2019-01-30 09:55:53 -耗时 : 20
2019-01-30 09:55:53 -返回值 : com.bootdo.common.utils.PageUtils@13494d56
2019-01-30 09:55:58 -请求地址 : http://localhost:8080/sys/user/adminresetpwd
2019-01-30 09:55:58 -HTTP METHOD : POST
2019-01-30 09:55:58 -CLASS_METHOD : com.bootdo.system.controller.UserController.adminresetpwd
2019-01-30 09:55:58 -参数 : [6ac74b9e-7d0f-4642-84fd-79fde67a0178]
2019-01-30 09:55:58 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-30 09:55:58 -==> Parameters: 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String)
2019-01-30 09:55:58 -<==      Total: 1
2019-01-30 09:55:58 -==>  Preparing: update sys_user SET `username` = ?, `usernikename` = ?, `userpwd` = ?, `userstatus` = ?, `edit_time` = ?, `deleteflag` = ? where user_id = ? 
2019-01-30 09:55:58 -==> Parameters: gzl(String), gzl(String), 11d1d957f5a735f324d0a3f2849c9834(String), 0(Integer), 2019-01-29 17:12:19.0(Timestamp), 1(Integer), 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String)
2019-01-30 09:55:58 -<==    Updates: 1
2019-01-30 09:55:58 -耗时 : 58
2019-01-30 09:55:58 -返回值 : {msg=操作成功, code=0}
2019-01-30 09:55:58 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 09:55:58 -HTTP METHOD : GET
2019-01-30 09:55:58 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 09:55:58 -参数 : [{page=1, limit=15}]
2019-01-30 09:55:58 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 09:55:58 -==> Parameters: 
2019-01-30 09:55:58 -<==      Total: 3
2019-01-30 09:55:58 -==>  Preparing: select count(*) from sys_user 
2019-01-30 09:55:58 -==> Parameters: 
2019-01-30 09:55:58 -<==      Total: 1
2019-01-30 09:55:58 -耗时 : 13
2019-01-30 09:55:58 -返回值 : com.bootdo.common.utils.PageUtils@70a5cc7
2019-01-30 09:56:21 -请求地址 : http://localhost:8080/
2019-01-30 09:56:21 -HTTP METHOD : GET
2019-01-30 09:56:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-30 09:56:21 -参数 : [{}]
2019-01-30 09:56:21 -耗时 : 0
2019-01-30 09:56:21 -返回值 : redirect:/login
2019-01-30 09:56:21 -请求地址 : http://localhost:8080/login
2019-01-30 09:56:21 -HTTP METHOD : GET
2019-01-30 09:56:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 09:56:21 -参数 : []
2019-01-30 09:56:21 -耗时 : 0
2019-01-30 09:56:21 -返回值 : login
2019-01-30 09:56:27 -请求地址 : http://localhost:8080/login
2019-01-30 09:56:27 -HTTP METHOD : POST
2019-01-30 09:56:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 09:56:27 -参数 : [gzl, 111111]
2019-01-30 09:56:27 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 09:56:27 -==> Parameters: gzl(String)
2019-01-30 09:56:27 -<==      Total: 1
2019-01-30 09:56:27 -耗时 : 9
2019-01-30 09:56:27 -返回值 : {msg=用户或密码错误, code=500}
2019-01-30 09:56:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 09:56:27 -==> Parameters: -1L(String), 获取用户信息为空(String), 登录(String), 9(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 09:56:27.198(Timestamp)
2019-01-30 09:56:27 -<==    Updates: 1
2019-01-30 09:56:32 -请求地址 : http://localhost:8080/login
2019-01-30 09:56:32 -HTTP METHOD : GET
2019-01-30 09:56:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 09:56:32 -参数 : []
2019-01-30 09:56:32 -耗时 : 0
2019-01-30 09:56:32 -返回值 : login
2019-01-30 09:56:32 -请求地址 : http://localhost:8080/login;JSESSIONID=d0bd8fda-6050-4264-8ec4-d8a2feb25b73
2019-01-30 09:56:32 -HTTP METHOD : GET
2019-01-30 09:56:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 09:56:32 -参数 : []
2019-01-30 09:56:32 -耗时 : 2
2019-01-30 09:56:32 -返回值 : login
2019-01-30 09:56:35 -请求地址 : http://localhost:8080/login
2019-01-30 09:56:35 -HTTP METHOD : POST
2019-01-30 09:56:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 09:56:35 -参数 : [admin, 111111]
2019-01-30 09:56:35 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 09:56:35 -==> Parameters: admin(String)
2019-01-30 09:56:35 -<==      Total: 1
2019-01-30 09:56:35 -耗时 : 4
2019-01-30 09:56:35 -返回值 : {msg=用户或密码错误, code=500}
2019-01-30 09:56:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 09:56:35 -==> Parameters: -1L(String), 获取用户信息为空(String), 登录(String), 4(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 09:56:35.939(Timestamp)
2019-01-30 09:56:35 -<==    Updates: 1
2019-01-30 09:56:39 -请求地址 : http://localhost:8080/login
2019-01-30 09:56:39 -HTTP METHOD : POST
2019-01-30 09:56:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 09:56:39 -参数 : [admin, 123456]
2019-01-30 09:56:39 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 09:56:39 -==> Parameters: admin(String)
2019-01-30 09:56:39 -<==      Total: 1
2019-01-30 09:56:39 -耗时 : 6
2019-01-30 09:56:39 -返回值 : {msg=操作成功, code=0}
2019-01-30 09:56:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 09:56:39 -==> Parameters: 123(String), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 09:56:39.486(Timestamp)
2019-01-30 09:56:39 -请求地址 : http://localhost:8080/index
2019-01-30 09:56:39 -HTTP METHOD : GET
2019-01-30 09:56:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 09:56:39 -参数 : [{}]
2019-01-30 09:56:39 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 09:56:39 -==> Parameters: 123(String)
2019-01-30 09:56:39 -<==      Total: 3
2019-01-30 09:56:39 -耗时 : 21
2019-01-30 09:56:39 -返回值 : index_v1
2019-01-30 09:56:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 09:56:39 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 09:56:39.527(Timestamp)
2019-01-30 09:56:39 -<==    Updates: 1
2019-01-30 09:56:39 -<==    Updates: 1
2019-01-30 09:56:41 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 09:56:41 -==> Parameters: 123(String)
2019-01-30 09:56:41 -<==      Total: 7
2019-01-30 09:56:41 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 09:56:41 -HTTP METHOD : GET
2019-01-30 09:56:41 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 09:56:41 -参数 : []
2019-01-30 09:56:41 -耗时 : 0
2019-01-30 09:56:41 -返回值 : system/user/user
2019-01-30 09:56:41 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 09:56:41 -HTTP METHOD : GET
2019-01-30 09:56:41 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 09:56:41 -参数 : [{page=1, limit=15}]
2019-01-30 09:56:41 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 09:56:41 -==> Parameters: 
2019-01-30 09:56:41 -<==      Total: 3
2019-01-30 09:56:41 -==>  Preparing: select count(*) from sys_user 
2019-01-30 09:56:41 -==> Parameters: 
2019-01-30 09:56:41 -<==      Total: 1
2019-01-30 09:56:41 -耗时 : 21
2019-01-30 09:56:41 -返回值 : com.bootdo.common.utils.PageUtils@3edb9366
2019-01-30 09:57:04 -请求地址 : http://localhost:8080/sys/user/adminresetpwd
2019-01-30 09:57:04 -HTTP METHOD : POST
2019-01-30 09:57:04 -CLASS_METHOD : com.bootdo.system.controller.UserController.adminresetpwd
2019-01-30 09:57:04 -参数 : [6ac74b9e-7d0f-4642-84fd-79fde67a0178]
2019-01-30 09:57:26 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-30 09:57:26 -==> Parameters: 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String)
2019-01-30 09:57:26 -<==      Total: 1
2019-01-30 09:59:58 -==>  Preparing: update sys_user SET `username` = ?, `usernikename` = ?, `userpwd` = ?, `userstatus` = ?, `edit_time` = ?, `deleteflag` = ? where user_id = ? 
2019-01-30 09:59:58 -==> Parameters: gzl(String), gzl(String), 11d1d957f5a735f324d0a3f2849c9834(String), 0(Integer), 2019-01-29 17:12:19.0(Timestamp), 1(Integer), 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String)
2019-01-30 09:59:58 -<==    Updates: 1
2019-01-30 09:59:58 -耗时 : 174449
2019-01-30 09:59:58 -返回值 : {msg=操作成功, code=0}
2019-01-30 09:59:58 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 09:59:58 -==> Parameters: 123(String)
2019-01-30 09:59:58 -<==      Total: 7
2019-01-30 09:59:58 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 09:59:58 -HTTP METHOD : GET
2019-01-30 09:59:58 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 09:59:58 -参数 : [{page=1, limit=15}]
2019-01-30 09:59:58 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 09:59:58 -==> Parameters: 
2019-01-30 09:59:58 -<==      Total: 3
2019-01-30 09:59:58 -==>  Preparing: select count(*) from sys_user 
2019-01-30 09:59:58 -==> Parameters: 
2019-01-30 09:59:58 -<==      Total: 1
2019-01-30 09:59:58 -耗时 : 16
2019-01-30 09:59:58 -返回值 : com.bootdo.common.utils.PageUtils@76badac1
2019-01-30 10:00:05 -请求地址 : http://localhost:8080/
2019-01-30 10:00:05 -HTTP METHOD : GET
2019-01-30 10:00:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-30 10:00:05 -参数 : [{}]
2019-01-30 10:00:05 -耗时 : 0
2019-01-30 10:00:05 -返回值 : redirect:/login
2019-01-30 10:00:05 -请求地址 : http://localhost:8080/login
2019-01-30 10:00:05 -HTTP METHOD : GET
2019-01-30 10:00:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:00:05 -参数 : []
2019-01-30 10:00:05 -耗时 : 0
2019-01-30 10:00:05 -返回值 : login
2019-01-30 10:00:10 -请求地址 : http://localhost:8080/login
2019-01-30 10:00:10 -HTTP METHOD : POST
2019-01-30 10:00:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 10:00:10 -参数 : [gzl, 111111]
2019-01-30 10:00:10 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 10:00:10 -==> Parameters: gzl(String)
2019-01-30 10:00:10 -<==      Total: 1
2019-01-30 10:00:10 -耗时 : 4
2019-01-30 10:00:10 -返回值 : {msg=用户或密码错误, code=500}
2019-01-30 10:00:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:00:10 -==> Parameters: -1L(String), 获取用户信息为空(String), 登录(String), 4(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 10:00:10.593(Timestamp)
2019-01-30 10:00:10 -<==    Updates: 1
2019-01-30 10:00:14 -请求地址 : http://localhost:8080/login
2019-01-30 10:00:14 -HTTP METHOD : GET
2019-01-30 10:00:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:00:14 -参数 : []
2019-01-30 10:00:14 -耗时 : 0
2019-01-30 10:00:14 -返回值 : login
2019-01-30 10:00:15 -请求地址 : http://localhost:8080/login;JSESSIONID=049739f1-f3d8-4df4-a23d-cabf728cedf1
2019-01-30 10:00:15 -HTTP METHOD : GET
2019-01-30 10:00:15 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:00:15 -参数 : []
2019-01-30 10:00:15 -耗时 : 0
2019-01-30 10:00:15 -返回值 : login
2019-01-30 10:00:18 -请求地址 : http://localhost:8080/login
2019-01-30 10:00:18 -HTTP METHOD : POST
2019-01-30 10:00:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 10:00:18 -参数 : [admin, 111111]
2019-01-30 10:00:18 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 10:00:18 -==> Parameters: admin(String)
2019-01-30 10:00:18 -<==      Total: 1
2019-01-30 10:00:18 -耗时 : 6
2019-01-30 10:00:18 -返回值 : {msg=用户或密码错误, code=500}
2019-01-30 10:00:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:00:18 -==> Parameters: -1L(String), 获取用户信息为空(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 10:00:18.193(Timestamp)
2019-01-30 10:00:18 -<==    Updates: 1
2019-01-30 10:00:22 -请求地址 : http://localhost:8080/login
2019-01-30 10:00:22 -HTTP METHOD : POST
2019-01-30 10:00:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 10:00:22 -参数 : [admin, 123456]
2019-01-30 10:00:22 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 10:00:22 -==> Parameters: admin(String)
2019-01-30 10:00:22 -<==      Total: 1
2019-01-30 10:00:22 -耗时 : 11
2019-01-30 10:00:22 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:00:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:00:22 -请求地址 : http://localhost:8080/index
2019-01-30 10:00:22 -HTTP METHOD : GET
2019-01-30 10:00:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 10:00:22 -参数 : [{}]
2019-01-30 10:00:22 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 10:00:22 -==> Parameters: 123(String)
2019-01-30 10:00:22 -<==      Total: 3
2019-01-30 10:00:22 -耗时 : 19
2019-01-30 10:00:22 -返回值 : index_v1
2019-01-30 10:00:22 -==> Parameters: 123(String), admin(String), 登录(String), 11(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 10:00:22.281(Timestamp)
2019-01-30 10:00:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:00:22 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 10:00:22.321(Timestamp)
2019-01-30 10:00:22 -<==    Updates: 1
2019-01-30 10:00:22 -<==    Updates: 1
2019-01-30 10:00:24 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 10:00:24 -==> Parameters: 123(String)
2019-01-30 10:00:24 -<==      Total: 7
2019-01-30 10:00:24 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:00:24 -HTTP METHOD : GET
2019-01-30 10:00:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:00:24 -参数 : []
2019-01-30 10:00:24 -耗时 : 0
2019-01-30 10:00:24 -返回值 : system/user/user
2019-01-30 10:00:24 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:00:24 -HTTP METHOD : GET
2019-01-30 10:00:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:00:24 -参数 : [{page=1, limit=15}]
2019-01-30 10:00:24 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:00:24 -==> Parameters: 
2019-01-30 10:00:24 -<==      Total: 3
2019-01-30 10:00:24 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:00:24 -==> Parameters: 
2019-01-30 10:00:24 -<==      Total: 1
2019-01-30 10:00:24 -耗时 : 13
2019-01-30 10:00:24 -返回值 : com.bootdo.common.utils.PageUtils@17a0ac2c
2019-01-30 10:01:04 -请求地址 : http://localhost:8080/
2019-01-30 10:01:04 -HTTP METHOD : GET
2019-01-30 10:01:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-30 10:01:04 -参数 : [{}]
2019-01-30 10:01:04 -耗时 : 0
2019-01-30 10:01:04 -返回值 : redirect:/login
2019-01-30 10:01:04 -请求地址 : http://localhost:8080/login
2019-01-30 10:01:04 -HTTP METHOD : GET
2019-01-30 10:01:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:01:04 -参数 : []
2019-01-30 10:01:04 -耗时 : 0
2019-01-30 10:01:04 -返回值 : login
2019-01-30 10:01:10 -请求地址 : http://localhost:8080/login
2019-01-30 10:01:10 -HTTP METHOD : POST
2019-01-30 10:01:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 10:01:10 -参数 : [gzl, 111111]
2019-01-30 10:01:10 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 10:01:10 -==> Parameters: gzl(String)
2019-01-30 10:01:10 -<==      Total: 1
2019-01-30 10:01:10 -耗时 : 4
2019-01-30 10:01:10 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:01:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:01:10 -==> Parameters: 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String), gzl(String), 登录(String), 4(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 10:01:10.589(Timestamp)
2019-01-30 10:01:10 -请求地址 : http://localhost:8080/index
2019-01-30 10:01:10 -HTTP METHOD : GET
2019-01-30 10:01:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 10:01:10 -参数 : [{}]
2019-01-30 10:01:10 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 10:01:10 -==> Parameters: 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String)
2019-01-30 10:01:10 -<==      Total: 0
2019-01-30 10:01:10 -耗时 : 25
2019-01-30 10:01:10 -返回值 : index_v1
2019-01-30 10:01:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:01:10 -==> Parameters: 6ac74b9e-7d0f-4642-84fd-79fde67a0178(String), gzl(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 10:01:10.641(Timestamp)
2019-01-30 10:01:10 -<==    Updates: 1
2019-01-30 10:01:10 -<==    Updates: 1
2019-01-30 10:01:14 -请求地址 : http://localhost:8080/
2019-01-30 10:01:14 -HTTP METHOD : GET
2019-01-30 10:01:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-30 10:01:14 -参数 : [{}]
2019-01-30 10:01:14 -耗时 : 0
2019-01-30 10:01:14 -返回值 : redirect:/login
2019-01-30 10:01:14 -请求地址 : http://localhost:8080/login
2019-01-30 10:01:14 -HTTP METHOD : GET
2019-01-30 10:01:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:01:14 -参数 : []
2019-01-30 10:01:14 -耗时 : 1
2019-01-30 10:01:14 -返回值 : login
2019-01-30 10:01:18 -请求地址 : http://localhost:8080/login
2019-01-30 10:01:18 -HTTP METHOD : POST
2019-01-30 10:01:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 10:01:18 -参数 : [admin, 123456]
2019-01-30 10:01:18 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 10:01:18 -==> Parameters: admin(String)
2019-01-30 10:01:18 -<==      Total: 1
2019-01-30 10:01:18 -耗时 : 7
2019-01-30 10:01:18 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:01:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:01:18 -==> Parameters: 123(String), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 10:01:18.025(Timestamp)
2019-01-30 10:01:18 -请求地址 : http://localhost:8080/index
2019-01-30 10:01:18 -HTTP METHOD : GET
2019-01-30 10:01:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 10:01:18 -参数 : [{}]
2019-01-30 10:01:18 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 10:01:18 -==> Parameters: 123(String)
2019-01-30 10:01:18 -<==      Total: 3
2019-01-30 10:01:18 -<==    Updates: 1
2019-01-30 10:01:18 -耗时 : 25
2019-01-30 10:01:18 -返回值 : index_v1
2019-01-30 10:01:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:01:18 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 10:01:18.071(Timestamp)
2019-01-30 10:01:18 -<==    Updates: 1
2019-01-30 10:01:20 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 10:01:20 -==> Parameters: 123(String)
2019-01-30 10:01:20 -<==      Total: 7
2019-01-30 10:01:20 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:01:20 -HTTP METHOD : GET
2019-01-30 10:01:20 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:01:20 -参数 : []
2019-01-30 10:01:20 -耗时 : 0
2019-01-30 10:01:20 -返回值 : system/user/user
2019-01-30 10:01:20 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:01:20 -HTTP METHOD : GET
2019-01-30 10:01:20 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:01:20 -参数 : [{page=1, limit=15}]
2019-01-30 10:01:20 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:01:20 -==> Parameters: 
2019-01-30 10:01:20 -<==      Total: 3
2019-01-30 10:01:20 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:01:20 -==> Parameters: 
2019-01-30 10:01:20 -<==      Total: 1
2019-01-30 10:01:20 -耗时 : 15
2019-01-30 10:01:20 -返回值 : com.bootdo.common.utils.PageUtils@3b97676d
2019-01-30 10:01:21 -请求地址 : http://localhost:8080/sys/user/add
2019-01-30 10:01:21 -HTTP METHOD : GET
2019-01-30 10:01:21 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-30 10:01:21 -参数 : []
2019-01-30 10:01:21 -耗时 : 0
2019-01-30 10:01:21 -返回值 : system/user/add
2019-01-30 10:01:30 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-30 10:01:30 -HTTP METHOD : POST
2019-01-30 10:01:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-30 10:01:30 -参数 : [{username=myh, userId=}]
2019-01-30 10:01:30 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-30 10:01:30 -==> Parameters: myh(String), (String)
2019-01-30 10:01:30 -<==      Total: 0
2019-01-30 10:01:30 -耗时 : 6
2019-01-30 10:01:30 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:01:30 -请求地址 : http://localhost:8080/sys/user/save
2019-01-30 10:01:30 -HTTP METHOD : POST
2019-01-30 10:01:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.save
2019-01-30 10:01:30 -参数 : [com.bootdo.system.domain.UserDO@723fa51e]
2019-01-30 10:01:30 -==>  Preparing: insert into sys_user ( `user_id`, `dept_id`, `username`, `usernikename`, `userpwd`, `userstatus`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:01:30 -==> Parameters: 642d30a4-54ef-412f-a3af-a18e66ccf5a6(String), null, myh(String), (String), b0cb981e7b87803a1a600e6583988265(String), 1(Integer), null, null, 1(Integer), null, null, null
2019-01-30 10:01:30 -<==    Updates: 1
2019-01-30 10:01:30 -耗时 : 72
2019-01-30 10:01:30 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:01:30 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:01:30 -HTTP METHOD : GET
2019-01-30 10:01:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:01:30 -参数 : []
2019-01-30 10:01:30 -耗时 : 0
2019-01-30 10:01:30 -返回值 : system/user/user
2019-01-30 10:01:30 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:01:30 -HTTP METHOD : GET
2019-01-30 10:01:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:01:30 -参数 : [{page=1, limit=15}]
2019-01-30 10:01:30 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:01:30 -==> Parameters: 
2019-01-30 10:01:30 -<==      Total: 4
2019-01-30 10:01:30 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:01:30 -==> Parameters: 
2019-01-30 10:01:30 -<==      Total: 1
2019-01-30 10:01:30 -耗时 : 12
2019-01-30 10:01:30 -返回值 : com.bootdo.common.utils.PageUtils@5c2d8258
2019-01-30 10:01:33 -请求地址 : http://localhost:8080/
2019-01-30 10:01:33 -HTTP METHOD : GET
2019-01-30 10:01:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-30 10:01:33 -参数 : [{}]
2019-01-30 10:01:33 -耗时 : 1
2019-01-30 10:01:33 -返回值 : redirect:/login
2019-01-30 10:01:33 -请求地址 : http://localhost:8080/login
2019-01-30 10:01:33 -HTTP METHOD : GET
2019-01-30 10:01:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:01:33 -参数 : []
2019-01-30 10:01:33 -耗时 : 1
2019-01-30 10:01:33 -返回值 : login
2019-01-30 10:01:39 -请求地址 : http://localhost:8080/login
2019-01-30 10:01:39 -HTTP METHOD : POST
2019-01-30 10:01:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 10:01:39 -参数 : [myh, 666666]
2019-01-30 10:01:39 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 10:01:39 -==> Parameters: myh(String)
2019-01-30 10:01:39 -<==      Total: 1
2019-01-30 10:01:39 -耗时 : 8
2019-01-30 10:01:39 -返回值 : {msg=用户或密码错误, code=500}
2019-01-30 10:01:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:01:39 -==> Parameters: -1L(String), 获取用户信息为空(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 10:01:39.272(Timestamp)
2019-01-30 10:01:39 -<==    Updates: 1
2019-01-30 10:01:45 -请求地址 : http://localhost:8080/login
2019-01-30 10:01:45 -HTTP METHOD : POST
2019-01-30 10:01:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 10:01:45 -参数 : [myh, 666666]
2019-01-30 10:01:45 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 10:01:45 -==> Parameters: myh(String)
2019-01-30 10:01:45 -<==      Total: 1
2019-01-30 10:01:45 -耗时 : 6
2019-01-30 10:01:45 -返回值 : {msg=用户或密码错误, code=500}
2019-01-30 10:01:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:01:45 -==> Parameters: -1L(String), 获取用户信息为空(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 10:01:45.535(Timestamp)
2019-01-30 10:01:45 -<==    Updates: 1
2019-01-30 10:02:01 -请求地址 : http://localhost:8080/login
2019-01-30 10:02:01 -HTTP METHOD : POST
2019-01-30 10:02:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 10:02:01 -参数 : [myh, 111111]
2019-01-30 10:02:01 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 10:02:01 -==> Parameters: myh(String)
2019-01-30 10:02:01 -<==      Total: 1
2019-01-30 10:02:01 -耗时 : 4
2019-01-30 10:02:01 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:02:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:02:01 -==> Parameters: 642d30a4-54ef-412f-a3af-a18e66ccf5a6(String), myh(String), 登录(String), 4(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 10:02:01.532(Timestamp)
2019-01-30 10:02:01 -请求地址 : http://localhost:8080/index
2019-01-30 10:02:01 -HTTP METHOD : GET
2019-01-30 10:02:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 10:02:01 -参数 : [{}]
2019-01-30 10:02:01 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 10:02:01 -==> Parameters: 642d30a4-54ef-412f-a3af-a18e66ccf5a6(String)
2019-01-30 10:02:01 -<==      Total: 0
2019-01-30 10:02:01 -耗时 : 21
2019-01-30 10:02:01 -返回值 : index_v1
2019-01-30 10:02:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:02:01 -==> Parameters: 642d30a4-54ef-412f-a3af-a18e66ccf5a6(String), myh(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 10:02:01.573(Timestamp)
2019-01-30 10:02:01 -<==    Updates: 1
2019-01-30 10:02:01 -<==    Updates: 1
2019-01-30 10:03:23 -请求地址 : http://localhost:8080/
2019-01-30 10:03:23 -HTTP METHOD : GET
2019-01-30 10:03:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-30 10:03:23 -参数 : [{}]
2019-01-30 10:03:23 -耗时 : 1
2019-01-30 10:03:23 -返回值 : redirect:/login
2019-01-30 10:03:23 -请求地址 : http://localhost:8080/login
2019-01-30 10:03:23 -HTTP METHOD : GET
2019-01-30 10:03:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:03:23 -参数 : []
2019-01-30 10:03:23 -耗时 : 0
2019-01-30 10:03:23 -返回值 : login
2019-01-30 10:03:27 -请求地址 : http://localhost:8080/login
2019-01-30 10:03:27 -HTTP METHOD : POST
2019-01-30 10:03:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 10:03:27 -参数 : [admin, 123456]
2019-01-30 10:03:27 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 10:03:27 -==> Parameters: admin(String)
2019-01-30 10:03:27 -<==      Total: 1
2019-01-30 10:03:27 -耗时 : 8
2019-01-30 10:03:27 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:03:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:03:27 -==> Parameters: 123(String), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 10:03:27.519(Timestamp)
2019-01-30 10:03:27 -请求地址 : http://localhost:8080/index
2019-01-30 10:03:27 -HTTP METHOD : GET
2019-01-30 10:03:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 10:03:27 -参数 : [{}]
2019-01-30 10:03:27 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 10:03:27 -==> Parameters: 123(String)
2019-01-30 10:03:27 -<==      Total: 3
2019-01-30 10:03:27 -耗时 : 18
2019-01-30 10:03:27 -返回值 : index_v1
2019-01-30 10:03:27 -<==    Updates: 1
2019-01-30 10:03:27 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:03:27 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 10:03:27.562(Timestamp)
2019-01-30 10:03:27 -<==    Updates: 1
2019-01-30 10:03:32 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 10:03:32 -==> Parameters: 123(String)
2019-01-30 10:03:32 -<==      Total: 7
2019-01-30 10:03:32 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:03:32 -HTTP METHOD : GET
2019-01-30 10:03:32 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:03:32 -参数 : []
2019-01-30 10:03:32 -耗时 : 0
2019-01-30 10:03:32 -返回值 : system/user/user
2019-01-30 10:03:32 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:03:32 -HTTP METHOD : GET
2019-01-30 10:03:32 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:03:32 -参数 : [{page=1, limit=15}]
2019-01-30 10:03:32 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:03:32 -==> Parameters: 
2019-01-30 10:03:32 -<==      Total: 4
2019-01-30 10:03:32 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:03:32 -==> Parameters: 
2019-01-30 10:03:32 -<==      Total: 1
2019-01-30 10:03:32 -耗时 : 16
2019-01-30 10:03:32 -返回值 : com.bootdo.common.utils.PageUtils@641ec284
2019-01-30 10:03:34 -请求地址 : http://localhost:8080/sys/user/add
2019-01-30 10:03:34 -HTTP METHOD : GET
2019-01-30 10:03:34 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-30 10:03:34 -参数 : []
2019-01-30 10:03:34 -耗时 : 0
2019-01-30 10:03:34 -返回值 : system/user/add
2019-01-30 10:03:44 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-30 10:03:44 -HTTP METHOD : POST
2019-01-30 10:03:44 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-30 10:03:44 -参数 : [{username=aaa, userId=}]
2019-01-30 10:03:44 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-30 10:03:44 -==> Parameters: aaa(String), (String)
2019-01-30 10:03:44 -<==      Total: 0
2019-01-30 10:03:44 -耗时 : 15
2019-01-30 10:03:44 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:03:44 -请求地址 : http://localhost:8080/sys/user/save
2019-01-30 10:03:44 -HTTP METHOD : POST
2019-01-30 10:03:44 -CLASS_METHOD : com.bootdo.system.controller.UserController.save
2019-01-30 10:03:44 -参数 : [com.bootdo.system.domain.UserDO@7722b3eb]
2019-01-30 10:03:59 -==>  Preparing: insert into sys_user ( `user_id`, `dept_id`, `username`, `usernikename`, `userpwd`, `userstatus`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:03:59 -==> Parameters: 60a4ef74-9eaf-4042-9aca-89e6ec744122(String), null, aaa(String), (String), ab3471328f5072011c91377f71905429(String), 1(Integer), null, null, 1(Integer), null, null, null
2019-01-30 10:03:59 -<==    Updates: 1
2019-01-30 10:03:59 -耗时 : 15373
2019-01-30 10:03:59 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:03:59 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:03:59 -HTTP METHOD : GET
2019-01-30 10:03:59 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:03:59 -参数 : []
2019-01-30 10:03:59 -耗时 : 0
2019-01-30 10:03:59 -返回值 : system/user/user
2019-01-30 10:04:00 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:04:00 -HTTP METHOD : GET
2019-01-30 10:04:00 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:04:00 -参数 : [{page=1, limit=15}]
2019-01-30 10:04:00 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:04:00 -==> Parameters: 
2019-01-30 10:04:00 -<==      Total: 5
2019-01-30 10:04:00 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:04:00 -==> Parameters: 
2019-01-30 10:04:00 -<==      Total: 1
2019-01-30 10:04:00 -耗时 : 13
2019-01-30 10:04:00 -返回值 : com.bootdo.common.utils.PageUtils@74e62d62
2019-01-30 10:04:10 -请求地址 : http://localhost:8080/
2019-01-30 10:04:10 -HTTP METHOD : GET
2019-01-30 10:04:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-30 10:04:10 -参数 : [{}]
2019-01-30 10:04:10 -耗时 : 0
2019-01-30 10:04:10 -返回值 : redirect:/login
2019-01-30 10:04:10 -请求地址 : http://localhost:8080/login
2019-01-30 10:04:10 -HTTP METHOD : GET
2019-01-30 10:04:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:04:10 -参数 : []
2019-01-30 10:04:10 -耗时 : 0
2019-01-30 10:04:10 -返回值 : login
2019-01-30 10:04:19 -请求地址 : http://localhost:8080/login
2019-01-30 10:04:19 -HTTP METHOD : POST
2019-01-30 10:04:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 10:04:19 -参数 : [aaa, 555555]
2019-01-30 10:04:19 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 10:04:19 -==> Parameters: aaa(String)
2019-01-30 10:04:19 -<==      Total: 1
2019-01-30 10:04:19 -耗时 : 3
2019-01-30 10:04:19 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:04:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:04:19 -==> Parameters: 60a4ef74-9eaf-4042-9aca-89e6ec744122(String), aaa(String), 登录(String), 4(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 10:04:19.292(Timestamp)
2019-01-30 10:04:19 -请求地址 : http://localhost:8080/index
2019-01-30 10:04:19 -HTTP METHOD : GET
2019-01-30 10:04:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 10:04:19 -参数 : [{}]
2019-01-30 10:04:19 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 10:04:19 -==> Parameters: 60a4ef74-9eaf-4042-9aca-89e6ec744122(String)
2019-01-30 10:04:19 -<==      Total: 0
2019-01-30 10:04:19 -耗时 : 13
2019-01-30 10:04:19 -返回值 : index_v1
2019-01-30 10:04:19 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:04:19 -==> Parameters: 60a4ef74-9eaf-4042-9aca-89e6ec744122(String), aaa(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 10:04:19.324(Timestamp)
2019-01-30 10:04:19 -<==    Updates: 1
2019-01-30 10:04:19 -<==    Updates: 1
2019-01-30 10:04:23 -请求地址 : http://localhost:8080/
2019-01-30 10:04:23 -HTTP METHOD : GET
2019-01-30 10:04:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-30 10:04:23 -参数 : [{}]
2019-01-30 10:04:23 -耗时 : 0
2019-01-30 10:04:23 -返回值 : redirect:/login
2019-01-30 10:04:23 -请求地址 : http://localhost:8080/login
2019-01-30 10:04:23 -HTTP METHOD : GET
2019-01-30 10:04:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:04:23 -参数 : []
2019-01-30 10:04:23 -耗时 : 0
2019-01-30 10:04:23 -返回值 : login
2019-01-30 10:04:31 -请求地址 : http://localhost:8080/login
2019-01-30 10:04:31 -HTTP METHOD : POST
2019-01-30 10:04:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 10:04:31 -参数 : [admin, 123456]
2019-01-30 10:04:31 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 10:04:31 -==> Parameters: admin(String)
2019-01-30 10:04:31 -<==      Total: 1
2019-01-30 10:04:31 -耗时 : 5
2019-01-30 10:04:31 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:04:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:04:31 -==> Parameters: 123(String), admin(String), 登录(String), 5(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 10:04:31.326(Timestamp)
2019-01-30 10:04:31 -请求地址 : http://localhost:8080/index
2019-01-30 10:04:31 -HTTP METHOD : GET
2019-01-30 10:04:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 10:04:31 -参数 : [{}]
2019-01-30 10:04:31 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 10:04:31 -==> Parameters: 123(String)
2019-01-30 10:04:31 -<==    Updates: 1
2019-01-30 10:04:31 -<==      Total: 3
2019-01-30 10:04:31 -耗时 : 22
2019-01-30 10:04:31 -返回值 : index_v1
2019-01-30 10:04:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:04:31 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 10:04:31.374(Timestamp)
2019-01-30 10:04:31 -<==    Updates: 1
2019-01-30 10:04:33 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 10:04:33 -==> Parameters: 123(String)
2019-01-30 10:04:33 -<==      Total: 7
2019-01-30 10:04:33 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:04:33 -HTTP METHOD : GET
2019-01-30 10:04:33 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:04:33 -参数 : []
2019-01-30 10:04:33 -耗时 : 0
2019-01-30 10:04:33 -返回值 : system/user/user
2019-01-30 10:04:33 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:04:33 -HTTP METHOD : GET
2019-01-30 10:04:33 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:04:33 -参数 : [{page=1, limit=15}]
2019-01-30 10:04:33 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:04:33 -==> Parameters: 
2019-01-30 10:04:33 -<==      Total: 5
2019-01-30 10:04:33 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:04:33 -==> Parameters: 
2019-01-30 10:04:33 -<==      Total: 1
2019-01-30 10:04:33 -耗时 : 16
2019-01-30 10:04:33 -返回值 : com.bootdo.common.utils.PageUtils@36adb9a8
2019-01-30 10:04:38 -请求地址 : http://localhost:8080/sys/user/adminresetpwd
2019-01-30 10:04:38 -HTTP METHOD : POST
2019-01-30 10:04:38 -CLASS_METHOD : com.bootdo.system.controller.UserController.adminresetpwd
2019-01-30 10:04:38 -参数 : [60a4ef74-9eaf-4042-9aca-89e6ec744122]
2019-01-30 10:04:38 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-30 10:04:38 -==> Parameters: 60a4ef74-9eaf-4042-9aca-89e6ec744122(String)
2019-01-30 10:04:38 -<==      Total: 1
2019-01-30 10:04:38 -==>  Preparing: update sys_user SET `username` = ?, `usernikename` = ?, `userpwd` = ?, `userstatus` = ?, `edit_time` = ?, `deleteflag` = ? where user_id = ? 
2019-01-30 10:04:38 -==> Parameters: aaa(String), (String), 7ca4f12dc36c925cd15c6705b5b21932(String), 1(Integer), 2019-01-30 10:03:59.0(Timestamp), 1(Integer), 60a4ef74-9eaf-4042-9aca-89e6ec744122(String)
2019-01-30 10:04:38 -<==    Updates: 1
2019-01-30 10:04:38 -耗时 : 77
2019-01-30 10:04:38 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:04:38 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:04:38 -HTTP METHOD : GET
2019-01-30 10:04:38 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:04:38 -参数 : [{page=1, limit=15}]
2019-01-30 10:04:38 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:04:38 -==> Parameters: 
2019-01-30 10:04:38 -<==      Total: 5
2019-01-30 10:04:38 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:04:38 -==> Parameters: 
2019-01-30 10:04:38 -<==      Total: 1
2019-01-30 10:04:38 -耗时 : 19
2019-01-30 10:04:38 -返回值 : com.bootdo.common.utils.PageUtils@7bdea4d9
2019-01-30 10:04:43 -请求地址 : http://localhost:8080/
2019-01-30 10:04:43 -HTTP METHOD : GET
2019-01-30 10:04:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-30 10:04:43 -参数 : [{}]
2019-01-30 10:04:43 -耗时 : 1
2019-01-30 10:04:43 -返回值 : redirect:/login
2019-01-30 10:04:43 -请求地址 : http://localhost:8080/login
2019-01-30 10:04:43 -HTTP METHOD : GET
2019-01-30 10:04:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:04:43 -参数 : []
2019-01-30 10:04:43 -耗时 : 1
2019-01-30 10:04:43 -返回值 : login
2019-01-30 10:04:50 -请求地址 : http://localhost:8080/login
2019-01-30 10:04:50 -HTTP METHOD : POST
2019-01-30 10:04:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 10:04:50 -参数 : [aaa, 555555]
2019-01-30 10:04:50 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 10:04:50 -==> Parameters: aaa(String)
2019-01-30 10:04:50 -<==      Total: 1
2019-01-30 10:04:50 -耗时 : 11
2019-01-30 10:04:50 -返回值 : {msg=用户或密码错误, code=500}
2019-01-30 10:04:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:04:50 -==> Parameters: -1L(String), 获取用户信息为空(String), 登录(String), 11(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 10:04:50.594(Timestamp)
2019-01-30 10:04:50 -<==    Updates: 1
2019-01-30 10:04:55 -请求地址 : http://localhost:8080/login
2019-01-30 10:04:55 -HTTP METHOD : POST
2019-01-30 10:04:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 10:04:55 -参数 : [aaa, 111111]
2019-01-30 10:04:55 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 10:04:55 -==> Parameters: aaa(String)
2019-01-30 10:04:55 -<==      Total: 1
2019-01-30 10:04:55 -耗时 : 7
2019-01-30 10:04:55 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:04:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:04:55 -==> Parameters: 60a4ef74-9eaf-4042-9aca-89e6ec744122(String), aaa(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 10:04:55.026(Timestamp)
2019-01-30 10:04:55 -请求地址 : http://localhost:8080/index
2019-01-30 10:04:55 -HTTP METHOD : GET
2019-01-30 10:04:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 10:04:55 -参数 : [{}]
2019-01-30 10:04:55 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 10:04:55 -==> Parameters: 60a4ef74-9eaf-4042-9aca-89e6ec744122(String)
2019-01-30 10:04:55 -<==      Total: 0
2019-01-30 10:04:55 -耗时 : 17
2019-01-30 10:04:55 -返回值 : index_v1
2019-01-30 10:04:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:04:55 -==> Parameters: 60a4ef74-9eaf-4042-9aca-89e6ec744122(String), aaa(String), 请求访问主页(String), 17(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 10:04:55.067(Timestamp)
2019-01-30 10:04:55 -<==    Updates: 1
2019-01-30 10:04:55 -<==    Updates: 1
2019-01-30 10:04:56 -请求地址 : http://localhost:8080/
2019-01-30 10:04:56 -HTTP METHOD : GET
2019-01-30 10:04:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-30 10:04:56 -参数 : [{}]
2019-01-30 10:04:56 -耗时 : 1
2019-01-30 10:04:56 -返回值 : redirect:/login
2019-01-30 10:04:56 -请求地址 : http://localhost:8080/login
2019-01-30 10:04:56 -HTTP METHOD : GET
2019-01-30 10:04:56 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:04:56 -参数 : []
2019-01-30 10:04:56 -耗时 : 0
2019-01-30 10:04:56 -返回值 : login
2019-01-30 10:05:00 -请求地址 : http://localhost:8080/login
2019-01-30 10:05:00 -HTTP METHOD : POST
2019-01-30 10:05:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 10:05:00 -参数 : [admin, 123456]
2019-01-30 10:05:00 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 10:05:00 -==> Parameters: admin(String)
2019-01-30 10:05:00 -<==      Total: 1
2019-01-30 10:05:00 -耗时 : 6
2019-01-30 10:05:00 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:05:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:05:00 -==> Parameters: 123(String), admin(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 10:05:00.75(Timestamp)
2019-01-30 10:05:00 -请求地址 : http://localhost:8080/index
2019-01-30 10:05:00 -HTTP METHOD : GET
2019-01-30 10:05:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 10:05:00 -参数 : [{}]
2019-01-30 10:05:00 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 10:05:00 -==> Parameters: 123(String)
2019-01-30 10:05:00 -<==      Total: 3
2019-01-30 10:05:00 -<==    Updates: 1
2019-01-30 10:05:00 -耗时 : 21
2019-01-30 10:05:00 -返回值 : index_v1
2019-01-30 10:05:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:05:00 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 10:05:00.797(Timestamp)
2019-01-30 10:05:00 -<==    Updates: 1
2019-01-30 10:05:02 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 10:05:02 -==> Parameters: 123(String)
2019-01-30 10:05:02 -<==      Total: 7
2019-01-30 10:05:02 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:05:02 -HTTP METHOD : GET
2019-01-30 10:05:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:05:02 -参数 : []
2019-01-30 10:05:02 -耗时 : 0
2019-01-30 10:05:02 -返回值 : system/user/user
2019-01-30 10:05:03 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:05:03 -HTTP METHOD : GET
2019-01-30 10:05:03 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:05:03 -参数 : [{page=1, limit=15}]
2019-01-30 10:05:03 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:05:03 -==> Parameters: 
2019-01-30 10:05:03 -<==      Total: 5
2019-01-30 10:05:03 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:05:03 -==> Parameters: 
2019-01-30 10:05:03 -<==      Total: 1
2019-01-30 10:05:03 -耗时 : 17
2019-01-30 10:05:03 -返回值 : com.bootdo.common.utils.PageUtils@4b521704
2019-01-30 10:05:26 -请求地址 : http://localhost:8080/sys/user/add
2019-01-30 10:05:26 -HTTP METHOD : GET
2019-01-30 10:05:26 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-30 10:05:26 -参数 : []
2019-01-30 10:05:26 -耗时 : 0
2019-01-30 10:05:26 -返回值 : system/user/add
2019-01-30 10:05:46 -请求地址 : http://localhost:8080/sys/user/add
2019-01-30 10:05:46 -HTTP METHOD : GET
2019-01-30 10:05:46 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-30 10:05:46 -参数 : []
2019-01-30 10:05:46 -耗时 : 1
2019-01-30 10:05:46 -返回值 : system/user/add
2019-01-30 10:05:57 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:05:57 -HTTP METHOD : GET
2019-01-30 10:05:57 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:05:57 -参数 : [{page=1, limit=15, username=a}]
2019-01-30 10:05:57 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 10:05:57 -==> Parameters: a(String)
2019-01-30 10:05:57 -<==      Total: 0
2019-01-30 10:05:57 -==>  Preparing: select count(*) from sys_user WHERE username = ? 
2019-01-30 10:05:57 -==> Parameters: a(String)
2019-01-30 10:05:57 -<==      Total: 1
2019-01-30 10:05:57 -耗时 : 31
2019-01-30 10:05:57 -返回值 : com.bootdo.common.utils.PageUtils@2da16831
2019-01-30 10:06:01 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:06:01 -HTTP METHOD : GET
2019-01-30 10:06:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:06:01 -参数 : [{page=1, limit=15, username=}]
2019-01-30 10:06:01 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:06:01 -==> Parameters: 
2019-01-30 10:06:01 -<==      Total: 5
2019-01-30 10:06:01 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:06:01 -==> Parameters: 
2019-01-30 10:06:01 -<==      Total: 1
2019-01-30 10:06:01 -耗时 : 24
2019-01-30 10:06:01 -返回值 : com.bootdo.common.utils.PageUtils@5eba3d0c
2019-01-30 10:06:05 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:06:05 -HTTP METHOD : GET
2019-01-30 10:06:05 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:06:05 -参数 : [{page=1, limit=15, username=a}]
2019-01-30 10:06:05 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username = ? order by user_id desc 
2019-01-30 10:06:05 -==> Parameters: a(String)
2019-01-30 10:06:05 -<==      Total: 0
2019-01-30 10:06:05 -==>  Preparing: select count(*) from sys_user WHERE username = ? 
2019-01-30 10:06:05 -==> Parameters: a(String)
2019-01-30 10:06:05 -<==      Total: 1
2019-01-30 10:06:05 -耗时 : 23
2019-01-30 10:06:05 -返回值 : com.bootdo.common.utils.PageUtils@7cf663a4
2019-01-30 10:11:28 -Starting BootdoApplication on YH-20180312AAAP with PID 8092 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-30 10:11:28 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-30 10:11:28 -The following profiles are active: dev
2019-01-30 10:11:29 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35d08e6c: startup date [Wed Jan 30 10:11:29 CST 2019]; root of context hierarchy
2019-01-30 10:11:30 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$b15452f9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:11:30 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$a5c8179d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:11:30 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:11:30 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:11:30 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:11:30 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$4066e49b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:11:30 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$68421cdb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:11:30 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$5a9b4b82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:11:30 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-30 10:11:31 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:11:31 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:11:31 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:11:31 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:11:31 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:11:31 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-30 10:11:31 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-30 10:11:31 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:11:31 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:11:31 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:11:31 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:11:32 -Tomcat initialized with port(s): 8080 (http)
2019-01-30 10:11:32 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-30 10:11:32 -Starting service [Tomcat]
2019-01-30 10:11:32 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-30 10:11:32 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-30 10:11:32 -Initializing Spring embedded WebApplicationContext
2019-01-30 10:11:32 -Root WebApplicationContext: initialization completed in 3118 ms
2019-01-30 10:11:32 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-30 10:11:32 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-30 10:11:32 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-30 10:11:32 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-30 10:11:32 -Filter xssFilter was not registered (disabled)
2019-01-30 10:11:32 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-30 10:11:32 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-30 10:11:32 -Servlet statViewServlet mapped to [/druid/*]
2019-01-30 10:11:32 -Servlet dispatcherServlet mapped to [/]
2019-01-30 10:11:32 -{dataSource-1} inited
2019-01-30 10:11:33 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35d08e6c: startup date [Wed Jan 30 10:11:29 CST 2019]; root of context hierarchy
2019-01-30 10:11:33 -Using default implementation for ThreadExecutor
2019-01-30 10:11:33 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-30 10:11:33 -Quartz Scheduler v.2.2.1 created.
2019-01-30 10:11:33 -RAMJobStore initialized.
2019-01-30 10:11:33 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-30 10:11:33 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-30 10:11:33 -Quartz scheduler version: 2.2.1
2019-01-30 10:11:33 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@40ac0a56
2019-01-30 10:11:34 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-30 10:11:34 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-30 10:11:35 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:11:35 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-30 10:11:35 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-30 10:11:35 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-30 10:11:35 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-30 10:11:35 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-30 10:11:35 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-30 10:11:35 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-30 10:11:35 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-30 10:11:35 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-30 10:11:35 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:11:35 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-30 10:11:35 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-30 10:11:35 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-30 10:11:35 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 10:11:35 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-30 10:11:35 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-30 10:11:35 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-30 10:11:35 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:11:35 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-30 10:11:35 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-30 10:11:35 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-30 10:11:35 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-30 10:11:35 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-30 10:11:35 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-30 10:11:35 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-30 10:11:35 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:11:35 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-30 10:11:35 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 10:11:35 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-30 10:11:35 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-30 10:11:35 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-30 10:11:35 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-30 10:11:35 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-30 10:11:35 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-30 10:11:35 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-30 10:11:35 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-30 10:11:35 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-30 10:11:35 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-30 10:11:35 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:11:35 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-30 10:11:35 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-30 10:11:35 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-30 10:11:35 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-30 10:11:35 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-30 10:11:35 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-30 10:11:35 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-30 10:11:35 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-30 10:11:35 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-30 10:11:35 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-30 10:11:35 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-30 10:11:35 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-30 10:11:35 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 10:11:35 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-30 10:11:35 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-30 10:11:35 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-30 10:11:35 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-30 10:11:35 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-30 10:11:35 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long)
2019-01-30 10:11:35 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long[])
2019-01-30 10:11:35 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-30 10:11:35 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:11:35 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-30 10:11:35 -Mapped "{[/system/staff/edit/{staffId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 10:11:35 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-30 10:11:35 -Mapped "{[/system/staff/selectView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.selectView()
2019-01-30 10:11:35 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-30 10:11:35 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-30 10:11:35 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-30 10:11:35 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-30 10:11:35 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:11:35 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-30 10:11:35 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-30 10:11:35 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 10:11:35 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:11:35 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-30 10:11:35 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-30 10:11:35 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-30 10:11:35 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:11:35 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-30 10:11:35 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-30 10:11:35 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-30 10:11:35 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-30 10:11:35 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-30 10:11:35 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-30 10:11:35 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-30 10:11:35 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-30 10:11:35 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-30 10:11:35 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-30 10:11:35 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-30 10:11:35 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-30 10:11:36 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 10:11:36 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@35d08e6c: startup date [Wed Jan 30 10:11:29 CST 2019]; root of context hierarchy
2019-01-30 10:11:36 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 10:11:36 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 10:11:36 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 10:11:36 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-30 10:11:36 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-30 10:11:37 -Registering beans for JMX exposure on startup
2019-01-30 10:11:37 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-30 10:11:37 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-30 10:11:37 -Starting beans in phase 2147483647
2019-01-30 10:11:37 -Context refreshed
2019-01-30 10:11:37 -Found 1 custom documentation plugin(s)
2019-01-30 10:11:37 -Scanning for api listing references
2019-01-30 10:11:37 -Generating unique operation named: removeUsingPOST_1
2019-01-30 10:11:37 -Generating unique operation named: editUsingGET_1
2019-01-30 10:11:37 -Generating unique operation named: listUsingGET_1
2019-01-30 10:11:37 -Generating unique operation named: updateUsingPOST_1
2019-01-30 10:11:37 -Generating unique operation named: addUsingGET_1
2019-01-30 10:11:37 -Generating unique operation named: editUsingGET_2
2019-01-30 10:11:37 -Generating unique operation named: listUsingGET_2
2019-01-30 10:11:37 -Generating unique operation named: removeUsingPOST_2
2019-01-30 10:11:37 -Generating unique operation named: removeUsingPOST_3
2019-01-30 10:11:37 -Generating unique operation named: saveUsingPOST_1
2019-01-30 10:11:37 -Generating unique operation named: updateUsingPOST_2
2019-01-30 10:11:37 -Generating unique operation named: listUsingGET_3
2019-01-30 10:11:37 -Generating unique operation named: removeUsingPOST_4
2019-01-30 10:11:37 -Generating unique operation named: welcomeUsingGET_1
2019-01-30 10:11:37 -Generating unique operation named: addUsingGET_2
2019-01-30 10:11:37 -Generating unique operation named: editUsingGET_3
2019-01-30 10:11:37 -Generating unique operation named: listUsingGET_4
2019-01-30 10:11:37 -Generating unique operation named: removeUsingPOST_5
2019-01-30 10:11:37 -Generating unique operation named: saveUsingPOST_2
2019-01-30 10:11:37 -Generating unique operation named: treeUsingGET_1
2019-01-30 10:11:37 -Generating unique operation named: updateUsingPOST_3
2019-01-30 10:11:37 -Generating unique operation named: addUsingGET_3
2019-01-30 10:11:37 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-30 10:11:37 -Generating unique operation named: editUsingGET_4
2019-01-30 10:11:37 -Generating unique operation named: listUsingGET_5
2019-01-30 10:11:37 -Generating unique operation named: saveUsingPOST_3
2019-01-30 10:11:37 -Generating unique operation named: saveUsingPOST_4
2019-01-30 10:11:37 -Generating unique operation named: updateUsingPOST_4
2019-01-30 10:11:37 -Generating unique operation named: listUsingGET_6
2019-01-30 10:11:37 -Generating unique operation named: listUsingHEAD_1
2019-01-30 10:11:37 -Generating unique operation named: listUsingPOST_1
2019-01-30 10:11:37 -Generating unique operation named: listUsingPUT_1
2019-01-30 10:11:37 -Generating unique operation named: listUsingPATCH_1
2019-01-30 10:11:37 -Generating unique operation named: listUsingDELETE_1
2019-01-30 10:11:37 -Generating unique operation named: listUsingOPTIONS_1
2019-01-30 10:11:37 -Generating unique operation named: listUsingTRACE_1
2019-01-30 10:11:37 -Generating unique operation named: addUsingGET_4
2019-01-30 10:11:37 -Generating unique operation named: editUsingGET_5
2019-01-30 10:11:37 -Generating unique operation named: listUsingGET_7
2019-01-30 10:11:37 -Generating unique operation named: removeUsingPOST_6
2019-01-30 10:11:37 -Generating unique operation named: removeUsingPOST_7
2019-01-30 10:11:37 -Generating unique operation named: saveUsingPOST_5
2019-01-30 10:11:37 -Generating unique operation named: updateUsingGET_1
2019-01-30 10:11:37 -Generating unique operation named: updateUsingHEAD_1
2019-01-30 10:11:37 -Generating unique operation named: updateUsingPOST_5
2019-01-30 10:11:37 -Generating unique operation named: updateUsingPUT_1
2019-01-30 10:11:37 -Generating unique operation named: updateUsingPATCH_1
2019-01-30 10:11:37 -Generating unique operation named: updateUsingDELETE_1
2019-01-30 10:11:37 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-30 10:11:37 -Generating unique operation named: updateUsingTRACE_1
2019-01-30 10:11:37 -Generating unique operation named: addUsingGET_5
2019-01-30 10:11:37 -Generating unique operation named: editUsingGET_6
2019-01-30 10:11:37 -Generating unique operation named: listUsingGET_8
2019-01-30 10:11:37 -Generating unique operation named: removeUsingPOST_8
2019-01-30 10:11:37 -Generating unique operation named: removeUsingPOST_9
2019-01-30 10:11:37 -Generating unique operation named: saveUsingPOST_6
2019-01-30 10:11:37 -Generating unique operation named: updateUsingGET_2
2019-01-30 10:11:37 -Generating unique operation named: updateUsingHEAD_2
2019-01-30 10:11:37 -Generating unique operation named: updateUsingPOST_6
2019-01-30 10:11:37 -Generating unique operation named: updateUsingPUT_2
2019-01-30 10:11:37 -Generating unique operation named: updateUsingPATCH_2
2019-01-30 10:11:37 -Generating unique operation named: updateUsingDELETE_2
2019-01-30 10:11:37 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-30 10:11:37 -Generating unique operation named: updateUsingTRACE_2
2019-01-30 10:11:37 -Generating unique operation named: addUsingGET_6
2019-01-30 10:11:38 -Generating unique operation named: editUsingGET_7
2019-01-30 10:11:38 -Generating unique operation named: listUsingGET_9
2019-01-30 10:11:38 -Generating unique operation named: roleUsingGET_1
2019-01-30 10:11:38 -Generating unique operation named: saveUsingPOST_7
2019-01-30 10:11:38 -Starting Quartz Scheduler now
2019-01-30 10:11:38 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-30 10:11:38 -Starting...
2019-01-30 10:11:38 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-30 10:11:38 -Started.
2019-01-30 10:11:38 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-30 10:11:38 -Using a shared selector for servlet write/read
2019-01-30 10:11:38 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-30 10:11:38 -Started BootdoApplication in 9.599 seconds (JVM running for 10.203)
2019-01-30 10:11:38 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-30 10:11:38 -==> Parameters: 
2019-01-30 10:11:38 -<==      Total: 1
2019-01-30 10:12:08 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-30 10:12:08 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-30 10:12:08 -FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
2019-01-30 10:12:08 -Enabling session validation scheduler...
2019-01-30 10:12:08 -请求地址 : http://localhost:8080/login;JSESSIONID=8fe8ad71-86ee-4145-8240-c1e193bd305d
2019-01-30 10:12:08 -HTTP METHOD : GET
2019-01-30 10:12:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:12:08 -参数 : []
2019-01-30 10:12:08 -耗时 : 2
2019-01-30 10:12:08 -返回值 : login
2019-01-30 10:12:08 -请求地址 : http://localhost:8080/login
2019-01-30 10:12:08 -HTTP METHOD : GET
2019-01-30 10:12:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:12:08 -参数 : []
2019-01-30 10:12:08 -耗时 : 0
2019-01-30 10:12:08 -返回值 : login
2019-01-30 10:12:12 -请求地址 : http://localhost:8080/login
2019-01-30 10:12:12 -HTTP METHOD : POST
2019-01-30 10:12:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 10:12:12 -参数 : [admin, 123456]
2019-01-30 10:12:12 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-30 10:12:12 -==> Parameters: 
2019-01-30 10:12:12 -<==      Total: 1
2019-01-30 10:12:12 -耗时 : 44
2019-01-30 10:12:12 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:12:12 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-30 10:12:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:12:12 -==> Parameters: 123(String), admin(String), 登录(String), 44(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 10:12:12.471(Timestamp)
2019-01-30 10:12:12 -请求地址 : http://localhost:8080/index
2019-01-30 10:12:12 -HTTP METHOD : GET
2019-01-30 10:12:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 10:12:12 -参数 : [{}]
2019-01-30 10:12:12 -<==    Updates: 1
2019-01-30 10:12:12 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 10:12:12 -==> Parameters: 123(String)
2019-01-30 10:12:12 -<==      Total: 3
2019-01-30 10:12:12 -耗时 : 65
2019-01-30 10:12:12 -返回值 : index_v1
2019-01-30 10:12:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:12:12 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 65(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 10:12:12.613(Timestamp)
2019-01-30 10:12:12 -<==    Updates: 1
2019-01-30 10:12:16 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 10:12:16 -==> Parameters: 123(String)
2019-01-30 10:12:16 -<==      Total: 7
2019-01-30 10:12:16 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:12:16 -HTTP METHOD : GET
2019-01-30 10:12:16 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:12:16 -参数 : []
2019-01-30 10:12:16 -耗时 : 0
2019-01-30 10:12:16 -返回值 : system/user/user
2019-01-30 10:12:16 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:12:16 -HTTP METHOD : GET
2019-01-30 10:12:16 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:12:16 -参数 : [{page=1, limit=15}]
2019-01-30 10:12:16 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:12:16 -==> Parameters: 
2019-01-30 10:12:16 -<==      Total: 5
2019-01-30 10:12:16 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:12:16 -==> Parameters: 
2019-01-30 10:12:16 -<==      Total: 1
2019-01-30 10:12:16 -耗时 : 43
2019-01-30 10:12:16 -返回值 : com.bootdo.common.utils.PageUtils@75c97b00
2019-01-30 10:12:20 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:12:20 -HTTP METHOD : GET
2019-01-30 10:12:20 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:12:20 -参数 : [{page=1, limit=15, username=a, usernikename=}]
2019-01-30 10:12:20 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%a%' order by user_id desc 
2019-01-30 10:12:20 -==> Parameters: 
2019-01-30 10:12:20 -<==      Total: 2
2019-01-30 10:12:20 -==>  Preparing: select count(*) from sys_user WHERE username LIKE '%a%' 
2019-01-30 10:12:20 -==> Parameters: 
2019-01-30 10:12:20 -<==      Total: 1
2019-01-30 10:12:21 -耗时 : 25
2019-01-30 10:12:21 -返回值 : com.bootdo.common.utils.PageUtils@51dc3725
2019-01-30 10:12:24 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:12:24 -HTTP METHOD : GET
2019-01-30 10:12:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:12:24 -参数 : [{page=1, limit=15, username=ad, usernikename=}]
2019-01-30 10:12:24 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%ad%' order by user_id desc 
2019-01-30 10:12:24 -==> Parameters: 
2019-01-30 10:12:24 -<==      Total: 1
2019-01-30 10:12:24 -==>  Preparing: select count(*) from sys_user WHERE username LIKE '%ad%' 
2019-01-30 10:12:24 -==> Parameters: 
2019-01-30 10:12:24 -<==      Total: 1
2019-01-30 10:12:24 -耗时 : 27
2019-01-30 10:12:24 -返回值 : com.bootdo.common.utils.PageUtils@70fccc5f
2019-01-30 10:12:27 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:12:27 -HTTP METHOD : GET
2019-01-30 10:12:27 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:12:27 -参数 : [{page=1, limit=15, username=g, usernikename=}]
2019-01-30 10:12:27 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%g%' order by user_id desc 
2019-01-30 10:12:27 -==> Parameters: 
2019-01-30 10:12:27 -<==      Total: 2
2019-01-30 10:12:27 -==>  Preparing: select count(*) from sys_user WHERE username LIKE '%g%' 
2019-01-30 10:12:27 -==> Parameters: 
2019-01-30 10:12:27 -<==      Total: 1
2019-01-30 10:12:27 -耗时 : 23
2019-01-30 10:12:27 -返回值 : com.bootdo.common.utils.PageUtils@47e76b8e
2019-01-30 10:12:32 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:12:32 -HTTP METHOD : GET
2019-01-30 10:12:32 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:12:32 -参数 : [{page=1, limit=15, username=, usernikename=g}]
2019-01-30 10:12:32 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE usernikename LIKE '%g%' order by user_id desc 
2019-01-30 10:12:32 -==> Parameters: 
2019-01-30 10:12:32 -<==      Total: 1
2019-01-30 10:12:32 -==>  Preparing: select count(*) from sys_user WHERE usernikename LIKE '%g%' 
2019-01-30 10:12:32 -==> Parameters: 
2019-01-30 10:12:32 -<==      Total: 1
2019-01-30 10:12:32 -耗时 : 25
2019-01-30 10:12:32 -返回值 : com.bootdo.common.utils.PageUtils@952581
2019-01-30 10:12:35 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-30 10:12:36 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:12:36 -HTTP METHOD : GET
2019-01-30 10:12:36 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:12:36 -参数 : [{page=1, limit=15, username=, usernikename=l}]
2019-01-30 10:12:36 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE usernikename LIKE '%l%' order by user_id desc 
2019-01-30 10:12:36 -==> Parameters: 
2019-01-30 10:12:36 -<==      Total: 1
2019-01-30 10:12:36 -==>  Preparing: select count(*) from sys_user WHERE usernikename LIKE '%l%' 
2019-01-30 10:12:36 -==> Parameters: 
2019-01-30 10:12:36 -<==      Total: 1
2019-01-30 10:12:36 -耗时 : 33
2019-01-30 10:12:36 -返回值 : com.bootdo.common.utils.PageUtils@30a2eb6a
2019-01-30 10:12:40 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:12:40 -HTTP METHOD : GET
2019-01-30 10:12:40 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:12:40 -参数 : [{page=1, limit=15, username=m, usernikename=}]
2019-01-30 10:12:40 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%m%' order by user_id desc 
2019-01-30 10:12:40 -==> Parameters: 
2019-01-30 10:12:40 -<==      Total: 2
2019-01-30 10:12:40 -==>  Preparing: select count(*) from sys_user WHERE username LIKE '%m%' 
2019-01-30 10:12:40 -==> Parameters: 
2019-01-30 10:12:40 -<==      Total: 1
2019-01-30 10:12:40 -耗时 : 29
2019-01-30 10:12:40 -返回值 : com.bootdo.common.utils.PageUtils@69dece65
2019-01-30 10:13:02 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:13:02 -HTTP METHOD : GET
2019-01-30 10:13:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:13:02 -参数 : [{page=1, limit=15, username=, usernikename=}]
2019-01-30 10:13:03 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:13:03 -==> Parameters: 
2019-01-30 10:13:03 -<==      Total: 5
2019-01-30 10:13:03 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:13:03 -==> Parameters: 
2019-01-30 10:13:03 -<==      Total: 1
2019-01-30 10:13:03 -耗时 : 32
2019-01-30 10:13:03 -返回值 : com.bootdo.common.utils.PageUtils@2fc6d7c3
2019-01-30 10:14:43 -请求地址 : http://localhost:8080/index
2019-01-30 10:14:43 -HTTP METHOD : GET
2019-01-30 10:14:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 10:14:43 -参数 : [{}]
2019-01-30 10:14:43 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 10:14:43 -==> Parameters: 123(String)
2019-01-30 10:14:43 -<==      Total: 3
2019-01-30 10:14:43 -耗时 : 29
2019-01-30 10:14:43 -返回值 : index_v1
2019-01-30 10:14:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:14:43 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 10:14:43.616(Timestamp)
2019-01-30 10:14:43 -<==    Updates: 1
2019-01-30 10:14:46 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 10:14:46 -==> Parameters: 123(String)
2019-01-30 10:14:46 -<==      Total: 8
2019-01-30 10:14:46 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:14:46 -HTTP METHOD : GET
2019-01-30 10:14:46 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:14:46 -参数 : []
2019-01-30 10:14:46 -耗时 : 0
2019-01-30 10:14:46 -返回值 : system/user/user
2019-01-30 10:14:46 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:14:46 -HTTP METHOD : GET
2019-01-30 10:14:46 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:14:46 -参数 : [{page=1, limit=15}]
2019-01-30 10:14:46 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:14:46 -==> Parameters: 
2019-01-30 10:14:46 -<==      Total: 5
2019-01-30 10:14:46 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:14:46 -==> Parameters: 
2019-01-30 10:14:46 -<==      Total: 1
2019-01-30 10:14:46 -耗时 : 17
2019-01-30 10:14:46 -返回值 : com.bootdo.common.utils.PageUtils@207c89e5
2019-01-30 10:15:02 -请求地址 : http://localhost:8080/sys/user/update
2019-01-30 10:15:02 -HTTP METHOD : POST
2019-01-30 10:15:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.update
2019-01-30 10:15:02 -参数 : [com.bootdo.system.domain.UserDO@6f0b5f71]
2019-01-30 10:15:02 -==>  Preparing: update sys_user SET `userstatus` = ? where user_id = ? 
2019-01-30 10:15:02 -==> Parameters: 0(Integer), 60a4ef74-9eaf-4042-9aca-89e6ec744122(String)
2019-01-30 10:15:02 -<==    Updates: 1
2019-01-30 10:15:02 -耗时 : 58
2019-01-30 10:15:02 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:15:02 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:15:02 -HTTP METHOD : GET
2019-01-30 10:15:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:15:02 -参数 : [{page=1, limit=15}]
2019-01-30 10:15:02 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:15:02 -==> Parameters: 
2019-01-30 10:15:02 -<==      Total: 5
2019-01-30 10:15:02 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:15:02 -==> Parameters: 
2019-01-30 10:15:02 -<==      Total: 1
2019-01-30 10:15:02 -耗时 : 19
2019-01-30 10:15:02 -返回值 : com.bootdo.common.utils.PageUtils@161d1aa5
2019-01-30 10:15:44 -请求地址 : http://localhost:8080/index
2019-01-30 10:15:44 -HTTP METHOD : GET
2019-01-30 10:15:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 10:15:44 -参数 : [{}]
2019-01-30 10:15:44 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 10:15:44 -==> Parameters: 123(String)
2019-01-30 10:15:44 -<==      Total: 3
2019-01-30 10:15:44 -耗时 : 21
2019-01-30 10:15:44 -返回值 : index_v1
2019-01-30 10:15:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:15:44 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 10:15:44.048(Timestamp)
2019-01-30 10:15:44 -<==    Updates: 1
2019-01-30 10:15:46 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:15:46 -HTTP METHOD : GET
2019-01-30 10:15:46 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:15:46 -参数 : []
2019-01-30 10:15:46 -耗时 : 0
2019-01-30 10:15:46 -返回值 : system/user/user
2019-01-30 10:15:46 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:15:46 -HTTP METHOD : GET
2019-01-30 10:15:46 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:15:46 -参数 : [{page=1, limit=15}]
2019-01-30 10:15:46 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:15:46 -==> Parameters: 
2019-01-30 10:15:46 -<==      Total: 5
2019-01-30 10:15:46 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:15:46 -==> Parameters: 
2019-01-30 10:15:46 -<==      Total: 1
2019-01-30 10:15:46 -耗时 : 19
2019-01-30 10:15:46 -返回值 : com.bootdo.common.utils.PageUtils@5c944726
2019-01-30 10:15:52 -请求地址 : http://localhost:8080/sys/user/adminresetpwd
2019-01-30 10:15:52 -HTTP METHOD : POST
2019-01-30 10:15:52 -CLASS_METHOD : com.bootdo.system.controller.UserController.adminresetpwd
2019-01-30 10:15:52 -参数 : [60a4ef74-9eaf-4042-9aca-89e6ec744122]
2019-01-30 10:15:52 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where user_id = ? 
2019-01-30 10:15:52 -==> Parameters: 60a4ef74-9eaf-4042-9aca-89e6ec744122(String)
2019-01-30 10:15:52 -<==      Total: 1
2019-01-30 10:15:52 -==>  Preparing: update sys_user SET `username` = ?, `usernikename` = ?, `userpwd` = ?, `userstatus` = ?, `edit_time` = ?, `deleteflag` = ? where user_id = ? 
2019-01-30 10:15:52 -==> Parameters: aaa(String), (String), 7ca4f12dc36c925cd15c6705b5b21932(String), 0(Integer), 2019-01-30 10:03:59.0(Timestamp), 1(Integer), 60a4ef74-9eaf-4042-9aca-89e6ec744122(String)
2019-01-30 10:15:52 -<==    Updates: 1
2019-01-30 10:15:52 -耗时 : 53
2019-01-30 10:15:52 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:15:52 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:15:52 -HTTP METHOD : GET
2019-01-30 10:15:52 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:15:52 -参数 : [{page=1, limit=15}]
2019-01-30 10:15:52 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:15:52 -==> Parameters: 
2019-01-30 10:15:52 -<==      Total: 5
2019-01-30 10:15:52 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:15:52 -==> Parameters: 
2019-01-30 10:15:52 -<==      Total: 1
2019-01-30 10:15:52 -耗时 : 16
2019-01-30 10:15:52 -返回值 : com.bootdo.common.utils.PageUtils@b768b7f
2019-01-30 10:15:59 -请求地址 : http://localhost:8080/sys/user/update
2019-01-30 10:15:59 -HTTP METHOD : POST
2019-01-30 10:15:59 -CLASS_METHOD : com.bootdo.system.controller.UserController.update
2019-01-30 10:15:59 -参数 : [com.bootdo.system.domain.UserDO@772ace2e]
2019-01-30 10:15:59 -==>  Preparing: update sys_user SET `userstatus` = ? where user_id = ? 
2019-01-30 10:15:59 -==> Parameters: 1(Integer), 60a4ef74-9eaf-4042-9aca-89e6ec744122(String)
2019-01-30 10:15:59 -<==    Updates: 1
2019-01-30 10:15:59 -耗时 : 40
2019-01-30 10:15:59 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:15:59 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:15:59 -HTTP METHOD : GET
2019-01-30 10:15:59 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:15:59 -参数 : [{page=1, limit=15}]
2019-01-30 10:15:59 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:15:59 -==> Parameters: 
2019-01-30 10:15:59 -<==      Total: 5
2019-01-30 10:15:59 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:15:59 -==> Parameters: 
2019-01-30 10:15:59 -<==      Total: 1
2019-01-30 10:15:59 -耗时 : 20
2019-01-30 10:15:59 -返回值 : com.bootdo.common.utils.PageUtils@2ee37ab0
2019-01-30 10:16:05 -请求地址 : http://localhost:8080/sys/user/add
2019-01-30 10:16:05 -HTTP METHOD : GET
2019-01-30 10:16:05 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-30 10:16:05 -参数 : []
2019-01-30 10:16:05 -耗时 : 1
2019-01-30 10:16:05 -返回值 : system/user/add
2019-01-30 10:32:29 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 10:32:29 -==> Parameters: 123(String)
2019-01-30 10:32:29 -<==      Total: 8
2019-01-30 10:32:29 -请求地址 : http://localhost:8080/sys/user/add
2019-01-30 10:32:29 -HTTP METHOD : GET
2019-01-30 10:32:29 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-30 10:32:29 -参数 : []
2019-01-30 10:32:29 -耗时 : 1
2019-01-30 10:32:29 -返回值 : system/user/add
2019-01-30 10:32:35 -请求地址 : http://localhost:8080/sys/user/isExist
2019-01-30 10:32:35 -HTTP METHOD : POST
2019-01-30 10:32:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.isExist
2019-01-30 10:32:35 -参数 : [{username=bbb, userId=}]
2019-01-30 10:32:35 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user where username = ? and user_id <> ? 
2019-01-30 10:32:35 -==> Parameters: bbb(String), (String)
2019-01-30 10:32:35 -<==      Total: 0
2019-01-30 10:32:35 -耗时 : 10
2019-01-30 10:32:35 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:32:35 -请求地址 : http://localhost:8080/sys/user/save
2019-01-30 10:32:35 -HTTP METHOD : POST
2019-01-30 10:32:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.save
2019-01-30 10:32:35 -参数 : [com.bootdo.system.domain.UserDO@4dcf2ab9]
2019-01-30 10:32:35 -==>  Preparing: insert into sys_user ( `user_id`, `dept_id`, `username`, `usernikename`, `userpwd`, `userstatus`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:32:35 -==> Parameters: 63a92c5b-cdf4-4d1e-becb-37ee4b18c663(String), null, bbb(String), (String), f656c4fc826c3c43f7a71eaed471a4f7(String), 1(Integer), null, null, 1(Integer), null, null, null
2019-01-30 10:32:35 -<==    Updates: 1
2019-01-30 10:32:35 -耗时 : 42
2019-01-30 10:32:35 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:32:35 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:32:35 -HTTP METHOD : GET
2019-01-30 10:32:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:32:35 -参数 : []
2019-01-30 10:32:35 -耗时 : 1
2019-01-30 10:32:35 -返回值 : system/user/user
2019-01-30 10:32:35 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:32:35 -HTTP METHOD : GET
2019-01-30 10:32:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:32:35 -参数 : [{page=1, limit=15}]
2019-01-30 10:32:35 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:32:35 -==> Parameters: 
2019-01-30 10:32:35 -<==      Total: 6
2019-01-30 10:32:35 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:32:35 -==> Parameters: 
2019-01-30 10:32:35 -<==      Total: 1
2019-01-30 10:32:35 -耗时 : 17
2019-01-30 10:32:35 -返回值 : com.bootdo.common.utils.PageUtils@c19695d
2019-01-30 10:32:52 -请求地址 : http://localhost:8080/index
2019-01-30 10:32:52 -HTTP METHOD : GET
2019-01-30 10:32:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 10:32:52 -参数 : [{}]
2019-01-30 10:32:52 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 10:32:52 -==> Parameters: 123(String)
2019-01-30 10:32:52 -<==      Total: 3
2019-01-30 10:32:52 -耗时 : 12
2019-01-30 10:32:52 -返回值 : index_v1
2019-01-30 10:32:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:32:52 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 12(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 10:32:52.174(Timestamp)
2019-01-30 10:32:52 -<==    Updates: 1
2019-01-30 10:32:54 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:32:54 -HTTP METHOD : GET
2019-01-30 10:32:54 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:32:54 -参数 : []
2019-01-30 10:32:54 -耗时 : 0
2019-01-30 10:32:54 -返回值 : system/user/user
2019-01-30 10:32:54 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:32:54 -HTTP METHOD : GET
2019-01-30 10:32:54 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:32:54 -参数 : [{page=1, limit=15}]
2019-01-30 10:32:54 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:32:54 -==> Parameters: 
2019-01-30 10:32:54 -<==      Total: 6
2019-01-30 10:32:54 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:32:54 -==> Parameters: 
2019-01-30 10:32:54 -<==      Total: 1
2019-01-30 10:32:54 -耗时 : 15
2019-01-30 10:32:54 -返回值 : com.bootdo.common.utils.PageUtils@4c44801f
2019-01-30 10:33:04 -请求地址 : http://localhost:8080/login;JSESSIONID=8640696b-4ea4-4a39-b28b-7f061ad6c806
2019-01-30 10:33:04 -HTTP METHOD : GET
2019-01-30 10:33:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:33:04 -参数 : []
2019-01-30 10:33:04 -耗时 : 1
2019-01-30 10:33:04 -返回值 : login
2019-01-30 10:33:04 -请求地址 : http://localhost:8080/login
2019-01-30 10:33:04 -HTTP METHOD : GET
2019-01-30 10:33:04 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:33:04 -参数 : []
2019-01-30 10:33:04 -耗时 : 0
2019-01-30 10:33:04 -返回值 : login
2019-01-30 10:33:07 -请求地址 : http://localhost:8080/login
2019-01-30 10:33:07 -HTTP METHOD : POST
2019-01-30 10:33:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 10:33:07 -参数 : [admin, 123456]
2019-01-30 10:33:07 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-30 10:33:07 -==> Parameters: 
2019-01-30 10:33:07 -<==      Total: 1
2019-01-30 10:33:07 -耗时 : 7
2019-01-30 10:33:07 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:33:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:33:07 -==> Parameters: 123(String), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 10:33:07.615(Timestamp)
2019-01-30 10:33:07 -请求地址 : http://localhost:8080/index
2019-01-30 10:33:07 -HTTP METHOD : GET
2019-01-30 10:33:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 10:33:07 -参数 : [{}]
2019-01-30 10:33:07 -<==    Updates: 1
2019-01-30 10:33:07 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 10:33:07 -==> Parameters: 123(String)
2019-01-30 10:33:07 -<==      Total: 3
2019-01-30 10:33:07 -耗时 : 39
2019-01-30 10:33:07 -返回值 : index_v1
2019-01-30 10:33:07 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:33:07 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 40(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 10:33:07.672(Timestamp)
2019-01-30 10:33:07 -<==    Updates: 1
2019-01-30 10:33:09 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 10:33:09 -==> Parameters: 123(String)
2019-01-30 10:33:09 -<==      Total: 8
2019-01-30 10:33:09 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:33:09 -HTTP METHOD : GET
2019-01-30 10:33:09 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:33:09 -参数 : []
2019-01-30 10:33:09 -耗时 : 0
2019-01-30 10:33:09 -返回值 : system/user/user
2019-01-30 10:33:09 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:33:09 -HTTP METHOD : GET
2019-01-30 10:33:09 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:33:09 -参数 : [{page=1, limit=5}]
2019-01-30 10:33:09 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:33:09 -==> Parameters: 
2019-01-30 10:33:09 -<==      Total: 6
2019-01-30 10:33:09 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:33:09 -==> Parameters: 
2019-01-30 10:33:09 -<==      Total: 1
2019-01-30 10:33:09 -耗时 : 13
2019-01-30 10:33:09 -返回值 : com.bootdo.common.utils.PageUtils@21bdd45a
2019-01-30 10:33:49 -请求地址 : http://localhost:8080/index
2019-01-30 10:33:49 -HTTP METHOD : GET
2019-01-30 10:33:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 10:33:49 -参数 : [{}]
2019-01-30 10:33:49 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 10:33:49 -==> Parameters: 123(String)
2019-01-30 10:33:49 -<==      Total: 3
2019-01-30 10:33:49 -耗时 : 13
2019-01-30 10:33:49 -返回值 : index_v1
2019-01-30 10:33:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:33:49 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 10:33:49.078(Timestamp)
2019-01-30 10:33:49 -<==    Updates: 1
2019-01-30 10:33:51 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:33:51 -HTTP METHOD : GET
2019-01-30 10:33:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:33:51 -参数 : []
2019-01-30 10:33:51 -耗时 : 0
2019-01-30 10:33:51 -返回值 : system/user/user
2019-01-30 10:33:51 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:33:51 -HTTP METHOD : GET
2019-01-30 10:33:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:33:51 -参数 : [{page=1, limit=5}]
2019-01-30 10:33:51 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:33:51 -==> Parameters: 
2019-01-30 10:33:51 -<==      Total: 6
2019-01-30 10:33:51 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:33:51 -==> Parameters: 
2019-01-30 10:33:51 -<==      Total: 1
2019-01-30 10:33:51 -耗时 : 15
2019-01-30 10:33:51 -返回值 : com.bootdo.common.utils.PageUtils@2c9cb8a2
2019-01-30 10:34:04 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:34:04 -HTTP METHOD : GET
2019-01-30 10:34:04 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:34:04 -参数 : [{page=2, limit=5}]
2019-01-30 10:34:04 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:34:04 -==> Parameters: 
2019-01-30 10:34:04 -<==      Total: 6
2019-01-30 10:34:04 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:34:04 -==> Parameters: 
2019-01-30 10:34:04 -<==      Total: 1
2019-01-30 10:34:04 -耗时 : 28
2019-01-30 10:34:04 -返回值 : com.bootdo.common.utils.PageUtils@79f9ccf
2019-01-30 10:34:06 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:34:06 -HTTP METHOD : GET
2019-01-30 10:34:06 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:34:06 -参数 : [{page=1, limit=5}]
2019-01-30 10:34:06 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:34:06 -==> Parameters: 
2019-01-30 10:34:06 -<==      Total: 6
2019-01-30 10:34:06 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:34:06 -==> Parameters: 
2019-01-30 10:34:06 -<==      Total: 1
2019-01-30 10:34:06 -耗时 : 24
2019-01-30 10:34:06 -返回值 : com.bootdo.common.utils.PageUtils@12761fcd
2019-01-30 10:34:07 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:34:07 -HTTP METHOD : GET
2019-01-30 10:34:07 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:34:07 -参数 : [{page=2, limit=5}]
2019-01-30 10:34:07 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:34:07 -==> Parameters: 
2019-01-30 10:34:07 -<==      Total: 6
2019-01-30 10:34:07 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:34:07 -==> Parameters: 
2019-01-30 10:34:07 -<==      Total: 1
2019-01-30 10:34:07 -耗时 : 24
2019-01-30 10:34:07 -返回值 : com.bootdo.common.utils.PageUtils@241bee82
2019-01-30 10:34:40 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:34:40 -HTTP METHOD : GET
2019-01-30 10:34:40 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:34:40 -参数 : []
2019-01-30 10:34:40 -耗时 : 1
2019-01-30 10:34:40 -返回值 : system/user/user
2019-01-30 10:34:40 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:34:40 -HTTP METHOD : GET
2019-01-30 10:34:40 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:34:40 -参数 : [{page=1, limit=5}]
2019-01-30 10:35:47 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc 
2019-01-30 10:35:47 -==> Parameters: 
2019-01-30 10:35:47 -<==      Total: 6
2019-01-30 10:35:47 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:35:47 -==> Parameters: 
2019-01-30 10:35:47 -<==      Total: 1
2019-01-30 10:35:47 -耗时 : 67002
2019-01-30 10:35:47 -返回值 : com.bootdo.common.utils.PageUtils@2a701bed
2019-01-30 10:35:51 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 10:35:51 -==> Parameters: 123(String)
2019-01-30 10:35:51 -<==      Total: 8
2019-01-30 10:35:51 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:35:51 -HTTP METHOD : GET
2019-01-30 10:35:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:35:51 -参数 : [{page=2, limit=5}]
2019-01-30 10:44:51 -Starting BootdoApplication on YH-20180312AAAP with PID 9984 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-30 10:44:51 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-30 10:44:51 -The following profiles are active: dev
2019-01-30 10:44:51 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13cf7d52: startup date [Wed Jan 30 10:44:51 CST 2019]; root of context hierarchy
2019-01-30 10:44:52 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$be1b624d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:44:53 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$b28f26f1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:44:53 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:44:53 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:44:53 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:44:53 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$4d2df3ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:44:53 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$75092c2f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:44:53 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$67625ad6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:44:53 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-30 10:44:53 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:44:53 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:44:53 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:44:53 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:44:53 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:44:53 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-30 10:44:54 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-30 10:44:54 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:44:54 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:44:54 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:44:54 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:44:54 -Tomcat initialized with port(s): 8080 (http)
2019-01-30 10:44:54 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-30 10:44:54 -Starting service [Tomcat]
2019-01-30 10:44:54 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-30 10:44:54 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-30 10:44:54 -Initializing Spring embedded WebApplicationContext
2019-01-30 10:44:54 -Root WebApplicationContext: initialization completed in 3123 ms
2019-01-30 10:44:55 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-30 10:44:55 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-30 10:44:55 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-30 10:44:55 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-30 10:44:55 -Filter xssFilter was not registered (disabled)
2019-01-30 10:44:55 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-30 10:44:55 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-30 10:44:55 -Servlet statViewServlet mapped to [/druid/*]
2019-01-30 10:44:55 -Servlet dispatcherServlet mapped to [/]
2019-01-30 10:44:55 -{dataSource-1} inited
2019-01-30 10:44:56 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13cf7d52: startup date [Wed Jan 30 10:44:51 CST 2019]; root of context hierarchy
2019-01-30 10:44:56 -Using default implementation for ThreadExecutor
2019-01-30 10:44:56 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-30 10:44:56 -Quartz Scheduler v.2.2.1 created.
2019-01-30 10:44:56 -RAMJobStore initialized.
2019-01-30 10:44:56 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-30 10:44:56 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-30 10:44:56 -Quartz scheduler version: 2.2.1
2019-01-30 10:44:56 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@69de72ec
2019-01-30 10:44:56 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-30 10:44:57 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-30 10:44:58 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:44:58 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-30 10:44:58 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-30 10:44:58 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-30 10:44:58 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-30 10:44:58 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-30 10:44:58 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-30 10:44:58 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-30 10:44:58 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-30 10:44:58 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-30 10:44:58 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:44:58 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-30 10:44:58 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-30 10:44:58 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-30 10:44:58 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 10:44:58 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-30 10:44:58 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-30 10:44:58 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-30 10:44:58 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:44:58 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-30 10:44:58 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-30 10:44:58 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-30 10:44:58 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-30 10:44:58 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-30 10:44:58 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-30 10:44:58 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-30 10:44:58 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:44:58 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-30 10:44:58 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 10:44:58 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-30 10:44:58 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-30 10:44:58 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-30 10:44:58 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-30 10:44:58 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-30 10:44:58 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-30 10:44:58 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-30 10:44:58 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-30 10:44:58 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-30 10:44:58 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-30 10:44:58 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:44:58 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-30 10:44:58 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-30 10:44:58 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-30 10:44:58 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-30 10:44:58 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-30 10:44:58 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-30 10:44:58 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-30 10:44:58 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-30 10:44:58 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-30 10:44:58 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-30 10:44:58 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-30 10:44:58 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-30 10:44:58 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 10:44:58 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-30 10:44:58 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-30 10:44:58 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-30 10:44:58 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-30 10:44:58 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-30 10:44:58 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long)
2019-01-30 10:44:58 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long[])
2019-01-30 10:44:58 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-30 10:44:58 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:44:58 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-30 10:44:58 -Mapped "{[/system/staff/edit/{staffId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 10:44:58 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-30 10:44:58 -Mapped "{[/system/staff/selectView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.selectView()
2019-01-30 10:44:58 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-30 10:44:58 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-30 10:44:58 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-30 10:44:58 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-30 10:44:58 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:44:58 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-30 10:44:58 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-30 10:44:58 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 10:44:58 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:44:58 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-30 10:44:58 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-30 10:44:58 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-30 10:44:58 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:44:58 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-30 10:44:58 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-30 10:44:58 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-30 10:44:58 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-30 10:44:58 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-30 10:44:58 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-30 10:44:58 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-30 10:44:58 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-30 10:44:58 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-30 10:44:58 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-30 10:44:58 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-30 10:44:58 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-30 10:44:59 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 10:44:59 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13cf7d52: startup date [Wed Jan 30 10:44:51 CST 2019]; root of context hierarchy
2019-01-30 10:44:59 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 10:44:59 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 10:44:59 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 10:44:59 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-30 10:44:59 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-30 10:45:00 -Registering beans for JMX exposure on startup
2019-01-30 10:45:00 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-30 10:45:00 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-30 10:45:00 -Starting beans in phase 2147483647
2019-01-30 10:45:00 -Context refreshed
2019-01-30 10:45:00 -Found 1 custom documentation plugin(s)
2019-01-30 10:45:00 -Scanning for api listing references
2019-01-30 10:45:00 -Generating unique operation named: removeUsingPOST_1
2019-01-30 10:45:00 -Generating unique operation named: editUsingGET_1
2019-01-30 10:45:00 -Generating unique operation named: listUsingGET_1
2019-01-30 10:45:00 -Generating unique operation named: updateUsingPOST_1
2019-01-30 10:45:00 -Generating unique operation named: addUsingGET_1
2019-01-30 10:45:00 -Generating unique operation named: editUsingGET_2
2019-01-30 10:45:00 -Generating unique operation named: listUsingGET_2
2019-01-30 10:45:00 -Generating unique operation named: removeUsingPOST_2
2019-01-30 10:45:00 -Generating unique operation named: removeUsingPOST_3
2019-01-30 10:45:00 -Generating unique operation named: saveUsingPOST_1
2019-01-30 10:45:00 -Generating unique operation named: updateUsingPOST_2
2019-01-30 10:45:00 -Generating unique operation named: listUsingGET_3
2019-01-30 10:45:00 -Generating unique operation named: removeUsingPOST_4
2019-01-30 10:45:00 -Generating unique operation named: welcomeUsingGET_1
2019-01-30 10:45:01 -Generating unique operation named: addUsingGET_2
2019-01-30 10:45:01 -Generating unique operation named: editUsingGET_3
2019-01-30 10:45:01 -Generating unique operation named: listUsingGET_4
2019-01-30 10:45:01 -Generating unique operation named: removeUsingPOST_5
2019-01-30 10:45:01 -Generating unique operation named: saveUsingPOST_2
2019-01-30 10:45:01 -Generating unique operation named: treeUsingGET_1
2019-01-30 10:45:01 -Generating unique operation named: updateUsingPOST_3
2019-01-30 10:45:01 -Generating unique operation named: addUsingGET_3
2019-01-30 10:45:01 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-30 10:45:01 -Generating unique operation named: editUsingGET_4
2019-01-30 10:45:01 -Generating unique operation named: listUsingGET_5
2019-01-30 10:45:01 -Generating unique operation named: saveUsingPOST_3
2019-01-30 10:45:01 -Generating unique operation named: saveUsingPOST_4
2019-01-30 10:45:01 -Generating unique operation named: updateUsingPOST_4
2019-01-30 10:45:01 -Generating unique operation named: listUsingGET_6
2019-01-30 10:45:01 -Generating unique operation named: listUsingHEAD_1
2019-01-30 10:45:01 -Generating unique operation named: listUsingPOST_1
2019-01-30 10:45:01 -Generating unique operation named: listUsingPUT_1
2019-01-30 10:45:01 -Generating unique operation named: listUsingPATCH_1
2019-01-30 10:45:01 -Generating unique operation named: listUsingDELETE_1
2019-01-30 10:45:01 -Generating unique operation named: listUsingOPTIONS_1
2019-01-30 10:45:01 -Generating unique operation named: listUsingTRACE_1
2019-01-30 10:45:01 -Generating unique operation named: addUsingGET_4
2019-01-30 10:45:01 -Generating unique operation named: editUsingGET_5
2019-01-30 10:45:01 -Generating unique operation named: listUsingGET_7
2019-01-30 10:45:01 -Generating unique operation named: removeUsingPOST_6
2019-01-30 10:45:01 -Generating unique operation named: removeUsingPOST_7
2019-01-30 10:45:01 -Generating unique operation named: saveUsingPOST_5
2019-01-30 10:45:01 -Generating unique operation named: updateUsingGET_1
2019-01-30 10:45:01 -Generating unique operation named: updateUsingHEAD_1
2019-01-30 10:45:01 -Generating unique operation named: updateUsingPOST_5
2019-01-30 10:45:01 -Generating unique operation named: updateUsingPUT_1
2019-01-30 10:45:01 -Generating unique operation named: updateUsingPATCH_1
2019-01-30 10:45:01 -Generating unique operation named: updateUsingDELETE_1
2019-01-30 10:45:01 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-30 10:45:01 -Generating unique operation named: updateUsingTRACE_1
2019-01-30 10:45:01 -Generating unique operation named: addUsingGET_5
2019-01-30 10:45:01 -Generating unique operation named: editUsingGET_6
2019-01-30 10:45:01 -Generating unique operation named: listUsingGET_8
2019-01-30 10:45:01 -Generating unique operation named: removeUsingPOST_8
2019-01-30 10:45:01 -Generating unique operation named: removeUsingPOST_9
2019-01-30 10:45:01 -Generating unique operation named: saveUsingPOST_6
2019-01-30 10:45:01 -Generating unique operation named: updateUsingGET_2
2019-01-30 10:45:01 -Generating unique operation named: updateUsingHEAD_2
2019-01-30 10:45:01 -Generating unique operation named: updateUsingPOST_6
2019-01-30 10:45:01 -Generating unique operation named: updateUsingPUT_2
2019-01-30 10:45:01 -Generating unique operation named: updateUsingPATCH_2
2019-01-30 10:45:01 -Generating unique operation named: updateUsingDELETE_2
2019-01-30 10:45:01 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-30 10:45:01 -Generating unique operation named: updateUsingTRACE_2
2019-01-30 10:45:01 -Generating unique operation named: addUsingGET_6
2019-01-30 10:45:01 -Generating unique operation named: editUsingGET_7
2019-01-30 10:45:01 -Generating unique operation named: listUsingGET_9
2019-01-30 10:45:01 -Generating unique operation named: roleUsingGET_1
2019-01-30 10:45:01 -Generating unique operation named: saveUsingPOST_7
2019-01-30 10:45:01 -Starting Quartz Scheduler now
2019-01-30 10:45:01 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-30 10:45:01 -Starting...
2019-01-30 10:45:01 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-30 10:45:01 -Started.
2019-01-30 10:45:01 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-30 10:45:01 -Using a shared selector for servlet write/read
2019-01-30 10:45:01 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-30 10:45:01 -Started BootdoApplication in 10.46 seconds (JVM running for 11.052)
2019-01-30 10:45:01 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-30 10:45:01 -==> Parameters: 
2019-01-30 10:45:01 -<==      Total: 1
2019-01-30 10:45:19 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-30 10:45:19 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-30 10:45:19 -FrameworkServlet 'dispatcherServlet': initialization completed in 34 ms
2019-01-30 10:45:19 -Enabling session validation scheduler...
2019-01-30 10:45:19 -请求地址 : http://localhost:8080/login;JSESSIONID=1f519dc0-ba1b-4654-8c42-5ac53a5e4ffe
2019-01-30 10:45:19 -HTTP METHOD : GET
2019-01-30 10:45:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:45:19 -参数 : []
2019-01-30 10:45:19 -耗时 : 4
2019-01-30 10:45:19 -返回值 : login
2019-01-30 10:45:19 -请求地址 : http://localhost:8080/login
2019-01-30 10:45:19 -HTTP METHOD : GET
2019-01-30 10:45:19 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:45:19 -参数 : []
2019-01-30 10:45:19 -耗时 : 0
2019-01-30 10:45:19 -返回值 : login
2019-01-30 10:45:23 -请求地址 : http://localhost:8080/login
2019-01-30 10:45:23 -HTTP METHOD : POST
2019-01-30 10:45:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 10:45:23 -参数 : [admin, 123456]
2019-01-30 10:45:23 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-30 10:45:23 -==> Parameters: 
2019-01-30 10:45:23 -<==      Total: 1
2019-01-30 10:45:23 -耗时 : 44
2019-01-30 10:45:23 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:45:23 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-30 10:45:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:45:23 -==> Parameters: 123(String), admin(String), 登录(String), 44(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 10:45:23.281(Timestamp)
2019-01-30 10:45:23 -请求地址 : http://localhost:8080/index
2019-01-30 10:45:23 -HTTP METHOD : GET
2019-01-30 10:45:23 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 10:45:23 -参数 : [{}]
2019-01-30 10:45:23 -<==    Updates: 1
2019-01-30 10:45:23 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 10:45:23 -==> Parameters: 123(String)
2019-01-30 10:45:23 -<==      Total: 3
2019-01-30 10:45:23 -耗时 : 81
2019-01-30 10:45:23 -返回值 : index_v1
2019-01-30 10:45:23 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:45:23 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 81(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 10:45:23.455(Timestamp)
2019-01-30 10:45:23 -<==    Updates: 1
2019-01-30 10:45:25 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 10:45:25 -==> Parameters: 123(String)
2019-01-30 10:45:25 -<==      Total: 8
2019-01-30 10:45:25 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:45:25 -HTTP METHOD : GET
2019-01-30 10:45:25 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:45:25 -参数 : []
2019-01-30 10:45:25 -耗时 : 0
2019-01-30 10:45:25 -返回值 : system/user/user
2019-01-30 10:45:26 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:45:26 -HTTP METHOD : GET
2019-01-30 10:45:26 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:45:26 -参数 : [{page=1, limit=5}]
2019-01-30 10:45:36 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc limit ?, ? 
2019-01-30 10:45:36 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 10:45:36 -<==      Total: 5
2019-01-30 10:45:36 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:45:36 -==> Parameters: 
2019-01-30 10:45:36 -<==      Total: 1
2019-01-30 10:45:36 -耗时 : 9972
2019-01-30 10:45:36 -返回值 : com.bootdo.common.utils.PageUtils@5ac77041
2019-01-30 10:45:41 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:45:41 -HTTP METHOD : GET
2019-01-30 10:45:41 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:45:41 -参数 : [{page=2, limit=5}]
2019-01-30 10:45:41 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc limit ?, ? 
2019-01-30 10:45:41 -==> Parameters: 5(Integer), 5(Integer)
2019-01-30 10:45:41 -<==      Total: 1
2019-01-30 10:45:41 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:45:41 -==> Parameters: 
2019-01-30 10:45:41 -<==      Total: 1
2019-01-30 10:45:41 -耗时 : 32
2019-01-30 10:45:41 -返回值 : com.bootdo.common.utils.PageUtils@3f6c9797
2019-01-30 10:45:44 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:45:44 -HTTP METHOD : GET
2019-01-30 10:45:44 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:45:44 -参数 : [{page=1, limit=5}]
2019-01-30 10:45:45 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc limit ?, ? 
2019-01-30 10:45:45 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 10:45:45 -<==      Total: 5
2019-01-30 10:45:45 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:45:45 -==> Parameters: 
2019-01-30 10:45:45 -<==      Total: 1
2019-01-30 10:45:45 -耗时 : 34
2019-01-30 10:45:45 -返回值 : com.bootdo.common.utils.PageUtils@517c684
2019-01-30 10:45:47 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:45:47 -HTTP METHOD : GET
2019-01-30 10:45:47 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:45:47 -参数 : [{page=2, limit=5}]
2019-01-30 10:45:47 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc limit ?, ? 
2019-01-30 10:45:47 -==> Parameters: 5(Integer), 5(Integer)
2019-01-30 10:45:47 -<==      Total: 1
2019-01-30 10:45:47 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:45:47 -==> Parameters: 
2019-01-30 10:45:47 -<==      Total: 1
2019-01-30 10:45:47 -耗时 : 32
2019-01-30 10:45:47 -返回值 : com.bootdo.common.utils.PageUtils@39a2d3d3
2019-01-30 10:45:50 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:45:50 -HTTP METHOD : GET
2019-01-30 10:45:50 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:45:50 -参数 : [{page=1, limit=5}]
2019-01-30 10:45:50 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc limit ?, ? 
2019-01-30 10:45:50 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 10:45:50 -<==      Total: 5
2019-01-30 10:45:50 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:45:50 -==> Parameters: 
2019-01-30 10:45:50 -<==      Total: 1
2019-01-30 10:45:50 -耗时 : 36
2019-01-30 10:45:50 -返回值 : com.bootdo.common.utils.PageUtils@747874f0
2019-01-30 10:45:51 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:45:51 -HTTP METHOD : GET
2019-01-30 10:45:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:45:51 -参数 : [{page=2, limit=5}]
2019-01-30 10:45:51 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc limit ?, ? 
2019-01-30 10:45:51 -==> Parameters: 5(Integer), 5(Integer)
2019-01-30 10:45:51 -<==      Total: 1
2019-01-30 10:45:51 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:45:51 -==> Parameters: 
2019-01-30 10:45:51 -<==      Total: 1
2019-01-30 10:45:51 -耗时 : 29
2019-01-30 10:45:51 -返回值 : com.bootdo.common.utils.PageUtils@104ed4a7
2019-01-30 10:45:58 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-30 10:46:00 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:46:00 -HTTP METHOD : GET
2019-01-30 10:46:00 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:46:00 -参数 : [{page=1, limit=5}]
2019-01-30 10:46:00 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc limit ?, ? 
2019-01-30 10:46:00 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 10:46:00 -<==      Total: 5
2019-01-30 10:46:00 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:46:00 -==> Parameters: 
2019-01-30 10:46:00 -<==      Total: 1
2019-01-30 10:46:00 -耗时 : 34
2019-01-30 10:46:00 -返回值 : com.bootdo.common.utils.PageUtils@76684434
2019-01-30 10:46:04 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:46:04 -HTTP METHOD : GET
2019-01-30 10:46:04 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:46:04 -参数 : [{page=1, limit=10}]
2019-01-30 10:46:04 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc limit ?, ? 
2019-01-30 10:46:04 -==> Parameters: 0(Integer), 10(Integer)
2019-01-30 10:46:04 -<==      Total: 6
2019-01-30 10:46:04 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:46:04 -==> Parameters: 
2019-01-30 10:46:04 -<==      Total: 1
2019-01-30 10:46:04 -耗时 : 34
2019-01-30 10:46:04 -返回值 : com.bootdo.common.utils.PageUtils@7d40d192
2019-01-30 10:46:14 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:46:14 -HTTP METHOD : GET
2019-01-30 10:46:14 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:46:14 -参数 : [{page=1, limit=5}]
2019-01-30 10:46:14 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by user_id desc limit ?, ? 
2019-01-30 10:46:14 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 10:46:14 -<==      Total: 5
2019-01-30 10:46:14 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:46:14 -==> Parameters: 
2019-01-30 10:46:14 -<==      Total: 1
2019-01-30 10:46:14 -耗时 : 43
2019-01-30 10:46:14 -返回值 : com.bootdo.common.utils.PageUtils@59d03dfb
2019-01-30 10:47:19 -Starting BootdoApplication on YH-20180312AAAP with PID 12524 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-30 10:47:19 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-30 10:47:19 -The following profiles are active: dev
2019-01-30 10:47:20 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e1fa5b1: startup date [Wed Jan 30 10:47:20 CST 2019]; root of context hierarchy
2019-01-30 10:47:21 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$e447ccea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:47:21 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$d8bb918e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:47:21 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:47:21 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:47:21 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:47:21 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$735a5e8c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:47:21 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9b3596cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:47:21 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8d8ec573] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:47:21 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-30 10:47:22 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:47:22 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:47:22 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:47:22 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:47:22 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:47:22 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-30 10:47:22 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-30 10:47:22 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:47:22 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:47:22 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:47:22 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 10:47:23 -Tomcat initialized with port(s): 8080 (http)
2019-01-30 10:47:23 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-30 10:47:23 -Starting service [Tomcat]
2019-01-30 10:47:23 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-30 10:47:23 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-30 10:47:23 -Initializing Spring embedded WebApplicationContext
2019-01-30 10:47:23 -Root WebApplicationContext: initialization completed in 3159 ms
2019-01-30 10:47:23 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-30 10:47:23 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-30 10:47:23 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-30 10:47:23 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-30 10:47:23 -Filter xssFilter was not registered (disabled)
2019-01-30 10:47:23 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-30 10:47:23 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-30 10:47:23 -Servlet statViewServlet mapped to [/druid/*]
2019-01-30 10:47:23 -Servlet dispatcherServlet mapped to [/]
2019-01-30 10:47:24 -{dataSource-1} inited
2019-01-30 10:47:24 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e1fa5b1: startup date [Wed Jan 30 10:47:20 CST 2019]; root of context hierarchy
2019-01-30 10:47:24 -Using default implementation for ThreadExecutor
2019-01-30 10:47:24 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-30 10:47:24 -Quartz Scheduler v.2.2.1 created.
2019-01-30 10:47:24 -RAMJobStore initialized.
2019-01-30 10:47:24 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-30 10:47:24 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-30 10:47:24 -Quartz scheduler version: 2.2.1
2019-01-30 10:47:24 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@566f4659
2019-01-30 10:47:25 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-30 10:47:25 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-30 10:47:26 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:47:26 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-30 10:47:26 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-30 10:47:26 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-30 10:47:26 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-30 10:47:26 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-30 10:47:26 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-30 10:47:26 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-30 10:47:26 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-30 10:47:26 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-30 10:47:26 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:47:26 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-30 10:47:26 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-30 10:47:26 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-30 10:47:26 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 10:47:26 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-30 10:47:26 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-30 10:47:26 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-30 10:47:26 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:47:26 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-30 10:47:26 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-30 10:47:26 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-30 10:47:26 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-30 10:47:26 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-30 10:47:26 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-30 10:47:26 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-30 10:47:26 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:47:26 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-30 10:47:26 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 10:47:26 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-30 10:47:26 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-30 10:47:26 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-30 10:47:26 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-30 10:47:26 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-30 10:47:26 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-30 10:47:26 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-30 10:47:26 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-30 10:47:26 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-30 10:47:26 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-30 10:47:26 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:47:26 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-30 10:47:26 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-30 10:47:26 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-30 10:47:26 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-30 10:47:26 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-30 10:47:26 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-30 10:47:26 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-30 10:47:26 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-30 10:47:26 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-30 10:47:26 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-30 10:47:26 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-30 10:47:26 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-30 10:47:26 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 10:47:26 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-30 10:47:26 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-30 10:47:26 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-30 10:47:26 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-30 10:47:26 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-30 10:47:26 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long)
2019-01-30 10:47:26 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long[])
2019-01-30 10:47:26 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-30 10:47:26 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:47:26 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-30 10:47:26 -Mapped "{[/system/staff/edit/{staffId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 10:47:26 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-30 10:47:26 -Mapped "{[/system/staff/selectView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.selectView()
2019-01-30 10:47:26 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-30 10:47:26 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-30 10:47:26 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-30 10:47:26 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-30 10:47:26 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:47:26 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-30 10:47:26 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-30 10:47:26 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 10:47:26 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:47:26 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-30 10:47:26 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-30 10:47:26 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-30 10:47:26 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 10:47:26 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-30 10:47:26 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-30 10:47:26 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-30 10:47:26 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-30 10:47:26 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-30 10:47:26 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-30 10:47:26 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-30 10:47:26 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-30 10:47:26 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-30 10:47:26 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-30 10:47:26 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-30 10:47:26 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-30 10:47:27 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 10:47:27 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e1fa5b1: startup date [Wed Jan 30 10:47:20 CST 2019]; root of context hierarchy
2019-01-30 10:47:27 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 10:47:27 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 10:47:27 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 10:47:27 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-30 10:47:27 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-30 10:47:28 -Registering beans for JMX exposure on startup
2019-01-30 10:47:28 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-30 10:47:28 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-30 10:47:28 -Starting beans in phase 2147483647
2019-01-30 10:47:28 -Context refreshed
2019-01-30 10:47:28 -Found 1 custom documentation plugin(s)
2019-01-30 10:47:28 -Scanning for api listing references
2019-01-30 10:47:28 -Generating unique operation named: removeUsingPOST_1
2019-01-30 10:47:28 -Generating unique operation named: editUsingGET_1
2019-01-30 10:47:28 -Generating unique operation named: listUsingGET_1
2019-01-30 10:47:28 -Generating unique operation named: updateUsingPOST_1
2019-01-30 10:47:28 -Generating unique operation named: addUsingGET_1
2019-01-30 10:47:28 -Generating unique operation named: editUsingGET_2
2019-01-30 10:47:28 -Generating unique operation named: listUsingGET_2
2019-01-30 10:47:28 -Generating unique operation named: removeUsingPOST_2
2019-01-30 10:47:28 -Generating unique operation named: removeUsingPOST_3
2019-01-30 10:47:28 -Generating unique operation named: saveUsingPOST_1
2019-01-30 10:47:28 -Generating unique operation named: updateUsingPOST_2
2019-01-30 10:47:28 -Generating unique operation named: listUsingGET_3
2019-01-30 10:47:28 -Generating unique operation named: removeUsingPOST_4
2019-01-30 10:47:28 -Generating unique operation named: welcomeUsingGET_1
2019-01-30 10:47:28 -Generating unique operation named: addUsingGET_2
2019-01-30 10:47:28 -Generating unique operation named: editUsingGET_3
2019-01-30 10:47:28 -Generating unique operation named: listUsingGET_4
2019-01-30 10:47:28 -Generating unique operation named: removeUsingPOST_5
2019-01-30 10:47:28 -Generating unique operation named: saveUsingPOST_2
2019-01-30 10:47:28 -Generating unique operation named: treeUsingGET_1
2019-01-30 10:47:28 -Generating unique operation named: updateUsingPOST_3
2019-01-30 10:47:28 -Generating unique operation named: addUsingGET_3
2019-01-30 10:47:28 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-30 10:47:28 -Generating unique operation named: editUsingGET_4
2019-01-30 10:47:29 -Generating unique operation named: listUsingGET_5
2019-01-30 10:47:29 -Generating unique operation named: saveUsingPOST_3
2019-01-30 10:47:29 -Generating unique operation named: saveUsingPOST_4
2019-01-30 10:47:29 -Generating unique operation named: updateUsingPOST_4
2019-01-30 10:47:29 -Generating unique operation named: listUsingGET_6
2019-01-30 10:47:29 -Generating unique operation named: listUsingHEAD_1
2019-01-30 10:47:29 -Generating unique operation named: listUsingPOST_1
2019-01-30 10:47:29 -Generating unique operation named: listUsingPUT_1
2019-01-30 10:47:29 -Generating unique operation named: listUsingPATCH_1
2019-01-30 10:47:29 -Generating unique operation named: listUsingDELETE_1
2019-01-30 10:47:29 -Generating unique operation named: listUsingOPTIONS_1
2019-01-30 10:47:29 -Generating unique operation named: listUsingTRACE_1
2019-01-30 10:47:29 -Generating unique operation named: addUsingGET_4
2019-01-30 10:47:29 -Generating unique operation named: editUsingGET_5
2019-01-30 10:47:29 -Generating unique operation named: listUsingGET_7
2019-01-30 10:47:29 -Generating unique operation named: removeUsingPOST_6
2019-01-30 10:47:29 -Generating unique operation named: removeUsingPOST_7
2019-01-30 10:47:29 -Generating unique operation named: saveUsingPOST_5
2019-01-30 10:47:29 -Generating unique operation named: updateUsingGET_1
2019-01-30 10:47:29 -Generating unique operation named: updateUsingHEAD_1
2019-01-30 10:47:29 -Generating unique operation named: updateUsingPOST_5
2019-01-30 10:47:29 -Generating unique operation named: updateUsingPUT_1
2019-01-30 10:47:29 -Generating unique operation named: updateUsingPATCH_1
2019-01-30 10:47:29 -Generating unique operation named: updateUsingDELETE_1
2019-01-30 10:47:29 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-30 10:47:29 -Generating unique operation named: updateUsingTRACE_1
2019-01-30 10:47:29 -Generating unique operation named: addUsingGET_5
2019-01-30 10:47:29 -Generating unique operation named: editUsingGET_6
2019-01-30 10:47:29 -Generating unique operation named: listUsingGET_8
2019-01-30 10:47:29 -Generating unique operation named: removeUsingPOST_8
2019-01-30 10:47:29 -Generating unique operation named: removeUsingPOST_9
2019-01-30 10:47:29 -Generating unique operation named: saveUsingPOST_6
2019-01-30 10:47:29 -Generating unique operation named: updateUsingGET_2
2019-01-30 10:47:29 -Generating unique operation named: updateUsingHEAD_2
2019-01-30 10:47:29 -Generating unique operation named: updateUsingPOST_6
2019-01-30 10:47:29 -Generating unique operation named: updateUsingPUT_2
2019-01-30 10:47:29 -Generating unique operation named: updateUsingPATCH_2
2019-01-30 10:47:29 -Generating unique operation named: updateUsingDELETE_2
2019-01-30 10:47:29 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-30 10:47:29 -Generating unique operation named: updateUsingTRACE_2
2019-01-30 10:47:29 -Generating unique operation named: addUsingGET_6
2019-01-30 10:47:29 -Generating unique operation named: editUsingGET_7
2019-01-30 10:47:29 -Generating unique operation named: listUsingGET_9
2019-01-30 10:47:29 -Generating unique operation named: roleUsingGET_1
2019-01-30 10:47:29 -Generating unique operation named: saveUsingPOST_7
2019-01-30 10:47:29 -Starting Quartz Scheduler now
2019-01-30 10:47:29 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-30 10:47:29 -Starting...
2019-01-30 10:47:29 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-30 10:47:29 -Started.
2019-01-30 10:47:29 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-30 10:47:29 -Using a shared selector for servlet write/read
2019-01-30 10:47:29 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-30 10:47:29 -Started BootdoApplication in 9.812 seconds (JVM running for 10.373)
2019-01-30 10:47:29 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-30 10:47:29 -==> Parameters: 
2019-01-30 10:47:29 -<==      Total: 1
2019-01-30 10:48:26 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-30 10:49:07 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-30 10:49:07 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-30 10:49:07 -FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2019-01-30 10:49:07 -Enabling session validation scheduler...
2019-01-30 10:49:07 -请求地址 : http://localhost:8080/login;JSESSIONID=8ebca23a-8feb-40cb-a102-e41d52b1f203
2019-01-30 10:49:07 -HTTP METHOD : GET
2019-01-30 10:49:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:49:07 -参数 : []
2019-01-30 10:49:07 -耗时 : 3
2019-01-30 10:49:07 -返回值 : login
2019-01-30 10:49:08 -请求地址 : http://localhost:8080/login
2019-01-30 10:49:08 -HTTP METHOD : GET
2019-01-30 10:49:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 10:49:08 -参数 : []
2019-01-30 10:49:08 -耗时 : 0
2019-01-30 10:49:08 -返回值 : login
2019-01-30 10:49:11 -请求地址 : http://localhost:8080/login
2019-01-30 10:49:11 -HTTP METHOD : POST
2019-01-30 10:49:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 10:49:11 -参数 : [admin, 123456]
2019-01-30 10:49:11 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-30 10:49:11 -==> Parameters: 
2019-01-30 10:49:11 -<==      Total: 1
2019-01-30 10:49:11 -耗时 : 50
2019-01-30 10:49:11 -返回值 : {msg=操作成功, code=0}
2019-01-30 10:49:11 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-30 10:49:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:49:11 -==> Parameters: 123(String), admin(String), 登录(String), 50(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 10:49:11.923(Timestamp)
2019-01-30 10:49:11 -请求地址 : http://localhost:8080/index
2019-01-30 10:49:11 -HTTP METHOD : GET
2019-01-30 10:49:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 10:49:11 -参数 : [{}]
2019-01-30 10:49:11 -<==    Updates: 1
2019-01-30 10:49:12 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 10:49:12 -==> Parameters: 123(String)
2019-01-30 10:49:12 -<==      Total: 3
2019-01-30 10:49:12 -耗时 : 69
2019-01-30 10:49:12 -返回值 : index_v1
2019-01-30 10:49:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:49:12 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 69(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 10:49:12.095(Timestamp)
2019-01-30 10:49:12 -<==    Updates: 1
2019-01-30 10:49:14 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 10:49:14 -==> Parameters: 123(String)
2019-01-30 10:49:14 -<==      Total: 8
2019-01-30 10:49:14 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:49:14 -HTTP METHOD : GET
2019-01-30 10:49:14 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:49:14 -参数 : []
2019-01-30 10:49:14 -耗时 : 0
2019-01-30 10:49:14 -返回值 : system/user/user
2019-01-30 10:49:15 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:49:15 -HTTP METHOD : GET
2019-01-30 10:49:15 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:49:15 -参数 : [{page=1, limit=5, sort=username, order=asc}]
2019-01-30 10:49:15 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by username asc limit ?, ? 
2019-01-30 10:49:15 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 10:49:15 -<==      Total: 5
2019-01-30 10:49:15 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:49:15 -==> Parameters: 
2019-01-30 10:49:15 -<==      Total: 1
2019-01-30 10:49:15 -耗时 : 52
2019-01-30 10:49:15 -返回值 : com.bootdo.common.utils.PageUtils@529513a9
2019-01-30 10:49:28 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:49:28 -HTTP METHOD : GET
2019-01-30 10:49:28 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:49:28 -参数 : [{page=1, limit=5, sort=username, order=asc, username=g, usernikename=}]
2019-01-30 10:49:28 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%g%' order by username asc limit ?, ? 
2019-01-30 10:49:28 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 10:49:28 -<==      Total: 2
2019-01-30 10:49:28 -==>  Preparing: select count(*) from sys_user WHERE username LIKE '%g%' 
2019-01-30 10:49:28 -==> Parameters: 
2019-01-30 10:49:28 -<==      Total: 1
2019-01-30 10:49:28 -耗时 : 30
2019-01-30 10:49:28 -返回值 : com.bootdo.common.utils.PageUtils@3b00562f
2019-01-30 10:49:42 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:49:42 -HTTP METHOD : GET
2019-01-30 10:49:42 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:49:42 -参数 : [{page=1, limit=5, sort=username, order=asc, username=a, usernikename=}]
2019-01-30 10:49:58 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%a%' order by username asc limit ?, ? 
2019-01-30 10:49:58 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 10:49:58 -<==      Total: 2
2019-01-30 10:49:58 -==>  Preparing: select count(*) from sys_user WHERE username LIKE '%a%' 
2019-01-30 10:49:58 -==> Parameters: 
2019-01-30 10:49:58 -<==      Total: 1
2019-01-30 10:49:58 -耗时 : 15958
2019-01-30 10:49:58 -返回值 : com.bootdo.common.utils.PageUtils@2d941a53
2019-01-30 10:50:03 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:50:03 -HTTP METHOD : GET
2019-01-30 10:50:03 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:50:03 -参数 : [{page=1, limit=5, sort=username, order=asc, username=, usernikename=}]
2019-01-30 10:50:03 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by username asc limit ?, ? 
2019-01-30 10:50:03 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 10:50:03 -<==      Total: 5
2019-01-30 10:50:03 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:50:03 -==> Parameters: 
2019-01-30 10:50:03 -<==      Total: 1
2019-01-30 10:50:03 -耗时 : 31
2019-01-30 10:50:03 -返回值 : com.bootdo.common.utils.PageUtils@298c7455
2019-01-30 10:50:22 -请求地址 : http://localhost:8080/index
2019-01-30 10:50:22 -HTTP METHOD : GET
2019-01-30 10:50:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 10:50:22 -参数 : [{}]
2019-01-30 10:50:22 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 10:50:22 -==> Parameters: 123(String)
2019-01-30 10:50:22 -<==      Total: 3
2019-01-30 10:50:22 -耗时 : 31
2019-01-30 10:50:22 -返回值 : index_v1
2019-01-30 10:50:22 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 10:50:22 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 10:50:22.052(Timestamp)
2019-01-30 10:50:22 -<==    Updates: 1
2019-01-30 10:50:24 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:50:24 -HTTP METHOD : GET
2019-01-30 10:50:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:50:24 -参数 : []
2019-01-30 10:50:24 -耗时 : 1
2019-01-30 10:50:24 -返回值 : system/user/user
2019-01-30 10:50:24 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:50:24 -HTTP METHOD : GET
2019-01-30 10:50:24 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:50:24 -参数 : [{page=1, limit=-1, sort=username, order=asc}]
2019-01-30 10:50:24 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by username asc 
2019-01-30 10:50:24 -==> Parameters: 
2019-01-30 10:50:24 -<==      Total: 6
2019-01-30 10:50:24 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:50:24 -==> Parameters: 
2019-01-30 10:50:24 -<==      Total: 1
2019-01-30 10:50:24 -耗时 : 25
2019-01-30 10:50:24 -返回值 : com.bootdo.common.utils.PageUtils@3635fef1
2019-01-30 10:57:33 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 10:57:33 -==> Parameters: 123(String)
2019-01-30 10:57:33 -<==      Total: 8
2019-01-30 10:57:33 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 10:57:33 -HTTP METHOD : GET
2019-01-30 10:57:33 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 10:57:33 -参数 : []
2019-01-30 10:57:33 -耗时 : 1
2019-01-30 10:57:33 -返回值 : system/user/user
2019-01-30 10:57:34 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:57:34 -HTTP METHOD : GET
2019-01-30 10:57:34 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:57:34 -参数 : [{page=1, limit=5, sort=username, order=asc}]
2019-01-30 10:57:34 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by username asc limit ?, ? 
2019-01-30 10:57:34 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 10:57:34 -<==      Total: 5
2019-01-30 10:57:34 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:57:34 -==> Parameters: 
2019-01-30 10:57:34 -<==      Total: 1
2019-01-30 10:57:34 -耗时 : 22
2019-01-30 10:57:34 -返回值 : com.bootdo.common.utils.PageUtils@218339e3
2019-01-30 10:57:35 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:57:35 -HTTP METHOD : GET
2019-01-30 10:57:35 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:57:35 -参数 : [{page=2, limit=5, sort=username, order=asc}]
2019-01-30 10:57:35 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by username asc limit ?, ? 
2019-01-30 10:57:35 -==> Parameters: 5(Integer), 5(Integer)
2019-01-30 10:57:35 -<==      Total: 1
2019-01-30 10:57:35 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:57:35 -==> Parameters: 
2019-01-30 10:57:35 -<==      Total: 1
2019-01-30 10:57:35 -耗时 : 38
2019-01-30 10:57:35 -返回值 : com.bootdo.common.utils.PageUtils@28143ca1
2019-01-30 10:57:37 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:57:37 -HTTP METHOD : GET
2019-01-30 10:57:37 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:57:37 -参数 : [{page=1, limit=5, sort=username, order=asc}]
2019-01-30 10:57:37 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by username asc limit ?, ? 
2019-01-30 10:57:37 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 10:57:37 -<==      Total: 5
2019-01-30 10:57:37 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:57:37 -==> Parameters: 
2019-01-30 10:57:37 -<==      Total: 1
2019-01-30 10:57:37 -耗时 : 36
2019-01-30 10:57:37 -返回值 : com.bootdo.common.utils.PageUtils@a0ad755
2019-01-30 10:58:26 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:58:26 -HTTP METHOD : GET
2019-01-30 10:58:26 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:58:26 -参数 : [{page=1, limit=5, sort=username, order=asc}]
2019-01-30 10:58:26 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by username asc limit ?, ? 
2019-01-30 10:58:26 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 10:58:26 -<==      Total: 5
2019-01-30 10:58:26 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:58:26 -==> Parameters: 
2019-01-30 10:58:26 -<==      Total: 1
2019-01-30 10:58:26 -耗时 : 42
2019-01-30 10:58:26 -返回值 : com.bootdo.common.utils.PageUtils@231d9253
2019-01-30 10:58:27 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:58:27 -HTTP METHOD : GET
2019-01-30 10:58:27 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:58:27 -参数 : [{page=1, limit=5, sort=username, order=asc}]
2019-01-30 10:58:27 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by username asc limit ?, ? 
2019-01-30 10:58:27 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 10:58:27 -<==      Total: 5
2019-01-30 10:58:27 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:58:27 -==> Parameters: 
2019-01-30 10:58:27 -<==      Total: 1
2019-01-30 10:58:27 -耗时 : 36
2019-01-30 10:58:27 -返回值 : com.bootdo.common.utils.PageUtils@4baca2ff
2019-01-30 10:58:30 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 10:58:30 -HTTP METHOD : GET
2019-01-30 10:58:30 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 10:58:30 -参数 : [{page=2, limit=5, sort=username, order=asc}]
2019-01-30 10:58:30 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by username asc limit ?, ? 
2019-01-30 10:58:30 -==> Parameters: 5(Integer), 5(Integer)
2019-01-30 10:58:30 -<==      Total: 1
2019-01-30 10:58:30 -==>  Preparing: select count(*) from sys_user 
2019-01-30 10:58:30 -==> Parameters: 
2019-01-30 10:58:30 -<==      Total: 1
2019-01-30 10:58:30 -耗时 : 35
2019-01-30 10:58:30 -返回值 : com.bootdo.common.utils.PageUtils@137152bf
2019-01-30 11:03:07 -请求地址 : http://localhost:8080/login;JSESSIONID=63e0f9c9-5bda-4d02-babf-2dfaacf6fb18
2019-01-30 11:03:07 -HTTP METHOD : GET
2019-01-30 11:03:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 11:03:07 -参数 : []
2019-01-30 11:03:07 -耗时 : 1
2019-01-30 11:03:07 -返回值 : login
2019-01-30 11:03:07 -请求地址 : http://localhost:8080/login
2019-01-30 11:03:07 -HTTP METHOD : GET
2019-01-30 11:03:07 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 11:03:07 -参数 : []
2019-01-30 11:03:07 -耗时 : 0
2019-01-30 11:03:07 -返回值 : login
2019-01-30 11:03:10 -请求地址 : http://localhost:8080/login
2019-01-30 11:03:10 -HTTP METHOD : POST
2019-01-30 11:03:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 11:03:10 -参数 : [admin, 123456]
2019-01-30 11:03:10 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-30 11:03:10 -==> Parameters: 
2019-01-30 11:03:10 -<==      Total: 1
2019-01-30 11:03:10 -耗时 : 13
2019-01-30 11:03:10 -返回值 : {msg=操作成功, code=0}
2019-01-30 11:03:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 11:03:10 -==> Parameters: 123(String), admin(String), 登录(String), 14(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 11:03:10.879(Timestamp)
2019-01-30 11:03:10 -请求地址 : http://localhost:8080/index
2019-01-30 11:03:10 -HTTP METHOD : GET
2019-01-30 11:03:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 11:03:10 -参数 : [{}]
2019-01-30 11:03:10 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 11:03:10 -==> Parameters: 123(String)
2019-01-30 11:03:10 -<==      Total: 3
2019-01-30 11:03:10 -耗时 : 25
2019-01-30 11:03:10 -返回值 : index_v1
2019-01-30 11:03:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 11:03:10 -<==    Updates: 1
2019-01-30 11:03:10 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 11:03:10.92(Timestamp)
2019-01-30 11:03:11 -<==    Updates: 1
2019-01-30 11:03:12 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 11:03:12 -==> Parameters: 123(String)
2019-01-30 11:03:12 -<==      Total: 8
2019-01-30 11:03:12 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 11:03:12 -HTTP METHOD : GET
2019-01-30 11:03:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 11:03:12 -参数 : []
2019-01-30 11:03:12 -耗时 : 0
2019-01-30 11:03:12 -返回值 : system/user/user
2019-01-30 11:03:12 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 11:03:12 -HTTP METHOD : GET
2019-01-30 11:03:12 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 11:03:12 -参数 : [{page=1, limit=5, sort=username, order=asc}]
2019-01-30 11:03:12 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by username asc limit ?, ? 
2019-01-30 11:03:12 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 11:03:12 -<==      Total: 5
2019-01-30 11:03:12 -==>  Preparing: select count(*) from sys_user 
2019-01-30 11:03:12 -==> Parameters: 
2019-01-30 11:03:12 -<==      Total: 1
2019-01-30 11:03:12 -耗时 : 23
2019-01-30 11:03:12 -返回值 : com.bootdo.common.utils.PageUtils@337a5289
2019-01-30 11:04:01 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 11:04:01 -HTTP METHOD : GET
2019-01-30 11:04:01 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 11:04:01 -参数 : []
2019-01-30 11:04:01 -耗时 : 0
2019-01-30 11:04:01 -返回值 : system/user/user
2019-01-30 11:04:02 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 11:04:02 -HTTP METHOD : GET
2019-01-30 11:04:02 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 11:04:02 -参数 : [{page=1, limit=5, sort=username, order=asc}]
2019-01-30 11:04:02 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by username asc limit ?, ? 
2019-01-30 11:04:02 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 11:04:02 -<==      Total: 5
2019-01-30 11:04:02 -==>  Preparing: select count(*) from sys_user 
2019-01-30 11:04:02 -==> Parameters: 
2019-01-30 11:04:02 -<==      Total: 1
2019-01-30 11:04:02 -耗时 : 19
2019-01-30 11:04:02 -返回值 : com.bootdo.common.utils.PageUtils@204498de
2019-01-30 13:25:52 -Starting BootdoApplication on YH-20180312AAAP with PID 11900 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-30 13:25:53 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-30 13:25:53 -The following profiles are active: dev
2019-01-30 13:25:53 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13cf7d52: startup date [Wed Jan 30 13:25:53 CST 2019]; root of context hierarchy
2019-01-30 13:25:54 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$f6dce007] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 13:25:54 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$eb50a4ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 13:25:54 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 13:25:54 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 13:25:54 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 13:25:54 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$85ef71a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 13:25:54 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$adcaa9e9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 13:25:54 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$a023d890] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 13:25:55 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-30 13:25:55 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 13:25:55 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 13:25:55 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 13:25:55 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 13:25:55 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 13:25:55 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-30 13:25:55 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-30 13:25:55 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 13:25:55 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 13:25:55 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 13:25:55 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 13:25:56 -Tomcat initialized with port(s): 8080 (http)
2019-01-30 13:25:56 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-30 13:25:56 -Starting service [Tomcat]
2019-01-30 13:25:56 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-30 13:25:56 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-30 13:25:56 -Initializing Spring embedded WebApplicationContext
2019-01-30 13:25:56 -Root WebApplicationContext: initialization completed in 3417 ms
2019-01-30 13:25:56 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-30 13:25:56 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-30 13:25:56 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-30 13:25:56 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-30 13:25:56 -Filter xssFilter was not registered (disabled)
2019-01-30 13:25:56 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-30 13:25:56 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-30 13:25:56 -Servlet statViewServlet mapped to [/druid/*]
2019-01-30 13:25:56 -Servlet dispatcherServlet mapped to [/]
2019-01-30 13:25:57 -{dataSource-1} inited
2019-01-30 13:25:58 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13cf7d52: startup date [Wed Jan 30 13:25:53 CST 2019]; root of context hierarchy
2019-01-30 13:25:58 -Using default implementation for ThreadExecutor
2019-01-30 13:25:58 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-30 13:25:58 -Quartz Scheduler v.2.2.1 created.
2019-01-30 13:25:58 -RAMJobStore initialized.
2019-01-30 13:25:58 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-30 13:25:58 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-30 13:25:58 -Quartz scheduler version: 2.2.1
2019-01-30 13:25:58 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@39f4a7c4
2019-01-30 13:25:58 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-30 13:25:58 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-30 13:25:59 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 13:25:59 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-30 13:25:59 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-30 13:25:59 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-30 13:25:59 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-30 13:25:59 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-30 13:25:59 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-30 13:25:59 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-30 13:25:59 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-30 13:25:59 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-30 13:25:59 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 13:25:59 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-30 13:25:59 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-30 13:25:59 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-30 13:25:59 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 13:25:59 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-30 13:25:59 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-30 13:25:59 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-30 13:25:59 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 13:25:59 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-30 13:25:59 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-30 13:25:59 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-30 13:25:59 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-30 13:25:59 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-30 13:25:59 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-30 13:25:59 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-30 13:25:59 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 13:25:59 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-30 13:25:59 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 13:25:59 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-30 13:25:59 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-30 13:25:59 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-30 13:25:59 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-30 13:25:59 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-30 13:25:59 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-30 13:25:59 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-30 13:25:59 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-30 13:25:59 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-30 13:25:59 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-30 13:25:59 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 13:25:59 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-30 13:25:59 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-30 13:25:59 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-30 13:25:59 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-30 13:25:59 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-30 13:25:59 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-30 13:25:59 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-30 13:25:59 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-30 13:25:59 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-30 13:25:59 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-30 13:25:59 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-30 13:25:59 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-30 13:25:59 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 13:25:59 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-30 13:25:59 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-30 13:25:59 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-30 13:25:59 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-30 13:25:59 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-30 13:25:59 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long)
2019-01-30 13:25:59 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long[])
2019-01-30 13:25:59 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-30 13:25:59 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 13:25:59 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-30 13:25:59 -Mapped "{[/system/staff/edit/{staffId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 13:25:59 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-30 13:25:59 -Mapped "{[/system/staff/selectView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.selectView()
2019-01-30 13:25:59 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-30 13:25:59 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-30 13:25:59 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-30 13:25:59 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-30 13:25:59 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 13:25:59 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-30 13:25:59 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-30 13:25:59 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 13:25:59 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 13:25:59 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-30 13:25:59 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-30 13:25:59 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-30 13:25:59 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 13:25:59 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-30 13:25:59 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-30 13:25:59 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-30 13:25:59 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-30 13:25:59 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-30 13:25:59 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-30 13:25:59 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-30 13:25:59 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-30 13:25:59 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-30 13:26:00 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-30 13:26:00 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-30 13:26:00 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-30 13:26:00 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 13:26:00 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@13cf7d52: startup date [Wed Jan 30 13:25:53 CST 2019]; root of context hierarchy
2019-01-30 13:26:00 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 13:26:00 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 13:26:00 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 13:26:01 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-30 13:26:01 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-30 13:26:01 -Registering beans for JMX exposure on startup
2019-01-30 13:26:01 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-30 13:26:01 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-30 13:26:01 -Starting beans in phase 2147483647
2019-01-30 13:26:01 -Context refreshed
2019-01-30 13:26:01 -Found 1 custom documentation plugin(s)
2019-01-30 13:26:01 -Scanning for api listing references
2019-01-30 13:26:02 -Generating unique operation named: removeUsingPOST_1
2019-01-30 13:26:02 -Generating unique operation named: editUsingGET_1
2019-01-30 13:26:02 -Generating unique operation named: listUsingGET_1
2019-01-30 13:26:02 -Generating unique operation named: updateUsingPOST_1
2019-01-30 13:26:02 -Generating unique operation named: addUsingGET_1
2019-01-30 13:26:02 -Generating unique operation named: editUsingGET_2
2019-01-30 13:26:02 -Generating unique operation named: listUsingGET_2
2019-01-30 13:26:02 -Generating unique operation named: removeUsingPOST_2
2019-01-30 13:26:02 -Generating unique operation named: removeUsingPOST_3
2019-01-30 13:26:02 -Generating unique operation named: saveUsingPOST_1
2019-01-30 13:26:02 -Generating unique operation named: updateUsingPOST_2
2019-01-30 13:26:02 -Generating unique operation named: listUsingGET_3
2019-01-30 13:26:02 -Generating unique operation named: removeUsingPOST_4
2019-01-30 13:26:02 -Generating unique operation named: welcomeUsingGET_1
2019-01-30 13:26:02 -Generating unique operation named: addUsingGET_2
2019-01-30 13:26:02 -Generating unique operation named: editUsingGET_3
2019-01-30 13:26:02 -Generating unique operation named: listUsingGET_4
2019-01-30 13:26:02 -Generating unique operation named: removeUsingPOST_5
2019-01-30 13:26:02 -Generating unique operation named: saveUsingPOST_2
2019-01-30 13:26:02 -Generating unique operation named: treeUsingGET_1
2019-01-30 13:26:02 -Generating unique operation named: updateUsingPOST_3
2019-01-30 13:26:02 -Generating unique operation named: addUsingGET_3
2019-01-30 13:26:02 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-30 13:26:02 -Generating unique operation named: editUsingGET_4
2019-01-30 13:26:02 -Generating unique operation named: listUsingGET_5
2019-01-30 13:26:02 -Generating unique operation named: saveUsingPOST_3
2019-01-30 13:26:02 -Generating unique operation named: saveUsingPOST_4
2019-01-30 13:26:02 -Generating unique operation named: updateUsingPOST_4
2019-01-30 13:26:02 -Generating unique operation named: listUsingGET_6
2019-01-30 13:26:02 -Generating unique operation named: listUsingHEAD_1
2019-01-30 13:26:02 -Generating unique operation named: listUsingPOST_1
2019-01-30 13:26:02 -Generating unique operation named: listUsingPUT_1
2019-01-30 13:26:02 -Generating unique operation named: listUsingPATCH_1
2019-01-30 13:26:02 -Generating unique operation named: listUsingDELETE_1
2019-01-30 13:26:02 -Generating unique operation named: listUsingOPTIONS_1
2019-01-30 13:26:02 -Generating unique operation named: listUsingTRACE_1
2019-01-30 13:26:02 -Generating unique operation named: addUsingGET_4
2019-01-30 13:26:02 -Generating unique operation named: editUsingGET_5
2019-01-30 13:26:02 -Generating unique operation named: listUsingGET_7
2019-01-30 13:26:02 -Generating unique operation named: removeUsingPOST_6
2019-01-30 13:26:02 -Generating unique operation named: removeUsingPOST_7
2019-01-30 13:26:02 -Generating unique operation named: saveUsingPOST_5
2019-01-30 13:26:02 -Generating unique operation named: updateUsingGET_1
2019-01-30 13:26:02 -Generating unique operation named: updateUsingHEAD_1
2019-01-30 13:26:02 -Generating unique operation named: updateUsingPOST_5
2019-01-30 13:26:02 -Generating unique operation named: updateUsingPUT_1
2019-01-30 13:26:02 -Generating unique operation named: updateUsingPATCH_1
2019-01-30 13:26:02 -Generating unique operation named: updateUsingDELETE_1
2019-01-30 13:26:02 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-30 13:26:02 -Generating unique operation named: updateUsingTRACE_1
2019-01-30 13:26:02 -Generating unique operation named: addUsingGET_5
2019-01-30 13:26:02 -Generating unique operation named: editUsingGET_6
2019-01-30 13:26:02 -Generating unique operation named: listUsingGET_8
2019-01-30 13:26:02 -Generating unique operation named: removeUsingPOST_8
2019-01-30 13:26:02 -Generating unique operation named: removeUsingPOST_9
2019-01-30 13:26:02 -Generating unique operation named: saveUsingPOST_6
2019-01-30 13:26:02 -Generating unique operation named: updateUsingGET_2
2019-01-30 13:26:02 -Generating unique operation named: updateUsingHEAD_2
2019-01-30 13:26:02 -Generating unique operation named: updateUsingPOST_6
2019-01-30 13:26:02 -Generating unique operation named: updateUsingPUT_2
2019-01-30 13:26:02 -Generating unique operation named: updateUsingPATCH_2
2019-01-30 13:26:02 -Generating unique operation named: updateUsingDELETE_2
2019-01-30 13:26:02 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-30 13:26:02 -Generating unique operation named: updateUsingTRACE_2
2019-01-30 13:26:02 -Generating unique operation named: addUsingGET_6
2019-01-30 13:26:02 -Generating unique operation named: editUsingGET_7
2019-01-30 13:26:02 -Generating unique operation named: listUsingGET_9
2019-01-30 13:26:02 -Generating unique operation named: roleUsingGET_1
2019-01-30 13:26:02 -Generating unique operation named: saveUsingPOST_7
2019-01-30 13:26:02 -Starting Quartz Scheduler now
2019-01-30 13:26:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-30 13:26:02 -Starting...
2019-01-30 13:26:02 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-30 13:26:02 -Started.
2019-01-30 13:26:02 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-30 13:26:02 -Using a shared selector for servlet write/read
2019-01-30 13:26:02 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-30 13:26:02 -Started BootdoApplication in 10.264 seconds (JVM running for 10.67)
2019-01-30 13:26:02 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-30 13:26:02 -==> Parameters: 
2019-01-30 13:26:02 -<==      Total: 1
2019-01-30 13:27:00 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-30 13:57:00 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-01-30 14:27:00 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2019-01-30 14:32:32 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-30 14:32:32 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-30 14:32:32 -FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
2019-01-30 14:32:32 -Enabling session validation scheduler...
2019-01-30 14:32:32 -请求地址 : http://localhost:8080/login;JSESSIONID=01d60d6f-664b-4da6-a35e-48ec4e44ce53
2019-01-30 14:32:32 -HTTP METHOD : GET
2019-01-30 14:32:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 14:32:32 -参数 : []
2019-01-30 14:32:32 -耗时 : 4
2019-01-30 14:32:32 -返回值 : login
2019-01-30 14:32:45 -请求地址 : http://localhost:8080/login;JSESSIONID=01d60d6f-664b-4da6-a35e-48ec4e44ce53
2019-01-30 14:32:45 -HTTP METHOD : GET
2019-01-30 14:32:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 14:32:45 -参数 : []
2019-01-30 14:32:45 -耗时 : 1
2019-01-30 14:32:45 -返回值 : login
2019-01-30 14:32:45 -请求地址 : http://localhost:8080/login;JSESSIONID=7dda39b4-a851-4512-a46b-f949264e7036
2019-01-30 14:32:45 -HTTP METHOD : GET
2019-01-30 14:32:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 14:32:45 -参数 : []
2019-01-30 14:32:45 -耗时 : 0
2019-01-30 14:32:45 -返回值 : login
2019-01-30 14:32:49 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-30 14:32:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 14:32:50 -Request method 'POST' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:198)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:376)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:316)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:62)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:350)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1188)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:964)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-30 14:32:50 -==> Parameters: null, null, error(String), null, http://localhost:8080/;JSESSIONID=01d60d6f-664b-4da6-a35e-48ec4e44ce53login(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported(String), null, 2019-01-30 14:32:49.932(Timestamp)
2019-01-30 14:32:50 -<==    Updates: 1
2019-01-30 14:32:55 -Request method 'POST' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:198)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:376)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:316)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:62)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:350)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1188)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:964)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-30 14:32:55 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 14:32:55 -==> Parameters: null, null, error(String), null, http://localhost:8080/;JSESSIONID=01d60d6f-664b-4da6-a35e-48ec4e44ce53login(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported(String), null, 2019-01-30 14:32:55.293(Timestamp)
2019-01-30 14:32:55 -<==    Updates: 1
2019-01-30 14:33:33 -请求地址 : http://localhost:8080/login;JSESSIONID=01d60d6f-664b-4da6-a35e-48ec4e44ce53
2019-01-30 14:33:33 -HTTP METHOD : GET
2019-01-30 14:33:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 14:33:33 -参数 : []
2019-01-30 14:33:33 -耗时 : 0
2019-01-30 14:33:33 -返回值 : login
2019-01-30 14:33:33 -请求地址 : http://localhost:8080/login
2019-01-30 14:33:33 -HTTP METHOD : GET
2019-01-30 14:33:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 14:33:33 -参数 : []
2019-01-30 14:33:33 -耗时 : 0
2019-01-30 14:33:33 -返回值 : login
2019-01-30 14:33:37 -请求地址 : http://localhost:8080/login
2019-01-30 14:33:37 -HTTP METHOD : POST
2019-01-30 14:33:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 14:33:37 -参数 : [admin, 123456]
2019-01-30 14:33:37 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-30 14:33:37 -==> Parameters: 
2019-01-30 14:33:37 -<==      Total: 1
2019-01-30 14:33:38 -耗时 : 140
2019-01-30 14:33:38 -返回值 : {msg=操作成功, code=0}
2019-01-30 14:33:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 14:33:38 -==> Parameters: 123(String), admin(String), 登录(String), 140(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 14:33:38.158(Timestamp)
2019-01-30 14:33:38 -请求地址 : http://localhost:8080/index
2019-01-30 14:33:38 -HTTP METHOD : GET
2019-01-30 14:33:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 14:33:38 -参数 : [{}]
2019-01-30 14:33:38 -<==    Updates: 1
2019-01-30 14:33:38 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 14:33:38 -==> Parameters: 123(String)
2019-01-30 14:33:38 -<==      Total: 5
2019-01-30 14:33:38 -耗时 : 223
2019-01-30 14:33:38 -返回值 : index_v1
2019-01-30 14:33:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 14:33:38 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 223(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 14:33:38.485(Timestamp)
2019-01-30 14:33:38 -<==    Updates: 1
2019-01-30 14:34:17 -请求地址 : http://localhost:8080/index
2019-01-30 14:34:17 -HTTP METHOD : GET
2019-01-30 14:34:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 14:34:17 -参数 : [{}]
2019-01-30 14:34:17 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 14:34:17 -==> Parameters: 123(String)
2019-01-30 14:34:17 -<==      Total: 5
2019-01-30 14:34:17 -耗时 : 33
2019-01-30 14:34:17 -返回值 : index_v1
2019-01-30 14:34:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 14:34:17 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 14:34:17.405(Timestamp)
2019-01-30 14:34:17 -<==    Updates: 1
2019-01-30 14:34:37 -请求地址 : http://localhost:8080/login;JSESSIONID=1a7f847f-dc41-47a6-bd4d-c584b825dd97
2019-01-30 14:34:37 -HTTP METHOD : GET
2019-01-30 14:34:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 14:34:37 -参数 : []
2019-01-30 14:34:37 -耗时 : 0
2019-01-30 14:34:37 -返回值 : login
2019-01-30 14:34:37 -请求地址 : http://localhost:8080/login
2019-01-30 14:34:37 -HTTP METHOD : GET
2019-01-30 14:34:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 14:34:37 -参数 : []
2019-01-30 14:34:37 -耗时 : 0
2019-01-30 14:34:37 -返回值 : login
2019-01-30 14:34:41 -请求地址 : http://localhost:8080/login
2019-01-30 14:34:41 -HTTP METHOD : POST
2019-01-30 14:34:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 14:34:41 -参数 : [admin, 123456]
2019-01-30 14:34:41 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-30 14:34:41 -==> Parameters: 
2019-01-30 14:34:41 -<==      Total: 1
2019-01-30 14:34:41 -耗时 : 7
2019-01-30 14:34:41 -返回值 : {msg=操作成功, code=0}
2019-01-30 14:34:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 14:34:41 -==> Parameters: 123(String), admin(String), 登录(String), 7(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 14:34:41.548(Timestamp)
2019-01-30 14:34:41 -请求地址 : http://localhost:8080/index
2019-01-30 14:34:41 -HTTP METHOD : GET
2019-01-30 14:34:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 14:34:41 -参数 : [{}]
2019-01-30 14:34:41 -<==    Updates: 1
2019-01-30 14:34:41 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 14:34:41 -==> Parameters: 123(String)
2019-01-30 14:34:41 -<==      Total: 5
2019-01-30 14:34:41 -耗时 : 35
2019-01-30 14:34:41 -返回值 : index_v1
2019-01-30 14:34:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 14:34:41 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 14:34:41.615(Timestamp)
2019-01-30 14:34:41 -<==    Updates: 1
2019-01-30 14:34:46 -请求地址 : http://localhost:8080/common/generator
2019-01-30 14:34:46 -HTTP METHOD : GET
2019-01-30 14:34:46 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.generator
2019-01-30 14:34:46 -参数 : []
2019-01-30 14:34:46 -耗时 : 0
2019-01-30 14:34:46 -返回值 : common/generator/list
2019-01-30 14:34:46 -请求地址 : http://localhost:8080/common/generator/list
2019-01-30 14:34:46 -HTTP METHOD : GET
2019-01-30 14:34:46 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.list
2019-01-30 14:34:46 -参数 : []
2019-01-30 14:34:46 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) 
2019-01-30 14:34:47 -==> Parameters: 
2019-01-30 14:34:47 -<==      Total: 17
2019-01-30 14:34:47 -耗时 : 333
2019-01-30 14:34:47 -返回值 : [{engine=InnoDB, createTime=2019-01-23 11:15:28.0, tableComment=菜单管理, tableName=2sys_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:31.0, tableComment=角色, tableName=2sys_role}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=角色与菜单对应关系, tableName=2sys_role_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=2sys_user}, {engine=InnoDB, createTime=2019-01-23 11:15:34.0, tableComment=用户与角色对应关系, tableName=2sys_user_role}, {engine=InnoDB, createTime=2019-01-23 11:15:23.0, tableComment=部门管理, tableName=sys_dept}, {engine=InnoDB, createTime=2019-01-23 11:39:37.0, tableComment=, tableName=sys_dept1}, {engine=InnoDB, createTime=2019-01-23 11:15:26.0, tableComment=系统日志, tableName=sys_log}, {engine=InnoDB, createTime=2019-01-23 11:15:28.0, tableComment=, tableName=sys_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:31.0, tableComment=, tableName=sys_role}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=sys_role_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=sys_staff}, {engine=InnoDB, createTime=2019-01-23 11:39:38.0, tableComment=, tableName=sys_staff1}, {engine=MyISAM, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=sys_task}, {engine=InnoDB, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=sys_user}, {engine=InnoDB, createTime=2019-01-23 11:15:34.0, tableComment=, tableName=sys_user_role}, {engine=InnoDB, createTime=2019-01-23 11:39:39.0, tableComment=, tableName=sys_user_staff}]
2019-01-30 14:35:17 -请求地址 : http://localhost:8080/index
2019-01-30 14:35:17 -HTTP METHOD : GET
2019-01-30 14:35:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 14:35:17 -参数 : [{}]
2019-01-30 14:35:17 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 14:35:17 -==> Parameters: 123(String)
2019-01-30 14:35:17 -<==      Total: 5
2019-01-30 14:35:17 -耗时 : 32
2019-01-30 14:35:17 -返回值 : index_v1
2019-01-30 14:35:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 14:35:17 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 14:35:17.789(Timestamp)
2019-01-30 14:35:17 -<==    Updates: 1
2019-01-30 14:35:20 -请求地址 : http://localhost:8080/common/generator
2019-01-30 14:35:20 -HTTP METHOD : GET
2019-01-30 14:35:20 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.generator
2019-01-30 14:35:20 -参数 : []
2019-01-30 14:35:20 -耗时 : 1
2019-01-30 14:35:20 -返回值 : common/generator/list
2019-01-30 14:35:20 -请求地址 : http://localhost:8080/common/generator/list
2019-01-30 14:35:20 -HTTP METHOD : GET
2019-01-30 14:35:20 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.list
2019-01-30 14:35:20 -参数 : []
2019-01-30 14:35:20 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) 
2019-01-30 14:35:20 -==> Parameters: 
2019-01-30 14:35:20 -<==      Total: 17
2019-01-30 14:35:20 -耗时 : 12
2019-01-30 14:35:20 -返回值 : [{engine=InnoDB, createTime=2019-01-23 11:15:28.0, tableComment=菜单管理, tableName=2sys_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:31.0, tableComment=角色, tableName=2sys_role}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=角色与菜单对应关系, tableName=2sys_role_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=2sys_staff}, {engine=InnoDB, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=2sys_user}, {engine=InnoDB, createTime=2019-01-23 11:15:34.0, tableComment=用户与角色对应关系, tableName=2sys_user_role}, {engine=InnoDB, createTime=2019-01-23 11:15:23.0, tableComment=部门管理, tableName=sys_dept}, {engine=InnoDB, createTime=2019-01-23 11:39:37.0, tableComment=, tableName=sys_dept1}, {engine=InnoDB, createTime=2019-01-23 11:15:26.0, tableComment=系统日志, tableName=sys_log}, {engine=InnoDB, createTime=2019-01-23 11:15:28.0, tableComment=, tableName=sys_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:31.0, tableComment=, tableName=sys_role}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=sys_role_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=sys_staff}, {engine=MyISAM, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=sys_task}, {engine=InnoDB, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=sys_user}, {engine=InnoDB, createTime=2019-01-23 11:15:34.0, tableComment=, tableName=sys_user_role}, {engine=InnoDB, createTime=2019-01-23 11:39:39.0, tableComment=, tableName=sys_user_staff}]
2019-01-30 14:35:32 -请求地址 : http://localhost:8080/common/generator/code/sys_staff
2019-01-30 14:35:32 -HTTP METHOD : GET
2019-01-30 14:35:32 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.code
2019-01-30 14:35:32 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7575da8e, org.apache.shiro.web.servlet.ShiroHttpServletResponse@40739a98, sys_staff]
2019-01-30 14:35:32 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) and table_name = ? 
2019-01-30 14:35:32 -==> Parameters: sys_staff(String)
2019-01-30 14:35:32 -<==      Total: 1
2019-01-30 14:35:32 -==>  Preparing: select column_name columnName, data_type dataType, column_comment columnComment, column_key columnKey, extra from information_schema.columns where table_name = ? and table_schema = (select database()) order by ordinal_position 
2019-01-30 14:35:32 -==> Parameters: sys_staff(String)
2019-01-30 14:35:32 -<==      Total: 20
2019-01-30 14:35:33 -耗时 : 1210
2019-01-30 14:35:33 -返回值 : null
2019-01-30 14:38:40 -Starting BootdoApplication on YH-20180312AAAP with PID 1940 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-30 14:38:40 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-30 14:38:40 -The following profiles are active: dev
2019-01-30 14:38:40 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3f0846c6: startup date [Wed Jan 30 14:38:40 CST 2019]; root of context hierarchy
2019-01-30 14:38:41 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$bc300004] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:38:41 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$b0a3c4a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:38:41 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:38:42 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:38:42 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:38:42 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$4b4291a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:38:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$731dc9e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:38:42 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6576f88d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:38:42 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-30 14:38:42 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:38:42 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:38:42 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:38:43 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:38:43 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:38:43 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-30 14:38:43 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-30 14:38:43 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:38:43 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:38:43 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:38:43 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:38:43 -Tomcat initialized with port(s): 8080 (http)
2019-01-30 14:38:43 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-30 14:38:43 -Starting service [Tomcat]
2019-01-30 14:38:43 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-30 14:38:43 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-30 14:38:43 -Initializing Spring embedded WebApplicationContext
2019-01-30 14:38:43 -Root WebApplicationContext: initialization completed in 3452 ms
2019-01-30 14:38:44 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-30 14:38:44 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-30 14:38:44 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-30 14:38:44 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-30 14:38:44 -Filter xssFilter was not registered (disabled)
2019-01-30 14:38:44 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-30 14:38:44 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-30 14:38:44 -Servlet statViewServlet mapped to [/druid/*]
2019-01-30 14:38:44 -Servlet dispatcherServlet mapped to [/]
2019-01-30 14:38:44 -{dataSource-1} inited
2019-01-30 14:38:45 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3f0846c6: startup date [Wed Jan 30 14:38:40 CST 2019]; root of context hierarchy
2019-01-30 14:38:45 -Using default implementation for ThreadExecutor
2019-01-30 14:38:45 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-30 14:38:45 -Quartz Scheduler v.2.2.1 created.
2019-01-30 14:38:45 -RAMJobStore initialized.
2019-01-30 14:38:45 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-30 14:38:45 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-30 14:38:45 -Quartz scheduler version: 2.2.1
2019-01-30 14:38:45 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@58021c3c
2019-01-30 14:38:46 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-30 14:38:46 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-30 14:38:47 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 14:38:47 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-30 14:38:47 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-30 14:38:47 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-30 14:38:47 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-30 14:38:47 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-30 14:38:47 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-30 14:38:47 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-30 14:38:47 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-30 14:38:47 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-30 14:38:47 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 14:38:47 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-30 14:38:47 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-30 14:38:47 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-30 14:38:47 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 14:38:47 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-30 14:38:47 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-30 14:38:47 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-30 14:38:47 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 14:38:47 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-30 14:38:47 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-30 14:38:47 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-30 14:38:47 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-30 14:38:47 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-30 14:38:47 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-30 14:38:47 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-30 14:38:47 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 14:38:47 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-30 14:38:47 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 14:38:47 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-30 14:38:47 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-30 14:38:47 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-30 14:38:47 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-30 14:38:47 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-30 14:38:47 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-30 14:38:47 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-30 14:38:47 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-30 14:38:47 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-30 14:38:47 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-30 14:38:47 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 14:38:47 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-30 14:38:47 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-30 14:38:47 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-30 14:38:47 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-30 14:38:47 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-30 14:38:47 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-30 14:38:47 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-30 14:38:47 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-30 14:38:47 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-30 14:38:47 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-30 14:38:47 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-30 14:38:47 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-30 14:38:47 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 14:38:47 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-30 14:38:47 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-30 14:38:47 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-30 14:38:47 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-30 14:38:47 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-30 14:38:47 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long)
2019-01-30 14:38:47 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long[])
2019-01-30 14:38:47 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-30 14:38:47 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 14:38:47 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-30 14:38:47 -Mapped "{[/system/staff/edit/{staffId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 14:38:47 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-30 14:38:47 -Mapped "{[/system/staff/selectView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.selectView()
2019-01-30 14:38:47 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-30 14:38:47 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-30 14:38:47 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-30 14:38:47 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-30 14:38:47 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 14:38:47 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-30 14:38:47 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-30 14:38:47 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 14:38:47 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 14:38:47 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-30 14:38:47 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-30 14:38:47 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-30 14:38:47 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 14:38:47 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-30 14:38:47 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-30 14:38:47 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-30 14:38:47 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-30 14:38:47 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-30 14:38:47 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-30 14:38:47 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-30 14:38:47 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-30 14:38:47 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-30 14:38:47 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-30 14:38:47 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-30 14:38:47 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-30 14:38:48 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 14:38:48 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3f0846c6: startup date [Wed Jan 30 14:38:40 CST 2019]; root of context hierarchy
2019-01-30 14:38:48 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 14:38:48 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 14:38:48 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 14:38:48 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-30 14:38:48 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-30 14:38:49 -Registering beans for JMX exposure on startup
2019-01-30 14:38:49 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-30 14:38:49 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-30 14:38:49 -Starting beans in phase 2147483647
2019-01-30 14:38:49 -Context refreshed
2019-01-30 14:38:49 -Found 1 custom documentation plugin(s)
2019-01-30 14:38:49 -Scanning for api listing references
2019-01-30 14:38:49 -Generating unique operation named: removeUsingPOST_1
2019-01-30 14:38:49 -Generating unique operation named: editUsingGET_1
2019-01-30 14:38:49 -Generating unique operation named: listUsingGET_1
2019-01-30 14:38:49 -Generating unique operation named: updateUsingPOST_1
2019-01-30 14:38:49 -Generating unique operation named: addUsingGET_1
2019-01-30 14:38:49 -Generating unique operation named: editUsingGET_2
2019-01-30 14:38:49 -Generating unique operation named: listUsingGET_2
2019-01-30 14:38:49 -Generating unique operation named: removeUsingPOST_2
2019-01-30 14:38:49 -Generating unique operation named: removeUsingPOST_3
2019-01-30 14:38:49 -Generating unique operation named: saveUsingPOST_1
2019-01-30 14:38:49 -Generating unique operation named: updateUsingPOST_2
2019-01-30 14:38:49 -Generating unique operation named: listUsingGET_3
2019-01-30 14:38:49 -Generating unique operation named: removeUsingPOST_4
2019-01-30 14:38:49 -Generating unique operation named: welcomeUsingGET_1
2019-01-30 14:38:49 -Generating unique operation named: addUsingGET_2
2019-01-30 14:38:49 -Generating unique operation named: editUsingGET_3
2019-01-30 14:38:49 -Generating unique operation named: listUsingGET_4
2019-01-30 14:38:49 -Generating unique operation named: removeUsingPOST_5
2019-01-30 14:38:49 -Generating unique operation named: saveUsingPOST_2
2019-01-30 14:38:49 -Generating unique operation named: treeUsingGET_1
2019-01-30 14:38:49 -Generating unique operation named: updateUsingPOST_3
2019-01-30 14:38:49 -Generating unique operation named: addUsingGET_3
2019-01-30 14:38:49 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-30 14:38:49 -Generating unique operation named: editUsingGET_4
2019-01-30 14:38:49 -Generating unique operation named: listUsingGET_5
2019-01-30 14:38:49 -Generating unique operation named: saveUsingPOST_3
2019-01-30 14:38:49 -Generating unique operation named: saveUsingPOST_4
2019-01-30 14:38:49 -Generating unique operation named: updateUsingPOST_4
2019-01-30 14:38:49 -Generating unique operation named: listUsingGET_6
2019-01-30 14:38:49 -Generating unique operation named: listUsingHEAD_1
2019-01-30 14:38:49 -Generating unique operation named: listUsingPOST_1
2019-01-30 14:38:49 -Generating unique operation named: listUsingPUT_1
2019-01-30 14:38:49 -Generating unique operation named: listUsingPATCH_1
2019-01-30 14:38:49 -Generating unique operation named: listUsingDELETE_1
2019-01-30 14:38:49 -Generating unique operation named: listUsingOPTIONS_1
2019-01-30 14:38:49 -Generating unique operation named: listUsingTRACE_1
2019-01-30 14:38:49 -Generating unique operation named: addUsingGET_4
2019-01-30 14:38:49 -Generating unique operation named: editUsingGET_5
2019-01-30 14:38:50 -Generating unique operation named: listUsingGET_7
2019-01-30 14:38:50 -Generating unique operation named: removeUsingPOST_6
2019-01-30 14:38:50 -Generating unique operation named: removeUsingPOST_7
2019-01-30 14:38:50 -Generating unique operation named: saveUsingPOST_5
2019-01-30 14:38:50 -Generating unique operation named: updateUsingGET_1
2019-01-30 14:38:50 -Generating unique operation named: updateUsingHEAD_1
2019-01-30 14:38:50 -Generating unique operation named: updateUsingPOST_5
2019-01-30 14:38:50 -Generating unique operation named: updateUsingPUT_1
2019-01-30 14:38:50 -Generating unique operation named: updateUsingPATCH_1
2019-01-30 14:38:50 -Generating unique operation named: updateUsingDELETE_1
2019-01-30 14:38:50 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-30 14:38:50 -Generating unique operation named: updateUsingTRACE_1
2019-01-30 14:38:50 -Generating unique operation named: addUsingGET_5
2019-01-30 14:38:50 -Generating unique operation named: editUsingGET_6
2019-01-30 14:38:50 -Generating unique operation named: listUsingGET_8
2019-01-30 14:38:50 -Generating unique operation named: removeUsingPOST_8
2019-01-30 14:38:50 -Generating unique operation named: removeUsingPOST_9
2019-01-30 14:38:50 -Generating unique operation named: saveUsingPOST_6
2019-01-30 14:38:50 -Generating unique operation named: updateUsingGET_2
2019-01-30 14:38:50 -Generating unique operation named: updateUsingHEAD_2
2019-01-30 14:38:50 -Generating unique operation named: updateUsingPOST_6
2019-01-30 14:38:50 -Generating unique operation named: updateUsingPUT_2
2019-01-30 14:38:50 -Generating unique operation named: updateUsingPATCH_2
2019-01-30 14:38:50 -Generating unique operation named: updateUsingDELETE_2
2019-01-30 14:38:50 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-30 14:38:50 -Generating unique operation named: updateUsingTRACE_2
2019-01-30 14:38:50 -Generating unique operation named: addUsingGET_6
2019-01-30 14:38:50 -Generating unique operation named: editUsingGET_7
2019-01-30 14:38:50 -Generating unique operation named: listUsingGET_9
2019-01-30 14:38:50 -Generating unique operation named: roleUsingGET_1
2019-01-30 14:38:50 -Generating unique operation named: saveUsingPOST_7
2019-01-30 14:38:50 -Starting Quartz Scheduler now
2019-01-30 14:38:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-30 14:38:50 -Starting...
2019-01-30 14:38:50 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-30 14:38:50 -Started.
2019-01-30 14:38:50 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-30 14:38:50 -Using a shared selector for servlet write/read
2019-01-30 14:38:50 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-30 14:38:50 -Started BootdoApplication in 10.617 seconds (JVM running for 11.317)
2019-01-30 14:38:50 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-30 14:38:50 -==> Parameters: 
2019-01-30 14:38:50 -<==      Total: 1
2019-01-30 14:39:47 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-30 14:40:17 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-30 14:40:17 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-30 14:40:17 -FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2019-01-30 14:40:17 -Enabling session validation scheduler...
2019-01-30 14:40:17 -请求地址 : http://localhost:8080/login;JSESSIONID=dc6f1157-b89e-47db-ad13-d95ef32a1074
2019-01-30 14:40:17 -HTTP METHOD : GET
2019-01-30 14:40:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 14:40:17 -参数 : []
2019-01-30 14:40:17 -耗时 : 1
2019-01-30 14:40:17 -返回值 : login
2019-01-30 14:40:17 -请求地址 : http://localhost:8080/login
2019-01-30 14:40:17 -HTTP METHOD : GET
2019-01-30 14:40:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 14:40:17 -参数 : []
2019-01-30 14:40:17 -耗时 : 0
2019-01-30 14:40:17 -返回值 : login
2019-01-30 14:40:21 -请求地址 : http://localhost:8080/login
2019-01-30 14:40:21 -HTTP METHOD : POST
2019-01-30 14:40:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 14:40:21 -参数 : [admin, 123456]
2019-01-30 14:40:21 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-30 14:40:21 -==> Parameters: 
2019-01-30 14:40:21 -<==      Total: 1
2019-01-30 14:40:21 -耗时 : 48
2019-01-30 14:40:21 -返回值 : {msg=操作成功, code=0}
2019-01-30 14:40:21 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-30 14:40:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 14:40:21 -==> Parameters: 123(String), admin(String), 登录(String), 48(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 14:40:21.248(Timestamp)
2019-01-30 14:40:21 -请求地址 : http://localhost:8080/index
2019-01-30 14:40:21 -HTTP METHOD : GET
2019-01-30 14:40:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 14:40:21 -参数 : [{}]
2019-01-30 14:40:21 -<==    Updates: 1
2019-01-30 14:40:21 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 14:40:21 -==> Parameters: 123(String)
2019-01-30 14:40:21 -<==      Total: 5
2019-01-30 14:40:21 -耗时 : 71
2019-01-30 14:40:21 -返回值 : index_v1
2019-01-30 14:40:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 14:40:21 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 71(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 14:40:21.391(Timestamp)
2019-01-30 14:40:21 -<==    Updates: 1
2019-01-30 14:40:23 -请求地址 : http://localhost:8080/common/generator
2019-01-30 14:40:23 -HTTP METHOD : GET
2019-01-30 14:40:23 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.generator
2019-01-30 14:40:23 -参数 : []
2019-01-30 14:40:23 -耗时 : 0
2019-01-30 14:40:23 -返回值 : common/generator/list
2019-01-30 14:40:23 -请求地址 : http://localhost:8080/common/generator/list
2019-01-30 14:40:23 -HTTP METHOD : GET
2019-01-30 14:40:23 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.list
2019-01-30 14:40:23 -参数 : []
2019-01-30 14:40:23 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) 
2019-01-30 14:40:23 -==> Parameters: 
2019-01-30 14:40:23 -<==      Total: 17
2019-01-30 14:40:23 -耗时 : 14
2019-01-30 14:40:23 -返回值 : [{engine=InnoDB, createTime=2019-01-23 11:15:28.0, tableComment=菜单管理, tableName=2sys_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:31.0, tableComment=角色, tableName=2sys_role}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=角色与菜单对应关系, tableName=2sys_role_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=2sys_staff}, {engine=InnoDB, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=2sys_user}, {engine=InnoDB, createTime=2019-01-23 11:15:34.0, tableComment=用户与角色对应关系, tableName=2sys_user_role}, {engine=InnoDB, createTime=2019-01-23 11:15:23.0, tableComment=部门管理, tableName=sys_dept}, {engine=InnoDB, createTime=2019-01-23 11:39:37.0, tableComment=, tableName=sys_dept1}, {engine=InnoDB, createTime=2019-01-23 11:15:26.0, tableComment=系统日志, tableName=sys_log}, {engine=InnoDB, createTime=2019-01-23 11:15:28.0, tableComment=, tableName=sys_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:31.0, tableComment=, tableName=sys_role}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=sys_role_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=sys_staff}, {engine=MyISAM, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=sys_task}, {engine=InnoDB, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=sys_user}, {engine=InnoDB, createTime=2019-01-23 11:15:34.0, tableComment=, tableName=sys_user_role}, {engine=InnoDB, createTime=2019-01-23 11:39:39.0, tableComment=, tableName=sys_user_staff}]
2019-01-30 14:40:29 -请求地址 : http://localhost:8080/common/generator/code/sys_staff
2019-01-30 14:40:29 -HTTP METHOD : GET
2019-01-30 14:40:29 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.code
2019-01-30 14:40:29 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@74424d40, org.apache.shiro.web.servlet.ShiroHttpServletResponse@5a9fa7ba, sys_staff]
2019-01-30 14:40:29 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) and table_name = ? 
2019-01-30 14:40:29 -==> Parameters: sys_staff(String)
2019-01-30 14:40:29 -<==      Total: 1
2019-01-30 14:40:29 -==>  Preparing: select column_name columnName, data_type dataType, column_comment columnComment, column_key columnKey, extra from information_schema.columns where table_name = ? and table_schema = (select database()) order by ordinal_position 
2019-01-30 14:40:29 -==> Parameters: sys_staff(String)
2019-01-30 14:40:29 -<==      Total: 20
2019-01-30 14:40:30 -耗时 : 985
2019-01-30 14:40:30 -返回值 : null
2019-01-30 14:51:41 -Starting BootdoApplication on YH-20180312AAAP with PID 15068 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-30 14:51:41 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-30 14:51:41 -The following profiles are active: dev
2019-01-30 14:51:41 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@79517588: startup date [Wed Jan 30 14:51:41 CST 2019]; root of context hierarchy
2019-01-30 14:51:42 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$3cfc2cff] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:51:43 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$316ff1a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:51:43 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:51:43 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:51:43 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:51:43 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$cc0ebea1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:51:43 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f3e9f6e1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:51:43 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$e6432588] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:51:43 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-30 14:51:43 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:51:43 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:51:43 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:51:43 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:51:43 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:51:43 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-30 14:51:44 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-30 14:51:44 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:51:44 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:51:44 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:51:44 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 14:51:44 -Tomcat initialized with port(s): 8080 (http)
2019-01-30 14:51:44 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-30 14:51:44 -Starting service [Tomcat]
2019-01-30 14:51:44 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-30 14:51:44 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-30 14:51:44 -Initializing Spring embedded WebApplicationContext
2019-01-30 14:51:44 -Root WebApplicationContext: initialization completed in 2984 ms
2019-01-30 14:51:44 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-30 14:51:44 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-30 14:51:44 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-30 14:51:44 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-30 14:51:44 -Filter xssFilter was not registered (disabled)
2019-01-30 14:51:44 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-30 14:51:44 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-30 14:51:44 -Servlet statViewServlet mapped to [/druid/*]
2019-01-30 14:51:44 -Servlet dispatcherServlet mapped to [/]
2019-01-30 14:51:45 -{dataSource-1} inited
2019-01-30 14:51:45 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@79517588: startup date [Wed Jan 30 14:51:41 CST 2019]; root of context hierarchy
2019-01-30 14:51:46 -Using default implementation for ThreadExecutor
2019-01-30 14:51:46 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-30 14:51:46 -Quartz Scheduler v.2.2.1 created.
2019-01-30 14:51:46 -RAMJobStore initialized.
2019-01-30 14:51:46 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-30 14:51:46 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-30 14:51:46 -Quartz scheduler version: 2.2.1
2019-01-30 14:51:46 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@17befef0
2019-01-30 14:51:46 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-30 14:51:46 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-30 14:51:47 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 14:51:47 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-30 14:51:47 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-30 14:51:47 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-30 14:51:47 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-30 14:51:47 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-30 14:51:47 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-30 14:51:47 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-30 14:51:47 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-30 14:51:47 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-30 14:51:47 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 14:51:47 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-30 14:51:47 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-30 14:51:47 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-30 14:51:47 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 14:51:47 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-30 14:51:47 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-30 14:51:47 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-30 14:51:47 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 14:51:47 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-30 14:51:47 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-30 14:51:47 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-30 14:51:47 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-30 14:51:47 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-30 14:51:47 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-30 14:51:47 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-30 14:51:47 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 14:51:47 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-30 14:51:47 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 14:51:47 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-30 14:51:47 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-30 14:51:47 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-30 14:51:47 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-30 14:51:47 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-30 14:51:47 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-30 14:51:47 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-30 14:51:47 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-30 14:51:47 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-30 14:51:47 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-30 14:51:47 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 14:51:47 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-30 14:51:47 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-30 14:51:47 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-30 14:51:47 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-30 14:51:47 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-30 14:51:47 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-30 14:51:47 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-30 14:51:47 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-30 14:51:47 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-30 14:51:47 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-30 14:51:47 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-30 14:51:47 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-30 14:51:47 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 14:51:47 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-30 14:51:47 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-30 14:51:47 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-30 14:51:47 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-30 14:51:47 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-30 14:51:47 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long)
2019-01-30 14:51:47 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.Long[])
2019-01-30 14:51:47 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-30 14:51:47 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 14:51:47 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-30 14:51:47 -Mapped "{[/system/staff/edit/{staffId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 14:51:47 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-30 14:51:47 -Mapped "{[/system/staff/selectView],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.selectView()
2019-01-30 14:51:47 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-30 14:51:47 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-30 14:51:47 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-30 14:51:47 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-30 14:51:47 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 14:51:47 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-30 14:51:47 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-30 14:51:47 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 14:51:47 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 14:51:47 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-30 14:51:47 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-30 14:51:47 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-30 14:51:47 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 14:51:47 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-30 14:51:47 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-30 14:51:47 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-30 14:51:47 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-30 14:51:47 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-30 14:51:47 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-30 14:51:47 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-30 14:51:47 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-30 14:51:47 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-30 14:51:48 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-30 14:51:48 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-30 14:51:48 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-30 14:51:48 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 14:51:48 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@79517588: startup date [Wed Jan 30 14:51:41 CST 2019]; root of context hierarchy
2019-01-30 14:51:48 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 14:51:48 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 14:51:48 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 14:51:48 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-30 14:51:49 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-30 14:51:49 -Registering beans for JMX exposure on startup
2019-01-30 14:51:49 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-30 14:51:49 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-30 14:51:49 -Starting beans in phase 2147483647
2019-01-30 14:51:49 -Context refreshed
2019-01-30 14:51:49 -Found 1 custom documentation plugin(s)
2019-01-30 14:51:49 -Scanning for api listing references
2019-01-30 14:51:50 -Generating unique operation named: removeUsingPOST_1
2019-01-30 14:51:50 -Generating unique operation named: editUsingGET_1
2019-01-30 14:51:50 -Generating unique operation named: listUsingGET_1
2019-01-30 14:51:50 -Generating unique operation named: updateUsingPOST_1
2019-01-30 14:51:50 -Generating unique operation named: addUsingGET_1
2019-01-30 14:51:50 -Generating unique operation named: editUsingGET_2
2019-01-30 14:51:50 -Generating unique operation named: listUsingGET_2
2019-01-30 14:51:50 -Generating unique operation named: removeUsingPOST_2
2019-01-30 14:51:50 -Generating unique operation named: removeUsingPOST_3
2019-01-30 14:51:50 -Generating unique operation named: saveUsingPOST_1
2019-01-30 14:51:50 -Generating unique operation named: updateUsingPOST_2
2019-01-30 14:51:50 -Generating unique operation named: listUsingGET_3
2019-01-30 14:51:50 -Generating unique operation named: removeUsingPOST_4
2019-01-30 14:51:50 -Generating unique operation named: welcomeUsingGET_1
2019-01-30 14:51:50 -Generating unique operation named: addUsingGET_2
2019-01-30 14:51:50 -Generating unique operation named: editUsingGET_3
2019-01-30 14:51:50 -Generating unique operation named: listUsingGET_4
2019-01-30 14:51:50 -Generating unique operation named: removeUsingPOST_5
2019-01-30 14:51:50 -Generating unique operation named: saveUsingPOST_2
2019-01-30 14:51:50 -Generating unique operation named: treeUsingGET_1
2019-01-30 14:51:50 -Generating unique operation named: updateUsingPOST_3
2019-01-30 14:51:50 -Generating unique operation named: addUsingGET_3
2019-01-30 14:51:50 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-30 14:51:50 -Generating unique operation named: editUsingGET_4
2019-01-30 14:51:50 -Generating unique operation named: listUsingGET_5
2019-01-30 14:51:50 -Generating unique operation named: saveUsingPOST_3
2019-01-30 14:51:50 -Generating unique operation named: saveUsingPOST_4
2019-01-30 14:51:50 -Generating unique operation named: updateUsingPOST_4
2019-01-30 14:51:50 -Generating unique operation named: listUsingGET_6
2019-01-30 14:51:50 -Generating unique operation named: listUsingHEAD_1
2019-01-30 14:51:50 -Generating unique operation named: listUsingPOST_1
2019-01-30 14:51:50 -Generating unique operation named: listUsingPUT_1
2019-01-30 14:51:50 -Generating unique operation named: listUsingPATCH_1
2019-01-30 14:51:50 -Generating unique operation named: listUsingDELETE_1
2019-01-30 14:51:50 -Generating unique operation named: listUsingOPTIONS_1
2019-01-30 14:51:50 -Generating unique operation named: listUsingTRACE_1
2019-01-30 14:51:50 -Generating unique operation named: addUsingGET_4
2019-01-30 14:51:50 -Generating unique operation named: editUsingGET_5
2019-01-30 14:51:50 -Generating unique operation named: listUsingGET_7
2019-01-30 14:51:50 -Generating unique operation named: removeUsingPOST_6
2019-01-30 14:51:50 -Generating unique operation named: removeUsingPOST_7
2019-01-30 14:51:50 -Generating unique operation named: saveUsingPOST_5
2019-01-30 14:51:50 -Generating unique operation named: updateUsingGET_1
2019-01-30 14:51:50 -Generating unique operation named: updateUsingHEAD_1
2019-01-30 14:51:50 -Generating unique operation named: updateUsingPOST_5
2019-01-30 14:51:50 -Generating unique operation named: updateUsingPUT_1
2019-01-30 14:51:50 -Generating unique operation named: updateUsingPATCH_1
2019-01-30 14:51:50 -Generating unique operation named: updateUsingDELETE_1
2019-01-30 14:51:50 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-30 14:51:50 -Generating unique operation named: updateUsingTRACE_1
2019-01-30 14:51:50 -Generating unique operation named: addUsingGET_5
2019-01-30 14:51:50 -Generating unique operation named: editUsingGET_6
2019-01-30 14:51:50 -Generating unique operation named: listUsingGET_8
2019-01-30 14:51:50 -Generating unique operation named: removeUsingPOST_8
2019-01-30 14:51:50 -Generating unique operation named: removeUsingPOST_9
2019-01-30 14:51:50 -Generating unique operation named: saveUsingPOST_6
2019-01-30 14:51:50 -Generating unique operation named: updateUsingGET_2
2019-01-30 14:51:50 -Generating unique operation named: updateUsingHEAD_2
2019-01-30 14:51:50 -Generating unique operation named: updateUsingPOST_6
2019-01-30 14:51:50 -Generating unique operation named: updateUsingPUT_2
2019-01-30 14:51:50 -Generating unique operation named: updateUsingPATCH_2
2019-01-30 14:51:50 -Generating unique operation named: updateUsingDELETE_2
2019-01-30 14:51:50 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-30 14:51:50 -Generating unique operation named: updateUsingTRACE_2
2019-01-30 14:51:50 -Generating unique operation named: addUsingGET_6
2019-01-30 14:51:50 -Generating unique operation named: editUsingGET_7
2019-01-30 14:51:50 -Generating unique operation named: listUsingGET_9
2019-01-30 14:51:50 -Generating unique operation named: roleUsingGET_1
2019-01-30 14:51:50 -Generating unique operation named: saveUsingPOST_7
2019-01-30 14:51:50 -Starting Quartz Scheduler now
2019-01-30 14:51:50 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-30 14:51:50 -Starting...
2019-01-30 14:51:50 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-30 14:51:50 -Started.
2019-01-30 14:51:50 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-30 14:51:50 -Using a shared selector for servlet write/read
2019-01-30 14:51:50 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-30 14:51:50 -Started BootdoApplication in 9.567 seconds (JVM running for 10.104)
2019-01-30 14:51:50 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-30 14:51:50 -==> Parameters: 
2019-01-30 14:51:50 -<==      Total: 1
2019-01-30 14:52:06 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-30 14:52:06 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-30 14:52:06 -FrameworkServlet 'dispatcherServlet': initialization completed in 31 ms
2019-01-30 14:52:06 -Enabling session validation scheduler...
2019-01-30 14:52:06 -请求地址 : http://localhost:8080/login;JSESSIONID=f9256072-84e5-49d0-aadc-6e25ec6d6ee4
2019-01-30 14:52:06 -HTTP METHOD : GET
2019-01-30 14:52:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 14:52:06 -参数 : []
2019-01-30 14:52:06 -耗时 : 3
2019-01-30 14:52:06 -返回值 : login
2019-01-30 14:52:06 -请求地址 : http://localhost:8080/login
2019-01-30 14:52:06 -HTTP METHOD : GET
2019-01-30 14:52:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 14:52:06 -参数 : []
2019-01-30 14:52:06 -耗时 : 1
2019-01-30 14:52:06 -返回值 : login
2019-01-30 14:52:10 -请求地址 : http://localhost:8080/login
2019-01-30 14:52:10 -HTTP METHOD : POST
2019-01-30 14:52:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 14:52:10 -参数 : [admin, 123456]
2019-01-30 14:52:10 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-30 14:52:10 -==> Parameters: 
2019-01-30 14:52:10 -<==      Total: 1
2019-01-30 14:52:10 -耗时 : 49
2019-01-30 14:52:10 -返回值 : {msg=操作成功, code=0}
2019-01-30 14:52:10 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-30 14:52:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 14:52:10 -==> Parameters: 123(String), admin(String), 登录(String), 49(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 14:52:10.268(Timestamp)
2019-01-30 14:52:10 -请求地址 : http://localhost:8080/index
2019-01-30 14:52:10 -HTTP METHOD : GET
2019-01-30 14:52:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 14:52:10 -参数 : [{}]
2019-01-30 14:52:10 -<==    Updates: 1
2019-01-30 14:52:10 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 14:52:10 -==> Parameters: 123(String)
2019-01-30 14:52:10 -<==      Total: 5
2019-01-30 14:52:10 -耗时 : 76
2019-01-30 14:52:10 -返回值 : index_v1
2019-01-30 14:52:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 14:52:10 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 77(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 14:52:10.438(Timestamp)
2019-01-30 14:52:10 -<==    Updates: 1
2019-01-30 14:52:13 -请求地址 : http://localhost:8080/common/generator
2019-01-30 14:52:13 -HTTP METHOD : GET
2019-01-30 14:52:13 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.generator
2019-01-30 14:52:13 -参数 : []
2019-01-30 14:52:13 -耗时 : 0
2019-01-30 14:52:13 -返回值 : common/generator/list
2019-01-30 14:52:13 -请求地址 : http://localhost:8080/common/generator/list
2019-01-30 14:52:13 -HTTP METHOD : GET
2019-01-30 14:52:13 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.list
2019-01-30 14:52:13 -参数 : []
2019-01-30 14:52:13 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) 
2019-01-30 14:52:13 -==> Parameters: 
2019-01-30 14:52:13 -<==      Total: 17
2019-01-30 14:52:13 -耗时 : 26
2019-01-30 14:52:13 -返回值 : [{engine=InnoDB, createTime=2019-01-23 11:15:28.0, tableComment=菜单管理, tableName=2sys_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:31.0, tableComment=角色, tableName=2sys_role}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=角色与菜单对应关系, tableName=2sys_role_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=2sys_staff}, {engine=InnoDB, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=2sys_user}, {engine=InnoDB, createTime=2019-01-23 11:15:34.0, tableComment=用户与角色对应关系, tableName=2sys_user_role}, {engine=InnoDB, createTime=2019-01-23 11:15:23.0, tableComment=部门管理, tableName=sys_dept}, {engine=InnoDB, createTime=2019-01-23 11:39:37.0, tableComment=, tableName=sys_dept1}, {engine=InnoDB, createTime=2019-01-23 11:15:26.0, tableComment=系统日志, tableName=sys_log}, {engine=InnoDB, createTime=2019-01-23 11:15:28.0, tableComment=, tableName=sys_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:31.0, tableComment=, tableName=sys_role}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=sys_role_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=sys_staff}, {engine=MyISAM, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=sys_task}, {engine=InnoDB, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=sys_user}, {engine=InnoDB, createTime=2019-01-23 11:15:34.0, tableComment=, tableName=sys_user_role}, {engine=InnoDB, createTime=2019-01-23 11:39:39.0, tableComment=, tableName=sys_user_staff}]
2019-01-30 14:52:19 -请求地址 : http://localhost:8080/common/generator/code/sys_staff
2019-01-30 14:52:19 -HTTP METHOD : GET
2019-01-30 14:52:19 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.code
2019-01-30 14:52:19 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@7f0f6d67, org.apache.shiro.web.servlet.ShiroHttpServletResponse@100aa1f6, sys_staff]
2019-01-30 14:52:19 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) and table_name = ? 
2019-01-30 14:52:19 -==> Parameters: sys_staff(String)
2019-01-30 14:52:19 -<==      Total: 1
2019-01-30 14:52:19 -==>  Preparing: select column_name columnName, data_type dataType, column_comment columnComment, column_key columnKey, extra from information_schema.columns where table_name = ? and table_schema = (select database()) order by ordinal_position 
2019-01-30 14:52:19 -==> Parameters: sys_staff(String)
2019-01-30 14:52:19 -<==      Total: 20
2019-01-30 14:52:19 -耗时 : 523
2019-01-30 14:52:19 -返回值 : null
2019-01-30 14:52:48 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-30 15:04:26 -Starting BootdoApplication on YH-20180312AAAP with PID 12656 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-30 15:04:26 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-30 15:04:26 -The following profiles are active: dev
2019-01-30 15:04:26 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e1fa5b1: startup date [Wed Jan 30 15:04:26 CST 2019]; root of context hierarchy
2019-01-30 15:04:28 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$44b7c2dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 15:04:28 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$392b8780] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 15:04:28 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 15:04:28 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 15:04:28 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 15:04:28 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$d3ca547e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 15:04:28 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fba58cbe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 15:04:28 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$edfebb65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 15:04:28 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-30 15:04:28 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 15:04:28 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 15:04:28 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 15:04:29 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 15:04:29 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 15:04:29 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-30 15:04:29 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-30 15:04:29 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 15:04:29 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 15:04:29 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 15:04:29 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 15:04:29 -Tomcat initialized with port(s): 8080 (http)
2019-01-30 15:04:29 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-30 15:04:29 -Starting service [Tomcat]
2019-01-30 15:04:29 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-30 15:04:29 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-30 15:04:29 -Initializing Spring embedded WebApplicationContext
2019-01-30 15:04:29 -Root WebApplicationContext: initialization completed in 2940 ms
2019-01-30 15:04:30 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-30 15:04:30 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-30 15:04:30 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-30 15:04:30 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-30 15:04:30 -Filter xssFilter was not registered (disabled)
2019-01-30 15:04:30 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-30 15:04:30 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-30 15:04:30 -Servlet statViewServlet mapped to [/druid/*]
2019-01-30 15:04:30 -Servlet dispatcherServlet mapped to [/]
2019-01-30 15:04:30 -{dataSource-1} inited
2019-01-30 15:04:31 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e1fa5b1: startup date [Wed Jan 30 15:04:26 CST 2019]; root of context hierarchy
2019-01-30 15:04:31 -Using default implementation for ThreadExecutor
2019-01-30 15:04:31 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-30 15:04:31 -Quartz Scheduler v.2.2.1 created.
2019-01-30 15:04:31 -RAMJobStore initialized.
2019-01-30 15:04:31 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-30 15:04:31 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-30 15:04:31 -Quartz scheduler version: 2.2.1
2019-01-30 15:04:31 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@474ce6b8
2019-01-30 15:04:31 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-30 15:04:32 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-30 15:04:32 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 15:04:32 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-30 15:04:32 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-30 15:04:32 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-30 15:04:32 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-30 15:04:32 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-30 15:04:32 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-30 15:04:32 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-30 15:04:32 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-30 15:04:32 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-30 15:04:32 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 15:04:32 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-30 15:04:32 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-30 15:04:32 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-30 15:04:32 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 15:04:32 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-30 15:04:32 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-30 15:04:32 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-30 15:04:32 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 15:04:32 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-30 15:04:32 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-30 15:04:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-30 15:04:32 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-30 15:04:32 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-30 15:04:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-30 15:04:32 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-30 15:04:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 15:04:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-30 15:04:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 15:04:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-30 15:04:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-30 15:04:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-30 15:04:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-30 15:04:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-30 15:04:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-30 15:04:32 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-30 15:04:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-30 15:04:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-30 15:04:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-30 15:04:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 15:04:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-30 15:04:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-30 15:04:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-30 15:04:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-30 15:04:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-30 15:04:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-30 15:04:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-30 15:04:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-30 15:04:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-30 15:04:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-30 15:04:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-30 15:04:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-30 15:04:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 15:04:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-30 15:04:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-30 15:04:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-30 15:04:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-30 15:04:32 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-30 15:04:32 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String)
2019-01-30 15:04:32 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String[])
2019-01-30 15:04:32 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-30 15:04:32 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 15:04:32 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-30 15:04:32 -Mapped "{[/system/staff/edit/{employeeId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 15:04:32 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-30 15:04:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-30 15:04:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-30 15:04:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-30 15:04:32 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-30 15:04:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 15:04:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-30 15:04:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-30 15:04:32 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 15:04:32 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 15:04:32 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-30 15:04:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-30 15:04:32 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-30 15:04:32 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 15:04:32 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-30 15:04:32 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-30 15:04:32 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-30 15:04:32 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-30 15:04:32 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-30 15:04:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-30 15:04:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-30 15:04:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-30 15:04:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-30 15:04:33 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-30 15:04:33 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-30 15:04:33 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-30 15:04:33 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 15:04:33 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e1fa5b1: startup date [Wed Jan 30 15:04:26 CST 2019]; root of context hierarchy
2019-01-30 15:04:34 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 15:04:34 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 15:04:34 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 15:04:34 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-30 15:04:34 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-30 15:04:34 -Registering beans for JMX exposure on startup
2019-01-30 15:04:34 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-30 15:04:34 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-30 15:04:34 -Starting beans in phase 2147483647
2019-01-30 15:04:34 -Context refreshed
2019-01-30 15:04:34 -Found 1 custom documentation plugin(s)
2019-01-30 15:04:34 -Scanning for api listing references
2019-01-30 15:04:35 -Generating unique operation named: removeUsingPOST_1
2019-01-30 15:04:35 -Generating unique operation named: editUsingGET_1
2019-01-30 15:04:35 -Generating unique operation named: listUsingGET_1
2019-01-30 15:04:35 -Generating unique operation named: updateUsingPOST_1
2019-01-30 15:04:35 -Generating unique operation named: addUsingGET_1
2019-01-30 15:04:35 -Generating unique operation named: editUsingGET_2
2019-01-30 15:04:35 -Generating unique operation named: listUsingGET_2
2019-01-30 15:04:35 -Generating unique operation named: removeUsingPOST_2
2019-01-30 15:04:35 -Generating unique operation named: removeUsingPOST_3
2019-01-30 15:04:35 -Generating unique operation named: saveUsingPOST_1
2019-01-30 15:04:35 -Generating unique operation named: updateUsingPOST_2
2019-01-30 15:04:35 -Generating unique operation named: listUsingGET_3
2019-01-30 15:04:35 -Generating unique operation named: removeUsingPOST_4
2019-01-30 15:04:35 -Generating unique operation named: welcomeUsingGET_1
2019-01-30 15:04:35 -Generating unique operation named: addUsingGET_2
2019-01-30 15:04:35 -Generating unique operation named: editUsingGET_3
2019-01-30 15:04:35 -Generating unique operation named: listUsingGET_4
2019-01-30 15:04:35 -Generating unique operation named: removeUsingPOST_5
2019-01-30 15:04:35 -Generating unique operation named: saveUsingPOST_2
2019-01-30 15:04:35 -Generating unique operation named: treeUsingGET_1
2019-01-30 15:04:35 -Generating unique operation named: updateUsingPOST_3
2019-01-30 15:04:35 -Generating unique operation named: addUsingGET_3
2019-01-30 15:04:35 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-30 15:04:35 -Generating unique operation named: editUsingGET_4
2019-01-30 15:04:35 -Generating unique operation named: listUsingGET_5
2019-01-30 15:04:35 -Generating unique operation named: saveUsingPOST_3
2019-01-30 15:04:35 -Generating unique operation named: saveUsingPOST_4
2019-01-30 15:04:35 -Generating unique operation named: updateUsingPOST_4
2019-01-30 15:04:35 -Generating unique operation named: listUsingGET_6
2019-01-30 15:04:35 -Generating unique operation named: listUsingHEAD_1
2019-01-30 15:04:35 -Generating unique operation named: listUsingPOST_1
2019-01-30 15:04:35 -Generating unique operation named: listUsingPUT_1
2019-01-30 15:04:35 -Generating unique operation named: listUsingPATCH_1
2019-01-30 15:04:35 -Generating unique operation named: listUsingDELETE_1
2019-01-30 15:04:35 -Generating unique operation named: listUsingOPTIONS_1
2019-01-30 15:04:35 -Generating unique operation named: listUsingTRACE_1
2019-01-30 15:04:35 -Generating unique operation named: addUsingGET_4
2019-01-30 15:04:35 -Generating unique operation named: editUsingGET_5
2019-01-30 15:04:35 -Generating unique operation named: listUsingGET_7
2019-01-30 15:04:35 -Generating unique operation named: removeUsingPOST_6
2019-01-30 15:04:35 -Generating unique operation named: removeUsingPOST_7
2019-01-30 15:04:35 -Generating unique operation named: saveUsingPOST_5
2019-01-30 15:04:35 -Generating unique operation named: updateUsingGET_1
2019-01-30 15:04:35 -Generating unique operation named: updateUsingHEAD_1
2019-01-30 15:04:35 -Generating unique operation named: updateUsingPOST_5
2019-01-30 15:04:35 -Generating unique operation named: updateUsingPUT_1
2019-01-30 15:04:35 -Generating unique operation named: updateUsingPATCH_1
2019-01-30 15:04:35 -Generating unique operation named: updateUsingDELETE_1
2019-01-30 15:04:35 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-30 15:04:35 -Generating unique operation named: updateUsingTRACE_1
2019-01-30 15:04:35 -Generating unique operation named: addUsingGET_5
2019-01-30 15:04:35 -Generating unique operation named: editUsingGET_6
2019-01-30 15:04:35 -Generating unique operation named: listUsingGET_8
2019-01-30 15:04:35 -Generating unique operation named: removeUsingPOST_8
2019-01-30 15:04:35 -Generating unique operation named: removeUsingPOST_9
2019-01-30 15:04:35 -Generating unique operation named: saveUsingPOST_6
2019-01-30 15:04:35 -Generating unique operation named: updateUsingGET_2
2019-01-30 15:04:35 -Generating unique operation named: updateUsingHEAD_2
2019-01-30 15:04:35 -Generating unique operation named: updateUsingPOST_6
2019-01-30 15:04:35 -Generating unique operation named: updateUsingPUT_2
2019-01-30 15:04:35 -Generating unique operation named: updateUsingPATCH_2
2019-01-30 15:04:35 -Generating unique operation named: updateUsingDELETE_2
2019-01-30 15:04:35 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-30 15:04:35 -Generating unique operation named: updateUsingTRACE_2
2019-01-30 15:04:35 -Generating unique operation named: addUsingGET_6
2019-01-30 15:04:35 -Generating unique operation named: editUsingGET_7
2019-01-30 15:04:35 -Generating unique operation named: listUsingGET_9
2019-01-30 15:04:35 -Generating unique operation named: roleUsingGET_1
2019-01-30 15:04:35 -Generating unique operation named: saveUsingPOST_7
2019-01-30 15:04:35 -Starting Quartz Scheduler now
2019-01-30 15:04:35 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-30 15:04:35 -Starting...
2019-01-30 15:04:35 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-30 15:04:35 -Started.
2019-01-30 15:04:35 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-30 15:04:35 -Using a shared selector for servlet write/read
2019-01-30 15:04:35 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-30 15:04:35 -Started BootdoApplication in 9.33 seconds (JVM running for 9.882)
2019-01-30 15:04:35 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-30 15:04:35 -==> Parameters: 
2019-01-30 15:04:35 -<==      Total: 1
2019-01-30 15:04:47 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-30 15:04:47 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-30 15:04:47 -FrameworkServlet 'dispatcherServlet': initialization completed in 35 ms
2019-01-30 15:04:47 -Enabling session validation scheduler...
2019-01-30 15:04:47 -请求地址 : http://localhost:8080/login;JSESSIONID=dea76885-b693-4e5d-a241-5c37f583544a
2019-01-30 15:04:47 -HTTP METHOD : GET
2019-01-30 15:04:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 15:04:47 -参数 : []
2019-01-30 15:04:47 -耗时 : 2
2019-01-30 15:04:47 -返回值 : login
2019-01-30 15:04:48 -请求地址 : http://localhost:8080/login
2019-01-30 15:04:48 -HTTP METHOD : GET
2019-01-30 15:04:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 15:04:48 -参数 : []
2019-01-30 15:04:48 -耗时 : 1
2019-01-30 15:04:48 -返回值 : login
2019-01-30 15:04:50 -请求地址 : http://localhost:8080/login
2019-01-30 15:04:50 -HTTP METHOD : POST
2019-01-30 15:04:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 15:04:50 -参数 : [admin, 123456]
2019-01-30 15:04:50 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-30 15:04:51 -==> Parameters: 
2019-01-30 15:04:51 -<==      Total: 1
2019-01-30 15:04:51 -耗时 : 47
2019-01-30 15:04:51 -返回值 : {msg=操作成功, code=0}
2019-01-30 15:04:51 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-30 15:04:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 15:04:51 -==> Parameters: 123(String), admin(String), 登录(String), 47(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 15:04:51.06(Timestamp)
2019-01-30 15:04:51 -请求地址 : http://localhost:8080/index
2019-01-30 15:04:51 -HTTP METHOD : GET
2019-01-30 15:04:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 15:04:51 -参数 : [{}]
2019-01-30 15:04:51 -<==    Updates: 1
2019-01-30 15:04:51 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 15:04:51 -==> Parameters: 123(String)
2019-01-30 15:04:51 -<==      Total: 6
2019-01-30 15:04:51 -耗时 : 74
2019-01-30 15:04:51 -返回值 : index_v1
2019-01-30 15:04:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 15:04:51 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 74(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 15:04:51.209(Timestamp)
2019-01-30 15:04:51 -<==    Updates: 1
2019-01-30 15:05:12 -请求地址 : http://localhost:8080/index
2019-01-30 15:05:12 -HTTP METHOD : GET
2019-01-30 15:05:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 15:05:12 -参数 : [{}]
2019-01-30 15:05:12 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 15:05:12 -==> Parameters: 123(String)
2019-01-30 15:05:12 -<==      Total: 6
2019-01-30 15:05:12 -耗时 : 27
2019-01-30 15:05:12 -返回值 : index_v1
2019-01-30 15:05:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 15:05:12 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 15:05:12.188(Timestamp)
2019-01-30 15:05:12 -<==    Updates: 1
2019-01-30 15:05:16 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 15:05:16 -==> Parameters: 123(String)
2019-01-30 15:05:16 -<==      Total: 10
2019-01-30 15:05:16 -请求地址 : http://localhost:8080/system/staff
2019-01-30 15:05:16 -HTTP METHOD : GET
2019-01-30 15:05:16 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 15:05:16 -参数 : []
2019-01-30 15:05:16 -耗时 : 0
2019-01-30 15:05:16 -返回值 : system/staff/staff
2019-01-30 15:05:16 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 15:05:16 -HTTP METHOD : GET
2019-01-30 15:05:16 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 15:05:16 -参数 : [{page=1, limit=5}]
2019-01-30 15:05:16 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 15:05:16 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 15:05:16 -<==      Total: 0
2019-01-30 15:05:16 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 15:05:16 -==> Parameters: 
2019-01-30 15:05:16 -<==      Total: 1
2019-01-30 15:05:16 -耗时 : 22
2019-01-30 15:05:16 -返回值 : com.bootdo.common.utils.PageUtils@5497d1fe
2019-01-30 15:05:33 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-30 15:08:38 -请求地址 : http://localhost:8080/index
2019-01-30 15:08:38 -HTTP METHOD : GET
2019-01-30 15:08:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 15:08:38 -参数 : [{}]
2019-01-30 15:08:38 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 15:08:38 -==> Parameters: 123(String)
2019-01-30 15:08:38 -<==      Total: 6
2019-01-30 15:08:38 -耗时 : 24
2019-01-30 15:08:38 -返回值 : index_v1
2019-01-30 15:08:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 15:08:38 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 15:08:38.402(Timestamp)
2019-01-30 15:08:38 -<==    Updates: 1
2019-01-30 15:08:41 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 15:08:41 -==> Parameters: 123(String)
2019-01-30 15:08:41 -<==      Total: 14
2019-01-30 15:08:42 -请求地址 : http://localhost:8080/system/staff
2019-01-30 15:08:42 -HTTP METHOD : GET
2019-01-30 15:08:42 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 15:08:42 -参数 : []
2019-01-30 15:08:42 -耗时 : 0
2019-01-30 15:08:42 -返回值 : system/staff/staff
2019-01-30 15:08:42 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 15:08:42 -HTTP METHOD : GET
2019-01-30 15:08:42 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 15:08:42 -参数 : [{page=1, limit=5}]
2019-01-30 15:08:42 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 15:08:42 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 15:08:42 -<==      Total: 0
2019-01-30 15:08:42 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 15:08:42 -==> Parameters: 
2019-01-30 15:08:42 -<==      Total: 1
2019-01-30 15:08:42 -耗时 : 4
2019-01-30 15:08:42 -返回值 : com.bootdo.common.utils.PageUtils@44cfca28
2019-01-30 15:11:13 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 15:11:13 -==> Parameters: 123(String)
2019-01-30 15:11:13 -<==      Total: 14
2019-01-30 15:11:13 -请求地址 : http://localhost:8080/system/staff
2019-01-30 15:11:13 -HTTP METHOD : GET
2019-01-30 15:11:13 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 15:11:13 -参数 : []
2019-01-30 15:11:13 -耗时 : 1
2019-01-30 15:11:13 -返回值 : system/staff/staff
2019-01-30 15:11:13 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 15:11:13 -HTTP METHOD : GET
2019-01-30 15:11:13 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 15:11:13 -参数 : [{page=1, limit=5}]
2019-01-30 15:11:13 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 15:11:13 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 15:11:13 -<==      Total: 0
2019-01-30 15:11:13 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 15:11:13 -==> Parameters: 
2019-01-30 15:11:13 -<==      Total: 1
2019-01-30 15:11:13 -耗时 : 6
2019-01-30 15:11:13 -返回值 : com.bootdo.common.utils.PageUtils@73bae678
2019-01-30 15:13:47 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 15:13:47 -==> Parameters: 123(String)
2019-01-30 15:13:47 -<==      Total: 14
2019-01-30 15:13:47 -请求地址 : http://localhost:8080/system/staff
2019-01-30 15:13:47 -HTTP METHOD : GET
2019-01-30 15:13:47 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 15:13:47 -参数 : []
2019-01-30 15:13:47 -耗时 : 1
2019-01-30 15:13:47 -返回值 : system/staff/staff
2019-01-30 15:13:47 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 15:13:47 -HTTP METHOD : GET
2019-01-30 15:13:47 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 15:13:47 -参数 : [{page=1, limit=5}]
2019-01-30 15:13:47 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 15:13:47 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 15:13:47 -<==      Total: 0
2019-01-30 15:13:47 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 15:13:47 -==> Parameters: 
2019-01-30 15:13:47 -<==      Total: 1
2019-01-30 15:13:47 -耗时 : 5
2019-01-30 15:13:47 -返回值 : com.bootdo.common.utils.PageUtils@605739b8
2019-01-30 15:14:27 -请求地址 : http://localhost:8080/system/staff
2019-01-30 15:14:27 -HTTP METHOD : GET
2019-01-30 15:14:27 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 15:14:27 -参数 : []
2019-01-30 15:14:27 -耗时 : 1
2019-01-30 15:14:27 -返回值 : system/staff/staff
2019-01-30 15:14:27 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 15:14:27 -HTTP METHOD : GET
2019-01-30 15:14:27 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 15:14:27 -参数 : [{page=1, limit=5}]
2019-01-30 15:14:27 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 15:14:27 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 15:14:27 -<==      Total: 0
2019-01-30 15:14:27 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 15:14:27 -==> Parameters: 
2019-01-30 15:14:27 -<==      Total: 1
2019-01-30 15:14:27 -耗时 : 4
2019-01-30 15:14:27 -返回值 : com.bootdo.common.utils.PageUtils@76043041
2019-01-30 15:14:28 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 15:14:28 -HTTP METHOD : GET
2019-01-30 15:14:28 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 15:14:28 -参数 : []
2019-01-30 15:14:28 -耗时 : 0
2019-01-30 15:14:28 -返回值 : system/staff/add
2019-01-30 15:20:49 -请求地址 : http://localhost:8080/index
2019-01-30 15:20:49 -HTTP METHOD : GET
2019-01-30 15:20:49 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 15:20:49 -参数 : [{}]
2019-01-30 15:20:49 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 15:20:49 -==> Parameters: 123(String)
2019-01-30 15:20:49 -<==      Total: 6
2019-01-30 15:20:49 -耗时 : 20
2019-01-30 15:20:49 -返回值 : index_v1
2019-01-30 15:20:49 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 15:20:49 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 15:20:49.847(Timestamp)
2019-01-30 15:20:49 -<==    Updates: 1
2019-01-30 15:20:52 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 15:20:52 -==> Parameters: 123(String)
2019-01-30 15:20:52 -<==      Total: 14
2019-01-30 15:20:52 -请求地址 : http://localhost:8080/system/staff
2019-01-30 15:20:52 -HTTP METHOD : GET
2019-01-30 15:20:52 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 15:20:52 -参数 : []
2019-01-30 15:20:52 -耗时 : 0
2019-01-30 15:20:52 -返回值 : system/staff/staff
2019-01-30 15:20:52 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 15:20:52 -HTTP METHOD : GET
2019-01-30 15:20:52 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 15:20:52 -参数 : [{page=1, limit=5}]
2019-01-30 15:20:52 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 15:20:52 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 15:20:52 -<==      Total: 0
2019-01-30 15:20:52 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 15:20:52 -==> Parameters: 
2019-01-30 15:20:52 -<==      Total: 1
2019-01-30 15:20:52 -耗时 : 5
2019-01-30 15:20:52 -返回值 : com.bootdo.common.utils.PageUtils@24676bf8
2019-01-30 15:20:54 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 15:20:54 -HTTP METHOD : GET
2019-01-30 15:20:54 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 15:20:54 -参数 : []
2019-01-30 15:20:54 -耗时 : 0
2019-01-30 15:20:54 -返回值 : system/staff/add
2019-01-30 15:24:25 -请求地址 : http://localhost:8080/index
2019-01-30 15:24:25 -HTTP METHOD : GET
2019-01-30 15:24:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 15:24:25 -参数 : [{}]
2019-01-30 15:24:25 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 15:24:25 -==> Parameters: 123(String)
2019-01-30 15:24:25 -<==      Total: 6
2019-01-30 15:24:25 -耗时 : 12
2019-01-30 15:24:25 -返回值 : index_v1
2019-01-30 15:24:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 15:24:25 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 12(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 15:24:25.277(Timestamp)
2019-01-30 15:24:25 -<==    Updates: 1
2019-01-30 15:24:28 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 15:24:28 -==> Parameters: 123(String)
2019-01-30 15:24:28 -<==      Total: 14
2019-01-30 15:24:28 -请求地址 : http://localhost:8080/system/staff
2019-01-30 15:24:28 -HTTP METHOD : GET
2019-01-30 15:24:28 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 15:24:28 -参数 : []
2019-01-30 15:24:28 -耗时 : 0
2019-01-30 15:24:28 -返回值 : system/staff/staff
2019-01-30 15:24:28 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 15:24:28 -HTTP METHOD : GET
2019-01-30 15:24:28 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 15:24:28 -参数 : [{page=1, limit=5}]
2019-01-30 15:24:28 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 15:24:28 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 15:24:28 -<==      Total: 0
2019-01-30 15:24:28 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 15:24:28 -==> Parameters: 
2019-01-30 15:24:28 -<==      Total: 1
2019-01-30 15:24:28 -耗时 : 3
2019-01-30 15:24:28 -返回值 : com.bootdo.common.utils.PageUtils@1a148f97
2019-01-30 15:24:29 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 15:24:29 -HTTP METHOD : GET
2019-01-30 15:24:29 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 15:24:29 -参数 : []
2019-01-30 15:24:29 -耗时 : 1
2019-01-30 15:24:29 -返回值 : system/staff/add
2019-01-30 15:25:43 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 15:25:43 -HTTP METHOD : GET
2019-01-30 15:25:43 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 15:25:43 -参数 : []
2019-01-30 15:25:43 -耗时 : 1
2019-01-30 15:25:43 -返回值 : system/staff/add
2019-01-30 15:31:45 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 15:31:45 -==> Parameters: 123(String)
2019-01-30 15:31:45 -<==      Total: 14
2019-01-30 15:31:45 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 15:31:45 -HTTP METHOD : GET
2019-01-30 15:31:45 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 15:31:45 -参数 : []
2019-01-30 15:31:45 -耗时 : 0
2019-01-30 15:31:45 -返回值 : system/staff/add
2019-01-30 15:34:50 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 15:34:50 -==> Parameters: 123(String)
2019-01-30 15:34:50 -<==      Total: 14
2019-01-30 15:34:50 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 15:34:50 -HTTP METHOD : GET
2019-01-30 15:34:50 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 15:34:50 -参数 : []
2019-01-30 15:34:50 -耗时 : 0
2019-01-30 15:34:50 -返回值 : system/staff/add
2019-01-30 15:34:58 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 15:34:58 -HTTP METHOD : GET
2019-01-30 15:34:58 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 15:34:58 -参数 : []
2019-01-30 15:34:58 -耗时 : 0
2019-01-30 15:34:58 -返回值 : system/staff/add
2019-01-30 15:35:33 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-01-30 15:36:06 -请求地址 : http://localhost:8080/index
2019-01-30 15:36:06 -HTTP METHOD : GET
2019-01-30 15:36:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 15:36:06 -参数 : [{}]
2019-01-30 15:36:06 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 15:36:06 -==> Parameters: 123(String)
2019-01-30 15:36:06 -<==      Total: 6
2019-01-30 15:36:06 -耗时 : 13
2019-01-30 15:36:06 -返回值 : index_v1
2019-01-30 15:36:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 15:36:06 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 15:36:06.285(Timestamp)
2019-01-30 15:36:06 -<==    Updates: 1
2019-01-30 15:36:08 -请求地址 : http://localhost:8080/system/staff
2019-01-30 15:36:08 -HTTP METHOD : GET
2019-01-30 15:36:08 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 15:36:08 -参数 : []
2019-01-30 15:36:08 -耗时 : 0
2019-01-30 15:36:08 -返回值 : system/staff/staff
2019-01-30 15:36:08 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 15:36:08 -HTTP METHOD : GET
2019-01-30 15:36:08 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 15:36:08 -参数 : [{page=1, limit=5}]
2019-01-30 15:36:08 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 15:36:08 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 15:36:08 -<==      Total: 0
2019-01-30 15:36:08 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 15:36:08 -==> Parameters: 
2019-01-30 15:36:08 -<==      Total: 1
2019-01-30 15:36:08 -耗时 : 3
2019-01-30 15:36:08 -返回值 : com.bootdo.common.utils.PageUtils@34707ef4
2019-01-30 15:36:09 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 15:36:09 -HTTP METHOD : GET
2019-01-30 15:36:09 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 15:36:09 -参数 : []
2019-01-30 15:36:09 -耗时 : 0
2019-01-30 15:36:09 -返回值 : system/staff/add
2019-01-30 15:36:30 -请求地址 : http://localhost:8080/index
2019-01-30 15:36:30 -HTTP METHOD : GET
2019-01-30 15:36:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 15:36:30 -参数 : [{}]
2019-01-30 15:36:30 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 15:36:30 -==> Parameters: 123(String)
2019-01-30 15:36:30 -<==      Total: 6
2019-01-30 15:36:30 -耗时 : 18
2019-01-30 15:36:30 -返回值 : index_v1
2019-01-30 15:36:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 15:36:30 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 15:36:30.623(Timestamp)
2019-01-30 15:36:30 -<==    Updates: 1
2019-01-30 15:36:33 -请求地址 : http://localhost:8080/system/staff
2019-01-30 15:36:33 -HTTP METHOD : GET
2019-01-30 15:36:33 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 15:36:33 -参数 : []
2019-01-30 15:36:33 -耗时 : 1
2019-01-30 15:36:33 -返回值 : system/staff/staff
2019-01-30 15:36:33 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 15:36:33 -HTTP METHOD : GET
2019-01-30 15:36:33 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 15:36:33 -参数 : [{page=1, limit=5}]
2019-01-30 15:36:33 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 15:36:33 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 15:36:33 -<==      Total: 0
2019-01-30 15:36:33 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 15:36:33 -==> Parameters: 
2019-01-30 15:36:33 -<==      Total: 1
2019-01-30 15:36:33 -耗时 : 4
2019-01-30 15:36:33 -返回值 : com.bootdo.common.utils.PageUtils@7f86a8b8
2019-01-30 15:36:34 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 15:36:34 -HTTP METHOD : GET
2019-01-30 15:36:34 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 15:36:34 -参数 : []
2019-01-30 15:36:34 -耗时 : 1
2019-01-30 15:36:34 -返回值 : system/staff/add
2019-01-30 15:40:01 -请求地址 : http://localhost:8080/login;JSESSIONID=b5e6b63c-a0c6-4045-baee-86330c359c17
2019-01-30 15:40:01 -HTTP METHOD : GET
2019-01-30 15:40:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 15:40:01 -参数 : []
2019-01-30 15:40:01 -耗时 : 0
2019-01-30 15:40:01 -返回值 : login
2019-01-30 15:40:02 -请求地址 : http://localhost:8080/login
2019-01-30 15:40:02 -HTTP METHOD : GET
2019-01-30 15:40:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 15:40:02 -参数 : []
2019-01-30 15:40:02 -耗时 : 0
2019-01-30 15:40:02 -返回值 : login
2019-01-30 15:40:05 -请求地址 : http://localhost:8080/login
2019-01-30 15:40:05 -HTTP METHOD : POST
2019-01-30 15:40:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 15:40:05 -参数 : [admin, 123456]
2019-01-30 15:40:05 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-30 15:40:05 -==> Parameters: 
2019-01-30 15:40:05 -<==      Total: 1
2019-01-30 15:40:05 -耗时 : 6
2019-01-30 15:40:05 -返回值 : {msg=操作成功, code=0}
2019-01-30 15:40:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 15:40:05 -==> Parameters: 123(String), admin(String), 登录(String), 6(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 15:40:05.859(Timestamp)
2019-01-30 15:40:05 -请求地址 : http://localhost:8080/index
2019-01-30 15:40:05 -HTTP METHOD : GET
2019-01-30 15:40:05 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 15:40:05 -参数 : [{}]
2019-01-30 15:40:06 -<==    Updates: 1
2019-01-30 15:40:06 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 15:40:06 -==> Parameters: 123(String)
2019-01-30 15:40:06 -<==      Total: 6
2019-01-30 15:40:06 -耗时 : 147
2019-01-30 15:40:06 -返回值 : index_v1
2019-01-30 15:40:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 15:40:06 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 147(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 15:40:06.04(Timestamp)
2019-01-30 15:40:06 -<==    Updates: 1
2019-01-30 15:40:06 -请求地址 : http://localhost:8080/login
2019-01-30 15:40:06 -HTTP METHOD : GET
2019-01-30 15:40:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 15:40:06 -参数 : []
2019-01-30 15:40:06 -耗时 : 0
2019-01-30 15:40:06 -返回值 : login
2019-01-30 15:40:08 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 15:40:08 -==> Parameters: 123(String)
2019-01-30 15:40:08 -<==      Total: 14
2019-01-30 15:40:08 -请求地址 : http://localhost:8080/system/staff
2019-01-30 15:40:08 -HTTP METHOD : GET
2019-01-30 15:40:08 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 15:40:08 -参数 : []
2019-01-30 15:40:08 -耗时 : 0
2019-01-30 15:40:08 -返回值 : system/staff/staff
2019-01-30 15:40:09 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 15:40:09 -HTTP METHOD : GET
2019-01-30 15:40:09 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 15:40:09 -参数 : [{page=1, limit=5}]
2019-01-30 15:40:09 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 15:40:09 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 15:40:09 -<==      Total: 0
2019-01-30 15:40:09 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 15:40:09 -==> Parameters: 
2019-01-30 15:40:09 -<==      Total: 1
2019-01-30 15:40:09 -耗时 : 5
2019-01-30 15:40:09 -返回值 : com.bootdo.common.utils.PageUtils@3e20c63a
2019-01-30 15:40:10 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 15:40:10 -HTTP METHOD : GET
2019-01-30 15:40:10 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 15:40:10 -参数 : []
2019-01-30 15:40:10 -耗时 : 1
2019-01-30 15:40:10 -返回值 : system/staff/add
2019-01-30 15:43:20 -请求地址 : http://localhost:8080/index
2019-01-30 15:43:20 -HTTP METHOD : GET
2019-01-30 15:43:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 15:43:20 -参数 : [{}]
2019-01-30 15:43:20 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 15:43:20 -==> Parameters: 123(String)
2019-01-30 15:43:20 -<==      Total: 6
2019-01-30 15:43:20 -耗时 : 25
2019-01-30 15:43:20 -返回值 : index_v1
2019-01-30 15:43:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 15:43:20 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 15:43:20.356(Timestamp)
2019-01-30 15:43:20 -<==    Updates: 1
2019-01-30 15:43:23 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 15:43:23 -==> Parameters: 123(String)
2019-01-30 15:43:23 -<==      Total: 14
2019-01-30 15:43:23 -请求地址 : http://localhost:8080/system/staff
2019-01-30 15:43:23 -HTTP METHOD : GET
2019-01-30 15:43:23 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 15:43:23 -参数 : []
2019-01-30 15:43:23 -耗时 : 1
2019-01-30 15:43:23 -返回值 : system/staff/staff
2019-01-30 15:43:23 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 15:43:23 -HTTP METHOD : GET
2019-01-30 15:43:23 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 15:43:23 -参数 : [{page=1, limit=5}]
2019-01-30 15:43:23 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 15:43:23 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 15:43:23 -<==      Total: 0
2019-01-30 15:43:23 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 15:43:23 -==> Parameters: 
2019-01-30 15:43:23 -<==      Total: 1
2019-01-30 15:43:23 -耗时 : 7
2019-01-30 15:43:23 -返回值 : com.bootdo.common.utils.PageUtils@644f760b
2019-01-30 15:43:24 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 15:43:24 -HTTP METHOD : GET
2019-01-30 15:43:24 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 15:43:24 -参数 : []
2019-01-30 15:43:24 -耗时 : 0
2019-01-30 15:43:24 -返回值 : system/staff/add
2019-01-30 15:46:30 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 15:46:30 -==> Parameters: 123(String)
2019-01-30 15:46:30 -<==      Total: 14
2019-01-30 15:46:30 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 15:46:30 -HTTP METHOD : GET
2019-01-30 15:46:30 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 15:46:30 -参数 : []
2019-01-30 15:46:30 -耗时 : 0
2019-01-30 15:46:30 -返回值 : system/staff/add
2019-01-30 15:55:31 -请求地址 : http://localhost:8080/index
2019-01-30 15:55:31 -HTTP METHOD : GET
2019-01-30 15:55:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 15:55:31 -参数 : [{}]
2019-01-30 15:55:31 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 15:55:31 -==> Parameters: 123(String)
2019-01-30 15:55:31 -<==      Total: 6
2019-01-30 15:55:31 -耗时 : 29
2019-01-30 15:55:31 -返回值 : index_v1
2019-01-30 15:55:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 15:55:31 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 15:55:31.896(Timestamp)
2019-01-30 15:55:31 -<==    Updates: 1
2019-01-30 15:55:34 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 15:55:34 -==> Parameters: 123(String)
2019-01-30 15:55:34 -<==      Total: 14
2019-01-30 15:55:34 -请求地址 : http://localhost:8080/system/staff
2019-01-30 15:55:34 -HTTP METHOD : GET
2019-01-30 15:55:34 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 15:55:34 -参数 : []
2019-01-30 15:55:34 -耗时 : 0
2019-01-30 15:55:34 -返回值 : system/staff/staff
2019-01-30 15:55:34 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 15:55:34 -HTTP METHOD : GET
2019-01-30 15:55:34 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 15:55:34 -参数 : [{page=1, limit=5}]
2019-01-30 15:55:34 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 15:55:34 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 15:55:34 -<==      Total: 0
2019-01-30 15:55:34 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 15:55:34 -==> Parameters: 
2019-01-30 15:55:34 -<==      Total: 1
2019-01-30 15:55:34 -耗时 : 6
2019-01-30 15:55:34 -返回值 : com.bootdo.common.utils.PageUtils@4743e7be
2019-01-30 15:55:36 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 15:55:36 -HTTP METHOD : GET
2019-01-30 15:55:36 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 15:55:36 -参数 : []
2019-01-30 15:55:36 -耗时 : 0
2019-01-30 15:55:36 -返回值 : system/staff/add
2019-01-30 15:55:50 -请求地址 : http://localhost:8080/sys/user/
2019-01-30 15:55:50 -HTTP METHOD : GET
2019-01-30 15:55:50 -CLASS_METHOD : com.bootdo.system.controller.UserController.User
2019-01-30 15:55:50 -参数 : []
2019-01-30 15:55:50 -耗时 : 1
2019-01-30 15:55:50 -返回值 : system/user/user
2019-01-30 15:55:51 -请求地址 : http://localhost:8080/sys/user/list
2019-01-30 15:55:51 -HTTP METHOD : GET
2019-01-30 15:55:51 -CLASS_METHOD : com.bootdo.system.controller.UserController.list
2019-01-30 15:55:51 -参数 : [{page=1, limit=5, sort=username, order=asc}]
2019-01-30 15:55:51 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user order by username asc limit ?, ? 
2019-01-30 15:55:51 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 15:55:51 -<==      Total: 5
2019-01-30 15:55:51 -==>  Preparing: select count(*) from sys_user 
2019-01-30 15:55:51 -==> Parameters: 
2019-01-30 15:55:51 -<==      Total: 1
2019-01-30 15:55:51 -耗时 : 37
2019-01-30 15:55:51 -返回值 : com.bootdo.common.utils.PageUtils@39502c85
2019-01-30 15:55:52 -请求地址 : http://localhost:8080/sys/user/add
2019-01-30 15:55:52 -HTTP METHOD : GET
2019-01-30 15:55:52 -CLASS_METHOD : com.bootdo.system.controller.UserController.add
2019-01-30 15:55:52 -参数 : []
2019-01-30 15:55:52 -耗时 : 1
2019-01-30 15:55:52 -返回值 : system/user/add
2019-01-30 15:56:01 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 15:56:01 -HTTP METHOD : GET
2019-01-30 15:56:01 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 15:56:01 -参数 : []
2019-01-30 15:56:01 -耗时 : 1
2019-01-30 15:56:01 -返回值 : system/staff/add
2019-01-30 15:59:16 -请求地址 : http://localhost:8080/index
2019-01-30 15:59:16 -HTTP METHOD : GET
2019-01-30 15:59:16 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 15:59:16 -参数 : [{}]
2019-01-30 15:59:16 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 15:59:16 -==> Parameters: 123(String)
2019-01-30 15:59:16 -<==      Total: 6
2019-01-30 15:59:16 -耗时 : 22
2019-01-30 15:59:16 -返回值 : index_v1
2019-01-30 15:59:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 15:59:16 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 22(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 15:59:16.328(Timestamp)
2019-01-30 15:59:16 -<==    Updates: 1
2019-01-30 15:59:19 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 15:59:19 -==> Parameters: 123(String)
2019-01-30 15:59:19 -<==      Total: 14
2019-01-30 15:59:19 -请求地址 : http://localhost:8080/system/staff
2019-01-30 15:59:19 -HTTP METHOD : GET
2019-01-30 15:59:19 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 15:59:19 -参数 : []
2019-01-30 15:59:19 -耗时 : 1
2019-01-30 15:59:19 -返回值 : system/staff/staff
2019-01-30 15:59:19 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 15:59:19 -HTTP METHOD : GET
2019-01-30 15:59:19 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 15:59:19 -参数 : [{page=1, limit=5}]
2019-01-30 15:59:19 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 15:59:19 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 15:59:19 -<==      Total: 0
2019-01-30 15:59:19 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 15:59:19 -==> Parameters: 
2019-01-30 15:59:19 -<==      Total: 1
2019-01-30 15:59:19 -耗时 : 11
2019-01-30 15:59:19 -返回值 : com.bootdo.common.utils.PageUtils@7375296a
2019-01-30 15:59:20 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 15:59:20 -HTTP METHOD : GET
2019-01-30 15:59:20 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 15:59:20 -参数 : []
2019-01-30 15:59:20 -耗时 : 0
2019-01-30 15:59:20 -返回值 : system/staff/add
2019-01-30 15:59:39 -请求地址 : http://localhost:8080/system/staff/save
2019-01-30 15:59:39 -HTTP METHOD : POST
2019-01-30 15:59:39 -CLASS_METHOD : com.bootdo.system.controller.StaffController.save
2019-01-30 15:59:39 -参数 : [com.bootdo.system.domain.StaffDO@23f85d0b]
2019-01-30 15:59:39 -==>  Preparing: insert into sys_staff ( `employee_id`, `dept_id`, `employeename`, `estatus`, `sex`, `birthday`, `email`, `qq`, `wx`, `photo`, `telphone`, `professionaltitle`, `educational`, `duty`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 15:59:39 -==> Parameters: (String), (String), gdff(String), null, 0(Integer), null, (String), (String), (String), (String), (String), (String), (String), (String), null, null, 1(Integer), null, null, null
2019-01-30 15:59:39 -<==    Updates: 1
2019-01-30 15:59:39 -耗时 : 39
2019-01-30 15:59:39 -返回值 : {msg=操作成功, code=0}
2019-01-30 15:59:39 -请求地址 : http://localhost:8080/system/staff
2019-01-30 15:59:39 -HTTP METHOD : GET
2019-01-30 15:59:39 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 15:59:39 -参数 : []
2019-01-30 15:59:39 -耗时 : 1
2019-01-30 15:59:39 -返回值 : system/staff/staff
2019-01-30 15:59:39 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 15:59:39 -HTTP METHOD : GET
2019-01-30 15:59:39 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 15:59:39 -参数 : [{page=1, limit=5}]
2019-01-30 15:59:39 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 15:59:39 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 15:59:39 -<==      Total: 1
2019-01-30 15:59:39 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 15:59:39 -==> Parameters: 
2019-01-30 15:59:39 -<==      Total: 1
2019-01-30 15:59:39 -耗时 : 5
2019-01-30 15:59:39 -返回值 : com.bootdo.common.utils.PageUtils@462abee
2019-01-30 16:00:40 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:00:40 -HTTP METHOD : GET
2019-01-30 16:00:40 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:00:40 -参数 : []
2019-01-30 16:00:40 -耗时 : 1
2019-01-30 16:00:40 -返回值 : system/staff/staff
2019-01-30 16:00:41 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:00:41 -HTTP METHOD : GET
2019-01-30 16:00:41 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:00:41 -参数 : [{page=1, limit=5}]
2019-01-30 16:00:41 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:00:41 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:00:41 -<==      Total: 1
2019-01-30 16:00:41 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:00:41 -==> Parameters: 
2019-01-30 16:00:41 -<==      Total: 1
2019-01-30 16:00:41 -耗时 : 6
2019-01-30 16:00:41 -返回值 : com.bootdo.common.utils.PageUtils@54a6e6c
2019-01-30 16:01:00 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:01:00 -HTTP METHOD : GET
2019-01-30 16:01:00 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:01:00 -参数 : []
2019-01-30 16:01:00 -耗时 : 0
2019-01-30 16:01:00 -返回值 : system/staff/staff
2019-01-30 16:01:00 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:01:00 -HTTP METHOD : GET
2019-01-30 16:01:00 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:01:00 -参数 : [{page=1, limit=5}]
2019-01-30 16:01:00 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:01:00 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:01:00 -<==      Total: 1
2019-01-30 16:01:00 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:01:00 -==> Parameters: 
2019-01-30 16:01:00 -<==      Total: 1
2019-01-30 16:01:00 -耗时 : 6
2019-01-30 16:01:00 -返回值 : com.bootdo.common.utils.PageUtils@27d85487
2019-01-30 16:01:03 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:01:03 -HTTP METHOD : GET
2019-01-30 16:01:03 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:01:03 -参数 : []
2019-01-30 16:01:03 -耗时 : 0
2019-01-30 16:01:03 -返回值 : system/staff/staff
2019-01-30 16:01:03 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:01:03 -HTTP METHOD : GET
2019-01-30 16:01:03 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:01:03 -参数 : [{page=1, limit=5}]
2019-01-30 16:01:03 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:01:03 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:01:03 -<==      Total: 1
2019-01-30 16:01:03 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:01:03 -==> Parameters: 
2019-01-30 16:01:03 -<==      Total: 1
2019-01-30 16:01:03 -耗时 : 5
2019-01-30 16:01:03 -返回值 : com.bootdo.common.utils.PageUtils@1c560ed9
2019-01-30 16:01:41 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 16:01:41 -==> Parameters: 123(String)
2019-01-30 16:01:41 -<==      Total: 14
2019-01-30 16:01:41 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:01:41 -HTTP METHOD : GET
2019-01-30 16:01:41 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:01:41 -参数 : []
2019-01-30 16:01:41 -耗时 : 0
2019-01-30 16:01:41 -返回值 : system/staff/staff
2019-01-30 16:01:41 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:01:41 -HTTP METHOD : GET
2019-01-30 16:01:41 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:01:41 -参数 : [{page=1, limit=5}]
2019-01-30 16:01:56 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:01:56 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:01:56 -<==      Total: 1
2019-01-30 16:02:04 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:02:04 -==> Parameters: 
2019-01-30 16:02:04 -<==      Total: 1
2019-01-30 16:02:15 -耗时 : 33064
2019-01-30 16:02:15 -返回值 : com.bootdo.common.utils.PageUtils@2850e8fb
2019-01-30 16:03:11 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:03:11 -HTTP METHOD : GET
2019-01-30 16:03:11 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:03:11 -参数 : []
2019-01-30 16:03:11 -耗时 : 2
2019-01-30 16:03:11 -返回值 : system/staff/staff
2019-01-30 16:03:11 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:03:11 -HTTP METHOD : GET
2019-01-30 16:03:11 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:03:11 -参数 : [{page=1, limit=5}]
2019-01-30 16:03:11 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:03:11 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:03:11 -<==      Total: 1
2019-01-30 16:03:11 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:03:11 -==> Parameters: 
2019-01-30 16:03:11 -<==      Total: 1
2019-01-30 16:03:11 -耗时 : 9
2019-01-30 16:03:11 -返回值 : com.bootdo.common.utils.PageUtils@66a22ab5
2019-01-30 16:03:29 -请求地址 : http://localhost:8080/system/staff/remove
2019-01-30 16:03:29 -HTTP METHOD : POST
2019-01-30 16:03:29 -CLASS_METHOD : com.bootdo.system.controller.StaffController.remove
2019-01-30 16:03:29 -参数 : [111]
2019-01-30 16:03:29 -==>  Preparing: delete from sys_staff where employee_id = ? 
2019-01-30 16:03:29 -==> Parameters: 111(String)
2019-01-30 16:03:29 -<==    Updates: 1
2019-01-30 16:03:29 -耗时 : 61
2019-01-30 16:03:29 -返回值 : {msg=操作成功, code=0}
2019-01-30 16:03:29 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:03:29 -HTTP METHOD : GET
2019-01-30 16:03:29 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:03:29 -参数 : [{page=1, limit=5}]
2019-01-30 16:03:29 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:03:29 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:03:29 -<==      Total: 0
2019-01-30 16:03:29 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:03:29 -==> Parameters: 
2019-01-30 16:03:29 -<==      Total: 1
2019-01-30 16:03:29 -耗时 : 5
2019-01-30 16:03:29 -返回值 : com.bootdo.common.utils.PageUtils@2ce0cace
2019-01-30 16:04:54 -Starting BootdoApplication on YH-20180312AAAP with PID 16228 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-30 16:04:54 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-30 16:04:54 -The following profiles are active: dev
2019-01-30 16:04:54 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20f12539: startup date [Wed Jan 30 16:04:54 CST 2019]; root of context hierarchy
2019-01-30 16:04:57 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$32b6ccb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 16:04:57 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$f79f316f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 16:04:57 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 16:04:57 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 16:04:57 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 16:04:57 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$923dfe6d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 16:04:57 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ba1936ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 16:04:57 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ac726554] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 16:04:57 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-30 16:04:58 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 16:04:58 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 16:04:58 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 16:04:58 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 16:04:58 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 16:04:58 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-30 16:04:58 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-30 16:04:58 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 16:04:58 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 16:04:58 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 16:04:58 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-30 16:04:59 -Tomcat initialized with port(s): 8080 (http)
2019-01-30 16:04:59 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-30 16:04:59 -Starting service [Tomcat]
2019-01-30 16:04:59 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-30 16:04:59 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-30 16:04:59 -Initializing Spring embedded WebApplicationContext
2019-01-30 16:04:59 -Root WebApplicationContext: initialization completed in 4388 ms
2019-01-30 16:04:59 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-30 16:04:59 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-30 16:04:59 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-30 16:04:59 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-30 16:04:59 -Filter xssFilter was not registered (disabled)
2019-01-30 16:04:59 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-30 16:04:59 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-30 16:04:59 -Servlet statViewServlet mapped to [/druid/*]
2019-01-30 16:04:59 -Servlet dispatcherServlet mapped to [/]
2019-01-30 16:05:00 -{dataSource-1} inited
2019-01-30 16:05:01 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20f12539: startup date [Wed Jan 30 16:04:54 CST 2019]; root of context hierarchy
2019-01-30 16:05:01 -Using default implementation for ThreadExecutor
2019-01-30 16:05:01 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-30 16:05:01 -Quartz Scheduler v.2.2.1 created.
2019-01-30 16:05:01 -RAMJobStore initialized.
2019-01-30 16:05:01 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-30 16:05:01 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-30 16:05:01 -Quartz scheduler version: 2.2.1
2019-01-30 16:05:01 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@adc8683
2019-01-30 16:05:01 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-30 16:05:01 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-30 16:05:02 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 16:05:02 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-30 16:05:02 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-30 16:05:02 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-30 16:05:02 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-30 16:05:02 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-30 16:05:02 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-30 16:05:02 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-30 16:05:02 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-30 16:05:02 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-30 16:05:02 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 16:05:02 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-30 16:05:02 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-30 16:05:02 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-30 16:05:02 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-30 16:05:02 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 16:05:02 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-30 16:05:02 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-30 16:05:02 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 16:05:02 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-30 16:05:02 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-30 16:05:02 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-30 16:05:02 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-30 16:05:02 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-30 16:05:02 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-30 16:05:02 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-30 16:05:02 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 16:05:02 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-30 16:05:02 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-30 16:05:02 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 16:05:02 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-30 16:05:02 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-30 16:05:02 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-30 16:05:02 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-30 16:05:02 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-30 16:05:02 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-30 16:05:02 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-30 16:05:02 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-30 16:05:02 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-30 16:05:02 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 16:05:02 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-30 16:05:02 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-30 16:05:02 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-30 16:05:02 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-30 16:05:02 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-30 16:05:02 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-30 16:05:02 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-30 16:05:02 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-30 16:05:02 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-30 16:05:02 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-30 16:05:02 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-30 16:05:02 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-30 16:05:02 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-30 16:05:02 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-30 16:05:02 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-30 16:05:02 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-30 16:05:02 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-30 16:05:02 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-30 16:05:02 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String)
2019-01-30 16:05:02 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String[])
2019-01-30 16:05:02 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-30 16:05:02 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 16:05:02 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-30 16:05:02 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-30 16:05:02 -Mapped "{[/system/staff/edit/{employeeId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 16:05:02 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-30 16:05:02 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-30 16:05:02 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-30 16:05:02 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-30 16:05:02 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 16:05:02 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-30 16:05:02 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-30 16:05:02 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 16:05:02 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-30 16:05:02 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-30 16:05:02 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-30 16:05:02 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-30 16:05:02 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-30 16:05:02 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-30 16:05:02 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-30 16:05:02 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-30 16:05:02 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-30 16:05:02 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-30 16:05:02 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-30 16:05:02 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-30 16:05:02 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-30 16:05:02 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-30 16:05:03 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-30 16:05:03 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-30 16:05:03 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-30 16:05:03 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 16:05:03 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20f12539: startup date [Wed Jan 30 16:04:54 CST 2019]; root of context hierarchy
2019-01-30 16:05:04 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 16:05:04 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 16:05:04 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-30 16:05:04 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-30 16:05:04 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-30 16:05:04 -Registering beans for JMX exposure on startup
2019-01-30 16:05:04 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-30 16:05:04 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-30 16:05:04 -Starting beans in phase 2147483647
2019-01-30 16:05:04 -Context refreshed
2019-01-30 16:05:04 -Found 1 custom documentation plugin(s)
2019-01-30 16:05:04 -Scanning for api listing references
2019-01-30 16:05:05 -Generating unique operation named: removeUsingPOST_1
2019-01-30 16:05:05 -Generating unique operation named: editUsingGET_1
2019-01-30 16:05:05 -Generating unique operation named: listUsingGET_1
2019-01-30 16:05:05 -Generating unique operation named: updateUsingPOST_1
2019-01-30 16:05:05 -Generating unique operation named: addUsingGET_1
2019-01-30 16:05:05 -Generating unique operation named: editUsingGET_2
2019-01-30 16:05:05 -Generating unique operation named: listUsingGET_2
2019-01-30 16:05:05 -Generating unique operation named: removeUsingPOST_2
2019-01-30 16:05:05 -Generating unique operation named: removeUsingPOST_3
2019-01-30 16:05:05 -Generating unique operation named: saveUsingPOST_1
2019-01-30 16:05:05 -Generating unique operation named: updateUsingPOST_2
2019-01-30 16:05:05 -Generating unique operation named: listUsingGET_3
2019-01-30 16:05:05 -Generating unique operation named: removeUsingPOST_4
2019-01-30 16:05:05 -Generating unique operation named: welcomeUsingGET_1
2019-01-30 16:05:05 -Generating unique operation named: addUsingGET_2
2019-01-30 16:05:05 -Generating unique operation named: editUsingGET_3
2019-01-30 16:05:05 -Generating unique operation named: listUsingGET_4
2019-01-30 16:05:05 -Generating unique operation named: removeUsingPOST_5
2019-01-30 16:05:05 -Generating unique operation named: saveUsingPOST_2
2019-01-30 16:05:05 -Generating unique operation named: treeUsingGET_1
2019-01-30 16:05:05 -Generating unique operation named: updateUsingPOST_3
2019-01-30 16:05:05 -Generating unique operation named: addUsingGET_3
2019-01-30 16:05:05 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-30 16:05:05 -Generating unique operation named: editUsingGET_4
2019-01-30 16:05:05 -Generating unique operation named: listUsingGET_5
2019-01-30 16:05:05 -Generating unique operation named: saveUsingPOST_3
2019-01-30 16:05:05 -Generating unique operation named: saveUsingPOST_4
2019-01-30 16:05:05 -Generating unique operation named: updateUsingPOST_4
2019-01-30 16:05:05 -Generating unique operation named: listUsingGET_6
2019-01-30 16:05:05 -Generating unique operation named: listUsingHEAD_1
2019-01-30 16:05:05 -Generating unique operation named: listUsingPOST_1
2019-01-30 16:05:05 -Generating unique operation named: listUsingPUT_1
2019-01-30 16:05:05 -Generating unique operation named: listUsingPATCH_1
2019-01-30 16:05:05 -Generating unique operation named: listUsingDELETE_1
2019-01-30 16:05:05 -Generating unique operation named: listUsingOPTIONS_1
2019-01-30 16:05:05 -Generating unique operation named: listUsingTRACE_1
2019-01-30 16:05:05 -Generating unique operation named: addUsingGET_4
2019-01-30 16:05:05 -Generating unique operation named: editUsingGET_5
2019-01-30 16:05:05 -Generating unique operation named: listUsingGET_7
2019-01-30 16:05:05 -Generating unique operation named: removeUsingPOST_6
2019-01-30 16:05:05 -Generating unique operation named: removeUsingPOST_7
2019-01-30 16:05:05 -Generating unique operation named: saveUsingPOST_5
2019-01-30 16:05:05 -Generating unique operation named: updateUsingGET_1
2019-01-30 16:05:05 -Generating unique operation named: updateUsingHEAD_1
2019-01-30 16:05:05 -Generating unique operation named: updateUsingPOST_5
2019-01-30 16:05:05 -Generating unique operation named: updateUsingPUT_1
2019-01-30 16:05:05 -Generating unique operation named: updateUsingPATCH_1
2019-01-30 16:05:05 -Generating unique operation named: updateUsingDELETE_1
2019-01-30 16:05:05 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-30 16:05:05 -Generating unique operation named: updateUsingTRACE_1
2019-01-30 16:05:05 -Generating unique operation named: addUsingGET_5
2019-01-30 16:05:05 -Generating unique operation named: editUsingGET_6
2019-01-30 16:05:05 -Generating unique operation named: listUsingGET_8
2019-01-30 16:05:05 -Generating unique operation named: removeUsingPOST_8
2019-01-30 16:05:05 -Generating unique operation named: removeUsingPOST_9
2019-01-30 16:05:05 -Generating unique operation named: saveUsingPOST_6
2019-01-30 16:05:05 -Generating unique operation named: updateUsingGET_2
2019-01-30 16:05:05 -Generating unique operation named: updateUsingHEAD_2
2019-01-30 16:05:05 -Generating unique operation named: updateUsingPOST_6
2019-01-30 16:05:05 -Generating unique operation named: updateUsingPUT_2
2019-01-30 16:05:05 -Generating unique operation named: updateUsingPATCH_2
2019-01-30 16:05:05 -Generating unique operation named: updateUsingDELETE_2
2019-01-30 16:05:05 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-30 16:05:05 -Generating unique operation named: updateUsingTRACE_2
2019-01-30 16:05:05 -Generating unique operation named: addUsingGET_6
2019-01-30 16:05:05 -Generating unique operation named: editUsingGET_7
2019-01-30 16:05:05 -Generating unique operation named: listUsingGET_9
2019-01-30 16:05:05 -Generating unique operation named: roleUsingGET_1
2019-01-30 16:05:05 -Generating unique operation named: saveUsingPOST_7
2019-01-30 16:05:05 -Starting Quartz Scheduler now
2019-01-30 16:05:05 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-30 16:05:05 -Starting...
2019-01-30 16:05:05 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-30 16:05:05 -Started.
2019-01-30 16:05:05 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-30 16:05:05 -Using a shared selector for servlet write/read
2019-01-30 16:05:05 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-30 16:05:05 -Started BootdoApplication in 11.781 seconds (JVM running for 13.111)
2019-01-30 16:05:05 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-30 16:05:05 -==> Parameters: 
2019-01-30 16:05:05 -<==      Total: 1
2019-01-30 16:05:25 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-30 16:05:25 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-30 16:05:26 -FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2019-01-30 16:05:26 -Enabling session validation scheduler...
2019-01-30 16:05:26 -请求地址 : http://localhost:8080/login;JSESSIONID=87fd054d-b4e9-45e3-91d2-84b085fcccc1
2019-01-30 16:05:26 -HTTP METHOD : GET
2019-01-30 16:05:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 16:05:26 -参数 : []
2019-01-30 16:05:26 -耗时 : 3
2019-01-30 16:05:26 -返回值 : login
2019-01-30 16:05:26 -请求地址 : http://localhost:8080/login
2019-01-30 16:05:26 -HTTP METHOD : GET
2019-01-30 16:05:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 16:05:26 -参数 : []
2019-01-30 16:05:26 -耗时 : 0
2019-01-30 16:05:26 -返回值 : login
2019-01-30 16:05:29 -请求地址 : http://localhost:8080/login
2019-01-30 16:05:29 -HTTP METHOD : POST
2019-01-30 16:05:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 16:05:29 -参数 : [admin, 123456]
2019-01-30 16:05:29 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-30 16:05:29 -==> Parameters: 
2019-01-30 16:05:29 -<==      Total: 1
2019-01-30 16:05:29 -耗时 : 69
2019-01-30 16:05:29 -返回值 : {msg=操作成功, code=0}
2019-01-30 16:05:29 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-30 16:05:29 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 16:05:29 -==> Parameters: 123(String), admin(String), 登录(String), 70(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 16:05:29.903(Timestamp)
2019-01-30 16:05:29 -请求地址 : http://localhost:8080/index
2019-01-30 16:05:29 -HTTP METHOD : GET
2019-01-30 16:05:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 16:05:29 -参数 : [{}]
2019-01-30 16:05:29 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 16:05:29 -<==    Updates: 1
2019-01-30 16:05:30 -==> Parameters: 123(String)
2019-01-30 16:05:30 -<==      Total: 6
2019-01-30 16:05:30 -耗时 : 156
2019-01-30 16:05:30 -返回值 : index_v1
2019-01-30 16:05:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 16:05:30 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 156(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 16:05:30.128(Timestamp)
2019-01-30 16:05:30 -<==    Updates: 1
2019-01-30 16:05:32 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 16:05:32 -==> Parameters: 123(String)
2019-01-30 16:05:32 -<==      Total: 14
2019-01-30 16:05:32 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:05:32 -HTTP METHOD : GET
2019-01-30 16:05:32 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:05:32 -参数 : []
2019-01-30 16:05:32 -耗时 : 0
2019-01-30 16:05:32 -返回值 : system/staff/staff
2019-01-30 16:05:32 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:05:32 -HTTP METHOD : GET
2019-01-30 16:05:32 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:05:32 -参数 : [{page=1, limit=5}]
2019-01-30 16:05:32 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:05:32 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:05:32 -<==      Total: 0
2019-01-30 16:05:32 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:05:32 -==> Parameters: 
2019-01-30 16:05:32 -<==      Total: 1
2019-01-30 16:05:32 -耗时 : 25
2019-01-30 16:05:32 -返回值 : com.bootdo.common.utils.PageUtils@4632a7c6
2019-01-30 16:05:33 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 16:05:33 -HTTP METHOD : GET
2019-01-30 16:05:33 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 16:05:33 -参数 : []
2019-01-30 16:05:33 -耗时 : 6
2019-01-30 16:05:33 -返回值 : system/staff/add
2019-01-30 16:05:37 -请求地址 : http://localhost:8080/system/staff/save
2019-01-30 16:05:37 -HTTP METHOD : POST
2019-01-30 16:05:37 -CLASS_METHOD : com.bootdo.system.controller.StaffController.save
2019-01-30 16:05:37 -参数 : [com.bootdo.system.domain.StaffDO@105b1cd9]
2019-01-30 16:05:37 -==>  Preparing: insert into sys_staff ( `employee_id`, `dept_id`, `employeename`, `estatus`, `sex`, `birthday`, `email`, `qq`, `wx`, `photo`, `telphone`, `professionaltitle`, `educational`, `duty`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 16:05:37 -==> Parameters: b9d36cb6-6d7b-4b97-842c-b8c545e8ee3f(String), (String), ggdddd(String), null, 0(Integer), null, (String), (String), (String), (String), (String), (String), (String), (String), null, null, 1(Integer), null, null, null
2019-01-30 16:05:37 -<==    Updates: 1
2019-01-30 16:05:37 -耗时 : 42
2019-01-30 16:05:37 -返回值 : {msg=操作成功, code=0}
2019-01-30 16:05:38 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:05:38 -HTTP METHOD : GET
2019-01-30 16:05:38 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:05:38 -参数 : []
2019-01-30 16:05:38 -耗时 : 1
2019-01-30 16:05:38 -返回值 : system/staff/staff
2019-01-30 16:05:38 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:05:38 -HTTP METHOD : GET
2019-01-30 16:05:38 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:05:38 -参数 : [{page=1, limit=5}]
2019-01-30 16:05:38 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:05:38 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:05:38 -<==      Total: 1
2019-01-30 16:05:38 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:05:38 -==> Parameters: 
2019-01-30 16:05:38 -<==      Total: 1
2019-01-30 16:05:38 -耗时 : 9
2019-01-30 16:05:38 -返回值 : com.bootdo.common.utils.PageUtils@3cbc951c
2019-01-30 16:06:03 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-30 16:06:07 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 16:06:07 -HTTP METHOD : GET
2019-01-30 16:06:07 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 16:06:07 -参数 : []
2019-01-30 16:06:07 -耗时 : 0
2019-01-30 16:06:07 -返回值 : system/staff/add
2019-01-30 16:07:12 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:07:12 -HTTP METHOD : GET
2019-01-30 16:07:12 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:07:12 -参数 : []
2019-01-30 16:07:12 -耗时 : 0
2019-01-30 16:07:12 -返回值 : system/staff/staff
2019-01-30 16:07:12 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:07:12 -HTTP METHOD : GET
2019-01-30 16:07:12 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:07:12 -参数 : [{page=1, limit=5}]
2019-01-30 16:07:12 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:07:12 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:07:12 -<==      Total: 1
2019-01-30 16:07:12 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:07:12 -==> Parameters: 
2019-01-30 16:07:12 -<==      Total: 1
2019-01-30 16:07:12 -耗时 : 9
2019-01-30 16:07:12 -返回值 : com.bootdo.common.utils.PageUtils@582eff76
2019-01-30 16:10:18 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 16:10:18 -==> Parameters: 123(String)
2019-01-30 16:10:18 -<==      Total: 14
2019-01-30 16:10:18 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 16:10:18 -HTTP METHOD : GET
2019-01-30 16:10:18 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 16:10:18 -参数 : []
2019-01-30 16:10:18 -耗时 : 0
2019-01-30 16:10:18 -返回值 : system/staff/add
2019-01-30 16:10:23 -请求地址 : http://localhost:8080/system/staff/save
2019-01-30 16:10:23 -HTTP METHOD : POST
2019-01-30 16:10:23 -CLASS_METHOD : com.bootdo.system.controller.StaffController.save
2019-01-30 16:10:23 -参数 : [com.bootdo.system.domain.StaffDO@21acce3e]
2019-01-30 16:10:23 -==>  Preparing: insert into sys_staff ( `employee_id`, `dept_id`, `employeename`, `estatus`, `sex`, `birthday`, `email`, `qq`, `wx`, `photo`, `telphone`, `professionaltitle`, `educational`, `duty`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 16:10:23 -==> Parameters: f13f29cd-55a1-49c6-8d1a-d9418a2c5050(String), (String), eeeww(String), null, 1(Integer), null, (String), (String), (String), (String), (String), (String), (String), (String), null, null, 1(Integer), null, null, null
2019-01-30 16:10:23 -<==    Updates: 1
2019-01-30 16:10:23 -耗时 : 43
2019-01-30 16:10:23 -返回值 : {msg=操作成功, code=0}
2019-01-30 16:10:23 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:10:23 -HTTP METHOD : GET
2019-01-30 16:10:23 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:10:23 -参数 : []
2019-01-30 16:10:23 -耗时 : 1
2019-01-30 16:10:23 -返回值 : system/staff/staff
2019-01-30 16:10:24 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:10:24 -HTTP METHOD : GET
2019-01-30 16:10:24 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:10:24 -参数 : [{page=1, limit=5}]
2019-01-30 16:10:24 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:10:24 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:10:24 -<==      Total: 2
2019-01-30 16:10:24 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:10:24 -==> Parameters: 
2019-01-30 16:10:24 -<==      Total: 1
2019-01-30 16:10:24 -耗时 : 8
2019-01-30 16:10:24 -返回值 : com.bootdo.common.utils.PageUtils@73677ce3
2019-01-30 16:10:51 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:10:51 -HTTP METHOD : GET
2019-01-30 16:10:51 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:10:51 -参数 : []
2019-01-30 16:10:51 -耗时 : 1
2019-01-30 16:10:51 -返回值 : system/staff/staff
2019-01-30 16:10:51 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:10:51 -HTTP METHOD : GET
2019-01-30 16:10:51 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:10:51 -参数 : [{page=1, limit=5}]
2019-01-30 16:10:51 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:10:51 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:10:51 -<==      Total: 2
2019-01-30 16:10:51 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:10:51 -==> Parameters: 
2019-01-30 16:10:51 -<==      Total: 1
2019-01-30 16:10:51 -耗时 : 7
2019-01-30 16:10:51 -返回值 : com.bootdo.common.utils.PageUtils@444e71dc
2019-01-30 16:11:41 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:11:41 -HTTP METHOD : GET
2019-01-30 16:11:41 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:11:41 -参数 : []
2019-01-30 16:11:41 -耗时 : 1
2019-01-30 16:11:41 -返回值 : system/staff/staff
2019-01-30 16:11:41 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:11:41 -HTTP METHOD : GET
2019-01-30 16:11:41 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:11:41 -参数 : [{page=1, limit=5}]
2019-01-30 16:11:41 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:11:41 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:11:41 -<==      Total: 2
2019-01-30 16:11:41 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:11:41 -==> Parameters: 
2019-01-30 16:11:41 -<==      Total: 1
2019-01-30 16:11:41 -耗时 : 8
2019-01-30 16:11:41 -返回值 : com.bootdo.common.utils.PageUtils@6414e450
2019-01-30 16:11:44 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:11:44 -HTTP METHOD : GET
2019-01-30 16:11:44 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:11:44 -参数 : []
2019-01-30 16:11:44 -耗时 : 0
2019-01-30 16:11:44 -返回值 : system/staff/staff
2019-01-30 16:11:45 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:11:45 -HTTP METHOD : GET
2019-01-30 16:11:45 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:11:45 -参数 : [{page=1, limit=5}]
2019-01-30 16:11:45 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:11:45 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:11:45 -<==      Total: 2
2019-01-30 16:11:45 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:11:45 -==> Parameters: 
2019-01-30 16:11:45 -<==      Total: 1
2019-01-30 16:11:45 -耗时 : 6
2019-01-30 16:11:45 -返回值 : com.bootdo.common.utils.PageUtils@32687d5e
2019-01-30 16:12:21 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 16:12:21 -==> Parameters: 123(String)
2019-01-30 16:12:21 -<==      Total: 14
2019-01-30 16:12:21 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:12:21 -HTTP METHOD : GET
2019-01-30 16:12:21 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:12:21 -参数 : []
2019-01-30 16:12:21 -耗时 : 0
2019-01-30 16:12:21 -返回值 : system/staff/staff
2019-01-30 16:12:21 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:12:21 -HTTP METHOD : GET
2019-01-30 16:12:21 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:12:21 -参数 : [{page=1, limit=5}]
2019-01-30 16:12:21 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:12:21 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:12:21 -<==      Total: 2
2019-01-30 16:12:21 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:12:21 -==> Parameters: 
2019-01-30 16:12:21 -<==      Total: 1
2019-01-30 16:12:21 -耗时 : 8
2019-01-30 16:12:21 -返回值 : com.bootdo.common.utils.PageUtils@2374dc61
2019-01-30 16:13:06 -请求地址 : http://localhost:8080/index
2019-01-30 16:13:06 -HTTP METHOD : GET
2019-01-30 16:13:06 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 16:13:06 -参数 : [{}]
2019-01-30 16:13:06 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 16:13:06 -==> Parameters: 123(String)
2019-01-30 16:13:06 -<==      Total: 6
2019-01-30 16:13:06 -耗时 : 31
2019-01-30 16:13:06 -返回值 : index_v1
2019-01-30 16:13:06 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 16:13:06 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 16:13:06.541(Timestamp)
2019-01-30 16:13:06 -<==    Updates: 1
2019-01-30 16:13:08 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:13:08 -HTTP METHOD : GET
2019-01-30 16:13:08 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:13:08 -参数 : []
2019-01-30 16:13:08 -耗时 : 0
2019-01-30 16:13:08 -返回值 : system/staff/staff
2019-01-30 16:13:09 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:13:09 -HTTP METHOD : GET
2019-01-30 16:13:09 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:13:09 -参数 : [{page=1, limit=5}]
2019-01-30 16:13:09 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:13:09 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:13:09 -<==      Total: 2
2019-01-30 16:13:09 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:13:09 -==> Parameters: 
2019-01-30 16:13:09 -<==      Total: 1
2019-01-30 16:13:09 -耗时 : 8
2019-01-30 16:13:09 -返回值 : com.bootdo.common.utils.PageUtils@baa97cd
2019-01-30 16:13:10 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 16:13:10 -HTTP METHOD : GET
2019-01-30 16:13:10 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 16:13:10 -参数 : []
2019-01-30 16:13:10 -耗时 : 1
2019-01-30 16:13:10 -返回值 : system/staff/add
2019-01-30 16:13:18 -请求地址 : http://localhost:8080/system/staff/save
2019-01-30 16:13:18 -HTTP METHOD : POST
2019-01-30 16:13:18 -CLASS_METHOD : com.bootdo.system.controller.StaffController.save
2019-01-30 16:13:18 -参数 : [com.bootdo.system.domain.StaffDO@7029998a]
2019-01-30 16:13:18 -==>  Preparing: insert into sys_staff ( `employee_id`, `dept_id`, `employeename`, `estatus`, `sex`, `birthday`, `email`, `qq`, `wx`, `photo`, `telphone`, `professionaltitle`, `educational`, `duty`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 16:13:18 -==> Parameters: 20621295-df2e-45bc-8b4a-b4f19b2c5ee1(String), (String), 发送到(String), 0(Integer), 0(Integer), null, (String), (String), (String), (String), (String), (String), (String), (String), null, null, 1(Integer), null, null, null
2019-01-30 16:13:18 -<==    Updates: 1
2019-01-30 16:13:18 -耗时 : 37
2019-01-30 16:13:18 -返回值 : {msg=操作成功, code=0}
2019-01-30 16:13:18 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:13:18 -HTTP METHOD : GET
2019-01-30 16:13:18 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:13:18 -参数 : []
2019-01-30 16:13:18 -耗时 : 0
2019-01-30 16:13:18 -返回值 : system/staff/staff
2019-01-30 16:13:19 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:13:19 -HTTP METHOD : GET
2019-01-30 16:13:19 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:13:19 -参数 : [{page=1, limit=5}]
2019-01-30 16:13:19 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:13:19 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:13:19 -<==      Total: 3
2019-01-30 16:13:19 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:13:19 -==> Parameters: 
2019-01-30 16:13:19 -<==      Total: 1
2019-01-30 16:13:19 -耗时 : 8
2019-01-30 16:13:19 -返回值 : com.bootdo.common.utils.PageUtils@53657a76
2019-01-30 16:13:27 -请求地址 : http://localhost:8080/system/staff/batchRemove
2019-01-30 16:13:27 -HTTP METHOD : POST
2019-01-30 16:13:27 -CLASS_METHOD : com.bootdo.system.controller.StaffController.remove
2019-01-30 16:13:27 -参数 : [[Ljava.lang.String;@137e5475]
2019-01-30 16:13:27 -==>  Preparing: delete from sys_staff where employee_id in ( ? , ? ) 
2019-01-30 16:13:27 -==> Parameters: f13f29cd-55a1-49c6-8d1a-d9418a2c5050(String), b9d36cb6-6d7b-4b97-842c-b8c545e8ee3f(String)
2019-01-30 16:13:27 -<==    Updates: 2
2019-01-30 16:13:27 -耗时 : 59
2019-01-30 16:13:27 -返回值 : {msg=操作成功, code=0}
2019-01-30 16:13:27 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:13:27 -HTTP METHOD : GET
2019-01-30 16:13:27 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:13:27 -参数 : [{page=1, limit=5}]
2019-01-30 16:13:27 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:13:27 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:13:27 -<==      Total: 1
2019-01-30 16:13:27 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:13:27 -==> Parameters: 
2019-01-30 16:13:27 -<==      Total: 1
2019-01-30 16:13:27 -耗时 : 23
2019-01-30 16:13:27 -返回值 : com.bootdo.common.utils.PageUtils@2774482e
2019-01-30 16:13:49 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 16:13:49 -HTTP METHOD : GET
2019-01-30 16:13:49 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 16:13:49 -参数 : []
2019-01-30 16:13:49 -耗时 : 0
2019-01-30 16:13:49 -返回值 : system/staff/add
2019-01-30 16:24:37 -请求地址 : http://localhost:8080/index
2019-01-30 16:24:37 -HTTP METHOD : GET
2019-01-30 16:24:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 16:24:37 -参数 : [{}]
2019-01-30 16:24:37 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 16:24:37 -==> Parameters: 123(String)
2019-01-30 16:24:37 -<==      Total: 6
2019-01-30 16:24:37 -耗时 : 34
2019-01-30 16:24:37 -返回值 : index_v1
2019-01-30 16:24:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 16:24:37 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 16:24:37.42(Timestamp)
2019-01-30 16:24:37 -<==    Updates: 1
2019-01-30 16:24:40 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 16:24:40 -==> Parameters: 123(String)
2019-01-30 16:24:40 -<==      Total: 14
2019-01-30 16:24:40 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:24:40 -HTTP METHOD : GET
2019-01-30 16:24:40 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:24:40 -参数 : []
2019-01-30 16:24:40 -耗时 : 0
2019-01-30 16:24:40 -返回值 : system/staff/staff
2019-01-30 16:24:40 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:24:40 -HTTP METHOD : GET
2019-01-30 16:24:40 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:24:40 -参数 : [{page=1, limit=5}]
2019-01-30 16:24:40 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:24:40 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:24:40 -<==      Total: 1
2019-01-30 16:24:40 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:24:40 -==> Parameters: 
2019-01-30 16:24:40 -<==      Total: 1
2019-01-30 16:24:40 -耗时 : 7
2019-01-30 16:24:40 -返回值 : com.bootdo.common.utils.PageUtils@42834a23
2019-01-30 16:24:41 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 16:24:41 -HTTP METHOD : GET
2019-01-30 16:24:41 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 16:24:41 -参数 : []
2019-01-30 16:24:41 -耗时 : 0
2019-01-30 16:24:41 -返回值 : system/staff/add
2019-01-30 16:26:20 -请求地址 : http://localhost:8080/index
2019-01-30 16:26:20 -HTTP METHOD : GET
2019-01-30 16:26:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 16:26:20 -参数 : [{}]
2019-01-30 16:26:20 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 16:26:20 -==> Parameters: 123(String)
2019-01-30 16:26:20 -<==      Total: 6
2019-01-30 16:26:20 -耗时 : 44
2019-01-30 16:26:20 -返回值 : index_v1
2019-01-30 16:26:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 16:26:20 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 44(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 16:26:20.47(Timestamp)
2019-01-30 16:26:20 -<==    Updates: 1
2019-01-30 16:26:22 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:26:22 -HTTP METHOD : GET
2019-01-30 16:26:22 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:26:22 -参数 : []
2019-01-30 16:26:22 -耗时 : 1
2019-01-30 16:26:22 -返回值 : system/staff/staff
2019-01-30 16:26:23 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:26:23 -HTTP METHOD : GET
2019-01-30 16:26:23 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:26:23 -参数 : [{page=1, limit=5}]
2019-01-30 16:26:23 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:26:23 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:26:23 -<==      Total: 1
2019-01-30 16:26:23 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:26:23 -==> Parameters: 
2019-01-30 16:26:23 -<==      Total: 1
2019-01-30 16:26:23 -耗时 : 8
2019-01-30 16:26:23 -返回值 : com.bootdo.common.utils.PageUtils@1e731afe
2019-01-30 16:26:24 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 16:26:24 -HTTP METHOD : GET
2019-01-30 16:26:24 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 16:26:24 -参数 : []
2019-01-30 16:26:24 -耗时 : 0
2019-01-30 16:26:24 -返回值 : system/staff/add
2019-01-30 16:27:00 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 16:27:00 -==> Parameters: 123(String)
2019-01-30 16:27:00 -<==      Total: 14
2019-01-30 16:27:00 -请求地址 : http://localhost:8080/system/staff/save
2019-01-30 16:27:00 -HTTP METHOD : POST
2019-01-30 16:27:00 -CLASS_METHOD : com.bootdo.system.controller.StaffController.save
2019-01-30 16:27:00 -参数 : [com.bootdo.system.domain.StaffDO@3088d3de]
2019-01-30 16:27:00 -==>  Preparing: insert into sys_staff ( `employee_id`, `dept_id`, `employeename`, `estatus`, `sex`, `birthday`, `email`, `qq`, `wx`, `photo`, `telphone`, `professionaltitle`, `educational`, `duty`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 16:27:00 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String), (String), 让他死(String), 0(Integer), 0(Integer), 2019-01-30 00:00:00.0(Timestamp), (String), (String), (String), (String), (String), (String), (String), (String), null, null, 1(Integer), null, null, null
2019-01-30 16:27:00 -<==    Updates: 1
2019-01-30 16:27:00 -耗时 : 37
2019-01-30 16:27:00 -返回值 : {msg=操作成功, code=0}
2019-01-30 16:27:00 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:27:00 -HTTP METHOD : GET
2019-01-30 16:27:00 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:27:00 -参数 : []
2019-01-30 16:27:00 -耗时 : 0
2019-01-30 16:27:00 -返回值 : system/staff/staff
2019-01-30 16:27:00 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:27:00 -HTTP METHOD : GET
2019-01-30 16:27:00 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:27:00 -参数 : [{page=1, limit=5}]
2019-01-30 16:27:00 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:27:00 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:27:00 -<==      Total: 2
2019-01-30 16:27:00 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:27:00 -==> Parameters: 
2019-01-30 16:27:00 -<==      Total: 1
2019-01-30 16:27:00 -耗时 : 9
2019-01-30 16:27:00 -返回值 : com.bootdo.common.utils.PageUtils@5c032c1a
2019-01-30 16:27:51 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:27:51 -HTTP METHOD : GET
2019-01-30 16:27:51 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:27:51 -参数 : []
2019-01-30 16:27:51 -耗时 : 0
2019-01-30 16:27:51 -返回值 : system/staff/staff
2019-01-30 16:27:51 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:27:51 -HTTP METHOD : GET
2019-01-30 16:27:51 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:27:51 -参数 : [{page=1, limit=5}]
2019-01-30 16:27:51 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:27:51 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:27:51 -<==      Total: 2
2019-01-30 16:27:51 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:27:51 -==> Parameters: 
2019-01-30 16:27:51 -<==      Total: 1
2019-01-30 16:27:51 -耗时 : 9
2019-01-30 16:27:51 -返回值 : com.bootdo.common.utils.PageUtils@43f60002
2019-01-30 16:36:03 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-01-30 16:36:55 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 16:36:55 -==> Parameters: 123(String)
2019-01-30 16:36:55 -<==      Total: 14
2019-01-30 16:36:55 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:36:55 -HTTP METHOD : GET
2019-01-30 16:36:55 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:36:55 -参数 : []
2019-01-30 16:36:55 -耗时 : 0
2019-01-30 16:36:55 -返回值 : system/staff/staff
2019-01-30 16:36:55 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:36:55 -HTTP METHOD : GET
2019-01-30 16:36:55 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:36:55 -参数 : [{page=1, limit=5}]
2019-01-30 16:36:55 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:36:55 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:36:55 -<==      Total: 2
2019-01-30 16:36:55 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:36:55 -==> Parameters: 
2019-01-30 16:36:55 -<==      Total: 1
2019-01-30 16:36:55 -耗时 : 8
2019-01-30 16:36:55 -返回值 : com.bootdo.common.utils.PageUtils@46dc126d
2019-01-30 16:42:58 -请求地址 : http://localhost:8080/index
2019-01-30 16:42:58 -HTTP METHOD : GET
2019-01-30 16:42:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 16:42:58 -参数 : [{}]
2019-01-30 16:42:58 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 16:42:58 -==> Parameters: 123(String)
2019-01-30 16:42:58 -<==      Total: 6
2019-01-30 16:42:58 -耗时 : 38
2019-01-30 16:42:58 -返回值 : index_v1
2019-01-30 16:42:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 16:42:58 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 39(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 16:42:58.498(Timestamp)
2019-01-30 16:42:58 -<==    Updates: 1
2019-01-30 16:43:01 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 16:43:01 -==> Parameters: 123(String)
2019-01-30 16:43:01 -<==      Total: 14
2019-01-30 16:43:01 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:43:01 -HTTP METHOD : GET
2019-01-30 16:43:01 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:43:01 -参数 : []
2019-01-30 16:43:01 -耗时 : 0
2019-01-30 16:43:01 -返回值 : system/staff/staff
2019-01-30 16:43:01 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:43:01 -HTTP METHOD : GET
2019-01-30 16:43:01 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:43:01 -参数 : [{page=1, limit=5}]
2019-01-30 16:43:01 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:43:01 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:43:01 -<==      Total: 2
2019-01-30 16:43:01 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:43:01 -==> Parameters: 
2019-01-30 16:43:01 -<==      Total: 1
2019-01-30 16:43:01 -耗时 : 7
2019-01-30 16:43:01 -返回值 : com.bootdo.common.utils.PageUtils@60b428bc
2019-01-30 16:43:02 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 16:43:02 -HTTP METHOD : GET
2019-01-30 16:43:02 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 16:43:02 -参数 : []
2019-01-30 16:43:02 -耗时 : 1
2019-01-30 16:43:02 -返回值 : system/staff/add
2019-01-30 16:44:19 -请求地址 : http://localhost:8080/system/staff/save
2019-01-30 16:44:19 -HTTP METHOD : POST
2019-01-30 16:44:19 -CLASS_METHOD : com.bootdo.system.controller.StaffController.save
2019-01-30 16:44:19 -参数 : [com.bootdo.system.domain.StaffDO@159e631b]
2019-01-30 16:44:19 -==>  Preparing: insert into sys_staff ( `employee_id`, `dept_id`, `employeename`, `estatus`, `sex`, `birthday`, `email`, `qq`, `wx`, `photo`, `telphone`, `professionaltitle`, `educational`, `duty`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 16:44:19 -==> Parameters: fffa8382-7dbf-4d6e-a4fb-7ae1d282d517(String), (String), 染发膏(String), 0(Integer), 0(Integer), null, 12@qq.com(String), 1(String), (String), (String), 15611238888(String), (String), (String), (String), null, null, 1(Integer), null, null, null
2019-01-30 16:44:19 -<==    Updates: 1
2019-01-30 16:44:19 -耗时 : 37
2019-01-30 16:44:19 -返回值 : {msg=操作成功, code=0}
2019-01-30 16:44:19 -请求地址 : http://localhost:8080/system/staff
2019-01-30 16:44:19 -HTTP METHOD : GET
2019-01-30 16:44:19 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 16:44:19 -参数 : []
2019-01-30 16:44:19 -耗时 : 0
2019-01-30 16:44:19 -返回值 : system/staff/staff
2019-01-30 16:44:19 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 16:44:19 -HTTP METHOD : GET
2019-01-30 16:44:19 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 16:44:19 -参数 : [{page=1, limit=5}]
2019-01-30 16:44:19 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 16:44:19 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 16:44:19 -<==      Total: 3
2019-01-30 16:44:19 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 16:44:19 -==> Parameters: 
2019-01-30 16:44:19 -<==      Total: 1
2019-01-30 16:44:19 -耗时 : 6
2019-01-30 16:44:19 -返回值 : com.bootdo.common.utils.PageUtils@2c088093
2019-01-30 16:46:18 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 16:46:18 -==> Parameters: 123(String)
2019-01-30 16:46:18 -<==      Total: 14
2019-01-30 16:46:18 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 16:46:18 -HTTP METHOD : GET
2019-01-30 16:46:18 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 16:46:18 -参数 : []
2019-01-30 16:46:18 -耗时 : 1
2019-01-30 16:46:18 -返回值 : system/staff/add
2019-01-30 17:02:01 -请求地址 : http://localhost:8080/index
2019-01-30 17:02:01 -HTTP METHOD : GET
2019-01-30 17:02:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 17:02:01 -参数 : [{}]
2019-01-30 17:02:01 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 17:02:01 -==> Parameters: 123(String)
2019-01-30 17:02:01 -<==      Total: 6
2019-01-30 17:02:01 -耗时 : 34
2019-01-30 17:02:01 -返回值 : index_v1
2019-01-30 17:02:01 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 17:02:01 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 17:02:01.94(Timestamp)
2019-01-30 17:02:02 -<==    Updates: 1
2019-01-30 17:02:04 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 17:02:04 -==> Parameters: 123(String)
2019-01-30 17:02:04 -<==      Total: 14
2019-01-30 17:02:04 -请求地址 : http://localhost:8080/system/staff
2019-01-30 17:02:04 -HTTP METHOD : GET
2019-01-30 17:02:04 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 17:02:04 -参数 : []
2019-01-30 17:02:04 -耗时 : 1
2019-01-30 17:02:04 -返回值 : system/staff/staff
2019-01-30 17:02:04 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 17:02:04 -HTTP METHOD : GET
2019-01-30 17:02:04 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 17:02:04 -参数 : [{page=1, limit=5}]
2019-01-30 17:02:04 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 17:02:04 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 17:02:04 -<==      Total: 3
2019-01-30 17:02:04 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 17:02:04 -==> Parameters: 
2019-01-30 17:02:04 -<==      Total: 1
2019-01-30 17:02:04 -耗时 : 9
2019-01-30 17:02:04 -返回值 : com.bootdo.common.utils.PageUtils@2cd34d4f
2019-01-30 17:02:05 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 17:02:05 -HTTP METHOD : GET
2019-01-30 17:02:05 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 17:02:05 -参数 : []
2019-01-30 17:02:05 -耗时 : 0
2019-01-30 17:02:05 -返回值 : system/staff/add
2019-01-30 17:05:26 -Validating all active sessions...
2019-01-30 17:05:26 -Finished session validation.  No sessions were stopped.
2019-01-30 17:06:03 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2019-01-30 17:08:55 -请求地址 : http://localhost:8080/login;JSESSIONID=33de2021-faac-4b3d-baee-aa513570e7a6
2019-01-30 17:08:55 -HTTP METHOD : GET
2019-01-30 17:08:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 17:08:55 -参数 : []
2019-01-30 17:08:55 -耗时 : 0
2019-01-30 17:08:55 -返回值 : login
2019-01-30 17:08:55 -请求地址 : http://localhost:8080/login
2019-01-30 17:08:55 -HTTP METHOD : GET
2019-01-30 17:08:55 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 17:08:55 -参数 : []
2019-01-30 17:08:55 -耗时 : 1
2019-01-30 17:08:55 -返回值 : login
2019-01-30 17:08:58 -请求地址 : http://localhost:8080/login
2019-01-30 17:08:58 -HTTP METHOD : POST
2019-01-30 17:08:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 17:08:58 -参数 : [admin, 123456]
2019-01-30 17:08:58 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-30 17:08:58 -==> Parameters: 
2019-01-30 17:08:58 -<==      Total: 1
2019-01-30 17:08:58 -耗时 : 16
2019-01-30 17:08:58 -返回值 : {msg=操作成功, code=0}
2019-01-30 17:08:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 17:08:58 -==> Parameters: 123(String), admin(String), 登录(String), 16(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 17:08:58.577(Timestamp)
2019-01-30 17:08:58 -<==    Updates: 1
2019-01-30 17:08:58 -请求地址 : http://localhost:8080/index
2019-01-30 17:08:58 -HTTP METHOD : GET
2019-01-30 17:08:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 17:08:58 -参数 : [{}]
2019-01-30 17:08:58 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 17:08:58 -==> Parameters: 123(String)
2019-01-30 17:08:58 -<==      Total: 6
2019-01-30 17:08:58 -耗时 : 9
2019-01-30 17:08:58 -返回值 : index_v1
2019-01-30 17:08:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 17:08:58 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 9(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 17:08:58.677(Timestamp)
2019-01-30 17:08:58 -<==    Updates: 1
2019-01-30 17:09:01 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 17:09:01 -==> Parameters: 123(String)
2019-01-30 17:09:01 -<==      Total: 14
2019-01-30 17:09:01 -请求地址 : http://localhost:8080/system/staff
2019-01-30 17:09:01 -HTTP METHOD : GET
2019-01-30 17:09:01 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 17:09:01 -参数 : []
2019-01-30 17:09:01 -耗时 : 0
2019-01-30 17:09:01 -返回值 : system/staff/staff
2019-01-30 17:09:01 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 17:09:01 -HTTP METHOD : GET
2019-01-30 17:09:01 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 17:09:01 -参数 : [{page=1, limit=5}]
2019-01-30 17:09:01 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 17:09:01 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 17:09:01 -<==      Total: 3
2019-01-30 17:09:01 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 17:09:01 -==> Parameters: 
2019-01-30 17:09:01 -<==      Total: 1
2019-01-30 17:09:01 -耗时 : 6
2019-01-30 17:09:01 -返回值 : com.bootdo.common.utils.PageUtils@13fef2fb
2019-01-30 17:09:03 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 17:09:03 -HTTP METHOD : GET
2019-01-30 17:09:03 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 17:09:03 -参数 : []
2019-01-30 17:09:03 -耗时 : 1
2019-01-30 17:09:03 -返回值 : system/staff/add
2019-01-30 17:09:15 -请求地址 : http://localhost:8080/system/staff/save
2019-01-30 17:09:15 -HTTP METHOD : POST
2019-01-30 17:09:15 -CLASS_METHOD : com.bootdo.system.controller.StaffController.save
2019-01-30 17:09:15 -参数 : [com.bootdo.system.domain.StaffDO@281151e9]
2019-01-30 17:09:15 -==>  Preparing: insert into sys_staff ( `employee_id`, `dept_id`, `employeename`, `estatus`, `sex`, `birthday`, `email`, `qq`, `wx`, `photo`, `telphone`, `professionaltitle`, `educational`, `duty`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 17:09:15 -==> Parameters: d35c4c4e-2a5b-4b3d-bb01-26f084f10689(String), (String), gff(String), 0(Integer), 0(Integer), null, (String), (String), (String), (String), (String), (String), (String), (String), null, null, 1(Integer), null, null, null
2019-01-30 17:09:15 -<==    Updates: 1
2019-01-30 17:09:15 -耗时 : 31
2019-01-30 17:09:15 -返回值 : {msg=操作成功, code=0}
2019-01-30 17:09:15 -请求地址 : http://localhost:8080/system/staff
2019-01-30 17:09:15 -HTTP METHOD : GET
2019-01-30 17:09:15 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 17:09:15 -参数 : []
2019-01-30 17:09:15 -耗时 : 0
2019-01-30 17:09:15 -返回值 : system/staff/staff
2019-01-30 17:09:15 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 17:09:15 -HTTP METHOD : GET
2019-01-30 17:09:15 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 17:09:15 -参数 : [{page=1, limit=5}]
2019-01-30 17:09:15 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 17:09:15 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 17:09:15 -<==      Total: 4
2019-01-30 17:09:15 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 17:09:15 -==> Parameters: 
2019-01-30 17:09:15 -<==      Total: 1
2019-01-30 17:09:15 -耗时 : 6
2019-01-30 17:09:15 -返回值 : com.bootdo.common.utils.PageUtils@3c769756
2019-01-30 17:09:22 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 17:09:22 -HTTP METHOD : GET
2019-01-30 17:09:22 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 17:09:22 -参数 : []
2019-01-30 17:09:22 -耗时 : 1
2019-01-30 17:09:22 -返回值 : system/staff/add
2019-01-30 17:16:29 -请求地址 : http://localhost:8080/login;JSESSIONID=ff0dc5e6-38c3-4170-87a4-b9354c936f0a
2019-01-30 17:16:29 -HTTP METHOD : GET
2019-01-30 17:16:29 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 17:16:29 -参数 : []
2019-01-30 17:16:29 -耗时 : 1
2019-01-30 17:16:29 -返回值 : login
2019-01-30 17:16:30 -请求地址 : http://localhost:8080/login
2019-01-30 17:16:30 -HTTP METHOD : GET
2019-01-30 17:16:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-30 17:16:30 -参数 : []
2019-01-30 17:16:30 -耗时 : 0
2019-01-30 17:16:30 -返回值 : login
2019-01-30 17:16:33 -请求地址 : http://localhost:8080/login
2019-01-30 17:16:33 -HTTP METHOD : POST
2019-01-30 17:16:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-30 17:16:33 -参数 : [admin, 123456]
2019-01-30 17:16:33 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-30 17:16:33 -==> Parameters: 
2019-01-30 17:16:33 -<==      Total: 1
2019-01-30 17:16:33 -耗时 : 13
2019-01-30 17:16:33 -返回值 : {msg=操作成功, code=0}
2019-01-30 17:16:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 17:16:33 -==> Parameters: 123(String), admin(String), 登录(String), 14(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-30 17:16:33.308(Timestamp)
2019-01-30 17:16:33 -请求地址 : http://localhost:8080/index
2019-01-30 17:16:33 -HTTP METHOD : GET
2019-01-30 17:16:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 17:16:33 -参数 : [{}]
2019-01-30 17:16:33 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 17:16:33 -==> Parameters: 123(String)
2019-01-30 17:16:33 -<==      Total: 6
2019-01-30 17:16:33 -<==    Updates: 1
2019-01-30 17:16:33 -耗时 : 37
2019-01-30 17:16:33 -返回值 : index_v1
2019-01-30 17:16:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 17:16:33 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 17:16:33.372(Timestamp)
2019-01-30 17:16:33 -<==    Updates: 1
2019-01-30 17:16:35 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 17:16:35 -==> Parameters: 123(String)
2019-01-30 17:16:35 -<==      Total: 14
2019-01-30 17:16:35 -请求地址 : http://localhost:8080/system/staff
2019-01-30 17:16:35 -HTTP METHOD : GET
2019-01-30 17:16:35 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 17:16:35 -参数 : []
2019-01-30 17:16:35 -耗时 : 0
2019-01-30 17:16:35 -返回值 : system/staff/staff
2019-01-30 17:16:35 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 17:16:35 -HTTP METHOD : GET
2019-01-30 17:16:35 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 17:16:35 -参数 : [{page=1, limit=5}]
2019-01-30 17:16:35 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 17:16:35 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 17:16:35 -<==      Total: 4
2019-01-30 17:16:35 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 17:16:35 -==> Parameters: 
2019-01-30 17:16:35 -<==      Total: 1
2019-01-30 17:16:35 -耗时 : 9
2019-01-30 17:16:35 -返回值 : com.bootdo.common.utils.PageUtils@1999b800
2019-01-30 17:16:38 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 17:16:38 -HTTP METHOD : GET
2019-01-30 17:16:38 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 17:16:38 -参数 : []
2019-01-30 17:16:38 -耗时 : 0
2019-01-30 17:16:38 -返回值 : system/staff/add
2019-01-30 17:18:47 -请求地址 : http://localhost:8080/index
2019-01-30 17:18:47 -HTTP METHOD : GET
2019-01-30 17:18:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-30 17:18:47 -参数 : [{}]
2019-01-30 17:18:47 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-30 17:18:47 -==> Parameters: 123(String)
2019-01-30 17:18:47 -<==      Total: 6
2019-01-30 17:18:47 -耗时 : 40
2019-01-30 17:18:47 -返回值 : index_v1
2019-01-30 17:18:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 17:18:47 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 40(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-30 17:18:47.132(Timestamp)
2019-01-30 17:18:47 -<==    Updates: 1
2019-01-30 17:18:49 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-30 17:18:49 -==> Parameters: 123(String)
2019-01-30 17:18:49 -<==      Total: 14
2019-01-30 17:18:49 -请求地址 : http://localhost:8080/system/staff
2019-01-30 17:18:49 -HTTP METHOD : GET
2019-01-30 17:18:49 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 17:18:49 -参数 : []
2019-01-30 17:18:49 -耗时 : 0
2019-01-30 17:18:49 -返回值 : system/staff/staff
2019-01-30 17:18:49 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 17:18:49 -HTTP METHOD : GET
2019-01-30 17:18:49 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 17:18:49 -参数 : [{page=1, limit=5}]
2019-01-30 17:18:49 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 17:18:49 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 17:18:49 -<==      Total: 4
2019-01-30 17:18:49 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 17:18:49 -==> Parameters: 
2019-01-30 17:18:49 -<==      Total: 1
2019-01-30 17:18:49 -耗时 : 7
2019-01-30 17:18:49 -返回值 : com.bootdo.common.utils.PageUtils@71e9d92c
2019-01-30 17:18:52 -请求地址 : http://localhost:8080/system/staff/add
2019-01-30 17:18:52 -HTTP METHOD : GET
2019-01-30 17:18:52 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-30 17:18:52 -参数 : []
2019-01-30 17:18:52 -耗时 : 1
2019-01-30 17:18:52 -返回值 : system/staff/add
2019-01-30 17:19:15 -请求地址 : http://localhost:8080/system/staff/save
2019-01-30 17:19:15 -HTTP METHOD : POST
2019-01-30 17:19:15 -CLASS_METHOD : com.bootdo.system.controller.StaffController.save
2019-01-30 17:19:15 -参数 : [com.bootdo.system.domain.StaffDO@13821bf6]
2019-01-30 17:19:15 -==>  Preparing: insert into sys_staff ( `employee_id`, `dept_id`, `employeename`, `estatus`, `sex`, `birthday`, `email`, `qq`, `wx`, `photo`, `telphone`, `professionaltitle`, `educational`, `duty`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-30 17:19:15 -==> Parameters: b41c3f2b-48cb-458f-a1ac-0e01c8938273(String), (String), 都是(String), 0(Integer), 0(Integer), null, (String), (String), (String), (String), 11354868945(String), (String), (String), (String), null, null, 1(Integer), null, null, null
2019-01-30 17:19:15 -<==    Updates: 1
2019-01-30 17:19:15 -耗时 : 42
2019-01-30 17:19:15 -返回值 : {msg=操作成功, code=0}
2019-01-30 17:19:15 -请求地址 : http://localhost:8080/system/staff
2019-01-30 17:19:15 -HTTP METHOD : GET
2019-01-30 17:19:15 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-30 17:19:15 -参数 : []
2019-01-30 17:19:15 -耗时 : 0
2019-01-30 17:19:15 -返回值 : system/staff/staff
2019-01-30 17:19:15 -请求地址 : http://localhost:8080/system/staff/list
2019-01-30 17:19:15 -HTTP METHOD : GET
2019-01-30 17:19:15 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-30 17:19:15 -参数 : [{page=1, limit=5}]
2019-01-30 17:19:15 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-30 17:19:15 -==> Parameters: 0(Integer), 5(Integer)
2019-01-30 17:19:15 -<==      Total: 5
2019-01-30 17:19:15 -==>  Preparing: select count(*) from sys_staff 
2019-01-30 17:19:15 -==> Parameters: 
2019-01-30 17:19:15 -<==      Total: 1
2019-01-30 17:19:15 -耗时 : 12
2019-01-30 17:19:15 -返回值 : com.bootdo.common.utils.PageUtils@355ade52
