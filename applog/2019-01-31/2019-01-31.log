2019-01-31 09:19:38 -Starting BootdoApplication on YH-20180312AAAP with PID 1076 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-31 09:19:38 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-31 09:19:38 -The following profiles are active: dev
2019-01-31 09:19:38 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19648c40: startup date [Thu Jan 31 09:19:38 CST 2019]; root of context hierarchy
2019-01-31 09:19:42 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$ed2c9adf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:19:42 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$e1a05f83] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:19:42 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:19:42 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:19:42 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:19:42 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$7c3f2c81] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:19:42 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a41a64c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:19:42 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$96739368] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:19:42 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-31 09:19:43 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:19:43 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:19:43 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:19:43 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:19:43 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:19:43 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-31 09:19:44 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-31 09:19:44 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:19:44 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:19:44 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:19:44 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:19:44 -Tomcat initialized with port(s): 8080 (http)
2019-01-31 09:19:44 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-31 09:19:44 -Starting service [Tomcat]
2019-01-31 09:19:44 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-31 09:19:44 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-31 09:19:44 -Initializing Spring embedded WebApplicationContext
2019-01-31 09:19:44 -Root WebApplicationContext: initialization completed in 5822 ms
2019-01-31 09:19:45 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-31 09:19:45 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-31 09:19:45 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-31 09:19:45 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-31 09:19:45 -Filter xssFilter was not registered (disabled)
2019-01-31 09:19:45 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-31 09:19:45 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-31 09:19:45 -Servlet statViewServlet mapped to [/druid/*]
2019-01-31 09:19:45 -Servlet dispatcherServlet mapped to [/]
2019-01-31 09:19:46 -{dataSource-1} inited
2019-01-31 09:19:46 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19648c40: startup date [Thu Jan 31 09:19:38 CST 2019]; root of context hierarchy
2019-01-31 09:19:47 -Using default implementation for ThreadExecutor
2019-01-31 09:19:47 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-31 09:19:47 -Quartz Scheduler v.2.2.1 created.
2019-01-31 09:19:47 -RAMJobStore initialized.
2019-01-31 09:19:47 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-31 09:19:47 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-31 09:19:47 -Quartz scheduler version: 2.2.1
2019-01-31 09:19:47 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@797f97e3
2019-01-31 09:19:47 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-31 09:19:47 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-31 09:19:48 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 09:19:48 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-31 09:19:48 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-31 09:19:48 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 09:19:48 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 09:19:48 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-31 09:19:48 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-31 09:19:48 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-31 09:19:48 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-31 09:19:48 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-31 09:19:48 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 09:19:48 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-31 09:19:48 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-31 09:19:48 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-31 09:19:48 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 09:19:48 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-31 09:19:48 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-31 09:19:48 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-31 09:19:48 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 09:19:48 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-31 09:19:48 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 09:19:48 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 09:19:48 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-31 09:19:48 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-31 09:19:48 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-31 09:19:48 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-31 09:19:48 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 09:19:48 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-31 09:19:48 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 09:19:48 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-31 09:19:48 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-31 09:19:48 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-31 09:19:48 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-31 09:19:48 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-31 09:19:48 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-31 09:19:48 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-31 09:19:48 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 09:19:48 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-31 09:19:48 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-31 09:19:48 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 09:19:48 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-31 09:19:48 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-31 09:19:48 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-31 09:19:48 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-31 09:19:48 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-31 09:19:48 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-31 09:19:48 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-31 09:19:48 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-31 09:19:48 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-31 09:19:48 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-31 09:19:48 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-31 09:19:48 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-31 09:19:48 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 09:19:48 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-31 09:19:48 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-31 09:19:48 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-31 09:19:48 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-31 09:19:48 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-31 09:19:48 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String)
2019-01-31 09:19:48 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String[])
2019-01-31 09:19:48 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-31 09:19:48 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 09:19:48 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-31 09:19:48 -Mapped "{[/system/staff/edit/{employeeId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 09:19:48 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-31 09:19:48 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-31 09:19:48 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-31 09:19:48 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-31 09:19:48 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-31 09:19:48 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 09:19:48 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-31 09:19:48 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-31 09:19:48 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 09:19:48 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 09:19:48 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-31 09:19:48 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-31 09:19:48 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 09:19:48 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 09:19:48 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-31 09:19:48 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-31 09:19:48 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-31 09:19:48 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-31 09:19:48 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-31 09:19:48 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-31 09:19:48 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-31 09:19:48 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-31 09:19:48 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-31 09:19:49 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-31 09:19:49 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-31 09:19:49 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-31 09:19:49 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 09:19:49 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19648c40: startup date [Thu Jan 31 09:19:38 CST 2019]; root of context hierarchy
2019-01-31 09:19:50 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 09:19:50 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 09:19:50 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 09:19:50 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-31 09:19:50 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-31 09:19:50 -Registering beans for JMX exposure on startup
2019-01-31 09:19:50 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-31 09:19:50 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-31 09:19:50 -Starting beans in phase 2147483647
2019-01-31 09:19:50 -Context refreshed
2019-01-31 09:19:50 -Found 1 custom documentation plugin(s)
2019-01-31 09:19:50 -Scanning for api listing references
2019-01-31 09:19:51 -Generating unique operation named: removeUsingPOST_1
2019-01-31 09:19:51 -Generating unique operation named: editUsingGET_1
2019-01-31 09:19:51 -Generating unique operation named: listUsingGET_1
2019-01-31 09:19:51 -Generating unique operation named: updateUsingPOST_1
2019-01-31 09:19:51 -Generating unique operation named: addUsingGET_1
2019-01-31 09:19:51 -Generating unique operation named: editUsingGET_2
2019-01-31 09:19:51 -Generating unique operation named: listUsingGET_2
2019-01-31 09:19:51 -Generating unique operation named: removeUsingPOST_2
2019-01-31 09:19:51 -Generating unique operation named: removeUsingPOST_3
2019-01-31 09:19:51 -Generating unique operation named: saveUsingPOST_1
2019-01-31 09:19:51 -Generating unique operation named: updateUsingPOST_2
2019-01-31 09:19:51 -Generating unique operation named: listUsingGET_3
2019-01-31 09:19:51 -Generating unique operation named: removeUsingPOST_4
2019-01-31 09:19:51 -Generating unique operation named: welcomeUsingGET_1
2019-01-31 09:19:51 -Generating unique operation named: addUsingGET_2
2019-01-31 09:19:51 -Generating unique operation named: editUsingGET_3
2019-01-31 09:19:51 -Generating unique operation named: listUsingGET_4
2019-01-31 09:19:51 -Generating unique operation named: removeUsingPOST_5
2019-01-31 09:19:51 -Generating unique operation named: saveUsingPOST_2
2019-01-31 09:19:51 -Generating unique operation named: treeUsingGET_1
2019-01-31 09:19:51 -Generating unique operation named: updateUsingPOST_3
2019-01-31 09:19:51 -Generating unique operation named: addUsingGET_3
2019-01-31 09:19:51 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-31 09:19:51 -Generating unique operation named: editUsingGET_4
2019-01-31 09:19:51 -Generating unique operation named: listUsingGET_5
2019-01-31 09:19:51 -Generating unique operation named: saveUsingPOST_3
2019-01-31 09:19:51 -Generating unique operation named: saveUsingPOST_4
2019-01-31 09:19:51 -Generating unique operation named: updateUsingPOST_4
2019-01-31 09:19:51 -Generating unique operation named: listUsingGET_6
2019-01-31 09:19:51 -Generating unique operation named: listUsingHEAD_1
2019-01-31 09:19:51 -Generating unique operation named: listUsingPOST_1
2019-01-31 09:19:51 -Generating unique operation named: listUsingPUT_1
2019-01-31 09:19:51 -Generating unique operation named: listUsingPATCH_1
2019-01-31 09:19:51 -Generating unique operation named: listUsingDELETE_1
2019-01-31 09:19:51 -Generating unique operation named: listUsingOPTIONS_1
2019-01-31 09:19:51 -Generating unique operation named: listUsingTRACE_1
2019-01-31 09:19:51 -Generating unique operation named: addUsingGET_4
2019-01-31 09:19:51 -Generating unique operation named: editUsingGET_5
2019-01-31 09:19:51 -Generating unique operation named: listUsingGET_7
2019-01-31 09:19:51 -Generating unique operation named: removeUsingPOST_6
2019-01-31 09:19:51 -Generating unique operation named: removeUsingPOST_7
2019-01-31 09:19:51 -Generating unique operation named: saveUsingPOST_5
2019-01-31 09:19:51 -Generating unique operation named: updateUsingGET_1
2019-01-31 09:19:51 -Generating unique operation named: updateUsingHEAD_1
2019-01-31 09:19:51 -Generating unique operation named: updateUsingPOST_5
2019-01-31 09:19:51 -Generating unique operation named: updateUsingPUT_1
2019-01-31 09:19:51 -Generating unique operation named: updateUsingPATCH_1
2019-01-31 09:19:51 -Generating unique operation named: updateUsingDELETE_1
2019-01-31 09:19:51 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-31 09:19:51 -Generating unique operation named: updateUsingTRACE_1
2019-01-31 09:19:51 -Generating unique operation named: addUsingGET_5
2019-01-31 09:19:51 -Generating unique operation named: editUsingGET_6
2019-01-31 09:19:51 -Generating unique operation named: listUsingGET_8
2019-01-31 09:19:51 -Generating unique operation named: removeUsingPOST_8
2019-01-31 09:19:51 -Generating unique operation named: removeUsingPOST_9
2019-01-31 09:19:51 -Generating unique operation named: saveUsingPOST_6
2019-01-31 09:19:51 -Generating unique operation named: updateUsingGET_2
2019-01-31 09:19:51 -Generating unique operation named: updateUsingHEAD_2
2019-01-31 09:19:51 -Generating unique operation named: updateUsingPOST_6
2019-01-31 09:19:51 -Generating unique operation named: updateUsingPUT_2
2019-01-31 09:19:51 -Generating unique operation named: updateUsingPATCH_2
2019-01-31 09:19:51 -Generating unique operation named: updateUsingDELETE_2
2019-01-31 09:19:51 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-31 09:19:51 -Generating unique operation named: updateUsingTRACE_2
2019-01-31 09:19:51 -Generating unique operation named: addUsingGET_6
2019-01-31 09:19:51 -Generating unique operation named: editUsingGET_7
2019-01-31 09:19:51 -Generating unique operation named: listUsingGET_9
2019-01-31 09:19:51 -Generating unique operation named: roleUsingGET_1
2019-01-31 09:19:51 -Generating unique operation named: saveUsingPOST_7
2019-01-31 09:19:51 -Starting Quartz Scheduler now
2019-01-31 09:19:51 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-31 09:19:51 -Starting...
2019-01-31 09:19:51 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-31 09:19:51 -Started.
2019-01-31 09:19:51 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-31 09:19:51 -Using a shared selector for servlet write/read
2019-01-31 09:19:52 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-31 09:19:52 -Started BootdoApplication in 14.809 seconds (JVM running for 16.738)
2019-01-31 09:19:52 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-31 09:19:52 -==> Parameters: 
2019-01-31 09:19:52 -<==      Total: 1
2019-01-31 09:20:49 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-31 09:22:51 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-31 09:22:51 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-31 09:22:51 -FrameworkServlet 'dispatcherServlet': initialization completed in 37 ms
2019-01-31 09:22:51 -Enabling session validation scheduler...
2019-01-31 09:22:51 -请求地址 : http://localhost:8080/login;JSESSIONID=8c3b88c6-cf39-4761-a720-862e173a165b
2019-01-31 09:22:51 -HTTP METHOD : GET
2019-01-31 09:22:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 09:22:51 -参数 : []
2019-01-31 09:22:51 -耗时 : 2
2019-01-31 09:22:51 -返回值 : login
2019-01-31 09:23:01 -请求地址 : http://localhost:8080/login;JSESSIONID=8c3b88c6-cf39-4761-a720-862e173a165b
2019-01-31 09:23:01 -HTTP METHOD : GET
2019-01-31 09:23:01 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 09:23:01 -参数 : []
2019-01-31 09:23:01 -耗时 : 0
2019-01-31 09:23:01 -返回值 : login
2019-01-31 09:23:02 -请求地址 : http://localhost:8080/login;JSESSIONID=f08acffd-66da-40ef-bef7-cea146663a7d
2019-01-31 09:23:02 -HTTP METHOD : GET
2019-01-31 09:23:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 09:23:02 -参数 : []
2019-01-31 09:23:02 -耗时 : 16
2019-01-31 09:23:02 -返回值 : login
2019-01-31 09:23:05 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-31 09:23:05 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:23:05 -Request method 'POST' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:198)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:376)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:316)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:62)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:350)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1188)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:964)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-31 09:23:05 -==> Parameters: null, null, error(String), null, http://localhost:8080/;JSESSIONID=8c3b88c6-cf39-4761-a720-862e173a165blogin(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported(String), null, 2019-01-31 09:23:05.768(Timestamp)
2019-01-31 09:23:06 -<==    Updates: 1
2019-01-31 09:23:11 -Request method 'POST' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:198)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:376)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:316)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:62)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:350)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1188)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:964)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-31 09:23:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:23:11 -==> Parameters: null, null, error(String), null, http://localhost:8080/;JSESSIONID=8c3b88c6-cf39-4761-a720-862e173a165blogin(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported(String), null, 2019-01-31 09:23:11.035(Timestamp)
2019-01-31 09:23:11 -<==    Updates: 1
2019-01-31 09:23:20 -请求地址 : http://localhost:8080/
2019-01-31 09:23:20 -HTTP METHOD : GET
2019-01-31 09:23:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.welcome
2019-01-31 09:23:20 -参数 : [{}]
2019-01-31 09:23:20 -耗时 : 1
2019-01-31 09:23:20 -返回值 : redirect:/login
2019-01-31 09:23:20 -请求地址 : http://localhost:8080/login
2019-01-31 09:23:20 -HTTP METHOD : GET
2019-01-31 09:23:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 09:23:20 -参数 : []
2019-01-31 09:23:20 -耗时 : 1
2019-01-31 09:23:20 -返回值 : login
2019-01-31 09:23:20 -请求地址 : http://localhost:8080/login
2019-01-31 09:23:20 -HTTP METHOD : GET
2019-01-31 09:23:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 09:23:20 -参数 : []
2019-01-31 09:23:20 -耗时 : 0
2019-01-31 09:23:20 -返回值 : login
2019-01-31 09:23:24 -请求地址 : http://localhost:8080/login
2019-01-31 09:23:24 -HTTP METHOD : POST
2019-01-31 09:23:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-31 09:23:24 -参数 : [admin, 123456]
2019-01-31 09:23:25 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-31 09:23:25 -==> Parameters: 
2019-01-31 09:23:25 -<==      Total: 1
2019-01-31 09:23:25 -耗时 : 131
2019-01-31 09:23:25 -返回值 : {msg=操作成功, code=0}
2019-01-31 09:23:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:23:25 -==> Parameters: 123(String), admin(String), 登录(String), 131(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-31 09:23:25.208(Timestamp)
2019-01-31 09:23:25 -请求地址 : http://localhost:8080/index
2019-01-31 09:23:25 -HTTP METHOD : GET
2019-01-31 09:23:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 09:23:25 -参数 : [{}]
2019-01-31 09:23:25 -<==    Updates: 1
2019-01-31 09:23:25 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 09:23:25 -==> Parameters: 123(String)
2019-01-31 09:23:25 -<==      Total: 6
2019-01-31 09:23:25 -耗时 : 313
2019-01-31 09:23:25 -返回值 : index_v1
2019-01-31 09:23:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:23:25 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 313(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 09:23:25.627(Timestamp)
2019-01-31 09:23:25 -<==    Updates: 1
2019-01-31 09:23:29 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 09:23:29 -==> Parameters: 123(String)
2019-01-31 09:23:30 -<==      Total: 14
2019-01-31 09:23:30 -请求地址 : http://localhost:8080/system/staff
2019-01-31 09:23:30 -HTTP METHOD : GET
2019-01-31 09:23:30 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 09:23:30 -参数 : []
2019-01-31 09:23:30 -耗时 : 1
2019-01-31 09:23:30 -返回值 : system/staff/staff
2019-01-31 09:23:30 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 09:23:30 -HTTP METHOD : GET
2019-01-31 09:23:30 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 09:23:30 -参数 : [{page=1, limit=5}]
2019-01-31 09:23:30 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 09:23:30 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 09:23:30 -<==      Total: 5
2019-01-31 09:23:30 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 09:23:30 -==> Parameters: 
2019-01-31 09:23:30 -<==      Total: 1
2019-01-31 09:23:30 -耗时 : 389
2019-01-31 09:23:30 -返回值 : com.bootdo.common.utils.PageUtils@70a5cc7
2019-01-31 09:23:34 -请求地址 : http://localhost:8080/system/staff/edit/fffa8382-7dbf-4d6e-a4fb-7ae1d282d517
2019-01-31 09:23:34 -HTTP METHOD : GET
2019-01-31 09:23:34 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:23:34 -参数 : [fffa8382-7dbf-4d6e-a4fb-7ae1d282d517, {}]
2019-01-31 09:23:34 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:23:34 -==> Parameters: fffa8382-7dbf-4d6e-a4fb-7ae1d282d517(String)
2019-01-31 09:23:34 -<==      Total: 1
2019-01-31 09:23:34 -耗时 : 10
2019-01-31 09:23:34 -返回值 : system/staff/edit
2019-01-31 09:23:56 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:23:56 -HTTP METHOD : GET
2019-01-31 09:23:56 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:23:56 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:23:56 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:23:56 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:23:56 -<==      Total: 1
2019-01-31 09:23:56 -耗时 : 7
2019-01-31 09:23:56 -返回值 : system/staff/edit
2019-01-31 09:25:09 -请求地址 : http://localhost:8080/index
2019-01-31 09:25:09 -HTTP METHOD : GET
2019-01-31 09:25:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 09:25:09 -参数 : [{}]
2019-01-31 09:25:09 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 09:25:09 -==> Parameters: 123(String)
2019-01-31 09:25:09 -<==      Total: 6
2019-01-31 09:25:09 -耗时 : 41
2019-01-31 09:25:09 -返回值 : index_v1
2019-01-31 09:25:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:25:09 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 42(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 09:25:09.679(Timestamp)
2019-01-31 09:25:09 -<==    Updates: 1
2019-01-31 09:25:12 -请求地址 : http://localhost:8080/system/staff
2019-01-31 09:25:12 -HTTP METHOD : GET
2019-01-31 09:25:12 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 09:25:12 -参数 : []
2019-01-31 09:25:12 -耗时 : 0
2019-01-31 09:25:12 -返回值 : system/staff/staff
2019-01-31 09:25:12 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 09:25:12 -HTTP METHOD : GET
2019-01-31 09:25:12 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 09:25:12 -参数 : [{page=1, limit=5}]
2019-01-31 09:25:12 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 09:25:12 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 09:25:12 -<==      Total: 5
2019-01-31 09:25:12 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 09:25:12 -==> Parameters: 
2019-01-31 09:25:12 -<==      Total: 1
2019-01-31 09:25:12 -耗时 : 13
2019-01-31 09:25:12 -返回值 : com.bootdo.common.utils.PageUtils@36afaab7
2019-01-31 09:25:15 -请求地址 : http://localhost:8080/system/staff/edit/fffa8382-7dbf-4d6e-a4fb-7ae1d282d517
2019-01-31 09:25:15 -HTTP METHOD : GET
2019-01-31 09:25:15 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:25:15 -参数 : [fffa8382-7dbf-4d6e-a4fb-7ae1d282d517, {}]
2019-01-31 09:25:15 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:25:15 -==> Parameters: fffa8382-7dbf-4d6e-a4fb-7ae1d282d517(String)
2019-01-31 09:25:15 -<==      Total: 1
2019-01-31 09:25:15 -耗时 : 9
2019-01-31 09:25:15 -返回值 : system/staff/edit
2019-01-31 09:25:25 -请求地址 : http://localhost:8080/login;JSESSIONID=3e268482-29ca-4906-9b70-e5965dfe1fe2
2019-01-31 09:25:25 -HTTP METHOD : GET
2019-01-31 09:25:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 09:25:25 -参数 : []
2019-01-31 09:25:25 -耗时 : 0
2019-01-31 09:25:25 -返回值 : login
2019-01-31 09:25:25 -请求地址 : http://localhost:8080/login
2019-01-31 09:25:25 -HTTP METHOD : GET
2019-01-31 09:25:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 09:25:25 -参数 : []
2019-01-31 09:25:25 -耗时 : 0
2019-01-31 09:25:25 -返回值 : login
2019-01-31 09:25:28 -请求地址 : http://localhost:8080/login
2019-01-31 09:25:28 -HTTP METHOD : POST
2019-01-31 09:25:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-31 09:25:28 -参数 : [admin, 123456]
2019-01-31 09:25:28 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-31 09:25:28 -==> Parameters: 
2019-01-31 09:25:28 -<==      Total: 1
2019-01-31 09:25:28 -耗时 : 17
2019-01-31 09:25:28 -返回值 : {msg=操作成功, code=0}
2019-01-31 09:25:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:25:28 -==> Parameters: 123(String), admin(String), 登录(String), 17(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-31 09:25:28.438(Timestamp)
2019-01-31 09:25:28 -请求地址 : http://localhost:8080/index
2019-01-31 09:25:28 -HTTP METHOD : GET
2019-01-31 09:25:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 09:25:28 -参数 : [{}]
2019-01-31 09:25:28 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 09:25:28 -==> Parameters: 123(String)
2019-01-31 09:25:28 -<==    Updates: 1
2019-01-31 09:25:28 -<==      Total: 6
2019-01-31 09:25:28 -耗时 : 36
2019-01-31 09:25:28 -返回值 : index_v1
2019-01-31 09:25:28 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:25:28 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 09:25:28.499(Timestamp)
2019-01-31 09:25:28 -<==    Updates: 1
2019-01-31 09:25:30 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 09:25:30 -==> Parameters: 123(String)
2019-01-31 09:25:30 -<==      Total: 14
2019-01-31 09:25:30 -请求地址 : http://localhost:8080/system/staff
2019-01-31 09:25:30 -HTTP METHOD : GET
2019-01-31 09:25:30 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 09:25:30 -参数 : []
2019-01-31 09:25:30 -耗时 : 1
2019-01-31 09:25:30 -返回值 : system/staff/staff
2019-01-31 09:25:30 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 09:25:30 -HTTP METHOD : GET
2019-01-31 09:25:30 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 09:25:30 -参数 : [{page=1, limit=5}]
2019-01-31 09:25:30 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 09:25:30 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 09:25:30 -<==      Total: 5
2019-01-31 09:25:30 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 09:25:30 -==> Parameters: 
2019-01-31 09:25:30 -<==      Total: 1
2019-01-31 09:25:30 -耗时 : 16
2019-01-31 09:25:30 -返回值 : com.bootdo.common.utils.PageUtils@7753f741
2019-01-31 09:25:32 -请求地址 : http://localhost:8080/system/staff/edit/fffa8382-7dbf-4d6e-a4fb-7ae1d282d517
2019-01-31 09:25:32 -HTTP METHOD : GET
2019-01-31 09:25:32 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:25:32 -参数 : [fffa8382-7dbf-4d6e-a4fb-7ae1d282d517, {}]
2019-01-31 09:25:32 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:25:32 -==> Parameters: fffa8382-7dbf-4d6e-a4fb-7ae1d282d517(String)
2019-01-31 09:25:32 -<==      Total: 1
2019-01-31 09:25:32 -耗时 : 6
2019-01-31 09:25:32 -返回值 : system/staff/edit
2019-01-31 09:25:58 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:25:58 -HTTP METHOD : GET
2019-01-31 09:25:58 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:25:58 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:25:58 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:25:58 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:25:58 -<==      Total: 1
2019-01-31 09:25:58 -耗时 : 4
2019-01-31 09:25:58 -返回值 : system/staff/edit
2019-01-31 09:31:26 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 09:31:26 -==> Parameters: 123(String)
2019-01-31 09:31:26 -<==      Total: 14
2019-01-31 09:31:26 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:31:26 -HTTP METHOD : GET
2019-01-31 09:31:26 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:31:26 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:31:33 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:31:33 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:31:33 -<==      Total: 1
2019-01-31 09:31:57 -耗时 : 30040
2019-01-31 09:31:57 -返回值 : system/staff/edit
2019-01-31 09:32:52 -Starting BootdoApplication on YH-20180312AAAP with PID 13412 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-31 09:32:52 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-31 09:32:52 -The following profiles are active: dev
2019-01-31 09:32:52 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e821657: startup date [Thu Jan 31 09:32:52 CST 2019]; root of context hierarchy
2019-01-31 09:32:53 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$1f11daba] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:32:53 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$13859f5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:32:53 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:32:53 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:32:53 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:32:53 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$ae246c5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:32:53 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d5ffa49c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:32:54 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c858d343] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:32:54 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-31 09:32:54 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:32:54 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:32:54 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:32:54 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:32:54 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:32:54 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-31 09:32:54 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-31 09:32:54 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:32:54 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:32:54 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:32:55 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 09:32:55 -Tomcat initialized with port(s): 8080 (http)
2019-01-31 09:32:55 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-31 09:32:55 -Starting service [Tomcat]
2019-01-31 09:32:55 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-31 09:32:55 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-31 09:32:55 -Initializing Spring embedded WebApplicationContext
2019-01-31 09:32:55 -Root WebApplicationContext: initialization completed in 2951 ms
2019-01-31 09:32:55 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-31 09:32:55 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-31 09:32:55 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-31 09:32:55 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-31 09:32:55 -Filter xssFilter was not registered (disabled)
2019-01-31 09:32:55 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-31 09:32:55 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-31 09:32:55 -Servlet statViewServlet mapped to [/druid/*]
2019-01-31 09:32:55 -Servlet dispatcherServlet mapped to [/]
2019-01-31 09:32:56 -{dataSource-1} inited
2019-01-31 09:32:56 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e821657: startup date [Thu Jan 31 09:32:52 CST 2019]; root of context hierarchy
2019-01-31 09:32:57 -Using default implementation for ThreadExecutor
2019-01-31 09:32:57 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-31 09:32:57 -Quartz Scheduler v.2.2.1 created.
2019-01-31 09:32:57 -RAMJobStore initialized.
2019-01-31 09:32:57 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-31 09:32:57 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-31 09:32:57 -Quartz scheduler version: 2.2.1
2019-01-31 09:32:57 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@1efcba00
2019-01-31 09:32:57 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-31 09:32:57 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-31 09:32:58 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 09:32:58 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-31 09:32:58 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-31 09:32:58 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 09:32:58 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 09:32:58 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-31 09:32:58 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-31 09:32:58 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-31 09:32:58 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-31 09:32:58 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-31 09:32:58 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 09:32:58 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-31 09:32:58 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-31 09:32:58 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-31 09:32:58 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 09:32:58 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-31 09:32:58 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-31 09:32:58 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-31 09:32:58 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 09:32:58 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-31 09:32:58 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 09:32:58 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 09:32:58 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-31 09:32:58 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-31 09:32:58 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-31 09:32:58 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-31 09:32:58 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 09:32:58 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-31 09:32:58 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 09:32:58 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-31 09:32:58 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-31 09:32:58 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-31 09:32:58 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-31 09:32:58 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-31 09:32:58 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-31 09:32:58 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-31 09:32:58 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 09:32:58 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-31 09:32:58 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-31 09:32:58 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 09:32:58 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-31 09:32:58 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-31 09:32:58 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-31 09:32:58 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-31 09:32:58 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-31 09:32:58 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-31 09:32:58 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-31 09:32:58 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-31 09:32:58 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-31 09:32:58 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-31 09:32:58 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-31 09:32:58 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-31 09:32:58 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 09:32:58 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-31 09:32:58 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-31 09:32:58 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-31 09:32:58 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-31 09:32:58 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-31 09:32:58 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String)
2019-01-31 09:32:58 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String[])
2019-01-31 09:32:58 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-31 09:32:58 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 09:32:58 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-31 09:32:58 -Mapped "{[/system/staff/edit/{employeeId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 09:32:58 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-31 09:32:58 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-31 09:32:58 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-31 09:32:58 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-31 09:32:58 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-31 09:32:58 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 09:32:58 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-31 09:32:58 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-31 09:32:58 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 09:32:58 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 09:32:58 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-31 09:32:58 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-31 09:32:58 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 09:32:58 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 09:32:58 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-31 09:32:58 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-31 09:32:58 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-31 09:32:58 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-31 09:32:58 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-31 09:32:58 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-31 09:32:58 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-31 09:32:58 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-31 09:32:58 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-31 09:32:58 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-31 09:32:58 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-31 09:32:58 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-31 09:32:59 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 09:32:59 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3e821657: startup date [Thu Jan 31 09:32:52 CST 2019]; root of context hierarchy
2019-01-31 09:32:59 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 09:32:59 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 09:32:59 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 09:32:59 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-31 09:32:59 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-31 09:33:00 -Registering beans for JMX exposure on startup
2019-01-31 09:33:00 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-31 09:33:00 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-31 09:33:00 -Starting beans in phase 2147483647
2019-01-31 09:33:00 -Context refreshed
2019-01-31 09:33:00 -Found 1 custom documentation plugin(s)
2019-01-31 09:33:00 -Scanning for api listing references
2019-01-31 09:33:00 -Generating unique operation named: removeUsingPOST_1
2019-01-31 09:33:00 -Generating unique operation named: editUsingGET_1
2019-01-31 09:33:00 -Generating unique operation named: listUsingGET_1
2019-01-31 09:33:00 -Generating unique operation named: updateUsingPOST_1
2019-01-31 09:33:00 -Generating unique operation named: addUsingGET_1
2019-01-31 09:33:00 -Generating unique operation named: editUsingGET_2
2019-01-31 09:33:00 -Generating unique operation named: listUsingGET_2
2019-01-31 09:33:00 -Generating unique operation named: removeUsingPOST_2
2019-01-31 09:33:00 -Generating unique operation named: removeUsingPOST_3
2019-01-31 09:33:00 -Generating unique operation named: saveUsingPOST_1
2019-01-31 09:33:00 -Generating unique operation named: updateUsingPOST_2
2019-01-31 09:33:00 -Generating unique operation named: listUsingGET_3
2019-01-31 09:33:00 -Generating unique operation named: removeUsingPOST_4
2019-01-31 09:33:01 -Generating unique operation named: welcomeUsingGET_1
2019-01-31 09:33:01 -Generating unique operation named: addUsingGET_2
2019-01-31 09:33:01 -Generating unique operation named: editUsingGET_3
2019-01-31 09:33:01 -Generating unique operation named: listUsingGET_4
2019-01-31 09:33:01 -Generating unique operation named: removeUsingPOST_5
2019-01-31 09:33:01 -Generating unique operation named: saveUsingPOST_2
2019-01-31 09:33:01 -Generating unique operation named: treeUsingGET_1
2019-01-31 09:33:01 -Generating unique operation named: updateUsingPOST_3
2019-01-31 09:33:01 -Generating unique operation named: addUsingGET_3
2019-01-31 09:33:01 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-31 09:33:01 -Generating unique operation named: editUsingGET_4
2019-01-31 09:33:01 -Generating unique operation named: listUsingGET_5
2019-01-31 09:33:01 -Generating unique operation named: saveUsingPOST_3
2019-01-31 09:33:01 -Generating unique operation named: saveUsingPOST_4
2019-01-31 09:33:01 -Generating unique operation named: updateUsingPOST_4
2019-01-31 09:33:01 -Generating unique operation named: listUsingGET_6
2019-01-31 09:33:01 -Generating unique operation named: listUsingHEAD_1
2019-01-31 09:33:01 -Generating unique operation named: listUsingPOST_1
2019-01-31 09:33:01 -Generating unique operation named: listUsingPUT_1
2019-01-31 09:33:01 -Generating unique operation named: listUsingPATCH_1
2019-01-31 09:33:01 -Generating unique operation named: listUsingDELETE_1
2019-01-31 09:33:01 -Generating unique operation named: listUsingOPTIONS_1
2019-01-31 09:33:01 -Generating unique operation named: listUsingTRACE_1
2019-01-31 09:33:01 -Generating unique operation named: addUsingGET_4
2019-01-31 09:33:01 -Generating unique operation named: editUsingGET_5
2019-01-31 09:33:01 -Generating unique operation named: listUsingGET_7
2019-01-31 09:33:01 -Generating unique operation named: removeUsingPOST_6
2019-01-31 09:33:01 -Generating unique operation named: removeUsingPOST_7
2019-01-31 09:33:01 -Generating unique operation named: saveUsingPOST_5
2019-01-31 09:33:01 -Generating unique operation named: updateUsingGET_1
2019-01-31 09:33:01 -Generating unique operation named: updateUsingHEAD_1
2019-01-31 09:33:01 -Generating unique operation named: updateUsingPOST_5
2019-01-31 09:33:01 -Generating unique operation named: updateUsingPUT_1
2019-01-31 09:33:01 -Generating unique operation named: updateUsingPATCH_1
2019-01-31 09:33:01 -Generating unique operation named: updateUsingDELETE_1
2019-01-31 09:33:01 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-31 09:33:01 -Generating unique operation named: updateUsingTRACE_1
2019-01-31 09:33:01 -Generating unique operation named: addUsingGET_5
2019-01-31 09:33:01 -Generating unique operation named: editUsingGET_6
2019-01-31 09:33:01 -Generating unique operation named: listUsingGET_8
2019-01-31 09:33:01 -Generating unique operation named: removeUsingPOST_8
2019-01-31 09:33:01 -Generating unique operation named: removeUsingPOST_9
2019-01-31 09:33:01 -Generating unique operation named: saveUsingPOST_6
2019-01-31 09:33:01 -Generating unique operation named: updateUsingGET_2
2019-01-31 09:33:01 -Generating unique operation named: updateUsingHEAD_2
2019-01-31 09:33:01 -Generating unique operation named: updateUsingPOST_6
2019-01-31 09:33:01 -Generating unique operation named: updateUsingPUT_2
2019-01-31 09:33:01 -Generating unique operation named: updateUsingPATCH_2
2019-01-31 09:33:01 -Generating unique operation named: updateUsingDELETE_2
2019-01-31 09:33:01 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-31 09:33:01 -Generating unique operation named: updateUsingTRACE_2
2019-01-31 09:33:01 -Generating unique operation named: addUsingGET_6
2019-01-31 09:33:01 -Generating unique operation named: editUsingGET_7
2019-01-31 09:33:01 -Generating unique operation named: listUsingGET_9
2019-01-31 09:33:01 -Generating unique operation named: roleUsingGET_1
2019-01-31 09:33:01 -Generating unique operation named: saveUsingPOST_7
2019-01-31 09:33:01 -Starting Quartz Scheduler now
2019-01-31 09:33:01 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-31 09:33:01 -Starting...
2019-01-31 09:33:01 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-31 09:33:01 -Started.
2019-01-31 09:33:01 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-31 09:33:01 -Using a shared selector for servlet write/read
2019-01-31 09:33:01 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-31 09:33:01 -Started BootdoApplication in 9.484 seconds (JVM running for 10.013)
2019-01-31 09:33:01 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-31 09:33:01 -==> Parameters: 
2019-01-31 09:33:01 -<==      Total: 1
2019-01-31 09:33:13 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-31 09:33:13 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-31 09:33:13 -FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2019-01-31 09:33:13 -Enabling session validation scheduler...
2019-01-31 09:33:13 -请求地址 : http://localhost:8080/login;JSESSIONID=fdd27c7c-d6aa-4d37-9e84-2a1ae1b69239
2019-01-31 09:33:13 -HTTP METHOD : GET
2019-01-31 09:33:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 09:33:13 -参数 : []
2019-01-31 09:33:13 -耗时 : 5
2019-01-31 09:33:13 -返回值 : login
2019-01-31 09:33:14 -请求地址 : http://localhost:8080/login
2019-01-31 09:33:14 -HTTP METHOD : GET
2019-01-31 09:33:14 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 09:33:14 -参数 : []
2019-01-31 09:33:14 -耗时 : 0
2019-01-31 09:33:14 -返回值 : login
2019-01-31 09:33:17 -请求地址 : http://localhost:8080/login
2019-01-31 09:33:17 -HTTP METHOD : POST
2019-01-31 09:33:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-31 09:33:17 -参数 : [admin, 123456]
2019-01-31 09:33:17 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-31 09:33:17 -==> Parameters: 
2019-01-31 09:33:17 -<==      Total: 1
2019-01-31 09:33:17 -耗时 : 44
2019-01-31 09:33:17 -返回值 : {msg=操作成功, code=0}
2019-01-31 09:33:17 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-31 09:33:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:33:17 -==> Parameters: 123(String), admin(String), 登录(String), 44(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-31 09:33:17.37(Timestamp)
2019-01-31 09:33:17 -请求地址 : http://localhost:8080/index
2019-01-31 09:33:17 -HTTP METHOD : GET
2019-01-31 09:33:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 09:33:17 -参数 : [{}]
2019-01-31 09:33:17 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 09:33:17 -<==    Updates: 1
2019-01-31 09:33:17 -==> Parameters: 123(String)
2019-01-31 09:33:17 -<==      Total: 6
2019-01-31 09:33:17 -耗时 : 76
2019-01-31 09:33:17 -返回值 : index_v1
2019-01-31 09:33:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:33:17 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 76(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 09:33:17.541(Timestamp)
2019-01-31 09:33:17 -<==    Updates: 1
2019-01-31 09:33:20 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 09:33:20 -==> Parameters: 123(String)
2019-01-31 09:33:20 -<==      Total: 14
2019-01-31 09:33:20 -请求地址 : http://localhost:8080/system/staff
2019-01-31 09:33:20 -HTTP METHOD : GET
2019-01-31 09:33:20 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 09:33:20 -参数 : []
2019-01-31 09:33:20 -耗时 : 1
2019-01-31 09:33:20 -返回值 : system/staff/staff
2019-01-31 09:33:20 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 09:33:20 -HTTP METHOD : GET
2019-01-31 09:33:20 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 09:33:20 -参数 : [{page=1, limit=5}]
2019-01-31 09:33:20 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 09:33:20 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 09:33:20 -<==      Total: 5
2019-01-31 09:33:20 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 09:33:20 -==> Parameters: 
2019-01-31 09:33:20 -<==      Total: 1
2019-01-31 09:33:20 -耗时 : 123
2019-01-31 09:33:20 -返回值 : com.bootdo.common.utils.PageUtils@1b117cca
2019-01-31 09:33:26 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:33:26 -HTTP METHOD : GET
2019-01-31 09:33:26 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:33:26 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:33:31 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:33:31 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:33:31 -<==      Total: 1
2019-01-31 09:33:43 -耗时 : 16810
2019-01-31 09:33:43 -返回值 : system/staff/edit
2019-01-31 09:33:58 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-31 09:34:01 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:34:01 -HTTP METHOD : GET
2019-01-31 09:34:01 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:34:01 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:34:01 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:34:01 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:34:01 -<==      Total: 1
2019-01-31 09:34:01 -耗时 : 7
2019-01-31 09:34:01 -返回值 : system/staff/edit
2019-01-31 09:34:10 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:34:10 -HTTP METHOD : GET
2019-01-31 09:34:10 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:34:10 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:34:10 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:34:10 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:34:10 -<==      Total: 1
2019-01-31 09:34:10 -耗时 : 8
2019-01-31 09:34:10 -返回值 : system/staff/edit
2019-01-31 09:34:16 -请求地址 : http://localhost:8080/system/staff
2019-01-31 09:34:16 -HTTP METHOD : GET
2019-01-31 09:34:16 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 09:34:16 -参数 : []
2019-01-31 09:34:16 -耗时 : 0
2019-01-31 09:34:16 -返回值 : system/staff/staff
2019-01-31 09:34:16 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 09:34:16 -HTTP METHOD : GET
2019-01-31 09:34:16 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 09:34:16 -参数 : [{page=1, limit=5}]
2019-01-31 09:34:16 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 09:34:16 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 09:34:16 -<==      Total: 5
2019-01-31 09:34:16 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 09:34:16 -==> Parameters: 
2019-01-31 09:34:16 -<==      Total: 1
2019-01-31 09:34:16 -耗时 : 13
2019-01-31 09:34:16 -返回值 : com.bootdo.common.utils.PageUtils@35e894a1
2019-01-31 09:36:07 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 09:36:07 -==> Parameters: 123(String)
2019-01-31 09:36:07 -<==      Total: 14
2019-01-31 09:36:07 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:36:07 -HTTP METHOD : GET
2019-01-31 09:36:07 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:36:07 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:36:07 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:36:07 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:36:07 -<==      Total: 1
2019-01-31 09:36:07 -耗时 : 3
2019-01-31 09:36:07 -返回值 : system/staff/edit
2019-01-31 09:36:11 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:36:11 -HTTP METHOD : GET
2019-01-31 09:36:11 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:36:11 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:36:11 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:36:11 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:36:11 -<==      Total: 1
2019-01-31 09:36:11 -耗时 : 8
2019-01-31 09:36:11 -返回值 : system/staff/edit
2019-01-31 09:36:14 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:36:14 -HTTP METHOD : GET
2019-01-31 09:36:14 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:36:14 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:36:14 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:36:14 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:36:14 -<==      Total: 1
2019-01-31 09:36:14 -耗时 : 12
2019-01-31 09:36:14 -返回值 : system/staff/edit
2019-01-31 09:36:16 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:36:16 -HTTP METHOD : GET
2019-01-31 09:36:16 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:36:16 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:36:16 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:36:16 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:36:16 -<==      Total: 1
2019-01-31 09:36:16 -耗时 : 12
2019-01-31 09:36:16 -返回值 : system/staff/edit
2019-01-31 09:38:04 -请求地址 : http://localhost:8080/system/staff/add
2019-01-31 09:38:04 -HTTP METHOD : GET
2019-01-31 09:38:04 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-31 09:38:04 -参数 : []
2019-01-31 09:38:04 -耗时 : 1
2019-01-31 09:38:04 -返回值 : system/staff/add
2019-01-31 09:41:22 -请求地址 : http://localhost:8080/login;JSESSIONID=4a572d29-e75c-4581-8cc4-764a737e503b
2019-01-31 09:41:22 -HTTP METHOD : GET
2019-01-31 09:41:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 09:41:22 -参数 : []
2019-01-31 09:41:22 -耗时 : 0
2019-01-31 09:41:22 -返回值 : login
2019-01-31 09:41:22 -请求地址 : http://localhost:8080/login
2019-01-31 09:41:22 -HTTP METHOD : GET
2019-01-31 09:41:22 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 09:41:22 -参数 : []
2019-01-31 09:41:22 -耗时 : 1
2019-01-31 09:41:22 -返回值 : login
2019-01-31 09:41:25 -请求地址 : http://localhost:8080/login
2019-01-31 09:41:25 -HTTP METHOD : POST
2019-01-31 09:41:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-31 09:41:25 -参数 : [admin, 123456]
2019-01-31 09:41:25 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-31 09:41:25 -==> Parameters: 
2019-01-31 09:41:25 -<==      Total: 1
2019-01-31 09:41:25 -耗时 : 8
2019-01-31 09:41:25 -返回值 : {msg=操作成功, code=0}
2019-01-31 09:41:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:41:25 -==> Parameters: 123(String), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-31 09:41:25.265(Timestamp)
2019-01-31 09:41:25 -请求地址 : http://localhost:8080/index
2019-01-31 09:41:25 -HTTP METHOD : GET
2019-01-31 09:41:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 09:41:25 -参数 : [{}]
2019-01-31 09:41:25 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 09:41:25 -==> Parameters: 123(String)
2019-01-31 09:41:25 -<==      Total: 6
2019-01-31 09:41:25 -耗时 : 31
2019-01-31 09:41:25 -返回值 : index_v1
2019-01-31 09:41:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:41:25 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 09:41:25.322(Timestamp)
2019-01-31 09:41:25 -<==    Updates: 1
2019-01-31 09:41:25 -<==    Updates: 1
2019-01-31 09:41:27 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 09:41:27 -==> Parameters: 123(String)
2019-01-31 09:41:27 -<==      Total: 14
2019-01-31 09:41:27 -请求地址 : http://localhost:8080/system/staff
2019-01-31 09:41:27 -HTTP METHOD : GET
2019-01-31 09:41:27 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 09:41:27 -参数 : []
2019-01-31 09:41:27 -耗时 : 0
2019-01-31 09:41:27 -返回值 : system/staff/staff
2019-01-31 09:41:27 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 09:41:27 -HTTP METHOD : GET
2019-01-31 09:41:27 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 09:41:27 -参数 : [{page=1, limit=5}]
2019-01-31 09:41:27 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 09:41:27 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 09:41:27 -<==      Total: 5
2019-01-31 09:41:27 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 09:41:27 -==> Parameters: 
2019-01-31 09:41:27 -<==      Total: 1
2019-01-31 09:41:27 -耗时 : 9
2019-01-31 09:41:27 -返回值 : com.bootdo.common.utils.PageUtils@6bd9ec36
2019-01-31 09:41:30 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:41:30 -HTTP METHOD : GET
2019-01-31 09:41:30 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:41:30 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:41:30 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:41:30 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:41:30 -<==      Total: 1
2019-01-31 09:41:30 -耗时 : 11
2019-01-31 09:41:30 -返回值 : system/staff/edit
2019-01-31 09:41:43 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:41:43 -HTTP METHOD : GET
2019-01-31 09:41:43 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:41:43 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:41:43 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:41:43 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:41:43 -<==      Total: 1
2019-01-31 09:41:43 -耗时 : 5
2019-01-31 09:41:43 -返回值 : system/staff/edit
2019-01-31 09:42:45 -请求地址 : http://localhost:8080/index
2019-01-31 09:42:45 -HTTP METHOD : GET
2019-01-31 09:42:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 09:42:45 -参数 : [{}]
2019-01-31 09:42:45 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 09:42:45 -==> Parameters: 123(String)
2019-01-31 09:42:45 -<==      Total: 6
2019-01-31 09:42:45 -耗时 : 32
2019-01-31 09:42:45 -返回值 : index_v1
2019-01-31 09:42:45 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:42:45 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 09:42:45.87(Timestamp)
2019-01-31 09:42:45 -<==    Updates: 1
2019-01-31 09:42:48 -请求地址 : http://localhost:8080/system/staff
2019-01-31 09:42:48 -HTTP METHOD : GET
2019-01-31 09:42:48 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 09:42:48 -参数 : []
2019-01-31 09:42:48 -耗时 : 0
2019-01-31 09:42:48 -返回值 : system/staff/staff
2019-01-31 09:42:48 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 09:42:48 -HTTP METHOD : GET
2019-01-31 09:42:48 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 09:42:48 -参数 : [{page=1, limit=5}]
2019-01-31 09:42:48 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 09:42:48 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 09:42:48 -<==      Total: 5
2019-01-31 09:42:48 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 09:42:48 -==> Parameters: 
2019-01-31 09:42:48 -<==      Total: 1
2019-01-31 09:42:48 -耗时 : 9
2019-01-31 09:42:48 -返回值 : com.bootdo.common.utils.PageUtils@5680b6eb
2019-01-31 09:42:50 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:42:50 -HTTP METHOD : GET
2019-01-31 09:42:50 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:42:50 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:42:50 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:42:50 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:42:50 -<==      Total: 1
2019-01-31 09:42:50 -耗时 : 7
2019-01-31 09:42:50 -返回值 : system/staff/edit
2019-01-31 09:42:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:42:52 -==> Parameters: 123(String), admin(String), error(String), null, http://localhost:8080/system/staff/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'staffDO' on field 'estatus': rejected value [true]; codes [typeMismatch.staffDO.estatus,typeMismatch.estatus,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [staffDO.estatus,estatus]; arguments []; default message [estatus]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'estatus'; nested exception is java.lang.NumberFormatException: For input string: "true"](String), null, 2019-01-31 09:42:52.703(Timestamp)
2019-01-31 09:42:52 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'staffDO' on field 'estatus': rejected value [true]; codes [typeMismatch.staffDO.estatus,typeMismatch.estatus,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [staffDO.estatus,estatus]; arguments []; default message [estatus]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'estatus'; nested exception is java.lang.NumberFormatException: For input string: "true"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'staffDO' on field 'estatus': rejected value [true]; codes [typeMismatch.staffDO.estatus,typeMismatch.estatus,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [staffDO.estatus,estatus]; arguments []; default message [estatus]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'estatus'; nested exception is java.lang.NumberFormatException: For input string: "true"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-31 09:42:52 -<==    Updates: 1
2019-01-31 09:43:50 -请求地址 : http://localhost:8080/login;JSESSIONID=e261d93d-8ae3-43f2-9b7c-59e8cf0bafdd
2019-01-31 09:43:50 -HTTP METHOD : GET
2019-01-31 09:43:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 09:43:50 -参数 : []
2019-01-31 09:43:50 -耗时 : 15
2019-01-31 09:43:50 -返回值 : login
2019-01-31 09:43:51 -请求地址 : http://localhost:8080/login
2019-01-31 09:43:51 -HTTP METHOD : GET
2019-01-31 09:43:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 09:43:51 -参数 : []
2019-01-31 09:43:51 -耗时 : 0
2019-01-31 09:43:51 -返回值 : login
2019-01-31 09:43:54 -请求地址 : http://localhost:8080/login
2019-01-31 09:43:54 -HTTP METHOD : POST
2019-01-31 09:43:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-31 09:43:54 -参数 : [admin, 123456]
2019-01-31 09:43:54 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-31 09:43:54 -==> Parameters: 
2019-01-31 09:43:54 -<==      Total: 1
2019-01-31 09:43:54 -耗时 : 12
2019-01-31 09:43:54 -返回值 : {msg=操作成功, code=0}
2019-01-31 09:43:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:43:54 -==> Parameters: 123(String), admin(String), 登录(String), 13(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-31 09:43:54.288(Timestamp)
2019-01-31 09:43:54 -请求地址 : http://localhost:8080/index
2019-01-31 09:43:54 -HTTP METHOD : GET
2019-01-31 09:43:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 09:43:54 -参数 : [{}]
2019-01-31 09:43:54 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 09:43:54 -==> Parameters: 123(String)
2019-01-31 09:43:54 -<==      Total: 6
2019-01-31 09:43:54 -<==    Updates: 1
2019-01-31 09:43:54 -耗时 : 32
2019-01-31 09:43:54 -返回值 : index_v1
2019-01-31 09:43:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:43:54 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 09:43:54.339(Timestamp)
2019-01-31 09:43:54 -<==    Updates: 1
2019-01-31 09:43:56 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 09:43:56 -==> Parameters: 123(String)
2019-01-31 09:43:56 -<==      Total: 14
2019-01-31 09:43:56 -请求地址 : http://localhost:8080/system/staff
2019-01-31 09:43:56 -HTTP METHOD : GET
2019-01-31 09:43:56 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 09:43:56 -参数 : []
2019-01-31 09:43:56 -耗时 : 0
2019-01-31 09:43:56 -返回值 : system/staff/staff
2019-01-31 09:43:56 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 09:43:56 -HTTP METHOD : GET
2019-01-31 09:43:56 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 09:43:56 -参数 : [{page=1, limit=5}]
2019-01-31 09:43:56 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 09:43:56 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 09:43:56 -<==      Total: 5
2019-01-31 09:43:56 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 09:43:56 -==> Parameters: 
2019-01-31 09:43:56 -<==      Total: 1
2019-01-31 09:43:56 -耗时 : 8
2019-01-31 09:43:56 -返回值 : com.bootdo.common.utils.PageUtils@dab870f
2019-01-31 09:43:58 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:43:58 -HTTP METHOD : GET
2019-01-31 09:43:58 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:43:58 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:43:58 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:43:58 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:43:58 -<==      Total: 1
2019-01-31 09:43:58 -耗时 : 6
2019-01-31 09:43:58 -返回值 : system/staff/edit
2019-01-31 09:44:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:44:16 -==> Parameters: 123(String), admin(String), error(String), null, http://localhost:8080/system/staff/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'staffDO' on field 'estatus': rejected value [true]; codes [typeMismatch.staffDO.estatus,typeMismatch.estatus,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [staffDO.estatus,estatus]; arguments []; default message [estatus]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'estatus'; nested exception is java.lang.NumberFormatException: For input string: "true"](String), null, 2019-01-31 09:44:16.3(Timestamp)
2019-01-31 09:44:16 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'staffDO' on field 'estatus': rejected value [true]; codes [typeMismatch.staffDO.estatus,typeMismatch.estatus,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [staffDO.estatus,estatus]; arguments []; default message [estatus]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'estatus'; nested exception is java.lang.NumberFormatException: For input string: "true"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'staffDO' on field 'estatus': rejected value [true]; codes [typeMismatch.staffDO.estatus,typeMismatch.estatus,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [staffDO.estatus,estatus]; arguments []; default message [estatus]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'estatus'; nested exception is java.lang.NumberFormatException: For input string: "true"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-31 09:44:16 -<==    Updates: 1
2019-01-31 09:48:46 -请求地址 : http://localhost:8080/index
2019-01-31 09:48:46 -HTTP METHOD : GET
2019-01-31 09:48:46 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 09:48:46 -参数 : [{}]
2019-01-31 09:48:46 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 09:48:46 -==> Parameters: 123(String)
2019-01-31 09:48:46 -<==      Total: 6
2019-01-31 09:48:46 -耗时 : 25
2019-01-31 09:48:46 -返回值 : index_v1
2019-01-31 09:48:46 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:48:46 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 09:48:46.105(Timestamp)
2019-01-31 09:48:46 -<==    Updates: 1
2019-01-31 09:48:48 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 09:48:48 -==> Parameters: 123(String)
2019-01-31 09:48:48 -<==      Total: 14
2019-01-31 09:48:48 -请求地址 : http://localhost:8080/system/staff
2019-01-31 09:48:48 -HTTP METHOD : GET
2019-01-31 09:48:48 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 09:48:48 -参数 : []
2019-01-31 09:48:48 -耗时 : 0
2019-01-31 09:48:48 -返回值 : system/staff/staff
2019-01-31 09:48:48 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 09:48:48 -HTTP METHOD : GET
2019-01-31 09:48:48 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 09:48:48 -参数 : [{page=1, limit=5}]
2019-01-31 09:48:48 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 09:48:48 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 09:48:48 -<==      Total: 5
2019-01-31 09:48:48 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 09:48:48 -==> Parameters: 
2019-01-31 09:48:48 -<==      Total: 1
2019-01-31 09:48:48 -耗时 : 7
2019-01-31 09:48:48 -返回值 : com.bootdo.common.utils.PageUtils@4769ea38
2019-01-31 09:48:57 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:48:57 -HTTP METHOD : GET
2019-01-31 09:48:57 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:48:57 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:48:57 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:48:57 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:48:57 -<==      Total: 1
2019-01-31 09:48:57 -耗时 : 5
2019-01-31 09:48:57 -返回值 : system/staff/edit
2019-01-31 09:49:43 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'staffDO' on field 'estatus': rejected value [true]; codes [typeMismatch.staffDO.estatus,typeMismatch.estatus,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [staffDO.estatus,estatus]; arguments []; default message [estatus]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'estatus'; nested exception is java.lang.NumberFormatException: For input string: "true"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'staffDO' on field 'estatus': rejected value [true]; codes [typeMismatch.staffDO.estatus,typeMismatch.estatus,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [staffDO.estatus,estatus]; arguments []; default message [estatus]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'estatus'; nested exception is java.lang.NumberFormatException: For input string: "true"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-31 09:49:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:49:43 -==> Parameters: 123(String), admin(String), error(String), null, http://localhost:8080/system/staff/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'staffDO' on field 'estatus': rejected value [true]; codes [typeMismatch.staffDO.estatus,typeMismatch.estatus,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [staffDO.estatus,estatus]; arguments []; default message [estatus]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'estatus'; nested exception is java.lang.NumberFormatException: For input string: "true"](String), null, 2019-01-31 09:49:43.021(Timestamp)
2019-01-31 09:49:43 -<==    Updates: 1
2019-01-31 09:51:32 -请求地址 : http://localhost:8080/index
2019-01-31 09:51:32 -HTTP METHOD : GET
2019-01-31 09:51:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 09:51:32 -参数 : [{}]
2019-01-31 09:51:32 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 09:51:32 -==> Parameters: 123(String)
2019-01-31 09:51:32 -<==      Total: 6
2019-01-31 09:51:32 -耗时 : 34
2019-01-31 09:51:32 -返回值 : index_v1
2019-01-31 09:51:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:51:32 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 09:51:32.495(Timestamp)
2019-01-31 09:51:32 -<==    Updates: 1
2019-01-31 09:51:34 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 09:51:34 -==> Parameters: 123(String)
2019-01-31 09:51:34 -<==      Total: 14
2019-01-31 09:51:34 -请求地址 : http://localhost:8080/system/staff
2019-01-31 09:51:34 -HTTP METHOD : GET
2019-01-31 09:51:34 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 09:51:34 -参数 : []
2019-01-31 09:51:34 -耗时 : 0
2019-01-31 09:51:34 -返回值 : system/staff/staff
2019-01-31 09:51:35 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 09:51:35 -HTTP METHOD : GET
2019-01-31 09:51:35 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 09:51:35 -参数 : [{page=1, limit=5}]
2019-01-31 09:51:35 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 09:51:35 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 09:51:35 -<==      Total: 5
2019-01-31 09:51:35 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 09:51:35 -==> Parameters: 
2019-01-31 09:51:35 -<==      Total: 1
2019-01-31 09:51:35 -耗时 : 6
2019-01-31 09:51:35 -返回值 : com.bootdo.common.utils.PageUtils@59576ca2
2019-01-31 09:51:37 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:51:37 -HTTP METHOD : GET
2019-01-31 09:51:37 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:51:37 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:51:37 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:51:37 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:51:37 -<==      Total: 1
2019-01-31 09:51:37 -耗时 : 5
2019-01-31 09:51:37 -返回值 : system/staff/edit
2019-01-31 09:52:43 -org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'staffDO' on field 'estatus': rejected value [true]; codes [typeMismatch.staffDO.estatus,typeMismatch.estatus,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [staffDO.estatus,estatus]; arguments []; default message [estatus]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'estatus'; nested exception is java.lang.NumberFormatException: For input string: "true"]
org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'staffDO' on field 'estatus': rejected value [true]; codes [typeMismatch.staffDO.estatus,typeMismatch.estatus,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [staffDO.estatus,estatus]; arguments []; default message [estatus]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'estatus'; nested exception is java.lang.NumberFormatException: For input string: "true"]
	at org.springframework.web.method.annotation.ModelAttributeMethodProcessor.resolveArgument(ModelAttributeMethodProcessor.java:157)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:124)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:161)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:131)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-31 09:52:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:52:43 -==> Parameters: 123(String), admin(String), error(String), null, http://localhost:8080/system/staff/update(String), org.springframework.validation.BindException: org.springframework.validation.BeanPropertyBindingResult: 1 errors
Field error in object 'staffDO' on field 'estatus': rejected value [true]; codes [typeMismatch.staffDO.estatus,typeMismatch.estatus,typeMismatch.java.lang.Integer,typeMismatch]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [staffDO.estatus,estatus]; arguments []; default message [estatus]]; default message [Failed to convert property value of type 'java.lang.String' to required type 'java.lang.Integer' for property 'estatus'; nested exception is java.lang.NumberFormatException: For input string: "true"](String), null, 2019-01-31 09:52:43.148(Timestamp)
2019-01-31 09:52:43 -<==    Updates: 1
2019-01-31 09:56:24 -请求地址 : http://localhost:8080/login;JSESSIONID=a6564994-1bdf-41d3-9b28-8506b2697317
2019-01-31 09:56:24 -HTTP METHOD : GET
2019-01-31 09:56:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 09:56:24 -参数 : []
2019-01-31 09:56:24 -耗时 : 0
2019-01-31 09:56:24 -返回值 : login
2019-01-31 09:56:24 -请求地址 : http://localhost:8080/login
2019-01-31 09:56:24 -HTTP METHOD : GET
2019-01-31 09:56:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 09:56:24 -参数 : []
2019-01-31 09:56:24 -耗时 : 1
2019-01-31 09:56:24 -返回值 : login
2019-01-31 09:56:32 -请求地址 : http://localhost:8080/login
2019-01-31 09:56:32 -HTTP METHOD : POST
2019-01-31 09:56:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-31 09:56:32 -参数 : [admin, 123456]
2019-01-31 09:56:32 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-31 09:56:32 -==> Parameters: 
2019-01-31 09:56:32 -<==      Total: 1
2019-01-31 09:56:32 -耗时 : 13
2019-01-31 09:56:32 -返回值 : {msg=操作成功, code=0}
2019-01-31 09:56:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:56:32 -==> Parameters: 123(String), admin(String), 登录(String), 13(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-31 09:56:32.069(Timestamp)
2019-01-31 09:56:32 -请求地址 : http://localhost:8080/index
2019-01-31 09:56:32 -HTTP METHOD : GET
2019-01-31 09:56:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 09:56:32 -参数 : [{}]
2019-01-31 09:56:32 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 09:56:32 -==> Parameters: 123(String)
2019-01-31 09:56:32 -<==      Total: 6
2019-01-31 09:56:32 -耗时 : 23
2019-01-31 09:56:32 -返回值 : index_v1
2019-01-31 09:56:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:56:32 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 09:56:32.114(Timestamp)
2019-01-31 09:56:32 -<==    Updates: 1
2019-01-31 09:56:32 -<==    Updates: 1
2019-01-31 09:56:34 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 09:56:34 -==> Parameters: 123(String)
2019-01-31 09:56:34 -<==      Total: 14
2019-01-31 09:56:34 -请求地址 : http://localhost:8080/system/staff
2019-01-31 09:56:34 -HTTP METHOD : GET
2019-01-31 09:56:34 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 09:56:34 -参数 : []
2019-01-31 09:56:34 -耗时 : 1
2019-01-31 09:56:34 -返回值 : system/staff/staff
2019-01-31 09:56:35 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 09:56:35 -HTTP METHOD : GET
2019-01-31 09:56:35 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 09:56:35 -参数 : [{page=1, limit=5}]
2019-01-31 09:56:35 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 09:56:35 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 09:56:35 -<==      Total: 5
2019-01-31 09:56:35 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 09:56:35 -==> Parameters: 
2019-01-31 09:56:35 -<==      Total: 1
2019-01-31 09:56:35 -耗时 : 6
2019-01-31 09:56:35 -返回值 : com.bootdo.common.utils.PageUtils@356c11dc
2019-01-31 09:56:37 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:56:37 -HTTP METHOD : GET
2019-01-31 09:56:37 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:56:37 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:56:37 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:56:37 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:56:37 -<==      Total: 1
2019-01-31 09:56:37 -耗时 : 14
2019-01-31 09:56:37 -返回值 : system/staff/edit
2019-01-31 09:56:56 -请求地址 : http://localhost:8080/system/staff/update
2019-01-31 09:56:56 -HTTP METHOD : POST
2019-01-31 09:56:56 -CLASS_METHOD : com.bootdo.system.controller.StaffController.update
2019-01-31 09:56:56 -参数 : [com.bootdo.system.domain.StaffDO@4f4cef27]
2019-01-31 09:57:01 -==>  Preparing: update sys_staff SET `dept_id` = ?, `employeename` = ?, `estatus` = ?, `sex` = ?, `birthday` = ?, `email` = ?, `qq` = ?, `wx` = ?, `photo` = ?, `telphone` = ?, `professionaltitle` = ?, `educational` = ?, `duty` = ? where employee_id = ? 
2019-01-31 09:57:01 -==> Parameters: (String), 让他死(String), 0(Integer), 1(Integer), 2019-01-30(String), (String), 343466439(String), (String), (String), (String), (String), (String), (String), 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:57:01 -<==    Updates: 1
2019-01-31 09:57:01 -耗时 : 4238
2019-01-31 09:57:01 -返回值 : {msg=操作成功, code=0}
2019-01-31 09:57:01 -请求地址 : http://localhost:8080/system/staff
2019-01-31 09:57:01 -HTTP METHOD : GET
2019-01-31 09:57:01 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 09:57:01 -参数 : []
2019-01-31 09:57:01 -耗时 : 0
2019-01-31 09:57:01 -返回值 : system/staff/staff
2019-01-31 09:57:01 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 09:57:01 -HTTP METHOD : GET
2019-01-31 09:57:01 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 09:57:01 -参数 : [{page=1, limit=5}]
2019-01-31 09:57:01 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 09:57:01 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 09:57:01 -<==      Total: 5
2019-01-31 09:57:01 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 09:57:01 -==> Parameters: 
2019-01-31 09:57:01 -<==      Total: 1
2019-01-31 09:57:01 -耗时 : 8
2019-01-31 09:57:01 -返回值 : com.bootdo.common.utils.PageUtils@13302499
2019-01-31 09:57:08 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:57:08 -HTTP METHOD : GET
2019-01-31 09:57:08 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:57:08 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:57:08 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:57:08 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:57:08 -<==      Total: 1
2019-01-31 09:57:08 -耗时 : 4
2019-01-31 09:57:08 -返回值 : system/staff/edit
2019-01-31 09:57:15 -请求地址 : http://localhost:8080/system/staff/update
2019-01-31 09:57:15 -HTTP METHOD : POST
2019-01-31 09:57:15 -CLASS_METHOD : com.bootdo.system.controller.StaffController.update
2019-01-31 09:57:15 -参数 : [com.bootdo.system.domain.StaffDO@295b201d]
2019-01-31 09:57:15 -==>  Preparing: update sys_staff SET `dept_id` = ?, `employeename` = ?, `estatus` = ?, `sex` = ?, `birthday` = ?, `email` = ?, `qq` = ?, `wx` = ?, `photo` = ?, `telphone` = ?, `professionaltitle` = ?, `educational` = ?, `duty` = ? where employee_id = ? 
2019-01-31 09:57:15 -==> Parameters: (String), 让他死(String), 1(Integer), 1(Integer), 2019-01-30(String), (String), 343466439(String), (String), (String), (String), (String), (String), (String), 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:57:15 -<==    Updates: 1
2019-01-31 09:57:15 -耗时 : 47
2019-01-31 09:57:15 -返回值 : {msg=操作成功, code=0}
2019-01-31 09:57:15 -请求地址 : http://localhost:8080/system/staff
2019-01-31 09:57:15 -HTTP METHOD : GET
2019-01-31 09:57:15 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 09:57:15 -参数 : []
2019-01-31 09:57:15 -耗时 : 0
2019-01-31 09:57:15 -返回值 : system/staff/staff
2019-01-31 09:57:15 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 09:57:15 -HTTP METHOD : GET
2019-01-31 09:57:15 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 09:57:15 -参数 : [{page=1, limit=5}]
2019-01-31 09:57:15 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 09:57:15 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 09:57:15 -<==      Total: 5
2019-01-31 09:57:15 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 09:57:15 -==> Parameters: 
2019-01-31 09:57:15 -<==      Total: 1
2019-01-31 09:57:15 -耗时 : 7
2019-01-31 09:57:15 -返回值 : com.bootdo.common.utils.PageUtils@2335527a
2019-01-31 09:58:17 -请求地址 : http://localhost:8080/login;JSESSIONID=3e45d56d-f0bb-4e65-97a2-d52407438c28
2019-01-31 09:58:17 -HTTP METHOD : GET
2019-01-31 09:58:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 09:58:17 -参数 : []
2019-01-31 09:58:17 -耗时 : 0
2019-01-31 09:58:17 -返回值 : login
2019-01-31 09:58:17 -请求地址 : http://localhost:8080/login
2019-01-31 09:58:17 -HTTP METHOD : GET
2019-01-31 09:58:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 09:58:17 -参数 : []
2019-01-31 09:58:17 -耗时 : 0
2019-01-31 09:58:17 -返回值 : login
2019-01-31 09:58:21 -请求地址 : http://localhost:8080/login
2019-01-31 09:58:21 -HTTP METHOD : POST
2019-01-31 09:58:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-31 09:58:21 -参数 : [admin, 123456]
2019-01-31 09:58:21 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-31 09:58:21 -==> Parameters: 
2019-01-31 09:58:21 -<==      Total: 1
2019-01-31 09:58:21 -耗时 : 7
2019-01-31 09:58:21 -返回值 : {msg=操作成功, code=0}
2019-01-31 09:58:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:58:21 -==> Parameters: 123(String), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-31 09:58:21.762(Timestamp)
2019-01-31 09:58:21 -请求地址 : http://localhost:8080/index
2019-01-31 09:58:21 -HTTP METHOD : GET
2019-01-31 09:58:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 09:58:21 -参数 : [{}]
2019-01-31 09:58:21 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 09:58:21 -==> Parameters: 123(String)
2019-01-31 09:58:21 -<==      Total: 6
2019-01-31 09:58:21 -<==    Updates: 1
2019-01-31 09:58:21 -耗时 : 26
2019-01-31 09:58:21 -返回值 : index_v1
2019-01-31 09:58:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:58:21 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 09:58:21.809(Timestamp)
2019-01-31 09:58:21 -<==    Updates: 1
2019-01-31 09:58:26 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 09:58:26 -==> Parameters: 123(String)
2019-01-31 09:58:26 -<==      Total: 14
2019-01-31 09:58:26 -请求地址 : http://localhost:8080/system/staff
2019-01-31 09:58:26 -HTTP METHOD : GET
2019-01-31 09:58:26 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 09:58:26 -参数 : []
2019-01-31 09:58:26 -耗时 : 1
2019-01-31 09:58:26 -返回值 : system/staff/staff
2019-01-31 09:58:26 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 09:58:26 -HTTP METHOD : GET
2019-01-31 09:58:26 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 09:58:26 -参数 : [{page=1, limit=5}]
2019-01-31 09:58:26 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 09:58:26 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 09:58:26 -<==      Total: 5
2019-01-31 09:58:26 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 09:58:26 -==> Parameters: 
2019-01-31 09:58:26 -<==      Total: 1
2019-01-31 09:58:26 -耗时 : 7
2019-01-31 09:58:26 -返回值 : com.bootdo.common.utils.PageUtils@5a038caf
2019-01-31 09:58:30 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 09:58:30 -HTTP METHOD : GET
2019-01-31 09:58:30 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 09:58:30 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 09:58:30 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 09:58:30 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:58:30 -<==      Total: 1
2019-01-31 09:58:30 -耗时 : 7
2019-01-31 09:58:30 -返回值 : system/staff/edit
2019-01-31 09:58:36 -请求地址 : http://localhost:8080/system/staff/update
2019-01-31 09:58:36 -HTTP METHOD : POST
2019-01-31 09:58:36 -CLASS_METHOD : com.bootdo.system.controller.StaffController.update
2019-01-31 09:58:36 -参数 : [com.bootdo.system.domain.StaffDO@75a82583]
2019-01-31 09:58:36 -==>  Preparing: update sys_staff SET `dept_id` = ?, `employeename` = ?, `estatus` = ?, `sex` = ?, `birthday` = ?, `email` = ?, `qq` = ?, `wx` = ?, `photo` = ?, `telphone` = ?, `professionaltitle` = ?, `educational` = ?, `duty` = ? where employee_id = ? 
2019-01-31 09:58:36 -==> Parameters: (String), 让他死(String), 1(Integer), 1(Integer), 2019-01-30(String), (String), 343466439(String), (String), (String), (String), aaaa(String), (String), (String), 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 09:58:36 -<==    Updates: 1
2019-01-31 09:58:36 -耗时 : 42
2019-01-31 09:58:36 -返回值 : {msg=操作成功, code=0}
2019-01-31 09:58:36 -请求地址 : http://localhost:8080/system/staff
2019-01-31 09:58:36 -HTTP METHOD : GET
2019-01-31 09:58:36 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 09:58:36 -参数 : []
2019-01-31 09:58:36 -耗时 : 0
2019-01-31 09:58:36 -返回值 : system/staff/staff
2019-01-31 09:58:36 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 09:58:36 -HTTP METHOD : GET
2019-01-31 09:58:36 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 09:58:36 -参数 : [{page=1, limit=5}]
2019-01-31 09:58:36 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 09:58:36 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 09:58:36 -<==      Total: 5
2019-01-31 09:58:36 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 09:58:36 -==> Parameters: 
2019-01-31 09:58:36 -<==      Total: 1
2019-01-31 09:58:36 -耗时 : 8
2019-01-31 09:58:36 -返回值 : com.bootdo.common.utils.PageUtils@31f7e198
2019-01-31 09:58:40 -请求地址 : http://localhost:8080/system/staff/add
2019-01-31 09:58:40 -HTTP METHOD : GET
2019-01-31 09:58:40 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-31 09:58:40 -参数 : []
2019-01-31 09:58:40 -耗时 : 1
2019-01-31 09:58:40 -返回值 : system/staff/add
2019-01-31 09:58:48 -请求地址 : http://localhost:8080/system/staff/save
2019-01-31 09:58:48 -HTTP METHOD : POST
2019-01-31 09:58:48 -CLASS_METHOD : com.bootdo.system.controller.StaffController.save
2019-01-31 09:58:48 -参数 : [com.bootdo.system.domain.StaffDO@29bcf628]
2019-01-31 09:58:48 -==>  Preparing: insert into sys_staff ( `employee_id`, `dept_id`, `employeename`, `estatus`, `sex`, `birthday`, `email`, `qq`, `wx`, `photo`, `telphone`, `professionaltitle`, `educational`, `duty`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:58:48 -==> Parameters: b31c3d7f-a79d-4955-a374-91f318761cf2(String), (String), fghh(String), 0(Integer), 1(Integer), (String), (String), (String), (String), (String), (String), (String), (String), (String), null, null, 1(Integer), null, null, null
2019-01-31 09:58:48 -{conn-10001, pstmt-20016} execute error. insert into sys_staff
		(
			`employee_id`, 
			`dept_id`, 
			`employeename`, 
			`estatus`, 
			`sex`, 
			`birthday`, 
			`email`, 
			`qq`, 
			`wx`, 
			`photo`, 
			`telphone`, 
			`professionaltitle`, 
			`educational`, 
			`duty`, 
			`edit_user`, 
			`edit_time`, 
			`deleteflag`, 
			`ext1`, 
			`ext2`, 
			`ext3`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3974)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy124.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor190.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy90.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy110.save(Unknown Source)
	at com.bootdo.system.service.impl.StaffServiceImpl.save(StaffServiceImpl.java:37)
	at com.bootdo.system.controller.StaffController.save(StaffController.java:81)
	at com.bootdo.system.controller.StaffController$$FastClassBySpringCGLIB$$2cfb8665.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.StaffController$$EnhancerBySpringCGLIB$$8fc3e746.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-31 09:58:48 -Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-01-31 09:58:48 -SQLErrorCodes loaded: [DB2, Derby, H2, HDB, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase]
2019-01-31 09:58:48 -
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
### The error may involve com.bootdo.system.dao.StaffDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into sys_staff   (    `employee_id`,     `dept_id`,     `employeename`,     `estatus`,     `sex`,     `birthday`,     `email`,     `qq`,     `wx`,     `photo`,     `telphone`,     `professionaltitle`,     `educational`,     `duty`,     `edit_user`,     `edit_time`,     `deleteflag`,     `ext1`,     `ext2`,     `ext3`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
; ]; Data truncation: Incorrect date value: '' for column 'birthday' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
### The error may involve com.bootdo.system.dao.StaffDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into sys_staff   (    `employee_id`,     `dept_id`,     `employeename`,     `estatus`,     `sex`,     `birthday`,     `email`,     `qq`,     `wx`,     `photo`,     `telphone`,     `professionaltitle`,     `educational`,     `duty`,     `edit_user`,     `edit_time`,     `deleteflag`,     `ext1`,     `ext2`,     `ext3`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
; ]; Data truncation: Incorrect date value: '' for column 'birthday' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy90.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy110.save(Unknown Source)
	at com.bootdo.system.service.impl.StaffServiceImpl.save(StaffServiceImpl.java:37)
	at com.bootdo.system.controller.StaffController.save(StaffController.java:81)
	at com.bootdo.system.controller.StaffController$$FastClassBySpringCGLIB$$2cfb8665.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.StaffController$$EnhancerBySpringCGLIB$$8fc3e746.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3974)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy124.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor190.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-01-31 09:58:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:58:48 -==> Parameters: 123(String), admin(String), error(String), null, http://localhost:8080/system/staff/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
### The error may involve com.bootdo.system.dao.StaffDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into sys_staff   (    `employee_id`,     `dept_id`,     `employeename`,     `estatus`,     `sex`,     `birthday`,     `email`,     `qq`,     `wx`,     `photo`,     `telphone`,     `professionaltitle`,     `educational`,     `duty`,     `edit_user`,     `edit_time`,     `deleteflag`,     `ext1`,     `ext2`,     `ext3`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
; ]; Data truncation: Incorrect date value: '' for column 'birthday' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1(String), null, 2019-01-31 09:58:48.464(Timestamp)
2019-01-31 09:58:48 -<==    Updates: 1
2019-01-31 09:59:37 -请求地址 : http://localhost:8080/system/staff/save
2019-01-31 09:59:37 -HTTP METHOD : POST
2019-01-31 09:59:37 -CLASS_METHOD : com.bootdo.system.controller.StaffController.save
2019-01-31 09:59:37 -参数 : [com.bootdo.system.domain.StaffDO@1e976b1]
2019-01-31 09:59:37 -==>  Preparing: insert into sys_staff ( `employee_id`, `dept_id`, `employeename`, `estatus`, `sex`, `birthday`, `email`, `qq`, `wx`, `photo`, `telphone`, `professionaltitle`, `educational`, `duty`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:59:37 -==> Parameters: f40441d5-5b62-40e3-8a59-0c0dd1be069f(String), (String), fghh(String), 0(Integer), 1(Integer), (String), (String), (String), (String), (String), (String), (String), (String), (String), null, null, 1(Integer), null, null, null
2019-01-31 09:59:37 -{conn-10001, pstmt-20017} execute error. insert into sys_staff
		(
			`employee_id`, 
			`dept_id`, 
			`employeename`, 
			`estatus`, 
			`sex`, 
			`birthday`, 
			`email`, 
			`qq`, 
			`wx`, 
			`photo`, 
			`telphone`, 
			`professionaltitle`, 
			`educational`, 
			`duty`, 
			`edit_user`, 
			`edit_time`, 
			`deleteflag`, 
			`ext1`, 
			`ext2`, 
			`ext3`
		)
		values
		(
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?, 
			?
		)
com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3974)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy124.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor190.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at com.sun.proxy.$Proxy90.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy110.save(Unknown Source)
	at com.bootdo.system.service.impl.StaffServiceImpl.save(StaffServiceImpl.java:37)
	at com.bootdo.system.controller.StaffController.save(StaffController.java:81)
	at com.bootdo.system.controller.StaffController$$FastClassBySpringCGLIB$$2cfb8665.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.StaffController$$EnhancerBySpringCGLIB$$8fc3e746.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-31 09:59:37 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 09:59:37 -
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
### The error may involve com.bootdo.system.dao.StaffDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into sys_staff   (    `employee_id`,     `dept_id`,     `employeename`,     `estatus`,     `sex`,     `birthday`,     `email`,     `qq`,     `wx`,     `photo`,     `telphone`,     `professionaltitle`,     `educational`,     `duty`,     `edit_user`,     `edit_time`,     `deleteflag`,     `ext1`,     `ext2`,     `ext3`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
; ]; Data truncation: Incorrect date value: '' for column 'birthday' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
### The error may involve com.bootdo.system.dao.StaffDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into sys_staff   (    `employee_id`,     `dept_id`,     `employeename`,     `estatus`,     `sex`,     `birthday`,     `email`,     `qq`,     `wx`,     `photo`,     `telphone`,     `professionaltitle`,     `educational`,     `duty`,     `edit_user`,     `edit_time`,     `deleteflag`,     `ext1`,     `ext2`,     `ext3`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
; ]; Data truncation: Incorrect date value: '' for column 'birthday' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:104)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:75)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:447)
	at com.sun.proxy.$Proxy90.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:279)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:57)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy110.save(Unknown Source)
	at com.bootdo.system.service.impl.StaffServiceImpl.save(StaffServiceImpl.java:37)
	at com.bootdo.system.controller.StaffController.save(StaffController.java:81)
	at com.bootdo.system.controller.StaffController$$FastClassBySpringCGLIB$$2cfb8665.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:747)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.GeneratedMethodAccessor134.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor$1.proceed(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:82)
	at org.apache.shiro.authz.aop.AuthorizingMethodInterceptor.invoke(AuthorizingMethodInterceptor.java:39)
	at org.apache.shiro.spring.security.interceptor.AopAllianceAnnotationsAuthorizingMethodInterceptor.invoke(AopAllianceAnnotationsAuthorizingMethodInterceptor.java:115)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.system.controller.StaffController$$EnhancerBySpringCGLIB$$8fc3e746.save(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3974)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486)
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858)
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2931)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:601)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440)
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:2929)
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:131)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at sun.reflect.GeneratedMethodAccessor109.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59)
	at com.sun.proxy.$Proxy124.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:46)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:198)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:185)
	at sun.reflect.GeneratedMethodAccessor190.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	... 103 common frames omitted
2019-01-31 09:59:37 -==> Parameters: 123(String), admin(String), error(String), null, http://localhost:8080/system/staff/save(String), org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
### The error may involve com.bootdo.system.dao.StaffDao.save-Inline
### The error occurred while setting parameters
### SQL: insert into sys_staff   (    `employee_id`,     `dept_id`,     `employeename`,     `estatus`,     `sex`,     `birthday`,     `email`,     `qq`,     `wx`,     `photo`,     `telphone`,     `professionaltitle`,     `educational`,     `duty`,     `edit_user`,     `edit_time`,     `deleteflag`,     `ext1`,     `ext2`,     `ext3`   )   values   (    ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?,     ?   )
### Cause: com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1
; ]; Data truncation: Incorrect date value: '' for column 'birthday' at row 1; nested exception is com.mysql.jdbc.MysqlDataTruncation: Data truncation: Incorrect date value: '' for column 'birthday' at row 1(String), null, 2019-01-31 09:59:37.231(Timestamp)
2019-01-31 09:59:37 -<==    Updates: 1
2019-01-31 10:01:58 -Starting BootdoApplication on YH-20180312AAAP with PID 14284 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-31 10:01:58 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-31 10:01:58 -The following profiles are active: dev
2019-01-31 10:01:58 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20f12539: startup date [Thu Jan 31 10:01:58 CST 2019]; root of context hierarchy
2019-01-31 10:01:59 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$13bad568] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:01:59 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$82e9a0c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:01:59 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:01:59 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:01:59 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:01:59 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$a2cd670a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:01:59 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$caa89f4a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:01:59 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$bd01cdf1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:01:59 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-31 10:02:00 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:02:00 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:02:00 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:02:00 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:02:00 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:02:00 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-31 10:02:00 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-31 10:02:00 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:02:00 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:02:00 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:02:00 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:02:01 -Tomcat initialized with port(s): 8080 (http)
2019-01-31 10:02:01 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-31 10:02:01 -Starting service [Tomcat]
2019-01-31 10:02:01 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-31 10:02:01 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-31 10:02:01 -Initializing Spring embedded WebApplicationContext
2019-01-31 10:02:01 -Root WebApplicationContext: initialization completed in 3006 ms
2019-01-31 10:02:01 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-31 10:02:01 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-31 10:02:01 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-31 10:02:01 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-31 10:02:01 -Filter xssFilter was not registered (disabled)
2019-01-31 10:02:01 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-31 10:02:01 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-31 10:02:01 -Servlet statViewServlet mapped to [/druid/*]
2019-01-31 10:02:01 -Servlet dispatcherServlet mapped to [/]
2019-01-31 10:02:02 -{dataSource-1} inited
2019-01-31 10:02:02 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20f12539: startup date [Thu Jan 31 10:01:58 CST 2019]; root of context hierarchy
2019-01-31 10:02:02 -Using default implementation for ThreadExecutor
2019-01-31 10:02:02 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-31 10:02:02 -Quartz Scheduler v.2.2.1 created.
2019-01-31 10:02:02 -RAMJobStore initialized.
2019-01-31 10:02:02 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-31 10:02:02 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-31 10:02:02 -Quartz scheduler version: 2.2.1
2019-01-31 10:02:02 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@186295cc
2019-01-31 10:02:03 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-31 10:02:03 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-31 10:02:04 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 10:02:04 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-31 10:02:04 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-31 10:02:04 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 10:02:04 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 10:02:04 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-31 10:02:04 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-31 10:02:04 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-31 10:02:04 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-31 10:02:04 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-31 10:02:04 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 10:02:04 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-31 10:02:04 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-31 10:02:04 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-31 10:02:04 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 10:02:04 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-31 10:02:04 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-31 10:02:04 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-31 10:02:04 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 10:02:04 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-31 10:02:04 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 10:02:04 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 10:02:04 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-31 10:02:04 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-31 10:02:04 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-31 10:02:04 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-31 10:02:04 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 10:02:04 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-31 10:02:04 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 10:02:04 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-31 10:02:04 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-31 10:02:04 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-31 10:02:04 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-31 10:02:04 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-31 10:02:04 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-31 10:02:04 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-31 10:02:04 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 10:02:04 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-31 10:02:04 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-31 10:02:04 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 10:02:04 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-31 10:02:04 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-31 10:02:04 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-31 10:02:04 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-31 10:02:04 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-31 10:02:04 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-31 10:02:04 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-31 10:02:04 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-31 10:02:04 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-31 10:02:04 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-31 10:02:04 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-31 10:02:04 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-31 10:02:04 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 10:02:04 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-31 10:02:04 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-31 10:02:04 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-31 10:02:04 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-31 10:02:04 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-31 10:02:04 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String)
2019-01-31 10:02:04 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String[])
2019-01-31 10:02:04 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-31 10:02:04 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 10:02:04 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-31 10:02:04 -Mapped "{[/system/staff/edit/{employeeId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 10:02:04 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-31 10:02:04 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-31 10:02:04 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-31 10:02:04 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-31 10:02:04 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-31 10:02:04 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 10:02:04 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-31 10:02:04 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-31 10:02:04 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 10:02:04 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 10:02:04 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-31 10:02:04 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-31 10:02:04 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 10:02:04 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 10:02:04 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-31 10:02:04 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-31 10:02:04 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-31 10:02:04 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-31 10:02:04 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-31 10:02:04 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-31 10:02:04 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-31 10:02:04 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-31 10:02:04 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-31 10:02:04 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-31 10:02:04 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-31 10:02:04 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-31 10:02:05 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 10:02:05 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@20f12539: startup date [Thu Jan 31 10:01:58 CST 2019]; root of context hierarchy
2019-01-31 10:02:05 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 10:02:05 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 10:02:05 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 10:02:05 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-31 10:02:05 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-31 10:02:06 -Registering beans for JMX exposure on startup
2019-01-31 10:02:06 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-31 10:02:06 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-31 10:02:06 -Starting beans in phase 2147483647
2019-01-31 10:02:06 -Context refreshed
2019-01-31 10:02:06 -Found 1 custom documentation plugin(s)
2019-01-31 10:02:06 -Scanning for api listing references
2019-01-31 10:02:06 -Generating unique operation named: removeUsingPOST_1
2019-01-31 10:02:06 -Generating unique operation named: editUsingGET_1
2019-01-31 10:02:06 -Generating unique operation named: listUsingGET_1
2019-01-31 10:02:06 -Generating unique operation named: updateUsingPOST_1
2019-01-31 10:02:06 -Generating unique operation named: addUsingGET_1
2019-01-31 10:02:06 -Generating unique operation named: editUsingGET_2
2019-01-31 10:02:06 -Generating unique operation named: listUsingGET_2
2019-01-31 10:02:06 -Generating unique operation named: removeUsingPOST_2
2019-01-31 10:02:06 -Generating unique operation named: removeUsingPOST_3
2019-01-31 10:02:06 -Generating unique operation named: saveUsingPOST_1
2019-01-31 10:02:06 -Generating unique operation named: updateUsingPOST_2
2019-01-31 10:02:06 -Generating unique operation named: listUsingGET_3
2019-01-31 10:02:06 -Generating unique operation named: removeUsingPOST_4
2019-01-31 10:02:06 -Generating unique operation named: welcomeUsingGET_1
2019-01-31 10:02:06 -Generating unique operation named: addUsingGET_2
2019-01-31 10:02:06 -Generating unique operation named: editUsingGET_3
2019-01-31 10:02:06 -Generating unique operation named: listUsingGET_4
2019-01-31 10:02:06 -Generating unique operation named: removeUsingPOST_5
2019-01-31 10:02:06 -Generating unique operation named: saveUsingPOST_2
2019-01-31 10:02:06 -Generating unique operation named: treeUsingGET_1
2019-01-31 10:02:06 -Generating unique operation named: updateUsingPOST_3
2019-01-31 10:02:06 -Generating unique operation named: addUsingGET_3
2019-01-31 10:02:06 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-31 10:02:06 -Generating unique operation named: editUsingGET_4
2019-01-31 10:02:06 -Generating unique operation named: listUsingGET_5
2019-01-31 10:02:06 -Generating unique operation named: saveUsingPOST_3
2019-01-31 10:02:06 -Generating unique operation named: saveUsingPOST_4
2019-01-31 10:02:06 -Generating unique operation named: updateUsingPOST_4
2019-01-31 10:02:06 -Generating unique operation named: listUsingGET_6
2019-01-31 10:02:06 -Generating unique operation named: listUsingHEAD_1
2019-01-31 10:02:06 -Generating unique operation named: listUsingPOST_1
2019-01-31 10:02:06 -Generating unique operation named: listUsingPUT_1
2019-01-31 10:02:06 -Generating unique operation named: listUsingPATCH_1
2019-01-31 10:02:06 -Generating unique operation named: listUsingDELETE_1
2019-01-31 10:02:06 -Generating unique operation named: listUsingOPTIONS_1
2019-01-31 10:02:06 -Generating unique operation named: listUsingTRACE_1
2019-01-31 10:02:06 -Generating unique operation named: addUsingGET_4
2019-01-31 10:02:07 -Generating unique operation named: editUsingGET_5
2019-01-31 10:02:07 -Generating unique operation named: listUsingGET_7
2019-01-31 10:02:07 -Generating unique operation named: removeUsingPOST_6
2019-01-31 10:02:07 -Generating unique operation named: removeUsingPOST_7
2019-01-31 10:02:07 -Generating unique operation named: saveUsingPOST_5
2019-01-31 10:02:07 -Generating unique operation named: updateUsingGET_1
2019-01-31 10:02:07 -Generating unique operation named: updateUsingHEAD_1
2019-01-31 10:02:07 -Generating unique operation named: updateUsingPOST_5
2019-01-31 10:02:07 -Generating unique operation named: updateUsingPUT_1
2019-01-31 10:02:07 -Generating unique operation named: updateUsingPATCH_1
2019-01-31 10:02:07 -Generating unique operation named: updateUsingDELETE_1
2019-01-31 10:02:07 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-31 10:02:07 -Generating unique operation named: updateUsingTRACE_1
2019-01-31 10:02:07 -Generating unique operation named: addUsingGET_5
2019-01-31 10:02:07 -Generating unique operation named: editUsingGET_6
2019-01-31 10:02:07 -Generating unique operation named: listUsingGET_8
2019-01-31 10:02:07 -Generating unique operation named: removeUsingPOST_8
2019-01-31 10:02:07 -Generating unique operation named: removeUsingPOST_9
2019-01-31 10:02:07 -Generating unique operation named: saveUsingPOST_6
2019-01-31 10:02:07 -Generating unique operation named: updateUsingGET_2
2019-01-31 10:02:07 -Generating unique operation named: updateUsingHEAD_2
2019-01-31 10:02:07 -Generating unique operation named: updateUsingPOST_6
2019-01-31 10:02:07 -Generating unique operation named: updateUsingPUT_2
2019-01-31 10:02:07 -Generating unique operation named: updateUsingPATCH_2
2019-01-31 10:02:07 -Generating unique operation named: updateUsingDELETE_2
2019-01-31 10:02:07 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-31 10:02:07 -Generating unique operation named: updateUsingTRACE_2
2019-01-31 10:02:07 -Generating unique operation named: addUsingGET_6
2019-01-31 10:02:07 -Generating unique operation named: editUsingGET_7
2019-01-31 10:02:07 -Generating unique operation named: listUsingGET_9
2019-01-31 10:02:07 -Generating unique operation named: roleUsingGET_1
2019-01-31 10:02:07 -Generating unique operation named: saveUsingPOST_7
2019-01-31 10:02:07 -Starting Quartz Scheduler now
2019-01-31 10:02:07 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-31 10:02:07 -Starting...
2019-01-31 10:02:07 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-31 10:02:07 -Started.
2019-01-31 10:02:07 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-31 10:02:07 -Using a shared selector for servlet write/read
2019-01-31 10:02:07 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-31 10:02:07 -Started BootdoApplication in 9.561 seconds (JVM running for 10.165)
2019-01-31 10:02:07 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-31 10:02:07 -==> Parameters: 
2019-01-31 10:02:07 -<==      Total: 1
2019-01-31 10:02:31 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-31 10:02:31 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-31 10:02:31 -FrameworkServlet 'dispatcherServlet': initialization completed in 26 ms
2019-01-31 10:02:31 -Enabling session validation scheduler...
2019-01-31 10:02:31 -请求地址 : http://localhost:8080/login;JSESSIONID=3576b987-e85b-46b5-839f-a3e5b5d04d22
2019-01-31 10:02:31 -HTTP METHOD : GET
2019-01-31 10:02:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 10:02:31 -参数 : []
2019-01-31 10:02:31 -耗时 : 2
2019-01-31 10:02:31 -返回值 : login
2019-01-31 10:02:32 -请求地址 : http://localhost:8080/login
2019-01-31 10:02:32 -HTTP METHOD : GET
2019-01-31 10:02:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 10:02:32 -参数 : []
2019-01-31 10:02:32 -耗时 : 2
2019-01-31 10:02:32 -返回值 : login
2019-01-31 10:02:35 -请求地址 : http://localhost:8080/login
2019-01-31 10:02:35 -HTTP METHOD : POST
2019-01-31 10:02:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-31 10:02:35 -参数 : [admin, 123456]
2019-01-31 10:02:35 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-31 10:02:36 -==> Parameters: 
2019-01-31 10:02:36 -<==      Total: 1
2019-01-31 10:02:36 -耗时 : 37
2019-01-31 10:02:36 -返回值 : {msg=操作成功, code=0}
2019-01-31 10:02:36 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-31 10:02:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 10:02:36 -==> Parameters: 123(String), admin(String), 登录(String), 38(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-31 10:02:36.059(Timestamp)
2019-01-31 10:02:36 -请求地址 : http://localhost:8080/index
2019-01-31 10:02:36 -HTTP METHOD : GET
2019-01-31 10:02:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 10:02:36 -参数 : [{}]
2019-01-31 10:02:36 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 10:02:36 -<==    Updates: 1
2019-01-31 10:02:36 -==> Parameters: 123(String)
2019-01-31 10:02:36 -<==      Total: 6
2019-01-31 10:02:36 -耗时 : 81
2019-01-31 10:02:36 -返回值 : index_v1
2019-01-31 10:02:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 10:02:36 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 82(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 10:02:36.197(Timestamp)
2019-01-31 10:02:36 -<==    Updates: 1
2019-01-31 10:02:51 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 10:02:51 -==> Parameters: 123(String)
2019-01-31 10:02:51 -<==      Total: 14
2019-01-31 10:02:51 -请求地址 : http://localhost:8080/system/staff
2019-01-31 10:02:51 -HTTP METHOD : GET
2019-01-31 10:02:51 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 10:02:51 -参数 : []
2019-01-31 10:02:51 -耗时 : 0
2019-01-31 10:02:51 -返回值 : system/staff/staff
2019-01-31 10:02:51 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 10:02:51 -HTTP METHOD : GET
2019-01-31 10:02:51 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 10:02:51 -参数 : [{page=1, limit=5}]
2019-01-31 10:02:51 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 10:02:51 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 10:02:51 -<==      Total: 5
2019-01-31 10:02:51 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 10:02:51 -==> Parameters: 
2019-01-31 10:02:51 -<==      Total: 1
2019-01-31 10:02:51 -耗时 : 18
2019-01-31 10:02:51 -返回值 : com.bootdo.common.utils.PageUtils@41583e92
2019-01-31 10:02:53 -请求地址 : http://localhost:8080/system/staff/add
2019-01-31 10:02:53 -HTTP METHOD : GET
2019-01-31 10:02:53 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-31 10:02:53 -参数 : []
2019-01-31 10:02:53 -耗时 : 1
2019-01-31 10:02:53 -返回值 : system/staff/add
2019-01-31 10:03:02 -请求地址 : http://localhost:8080/system/staff/save
2019-01-31 10:03:02 -HTTP METHOD : POST
2019-01-31 10:03:02 -CLASS_METHOD : com.bootdo.system.controller.StaffController.save
2019-01-31 10:03:02 -参数 : [com.bootdo.system.domain.StaffDO@6e6e4a25]
2019-01-31 10:03:02 -==>  Preparing: insert into sys_staff ( `employee_id`, `dept_id`, `employeename`, `estatus`, `sex`, `birthday`, `email`, `qq`, `wx`, `photo`, `telphone`, `professionaltitle`, `educational`, `duty`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 10:03:02 -==> Parameters: a6065b41-dae8-4dea-82ef-069208f64fcf(String), (String), asdd(String), 1(Integer), 1(Integer), null, (String), (String), (String), (String), (String), (String), (String), (String), null, null, 1(Integer), null, null, null
2019-01-31 10:03:02 -<==    Updates: 1
2019-01-31 10:03:02 -耗时 : 41
2019-01-31 10:03:02 -返回值 : {msg=操作成功, code=0}
2019-01-31 10:03:02 -请求地址 : http://localhost:8080/system/staff
2019-01-31 10:03:02 -HTTP METHOD : GET
2019-01-31 10:03:02 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 10:03:02 -参数 : []
2019-01-31 10:03:02 -耗时 : 0
2019-01-31 10:03:02 -返回值 : system/staff/staff
2019-01-31 10:03:02 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 10:03:02 -HTTP METHOD : GET
2019-01-31 10:03:02 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 10:03:02 -参数 : [{page=1, limit=5}]
2019-01-31 10:03:02 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 10:03:02 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 10:03:02 -<==      Total: 5
2019-01-31 10:03:02 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 10:03:02 -==> Parameters: 
2019-01-31 10:03:02 -<==      Total: 1
2019-01-31 10:03:02 -耗时 : 7
2019-01-31 10:03:02 -返回值 : com.bootdo.common.utils.PageUtils@886d6b3
2019-01-31 10:03:04 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-31 10:03:10 -请求地址 : http://localhost:8080/system/staff/edit/a6065b41-dae8-4dea-82ef-069208f64fcf
2019-01-31 10:03:10 -HTTP METHOD : GET
2019-01-31 10:03:10 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 10:03:10 -参数 : [a6065b41-dae8-4dea-82ef-069208f64fcf, {}]
2019-01-31 10:03:10 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 10:03:10 -==> Parameters: a6065b41-dae8-4dea-82ef-069208f64fcf(String)
2019-01-31 10:03:10 -<==      Total: 1
2019-01-31 10:03:10 -耗时 : 10
2019-01-31 10:03:10 -返回值 : system/staff/edit
2019-01-31 10:03:16 -请求地址 : http://localhost:8080/system/staff/update
2019-01-31 10:03:16 -HTTP METHOD : POST
2019-01-31 10:03:16 -CLASS_METHOD : com.bootdo.system.controller.StaffController.update
2019-01-31 10:03:16 -参数 : [com.bootdo.system.domain.StaffDO@7b807da1]
2019-01-31 10:03:16 -==>  Preparing: update sys_staff SET `dept_id` = ?, `employeename` = ?, `estatus` = ?, `sex` = ?, `birthday` = ?, `email` = ?, `qq` = ?, `wx` = ?, `photo` = ?, `telphone` = ?, `professionaltitle` = ?, `educational` = ?, `duty` = ? where employee_id = ? 
2019-01-31 10:03:16 -==> Parameters: (String), asdd(String), 0(Integer), 1(Integer), 2019-01-31(String), (String), (String), (String), (String), (String), (String), (String), (String), a6065b41-dae8-4dea-82ef-069208f64fcf(String)
2019-01-31 10:03:16 -<==    Updates: 1
2019-01-31 10:03:16 -耗时 : 73
2019-01-31 10:03:16 -返回值 : {msg=操作成功, code=0}
2019-01-31 10:03:16 -请求地址 : http://localhost:8080/system/staff
2019-01-31 10:03:16 -HTTP METHOD : GET
2019-01-31 10:03:16 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 10:03:16 -参数 : []
2019-01-31 10:03:16 -耗时 : 0
2019-01-31 10:03:16 -返回值 : system/staff/staff
2019-01-31 10:03:16 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 10:03:16 -HTTP METHOD : GET
2019-01-31 10:03:16 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 10:03:16 -参数 : [{page=1, limit=5}]
2019-01-31 10:03:16 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 10:03:16 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 10:03:16 -<==      Total: 5
2019-01-31 10:03:16 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 10:03:16 -==> Parameters: 
2019-01-31 10:03:16 -<==      Total: 1
2019-01-31 10:03:16 -耗时 : 13
2019-01-31 10:03:16 -返回值 : com.bootdo.common.utils.PageUtils@77faa8d6
2019-01-31 10:04:15 -请求地址 : http://localhost:8080/system/staff/batchRemove
2019-01-31 10:04:15 -HTTP METHOD : POST
2019-01-31 10:04:15 -CLASS_METHOD : com.bootdo.system.controller.StaffController.remove
2019-01-31 10:04:15 -参数 : [[Ljava.lang.String;@1464da51]
2019-01-31 10:04:15 -==>  Preparing: delete from sys_staff where employee_id in ( ? , ? ) 
2019-01-31 10:04:15 -==> Parameters: d35c4c4e-2a5b-4b3d-bb01-26f084f10689(String), a6065b41-dae8-4dea-82ef-069208f64fcf(String)
2019-01-31 10:04:15 -<==    Updates: 2
2019-01-31 10:04:15 -耗时 : 47
2019-01-31 10:04:15 -返回值 : {msg=操作成功, code=0}
2019-01-31 10:04:15 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 10:04:15 -HTTP METHOD : GET
2019-01-31 10:04:15 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 10:04:15 -参数 : [{page=1, limit=5}]
2019-01-31 10:04:15 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 10:04:15 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 10:04:15 -<==      Total: 4
2019-01-31 10:04:15 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 10:04:15 -==> Parameters: 
2019-01-31 10:04:15 -<==      Total: 1
2019-01-31 10:04:15 -耗时 : 11
2019-01-31 10:04:15 -返回值 : com.bootdo.common.utils.PageUtils@74fb7304
2019-01-31 10:06:30 -请求地址 : http://localhost:8080/index
2019-01-31 10:06:30 -HTTP METHOD : GET
2019-01-31 10:06:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 10:06:30 -参数 : [{}]
2019-01-31 10:06:30 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 10:06:30 -==> Parameters: 123(String)
2019-01-31 10:06:30 -<==      Total: 6
2019-01-31 10:07:26 -耗时 : 55984
2019-01-31 10:07:26 -返回值 : index_v1
2019-01-31 10:07:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 10:07:26 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 55985(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 10:07:26.878(Timestamp)
2019-01-31 10:07:26 -<==    Updates: 1
2019-01-31 10:12:41 -请求地址 : http://localhost:8080/index
2019-01-31 10:12:41 -HTTP METHOD : GET
2019-01-31 10:12:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 10:12:41 -参数 : [{}]
2019-01-31 10:12:41 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 10:12:41 -==> Parameters: 123(String)
2019-01-31 10:12:41 -<==      Total: 6
2019-01-31 10:12:47 -耗时 : 5674
2019-01-31 10:12:47 -返回值 : index_v1
2019-01-31 10:12:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 10:12:47 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 5675(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 10:12:47.04(Timestamp)
2019-01-31 10:12:47 -<==    Updates: 1
2019-01-31 10:13:47 -请求地址 : http://localhost:8080/index
2019-01-31 10:13:47 -HTTP METHOD : GET
2019-01-31 10:13:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 10:13:47 -参数 : [{}]
2019-01-31 10:13:47 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 10:13:47 -==> Parameters: 123(String)
2019-01-31 10:13:47 -<==      Total: 6
2019-01-31 10:13:47 -耗时 : 35
2019-01-31 10:13:47 -返回值 : index_v1
2019-01-31 10:13:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 10:13:47 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 35(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 10:13:47.646(Timestamp)
2019-01-31 10:13:47 -<==    Updates: 1
2019-01-31 10:18:20 -请求地址 : http://localhost:8080/index
2019-01-31 10:18:20 -HTTP METHOD : GET
2019-01-31 10:18:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 10:18:20 -参数 : [{}]
2019-01-31 10:18:20 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 10:18:20 -==> Parameters: 123(String)
2019-01-31 10:18:20 -<==      Total: 6
2019-01-31 10:18:20 -耗时 : 24
2019-01-31 10:18:20 -返回值 : index_v1
2019-01-31 10:18:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 10:18:20 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 10:18:20.892(Timestamp)
2019-01-31 10:18:20 -<==    Updates: 1
2019-01-31 10:20:08 -请求地址 : http://localhost:8080/index
2019-01-31 10:20:08 -HTTP METHOD : GET
2019-01-31 10:20:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 10:20:08 -参数 : [{}]
2019-01-31 10:20:08 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 10:20:08 -==> Parameters: 123(String)
2019-01-31 10:20:08 -<==      Total: 6
2019-01-31 10:20:08 -耗时 : 12
2019-01-31 10:20:08 -返回值 : index_v1
2019-01-31 10:20:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 10:20:08 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 13(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 10:20:08.918(Timestamp)
2019-01-31 10:20:08 -<==    Updates: 1
2019-01-31 10:21:40 -请求地址 : http://localhost:8080/index
2019-01-31 10:21:40 -HTTP METHOD : GET
2019-01-31 10:21:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 10:21:40 -参数 : [{}]
2019-01-31 10:21:40 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 10:21:40 -==> Parameters: 123(String)
2019-01-31 10:21:40 -<==      Total: 6
2019-01-31 10:21:40 -耗时 : 24
2019-01-31 10:21:40 -返回值 : index_v1
2019-01-31 10:21:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 10:21:40 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 10:21:40.648(Timestamp)
2019-01-31 10:21:40 -<==    Updates: 1
2019-01-31 10:22:41 -请求地址 : http://localhost:8080/index
2019-01-31 10:22:41 -HTTP METHOD : GET
2019-01-31 10:22:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 10:22:41 -参数 : [{}]
2019-01-31 10:22:41 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 10:22:41 -==> Parameters: 123(String)
2019-01-31 10:22:41 -<==      Total: 6
2019-01-31 10:22:41 -耗时 : 28
2019-01-31 10:22:41 -返回值 : index_v1
2019-01-31 10:22:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 10:22:41 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 10:22:41.311(Timestamp)
2019-01-31 10:22:41 -<==    Updates: 1
2019-01-31 10:22:51 -请求地址 : http://localhost:8080/index
2019-01-31 10:22:51 -HTTP METHOD : GET
2019-01-31 10:22:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 10:22:51 -参数 : [{}]
2019-01-31 10:22:51 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 10:22:51 -==> Parameters: 123(String)
2019-01-31 10:22:51 -<==      Total: 6
2019-01-31 10:22:51 -耗时 : 20
2019-01-31 10:22:51 -返回值 : index_v1
2019-01-31 10:22:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 10:22:51 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 10:22:51.551(Timestamp)
2019-01-31 10:22:51 -<==    Updates: 1
2019-01-31 10:32:38 -请求地址 : http://localhost:8080/index
2019-01-31 10:32:38 -HTTP METHOD : GET
2019-01-31 10:32:38 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 10:32:38 -参数 : [{}]
2019-01-31 10:32:38 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 10:32:38 -==> Parameters: 123(String)
2019-01-31 10:32:38 -<==      Total: 6
2019-01-31 10:32:38 -耗时 : 24
2019-01-31 10:32:38 -返回值 : index_v1
2019-01-31 10:32:38 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 10:32:38 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 10:32:38.884(Timestamp)
2019-01-31 10:32:38 -<==    Updates: 1
2019-01-31 10:32:41 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 10:32:41 -==> Parameters: 123(String)
2019-01-31 10:32:41 -<==      Total: 14
2019-01-31 10:32:41 -请求地址 : http://localhost:8080/system/staff
2019-01-31 10:32:41 -HTTP METHOD : GET
2019-01-31 10:32:41 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 10:32:41 -参数 : []
2019-01-31 10:32:41 -耗时 : 0
2019-01-31 10:32:41 -返回值 : system/staff/staff
2019-01-31 10:32:41 -[THYMELEAF][http-nio-8080-exec-1] Exception processing template "system/staff/staff": An error happened during template parsing (template: "class path resource [templates/system/staff/staff.html]" - line 30, col 52)
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/staff/staff.html]" - line 30, col 52)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: (Line = 30, Column = 52) Malformed markup: Attribute "placeholder" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseStandaloneElement(ParsingElementMarkupUtil.java:90)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:706)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
2019-01-31 10:32:41 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/staff/staff.html]" - line 30, col 52)] with root cause
org.attoparser.ParseException: (Line = 30, Column = 52) Malformed markup: Attribute "placeholder" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseStandaloneElement(ParsingElementMarkupUtil.java:90)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:706)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-31 10:33:04 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-01-31 10:33:48 -请求地址 : http://localhost:8080/index
2019-01-31 10:33:48 -HTTP METHOD : GET
2019-01-31 10:33:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 10:33:48 -参数 : [{}]
2019-01-31 10:33:48 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 10:33:48 -==> Parameters: 123(String)
2019-01-31 10:33:48 -<==      Total: 6
2019-01-31 10:33:48 -耗时 : 20
2019-01-31 10:33:48 -返回值 : index_v1
2019-01-31 10:33:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 10:33:48 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 10:33:48.128(Timestamp)
2019-01-31 10:33:48 -<==    Updates: 1
2019-01-31 10:33:50 -请求地址 : http://localhost:8080/system/staff
2019-01-31 10:33:50 -HTTP METHOD : GET
2019-01-31 10:33:50 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 10:33:50 -参数 : []
2019-01-31 10:33:50 -耗时 : 0
2019-01-31 10:33:50 -返回值 : system/staff/staff
2019-01-31 10:33:50 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 10:33:50 -HTTP METHOD : GET
2019-01-31 10:33:50 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 10:33:50 -参数 : [{page=1, limit=5}]
2019-01-31 10:33:50 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 10:33:50 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 10:33:50 -<==      Total: 4
2019-01-31 10:33:50 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 10:33:50 -==> Parameters: 
2019-01-31 10:33:50 -<==      Total: 1
2019-01-31 10:33:50 -耗时 : 6
2019-01-31 10:33:50 -返回值 : com.bootdo.common.utils.PageUtils@2821e928
2019-01-31 10:34:00 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 10:34:00 -HTTP METHOD : GET
2019-01-31 10:34:00 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 10:34:00 -参数 : [{page=1, limit=5, telphone=, employeename=g}]
2019-01-31 10:34:00 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff WHERE employeename = ? order by employee_id desc limit ?, ? 
2019-01-31 10:34:00 -==> Parameters: g(String), 0(Integer), 5(Integer)
2019-01-31 10:34:00 -<==      Total: 0
2019-01-31 10:34:00 -==>  Preparing: select count(*) from sys_staff WHERE employeename = ? 
2019-01-31 10:34:00 -==> Parameters: g(String)
2019-01-31 10:34:00 -<==      Total: 1
2019-01-31 10:34:00 -耗时 : 11
2019-01-31 10:34:00 -返回值 : com.bootdo.common.utils.PageUtils@45c07a3a
2019-01-31 10:34:03 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 10:34:03 -HTTP METHOD : GET
2019-01-31 10:34:03 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 10:34:03 -参数 : [{page=1, limit=5, telphone=, employeename=}]
2019-01-31 10:34:03 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 10:34:03 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 10:34:03 -<==      Total: 4
2019-01-31 10:34:03 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 10:34:03 -==> Parameters: 
2019-01-31 10:34:03 -<==      Total: 1
2019-01-31 10:34:03 -耗时 : 10
2019-01-31 10:34:03 -返回值 : com.bootdo.common.utils.PageUtils@eaf9cf0
2019-01-31 10:34:07 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 10:34:07 -HTTP METHOD : GET
2019-01-31 10:34:07 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 10:34:07 -参数 : [{page=1, limit=5, telphone=, employeename=死}]
2019-01-31 10:34:07 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff WHERE employeename = ? order by employee_id desc limit ?, ? 
2019-01-31 10:34:07 -==> Parameters: 死(String), 0(Integer), 5(Integer)
2019-01-31 10:34:07 -<==      Total: 0
2019-01-31 10:34:07 -==>  Preparing: select count(*) from sys_staff WHERE employeename = ? 
2019-01-31 10:34:07 -==> Parameters: 死(String)
2019-01-31 10:34:07 -<==      Total: 1
2019-01-31 10:34:07 -耗时 : 7
2019-01-31 10:34:07 -返回值 : com.bootdo.common.utils.PageUtils@1c1dacf3
2019-01-31 10:34:12 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 10:34:12 -HTTP METHOD : GET
2019-01-31 10:34:12 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 10:34:12 -参数 : [{page=1, limit=5, telphone=, employeename=}]
2019-01-31 10:34:12 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 10:34:12 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 10:34:12 -<==      Total: 4
2019-01-31 10:34:12 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 10:34:12 -==> Parameters: 
2019-01-31 10:34:12 -<==      Total: 1
2019-01-31 10:34:12 -耗时 : 14
2019-01-31 10:34:12 -返回值 : com.bootdo.common.utils.PageUtils@28a5dcb8
2019-01-31 10:34:19 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 10:34:19 -HTTP METHOD : GET
2019-01-31 10:34:19 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 10:34:19 -参数 : [{page=1, limit=5, telphone=15611238888, employeename=}]
2019-01-31 10:34:19 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff WHERE telphone = ? order by employee_id desc limit ?, ? 
2019-01-31 10:34:19 -==> Parameters: 15611238888(String), 0(Integer), 5(Integer)
2019-01-31 10:34:19 -<==      Total: 1
2019-01-31 10:34:19 -==>  Preparing: select count(*) from sys_staff WHERE telphone = ? 
2019-01-31 10:34:19 -==> Parameters: 15611238888(String)
2019-01-31 10:34:19 -<==      Total: 1
2019-01-31 10:34:19 -耗时 : 15
2019-01-31 10:34:19 -返回值 : com.bootdo.common.utils.PageUtils@235ec278
2019-01-31 10:35:54 -Starting BootdoApplication on YH-20180312AAAP with PID 11312 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-31 10:35:54 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-31 10:35:54 -The following profiles are active: dev
2019-01-31 10:35:54 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c51cf28: startup date [Thu Jan 31 10:35:54 CST 2019]; root of context hierarchy
2019-01-31 10:35:55 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$9e8142cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:35:55 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$92f50773] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:35:55 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:35:55 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:35:55 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:35:55 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$2d93d471] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:35:55 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$556f0cb1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:35:55 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$47c83b58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:35:55 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-31 10:35:56 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:35:56 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:35:56 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:35:56 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:35:56 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:35:56 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-31 10:35:56 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-31 10:35:56 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:35:56 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:35:56 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:35:56 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 10:35:57 -Tomcat initialized with port(s): 8080 (http)
2019-01-31 10:35:57 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-31 10:35:57 -Starting service [Tomcat]
2019-01-31 10:35:57 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-31 10:35:57 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-31 10:35:57 -Initializing Spring embedded WebApplicationContext
2019-01-31 10:35:57 -Root WebApplicationContext: initialization completed in 2918 ms
2019-01-31 10:35:57 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-31 10:35:57 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-31 10:35:57 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-31 10:35:57 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-31 10:35:57 -Filter xssFilter was not registered (disabled)
2019-01-31 10:35:57 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-31 10:35:57 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-31 10:35:57 -Servlet statViewServlet mapped to [/druid/*]
2019-01-31 10:35:57 -Servlet dispatcherServlet mapped to [/]
2019-01-31 10:35:58 -{dataSource-1} inited
2019-01-31 10:35:58 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c51cf28: startup date [Thu Jan 31 10:35:54 CST 2019]; root of context hierarchy
2019-01-31 10:35:58 -Using default implementation for ThreadExecutor
2019-01-31 10:35:58 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-31 10:35:58 -Quartz Scheduler v.2.2.1 created.
2019-01-31 10:35:58 -RAMJobStore initialized.
2019-01-31 10:35:58 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-31 10:35:58 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-31 10:35:58 -Quartz scheduler version: 2.2.1
2019-01-31 10:35:58 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4045fd1f
2019-01-31 10:35:59 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-31 10:35:59 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-31 10:36:00 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 10:36:00 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-31 10:36:00 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-31 10:36:00 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 10:36:00 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 10:36:00 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-31 10:36:00 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-31 10:36:00 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-31 10:36:00 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-31 10:36:00 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-31 10:36:00 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 10:36:00 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-31 10:36:00 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-31 10:36:00 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-31 10:36:00 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 10:36:00 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-31 10:36:00 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-31 10:36:00 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-31 10:36:00 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 10:36:00 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-31 10:36:00 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 10:36:00 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 10:36:00 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-31 10:36:00 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-31 10:36:00 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-31 10:36:00 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-31 10:36:00 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 10:36:00 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-31 10:36:00 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 10:36:00 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-31 10:36:00 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-31 10:36:00 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-31 10:36:00 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-31 10:36:00 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-31 10:36:00 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-31 10:36:00 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-31 10:36:00 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 10:36:00 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-31 10:36:00 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-31 10:36:00 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 10:36:00 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-31 10:36:00 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-31 10:36:00 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-31 10:36:00 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-31 10:36:00 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-31 10:36:00 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-31 10:36:00 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-31 10:36:00 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-31 10:36:00 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-31 10:36:00 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-31 10:36:00 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-31 10:36:00 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-31 10:36:00 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 10:36:00 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-31 10:36:00 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-31 10:36:00 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-31 10:36:00 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-31 10:36:00 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-31 10:36:00 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String)
2019-01-31 10:36:00 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String[])
2019-01-31 10:36:00 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-31 10:36:00 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 10:36:00 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-31 10:36:00 -Mapped "{[/system/staff/edit/{employeeId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 10:36:00 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-31 10:36:00 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-31 10:36:00 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-31 10:36:00 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-31 10:36:00 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-31 10:36:00 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 10:36:00 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-31 10:36:00 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-31 10:36:00 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 10:36:00 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 10:36:00 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-31 10:36:00 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-31 10:36:00 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 10:36:00 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 10:36:00 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-31 10:36:00 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-31 10:36:00 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-31 10:36:00 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-31 10:36:00 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-31 10:36:00 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-31 10:36:00 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-31 10:36:00 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-31 10:36:00 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-31 10:36:00 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-31 10:36:00 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-31 10:36:00 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-31 10:36:00 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 10:36:01 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@4c51cf28: startup date [Thu Jan 31 10:35:54 CST 2019]; root of context hierarchy
2019-01-31 10:36:01 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 10:36:01 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 10:36:01 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 10:36:01 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-31 10:36:01 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-31 10:36:01 -Registering beans for JMX exposure on startup
2019-01-31 10:36:01 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-31 10:36:01 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-31 10:36:01 -Starting beans in phase 2147483647
2019-01-31 10:36:01 -Context refreshed
2019-01-31 10:36:01 -Found 1 custom documentation plugin(s)
2019-01-31 10:36:01 -Scanning for api listing references
2019-01-31 10:36:02 -Generating unique operation named: removeUsingPOST_1
2019-01-31 10:36:02 -Generating unique operation named: editUsingGET_1
2019-01-31 10:36:02 -Generating unique operation named: listUsingGET_1
2019-01-31 10:36:02 -Generating unique operation named: updateUsingPOST_1
2019-01-31 10:36:02 -Generating unique operation named: addUsingGET_1
2019-01-31 10:36:02 -Generating unique operation named: editUsingGET_2
2019-01-31 10:36:02 -Generating unique operation named: listUsingGET_2
2019-01-31 10:36:02 -Generating unique operation named: removeUsingPOST_2
2019-01-31 10:36:02 -Generating unique operation named: removeUsingPOST_3
2019-01-31 10:36:02 -Generating unique operation named: saveUsingPOST_1
2019-01-31 10:36:02 -Generating unique operation named: updateUsingPOST_2
2019-01-31 10:36:02 -Generating unique operation named: listUsingGET_3
2019-01-31 10:36:02 -Generating unique operation named: removeUsingPOST_4
2019-01-31 10:36:02 -Generating unique operation named: welcomeUsingGET_1
2019-01-31 10:36:02 -Generating unique operation named: addUsingGET_2
2019-01-31 10:36:02 -Generating unique operation named: editUsingGET_3
2019-01-31 10:36:02 -Generating unique operation named: listUsingGET_4
2019-01-31 10:36:02 -Generating unique operation named: removeUsingPOST_5
2019-01-31 10:36:02 -Generating unique operation named: saveUsingPOST_2
2019-01-31 10:36:02 -Generating unique operation named: treeUsingGET_1
2019-01-31 10:36:02 -Generating unique operation named: updateUsingPOST_3
2019-01-31 10:36:02 -Generating unique operation named: addUsingGET_3
2019-01-31 10:36:02 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-31 10:36:02 -Generating unique operation named: editUsingGET_4
2019-01-31 10:36:02 -Generating unique operation named: listUsingGET_5
2019-01-31 10:36:02 -Generating unique operation named: saveUsingPOST_3
2019-01-31 10:36:02 -Generating unique operation named: saveUsingPOST_4
2019-01-31 10:36:02 -Generating unique operation named: updateUsingPOST_4
2019-01-31 10:36:02 -Generating unique operation named: listUsingGET_6
2019-01-31 10:36:02 -Generating unique operation named: listUsingHEAD_1
2019-01-31 10:36:02 -Generating unique operation named: listUsingPOST_1
2019-01-31 10:36:02 -Generating unique operation named: listUsingPUT_1
2019-01-31 10:36:02 -Generating unique operation named: listUsingPATCH_1
2019-01-31 10:36:02 -Generating unique operation named: listUsingDELETE_1
2019-01-31 10:36:02 -Generating unique operation named: listUsingOPTIONS_1
2019-01-31 10:36:02 -Generating unique operation named: listUsingTRACE_1
2019-01-31 10:36:02 -Generating unique operation named: addUsingGET_4
2019-01-31 10:36:02 -Generating unique operation named: editUsingGET_5
2019-01-31 10:36:02 -Generating unique operation named: listUsingGET_7
2019-01-31 10:36:02 -Generating unique operation named: removeUsingPOST_6
2019-01-31 10:36:02 -Generating unique operation named: removeUsingPOST_7
2019-01-31 10:36:02 -Generating unique operation named: saveUsingPOST_5
2019-01-31 10:36:02 -Generating unique operation named: updateUsingGET_1
2019-01-31 10:36:02 -Generating unique operation named: updateUsingHEAD_1
2019-01-31 10:36:02 -Generating unique operation named: updateUsingPOST_5
2019-01-31 10:36:02 -Generating unique operation named: updateUsingPUT_1
2019-01-31 10:36:02 -Generating unique operation named: updateUsingPATCH_1
2019-01-31 10:36:02 -Generating unique operation named: updateUsingDELETE_1
2019-01-31 10:36:02 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-31 10:36:02 -Generating unique operation named: updateUsingTRACE_1
2019-01-31 10:36:02 -Generating unique operation named: addUsingGET_5
2019-01-31 10:36:02 -Generating unique operation named: editUsingGET_6
2019-01-31 10:36:02 -Generating unique operation named: listUsingGET_8
2019-01-31 10:36:02 -Generating unique operation named: removeUsingPOST_8
2019-01-31 10:36:02 -Generating unique operation named: removeUsingPOST_9
2019-01-31 10:36:02 -Generating unique operation named: saveUsingPOST_6
2019-01-31 10:36:02 -Generating unique operation named: updateUsingGET_2
2019-01-31 10:36:02 -Generating unique operation named: updateUsingHEAD_2
2019-01-31 10:36:02 -Generating unique operation named: updateUsingPOST_6
2019-01-31 10:36:02 -Generating unique operation named: updateUsingPUT_2
2019-01-31 10:36:02 -Generating unique operation named: updateUsingPATCH_2
2019-01-31 10:36:02 -Generating unique operation named: updateUsingDELETE_2
2019-01-31 10:36:02 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-31 10:36:02 -Generating unique operation named: updateUsingTRACE_2
2019-01-31 10:36:02 -Generating unique operation named: addUsingGET_6
2019-01-31 10:36:02 -Generating unique operation named: editUsingGET_7
2019-01-31 10:36:02 -Generating unique operation named: listUsingGET_9
2019-01-31 10:36:02 -Generating unique operation named: roleUsingGET_1
2019-01-31 10:36:02 -Generating unique operation named: saveUsingPOST_7
2019-01-31 10:36:02 -Starting Quartz Scheduler now
2019-01-31 10:36:02 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-31 10:36:02 -Starting...
2019-01-31 10:36:02 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-31 10:36:02 -Started.
2019-01-31 10:36:02 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-31 10:36:02 -Using a shared selector for servlet write/read
2019-01-31 10:36:02 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-31 10:36:02 -Started BootdoApplication in 9.141 seconds (JVM running for 9.51)
2019-01-31 10:36:02 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-31 10:36:03 -==> Parameters: 
2019-01-31 10:36:03 -<==      Total: 1
2019-01-31 10:36:20 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-31 10:36:20 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-31 10:36:20 -FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2019-01-31 10:36:21 -Enabling session validation scheduler...
2019-01-31 10:36:21 -请求地址 : http://localhost:8080/login;JSESSIONID=d0ce80df-18c5-476c-941a-22b5be320bc0
2019-01-31 10:36:21 -HTTP METHOD : GET
2019-01-31 10:36:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 10:36:21 -参数 : []
2019-01-31 10:36:21 -耗时 : 2
2019-01-31 10:36:21 -返回值 : login
2019-01-31 10:36:21 -请求地址 : http://localhost:8080/login
2019-01-31 10:36:21 -HTTP METHOD : GET
2019-01-31 10:36:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 10:36:21 -参数 : []
2019-01-31 10:36:21 -耗时 : 1
2019-01-31 10:36:21 -返回值 : login
2019-01-31 10:36:25 -请求地址 : http://localhost:8080/login
2019-01-31 10:36:25 -HTTP METHOD : POST
2019-01-31 10:36:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-31 10:36:25 -参数 : [admin, 123456]
2019-01-31 10:36:25 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-31 10:36:25 -==> Parameters: 
2019-01-31 10:36:25 -<==      Total: 1
2019-01-31 10:36:25 -耗时 : 51
2019-01-31 10:36:25 -返回值 : {msg=操作成功, code=0}
2019-01-31 10:36:25 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-31 10:36:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 10:36:25 -==> Parameters: 123(String), admin(String), 登录(String), 51(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-31 10:36:25.425(Timestamp)
2019-01-31 10:36:25 -请求地址 : http://localhost:8080/index
2019-01-31 10:36:25 -HTTP METHOD : GET
2019-01-31 10:36:25 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 10:36:25 -参数 : [{}]
2019-01-31 10:36:25 -<==    Updates: 1
2019-01-31 10:36:25 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 10:36:25 -==> Parameters: 123(String)
2019-01-31 10:36:25 -<==      Total: 6
2019-01-31 10:36:25 -耗时 : 50
2019-01-31 10:36:25 -返回值 : index_v1
2019-01-31 10:36:25 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 10:36:25 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 50(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 10:36:25.578(Timestamp)
2019-01-31 10:36:25 -<==    Updates: 1
2019-01-31 10:36:28 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 10:36:28 -==> Parameters: 123(String)
2019-01-31 10:36:28 -<==      Total: 14
2019-01-31 10:36:28 -请求地址 : http://localhost:8080/system/staff
2019-01-31 10:36:28 -HTTP METHOD : GET
2019-01-31 10:36:28 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 10:36:28 -参数 : []
2019-01-31 10:36:28 -耗时 : 1
2019-01-31 10:36:28 -返回值 : system/staff/staff
2019-01-31 10:36:28 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 10:36:28 -HTTP METHOD : GET
2019-01-31 10:36:28 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 10:36:28 -参数 : [{page=1, limit=5}]
2019-01-31 10:36:28 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 10:36:28 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 10:36:28 -<==      Total: 4
2019-01-31 10:36:28 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 10:36:28 -==> Parameters: 
2019-01-31 10:36:28 -<==      Total: 1
2019-01-31 10:36:28 -耗时 : 31
2019-01-31 10:36:28 -返回值 : com.bootdo.common.utils.PageUtils@2a97f7ba
2019-01-31 10:36:32 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 10:36:32 -HTTP METHOD : GET
2019-01-31 10:36:32 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 10:36:32 -参数 : [{page=1, limit=5, telphone=, employeename=死}]
2019-01-31 10:36:32 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff WHERE employeename LIKE '%死%' order by employee_id desc limit ?, ? 
2019-01-31 10:36:32 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 10:36:32 -<==      Total: 1
2019-01-31 10:36:32 -==>  Preparing: select count(*) from sys_staff WHERE employeename LIKE '%死%' 
2019-01-31 10:36:32 -==> Parameters: 
2019-01-31 10:36:32 -<==      Total: 1
2019-01-31 10:36:32 -耗时 : 11
2019-01-31 10:36:32 -返回值 : com.bootdo.common.utils.PageUtils@66eaca44
2019-01-31 10:36:35 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 10:36:35 -HTTP METHOD : GET
2019-01-31 10:36:35 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 10:36:35 -参数 : [{page=1, limit=5, telphone=, employeename=}]
2019-01-31 10:36:35 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 10:36:35 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 10:36:35 -<==      Total: 4
2019-01-31 10:36:35 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 10:36:35 -==> Parameters: 
2019-01-31 10:36:35 -<==      Total: 1
2019-01-31 10:36:35 -耗时 : 14
2019-01-31 10:36:35 -返回值 : com.bootdo.common.utils.PageUtils@7058b097
2019-01-31 10:36:39 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 10:36:39 -HTTP METHOD : GET
2019-01-31 10:36:39 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 10:36:39 -参数 : [{page=1, limit=5, telphone=5, employeename=}]
2019-01-31 10:36:39 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff WHERE telphone LIKE '%5%' order by employee_id desc limit ?, ? 
2019-01-31 10:36:39 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 10:36:39 -<==      Total: 2
2019-01-31 10:36:39 -==>  Preparing: select count(*) from sys_staff WHERE telphone LIKE '%5%' 
2019-01-31 10:36:39 -==> Parameters: 
2019-01-31 10:36:39 -<==      Total: 1
2019-01-31 10:36:39 -耗时 : 10
2019-01-31 10:36:39 -返回值 : com.bootdo.common.utils.PageUtils@579d0d1d
2019-01-31 10:36:43 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 10:36:43 -HTTP METHOD : GET
2019-01-31 10:36:43 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 10:36:43 -参数 : [{page=1, limit=5, telphone=, employeename=}]
2019-01-31 10:36:43 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 10:36:43 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 10:36:43 -<==      Total: 4
2019-01-31 10:36:43 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 10:36:43 -==> Parameters: 
2019-01-31 10:36:43 -<==      Total: 1
2019-01-31 10:36:43 -耗时 : 29
2019-01-31 10:36:43 -返回值 : com.bootdo.common.utils.PageUtils@2c9e2b1d
2019-01-31 10:37:00 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-31 11:07:00 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-01-31 11:08:05 -Starting BootdoApplication on YH-20180312AAAP with PID 13040 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-31 11:08:05 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-31 11:08:05 -The following profiles are active: dev
2019-01-31 11:08:05 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@260e86a1: startup date [Thu Jan 31 11:08:05 CST 2019]; root of context hierarchy
2019-01-31 11:08:06 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$1f2b403b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:08:07 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$139f04df] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:08:07 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:08:07 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:08:07 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:08:07 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$ae3dd1dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:08:07 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d6190a1d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:08:07 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$c87238c4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:08:07 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-31 11:08:07 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:08:07 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:08:07 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:08:07 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:08:07 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:08:07 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-31 11:08:08 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-31 11:08:08 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:08:08 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:08:08 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:08:08 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:08:08 -Tomcat initialized with port(s): 8080 (http)
2019-01-31 11:08:08 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-31 11:08:08 -Starting service [Tomcat]
2019-01-31 11:08:08 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-31 11:08:08 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-31 11:08:08 -Initializing Spring embedded WebApplicationContext
2019-01-31 11:08:08 -Root WebApplicationContext: initialization completed in 3155 ms
2019-01-31 11:08:09 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-31 11:08:09 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-31 11:08:09 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-31 11:08:09 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-31 11:08:09 -Filter xssFilter was not registered (disabled)
2019-01-31 11:08:09 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-31 11:08:09 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-31 11:08:09 -Servlet statViewServlet mapped to [/druid/*]
2019-01-31 11:08:09 -Servlet dispatcherServlet mapped to [/]
2019-01-31 11:08:09 -{dataSource-1} inited
2019-01-31 11:08:10 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@260e86a1: startup date [Thu Jan 31 11:08:05 CST 2019]; root of context hierarchy
2019-01-31 11:08:10 -Using default implementation for ThreadExecutor
2019-01-31 11:08:10 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-31 11:08:10 -Quartz Scheduler v.2.2.1 created.
2019-01-31 11:08:10 -RAMJobStore initialized.
2019-01-31 11:08:10 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-31 11:08:10 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-31 11:08:10 -Quartz scheduler version: 2.2.1
2019-01-31 11:08:10 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@ce2eaa7
2019-01-31 11:08:10 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-31 11:08:10 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-31 11:08:11 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:08:11 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-31 11:08:11 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 11:08:11 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-31 11:08:11 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-31 11:08:11 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 11:08:11 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-31 11:08:11 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-31 11:08:11 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-31 11:08:11 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-31 11:08:11 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:08:11 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-31 11:08:11 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-31 11:08:11 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-31 11:08:11 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 11:08:11 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-31 11:08:11 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-31 11:08:11 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-31 11:08:11 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:08:11 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-31 11:08:11 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 11:08:11 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 11:08:11 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-31 11:08:11 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-31 11:08:11 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-31 11:08:11 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-31 11:08:11 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:08:11 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-31 11:08:11 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 11:08:11 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-31 11:08:11 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-31 11:08:11 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-31 11:08:11 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-31 11:08:11 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-31 11:08:11 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-31 11:08:11 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-31 11:08:11 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 11:08:11 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-31 11:08:11 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-31 11:08:11 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:08:11 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-31 11:08:11 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-31 11:08:11 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-31 11:08:11 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-31 11:08:11 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-31 11:08:11 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-31 11:08:11 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-31 11:08:11 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-31 11:08:11 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-31 11:08:11 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-31 11:08:11 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-31 11:08:11 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 11:08:11 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-31 11:08:11 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-31 11:08:11 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-31 11:08:11 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-31 11:08:11 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-31 11:08:11 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-31 11:08:11 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String)
2019-01-31 11:08:11 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String[])
2019-01-31 11:08:11 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-31 11:08:11 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:08:11 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-31 11:08:11 -Mapped "{[/system/staff/edit/{employeeId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 11:08:11 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-31 11:08:11 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-31 11:08:11 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-31 11:08:11 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-31 11:08:11 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-31 11:08:11 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:08:11 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-31 11:08:11 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 11:08:11 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:08:11 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-31 11:08:11 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-31 11:08:11 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-31 11:08:11 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 11:08:11 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:08:11 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-31 11:08:11 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-31 11:08:11 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-31 11:08:11 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-31 11:08:11 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-31 11:08:11 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-31 11:08:11 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-31 11:08:11 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-31 11:08:11 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-31 11:08:12 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-31 11:08:12 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-31 11:08:12 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-31 11:08:12 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 11:08:12 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@260e86a1: startup date [Thu Jan 31 11:08:05 CST 2019]; root of context hierarchy
2019-01-31 11:08:12 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 11:08:12 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 11:08:12 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 11:08:12 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-31 11:08:12 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-31 11:08:13 -Registering beans for JMX exposure on startup
2019-01-31 11:08:13 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-31 11:08:13 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-31 11:08:13 -Starting beans in phase 2147483647
2019-01-31 11:08:13 -Context refreshed
2019-01-31 11:08:13 -Found 1 custom documentation plugin(s)
2019-01-31 11:08:13 -Scanning for api listing references
2019-01-31 11:08:13 -Generating unique operation named: removeUsingPOST_1
2019-01-31 11:08:13 -Generating unique operation named: editUsingGET_1
2019-01-31 11:08:13 -Generating unique operation named: listUsingGET_1
2019-01-31 11:08:13 -Generating unique operation named: updateUsingPOST_1
2019-01-31 11:08:13 -Generating unique operation named: addUsingGET_1
2019-01-31 11:08:13 -Generating unique operation named: editUsingGET_2
2019-01-31 11:08:13 -Generating unique operation named: listUsingGET_2
2019-01-31 11:08:13 -Generating unique operation named: removeUsingPOST_2
2019-01-31 11:08:13 -Generating unique operation named: removeUsingPOST_3
2019-01-31 11:08:13 -Generating unique operation named: saveUsingPOST_1
2019-01-31 11:08:13 -Generating unique operation named: updateUsingPOST_2
2019-01-31 11:08:13 -Generating unique operation named: listUsingGET_3
2019-01-31 11:08:13 -Generating unique operation named: removeUsingPOST_4
2019-01-31 11:08:13 -Generating unique operation named: welcomeUsingGET_1
2019-01-31 11:08:14 -Generating unique operation named: addUsingGET_2
2019-01-31 11:08:14 -Generating unique operation named: editUsingGET_3
2019-01-31 11:08:14 -Generating unique operation named: listUsingGET_4
2019-01-31 11:08:14 -Generating unique operation named: removeUsingPOST_5
2019-01-31 11:08:14 -Generating unique operation named: saveUsingPOST_2
2019-01-31 11:08:14 -Generating unique operation named: treeUsingGET_1
2019-01-31 11:08:14 -Generating unique operation named: updateUsingPOST_3
2019-01-31 11:08:14 -Generating unique operation named: addUsingGET_3
2019-01-31 11:08:14 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-31 11:08:14 -Generating unique operation named: editUsingGET_4
2019-01-31 11:08:14 -Generating unique operation named: listUsingGET_5
2019-01-31 11:08:14 -Generating unique operation named: saveUsingPOST_3
2019-01-31 11:08:14 -Generating unique operation named: saveUsingPOST_4
2019-01-31 11:08:14 -Generating unique operation named: updateUsingPOST_4
2019-01-31 11:08:14 -Generating unique operation named: listUsingGET_6
2019-01-31 11:08:14 -Generating unique operation named: listUsingHEAD_1
2019-01-31 11:08:14 -Generating unique operation named: listUsingPOST_1
2019-01-31 11:08:14 -Generating unique operation named: listUsingPUT_1
2019-01-31 11:08:14 -Generating unique operation named: listUsingPATCH_1
2019-01-31 11:08:14 -Generating unique operation named: listUsingDELETE_1
2019-01-31 11:08:14 -Generating unique operation named: listUsingOPTIONS_1
2019-01-31 11:08:14 -Generating unique operation named: listUsingTRACE_1
2019-01-31 11:08:14 -Generating unique operation named: addUsingGET_4
2019-01-31 11:08:14 -Generating unique operation named: editUsingGET_5
2019-01-31 11:08:14 -Generating unique operation named: listUsingGET_7
2019-01-31 11:08:14 -Generating unique operation named: removeUsingPOST_6
2019-01-31 11:08:14 -Generating unique operation named: removeUsingPOST_7
2019-01-31 11:08:14 -Generating unique operation named: saveUsingPOST_5
2019-01-31 11:08:14 -Generating unique operation named: updateUsingGET_1
2019-01-31 11:08:14 -Generating unique operation named: updateUsingHEAD_1
2019-01-31 11:08:14 -Generating unique operation named: updateUsingPOST_5
2019-01-31 11:08:14 -Generating unique operation named: updateUsingPUT_1
2019-01-31 11:08:14 -Generating unique operation named: updateUsingPATCH_1
2019-01-31 11:08:14 -Generating unique operation named: updateUsingDELETE_1
2019-01-31 11:08:14 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-31 11:08:14 -Generating unique operation named: updateUsingTRACE_1
2019-01-31 11:08:14 -Generating unique operation named: addUsingGET_5
2019-01-31 11:08:14 -Generating unique operation named: editUsingGET_6
2019-01-31 11:08:14 -Generating unique operation named: listUsingGET_8
2019-01-31 11:08:14 -Generating unique operation named: removeUsingPOST_8
2019-01-31 11:08:14 -Generating unique operation named: removeUsingPOST_9
2019-01-31 11:08:14 -Generating unique operation named: saveUsingPOST_6
2019-01-31 11:08:14 -Generating unique operation named: updateUsingGET_2
2019-01-31 11:08:14 -Generating unique operation named: updateUsingHEAD_2
2019-01-31 11:08:14 -Generating unique operation named: updateUsingPOST_6
2019-01-31 11:08:14 -Generating unique operation named: updateUsingPUT_2
2019-01-31 11:08:14 -Generating unique operation named: updateUsingPATCH_2
2019-01-31 11:08:14 -Generating unique operation named: updateUsingDELETE_2
2019-01-31 11:08:14 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-31 11:08:14 -Generating unique operation named: updateUsingTRACE_2
2019-01-31 11:08:14 -Generating unique operation named: addUsingGET_6
2019-01-31 11:08:14 -Generating unique operation named: editUsingGET_7
2019-01-31 11:08:14 -Generating unique operation named: listUsingGET_9
2019-01-31 11:08:14 -Generating unique operation named: roleUsingGET_1
2019-01-31 11:08:14 -Generating unique operation named: saveUsingPOST_7
2019-01-31 11:08:14 -Starting Quartz Scheduler now
2019-01-31 11:08:14 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-31 11:08:14 -Starting...
2019-01-31 11:08:14 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-31 11:08:14 -Started.
2019-01-31 11:08:14 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-31 11:08:14 -Using a shared selector for servlet write/read
2019-01-31 11:08:14 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-31 11:08:14 -Started BootdoApplication in 9.446 seconds (JVM running for 9.85)
2019-01-31 11:08:14 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-31 11:08:14 -==> Parameters: 
2019-01-31 11:08:14 -<==      Total: 1
2019-01-31 11:09:12 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-31 11:09:19 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-31 11:09:19 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-31 11:09:19 -FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2019-01-31 11:09:20 -Enabling session validation scheduler...
2019-01-31 11:09:20 -请求地址 : http://localhost:8080/login;JSESSIONID=fc948927-ef1c-415d-b1df-6ab253d97a54
2019-01-31 11:09:20 -HTTP METHOD : GET
2019-01-31 11:09:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 11:09:20 -参数 : []
2019-01-31 11:09:20 -耗时 : 2
2019-01-31 11:09:20 -返回值 : login
2019-01-31 11:09:30 -请求地址 : http://localhost:8080/login
2019-01-31 11:09:30 -HTTP METHOD : POST
2019-01-31 11:09:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-31 11:09:30 -参数 : [admin, 123456]
2019-01-31 11:09:30 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-31 11:09:30 -==> Parameters: 
2019-01-31 11:09:30 -<==      Total: 1
2019-01-31 11:09:30 -耗时 : 42
2019-01-31 11:09:30 -返回值 : {msg=操作成功, code=0}
2019-01-31 11:09:30 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-31 11:09:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 11:09:30 -==> Parameters: 123(String), admin(String), 登录(String), 43(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-31 11:09:30.276(Timestamp)
2019-01-31 11:09:30 -请求地址 : http://localhost:8080/index
2019-01-31 11:09:30 -HTTP METHOD : GET
2019-01-31 11:09:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 11:09:30 -参数 : [{}]
2019-01-31 11:09:30 -<==    Updates: 1
2019-01-31 11:09:30 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 11:09:30 -==> Parameters: 123(String)
2019-01-31 11:09:30 -<==      Total: 6
2019-01-31 11:09:30 -耗时 : 81
2019-01-31 11:09:30 -返回值 : index_v1
2019-01-31 11:09:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 11:09:30 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 81(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 11:09:30.424(Timestamp)
2019-01-31 11:09:30 -<==    Updates: 1
2019-01-31 11:09:32 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 11:09:32 -==> Parameters: 123(String)
2019-01-31 11:09:32 -<==      Total: 14
2019-01-31 11:09:32 -请求地址 : http://localhost:8080/system/staff
2019-01-31 11:09:32 -HTTP METHOD : GET
2019-01-31 11:09:32 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 11:09:32 -参数 : []
2019-01-31 11:09:32 -耗时 : 0
2019-01-31 11:09:32 -返回值 : system/staff/staff
2019-01-31 11:09:33 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 11:09:33 -HTTP METHOD : GET
2019-01-31 11:09:33 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 11:09:33 -参数 : [{page=1, limit=5}]
2019-01-31 11:09:33 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 11:09:33 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 11:09:33 -<==      Total: 4
2019-01-31 11:09:33 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 11:09:33 -==> Parameters: 
2019-01-31 11:09:33 -<==      Total: 1
2019-01-31 11:09:33 -耗时 : 25
2019-01-31 11:09:33 -返回值 : com.bootdo.common.utils.PageUtils@6c2cb842
2019-01-31 11:09:33 -请求地址 : http://localhost:8080/system/staff/add
2019-01-31 11:09:33 -HTTP METHOD : GET
2019-01-31 11:09:33 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-31 11:09:33 -参数 : []
2019-01-31 11:09:33 -耗时 : 1
2019-01-31 11:09:33 -返回值 : system/staff/add
2019-01-31 11:10:18 -请求地址 : http://localhost:8080/index
2019-01-31 11:10:18 -HTTP METHOD : GET
2019-01-31 11:10:18 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 11:10:18 -参数 : [{}]
2019-01-31 11:10:18 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 11:10:18 -==> Parameters: 123(String)
2019-01-31 11:10:18 -<==      Total: 6
2019-01-31 11:10:18 -耗时 : 19
2019-01-31 11:10:18 -返回值 : index_v1
2019-01-31 11:10:18 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 11:10:18 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 19(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 11:10:18.418(Timestamp)
2019-01-31 11:10:18 -<==    Updates: 1
2019-01-31 11:10:20 -请求地址 : http://localhost:8080/system/staff
2019-01-31 11:10:20 -HTTP METHOD : GET
2019-01-31 11:10:20 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 11:10:20 -参数 : []
2019-01-31 11:10:20 -耗时 : 1
2019-01-31 11:10:20 -返回值 : system/staff/staff
2019-01-31 11:10:21 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 11:10:21 -HTTP METHOD : GET
2019-01-31 11:10:21 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 11:10:21 -参数 : [{page=1, limit=5}]
2019-01-31 11:10:21 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 11:10:21 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 11:10:21 -<==      Total: 4
2019-01-31 11:10:21 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 11:10:21 -==> Parameters: 
2019-01-31 11:10:21 -<==      Total: 1
2019-01-31 11:10:21 -耗时 : 7
2019-01-31 11:10:21 -返回值 : com.bootdo.common.utils.PageUtils@3d1edbd2
2019-01-31 11:10:22 -请求地址 : http://localhost:8080/system/staff/add
2019-01-31 11:10:22 -HTTP METHOD : GET
2019-01-31 11:10:22 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-31 11:10:22 -参数 : []
2019-01-31 11:10:22 -耗时 : 0
2019-01-31 11:10:22 -返回值 : system/staff/add
2019-01-31 11:36:02 -Starting BootdoApplication on YH-20180312AAAP with PID 9884 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-31 11:36:02 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-31 11:36:02 -The following profiles are active: dev
2019-01-31 11:36:02 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@59f63e24: startup date [Thu Jan 31 11:36:02 CST 2019]; root of context hierarchy
2019-01-31 11:36:03 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$d0bd6708] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:36:04 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$c5312bac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:36:04 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:36:04 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:36:04 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:36:04 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$5fcff8aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:36:04 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$87ab30ea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:36:04 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$7a045f91] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:36:04 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-31 11:36:04 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:36:04 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:36:04 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:36:04 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:36:04 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:36:04 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-31 11:36:04 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-31 11:36:04 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:36:05 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:36:05 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:36:05 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 11:36:05 -Tomcat initialized with port(s): 8080 (http)
2019-01-31 11:36:05 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-31 11:36:05 -Starting service [Tomcat]
2019-01-31 11:36:05 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-31 11:36:05 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-31 11:36:05 -Initializing Spring embedded WebApplicationContext
2019-01-31 11:36:05 -Root WebApplicationContext: initialization completed in 2988 ms
2019-01-31 11:36:06 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-31 11:36:06 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-31 11:36:06 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-31 11:36:06 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-31 11:36:06 -Filter xssFilter was not registered (disabled)
2019-01-31 11:36:06 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-31 11:36:06 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-31 11:36:06 -Servlet statViewServlet mapped to [/druid/*]
2019-01-31 11:36:06 -Servlet dispatcherServlet mapped to [/]
2019-01-31 11:36:06 -{dataSource-1} inited
2019-01-31 11:36:07 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@59f63e24: startup date [Thu Jan 31 11:36:02 CST 2019]; root of context hierarchy
2019-01-31 11:36:07 -Using default implementation for ThreadExecutor
2019-01-31 11:36:07 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-31 11:36:07 -Quartz Scheduler v.2.2.1 created.
2019-01-31 11:36:07 -RAMJobStore initialized.
2019-01-31 11:36:07 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-31 11:36:07 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-31 11:36:07 -Quartz scheduler version: 2.2.1
2019-01-31 11:36:07 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@436a563f
2019-01-31 11:36:07 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-31 11:36:07 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-31 11:36:08 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-01-31 11:36:08 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-01-31 11:36:08 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-01-31 11:36:08 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-01-31 11:36:08 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:36:08 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-01-31 11:36:08 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-01-31 11:36:08 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-01-31 11:36:08 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 11:36:08 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-01-31 11:36:08 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:36:08 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-31 11:36:08 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-31 11:36:08 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 11:36:08 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-31 11:36:08 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 11:36:08 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-31 11:36:08 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-31 11:36:08 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-31 11:36:08 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-31 11:36:08 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:36:08 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-31 11:36:08 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-31 11:36:08 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 11:36:08 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-31 11:36:08 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-31 11:36:08 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-31 11:36:08 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-31 11:36:08 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:36:08 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-31 11:36:08 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 11:36:08 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 11:36:08 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-31 11:36:08 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-31 11:36:08 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-31 11:36:08 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-31 11:36:08 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:36:08 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-31 11:36:08 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-31 11:36:08 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 11:36:08 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-31 11:36:08 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-31 11:36:08 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-31 11:36:08 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-31 11:36:08 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-31 11:36:08 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-31 11:36:08 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 11:36:08 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-31 11:36:08 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-31 11:36:08 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:36:08 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-31 11:36:08 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-31 11:36:08 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-31 11:36:08 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-31 11:36:08 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-31 11:36:08 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-31 11:36:08 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-31 11:36:08 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-31 11:36:08 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-31 11:36:08 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-31 11:36:08 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-31 11:36:08 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-31 11:36:08 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 11:36:08 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-31 11:36:08 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-31 11:36:08 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-31 11:36:08 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-31 11:36:08 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-31 11:36:08 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String)
2019-01-31 11:36:08 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String[])
2019-01-31 11:36:08 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-31 11:36:08 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:36:08 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-31 11:36:08 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-31 11:36:08 -Mapped "{[/system/staff/edit/{employeeId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 11:36:08 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-31 11:36:08 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-31 11:36:08 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-31 11:36:08 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-31 11:36:08 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:36:08 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-31 11:36:08 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-31 11:36:08 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-31 11:36:08 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-31 11:36:08 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 11:36:08 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:36:08 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 11:36:08 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 11:36:08 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-31 11:36:08 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-31 11:36:08 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-31 11:36:08 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-31 11:36:08 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-31 11:36:08 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-31 11:36:08 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-31 11:36:08 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-31 11:36:08 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-31 11:36:09 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-31 11:36:09 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-31 11:36:09 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-31 11:36:09 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 11:36:09 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@59f63e24: startup date [Thu Jan 31 11:36:02 CST 2019]; root of context hierarchy
2019-01-31 11:36:10 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 11:36:10 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 11:36:10 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 11:36:10 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-31 11:36:10 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-31 11:36:10 -Registering beans for JMX exposure on startup
2019-01-31 11:36:10 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-31 11:36:10 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-31 11:36:10 -Starting beans in phase 2147483647
2019-01-31 11:36:10 -Context refreshed
2019-01-31 11:36:10 -Found 1 custom documentation plugin(s)
2019-01-31 11:36:10 -Scanning for api listing references
2019-01-31 11:36:11 -Generating unique operation named: removeUsingPOST_1
2019-01-31 11:36:11 -Generating unique operation named: addUsingGET_1
2019-01-31 11:36:11 -Generating unique operation named: editUsingGET_1
2019-01-31 11:36:11 -Generating unique operation named: listUsingGET_1
2019-01-31 11:36:11 -Generating unique operation named: removeUsingPOST_2
2019-01-31 11:36:11 -Generating unique operation named: removeUsingPOST_3
2019-01-31 11:36:11 -Generating unique operation named: saveUsingPOST_1
2019-01-31 11:36:11 -Generating unique operation named: updateUsingGET_1
2019-01-31 11:36:11 -Generating unique operation named: updateUsingHEAD_1
2019-01-31 11:36:11 -Generating unique operation named: updateUsingPOST_1
2019-01-31 11:36:11 -Generating unique operation named: updateUsingPUT_1
2019-01-31 11:36:11 -Generating unique operation named: updateUsingPATCH_1
2019-01-31 11:36:11 -Generating unique operation named: updateUsingDELETE_1
2019-01-31 11:36:11 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-31 11:36:11 -Generating unique operation named: updateUsingTRACE_1
2019-01-31 11:36:11 -Generating unique operation named: editUsingGET_2
2019-01-31 11:36:11 -Generating unique operation named: listUsingGET_2
2019-01-31 11:36:11 -Generating unique operation named: updateUsingPOST_2
2019-01-31 11:36:11 -Generating unique operation named: addUsingGET_2
2019-01-31 11:36:11 -Generating unique operation named: editUsingGET_3
2019-01-31 11:36:11 -Generating unique operation named: infoUsingGET_1
2019-01-31 11:36:11 -Generating unique operation named: infoUsingHEAD_1
2019-01-31 11:36:11 -Generating unique operation named: infoUsingPOST_1
2019-01-31 11:36:11 -Generating unique operation named: infoUsingPUT_1
2019-01-31 11:36:11 -Generating unique operation named: infoUsingPATCH_1
2019-01-31 11:36:11 -Generating unique operation named: infoUsingDELETE_1
2019-01-31 11:36:11 -Generating unique operation named: infoUsingOPTIONS_1
2019-01-31 11:36:11 -Generating unique operation named: infoUsingTRACE_1
2019-01-31 11:36:11 -Generating unique operation named: listUsingGET_3
2019-01-31 11:36:11 -Generating unique operation named: removeUsingPOST_4
2019-01-31 11:36:11 -Generating unique operation named: removeUsingPOST_5
2019-01-31 11:36:11 -Generating unique operation named: saveUsingPOST_2
2019-01-31 11:36:11 -Generating unique operation named: updateUsingPOST_3
2019-01-31 11:36:11 -Generating unique operation named: listUsingGET_4
2019-01-31 11:36:11 -Generating unique operation named: removeUsingPOST_6
2019-01-31 11:36:11 -Generating unique operation named: welcomeUsingGET_1
2019-01-31 11:36:11 -Generating unique operation named: addUsingGET_3
2019-01-31 11:36:11 -Generating unique operation named: editUsingGET_4
2019-01-31 11:36:11 -Generating unique operation named: listUsingGET_5
2019-01-31 11:36:11 -Generating unique operation named: removeUsingPOST_7
2019-01-31 11:36:11 -Generating unique operation named: saveUsingPOST_3
2019-01-31 11:36:11 -Generating unique operation named: treeUsingGET_1
2019-01-31 11:36:11 -Generating unique operation named: updateUsingPOST_4
2019-01-31 11:36:11 -Generating unique operation named: addUsingGET_4
2019-01-31 11:36:11 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-31 11:36:11 -Generating unique operation named: editUsingGET_5
2019-01-31 11:36:11 -Generating unique operation named: listUsingGET_6
2019-01-31 11:36:11 -Generating unique operation named: saveUsingPOST_4
2019-01-31 11:36:11 -Generating unique operation named: saveUsingPOST_5
2019-01-31 11:36:11 -Generating unique operation named: updateUsingPOST_5
2019-01-31 11:36:11 -Generating unique operation named: listUsingGET_7
2019-01-31 11:36:11 -Generating unique operation named: listUsingHEAD_1
2019-01-31 11:36:11 -Generating unique operation named: listUsingPOST_1
2019-01-31 11:36:11 -Generating unique operation named: listUsingPUT_1
2019-01-31 11:36:11 -Generating unique operation named: listUsingPATCH_1
2019-01-31 11:36:11 -Generating unique operation named: listUsingDELETE_1
2019-01-31 11:36:11 -Generating unique operation named: listUsingOPTIONS_1
2019-01-31 11:36:11 -Generating unique operation named: listUsingTRACE_1
2019-01-31 11:36:11 -Generating unique operation named: addUsingGET_5
2019-01-31 11:36:11 -Generating unique operation named: editUsingGET_6
2019-01-31 11:36:11 -Generating unique operation named: listUsingGET_8
2019-01-31 11:36:11 -Generating unique operation named: removeUsingPOST_8
2019-01-31 11:36:11 -Generating unique operation named: removeUsingPOST_9
2019-01-31 11:36:11 -Generating unique operation named: saveUsingPOST_6
2019-01-31 11:36:11 -Generating unique operation named: updateUsingGET_2
2019-01-31 11:36:11 -Generating unique operation named: updateUsingHEAD_2
2019-01-31 11:36:11 -Generating unique operation named: updateUsingPOST_6
2019-01-31 11:36:11 -Generating unique operation named: updateUsingPUT_2
2019-01-31 11:36:11 -Generating unique operation named: updateUsingPATCH_2
2019-01-31 11:36:11 -Generating unique operation named: updateUsingDELETE_2
2019-01-31 11:36:11 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-31 11:36:11 -Generating unique operation named: updateUsingTRACE_2
2019-01-31 11:36:11 -Generating unique operation named: addUsingGET_6
2019-01-31 11:36:11 -Generating unique operation named: editUsingGET_7
2019-01-31 11:36:11 -Generating unique operation named: listUsingGET_9
2019-01-31 11:36:11 -Generating unique operation named: removeUsingPOST_10
2019-01-31 11:36:11 -Generating unique operation named: removeUsingPOST_11
2019-01-31 11:36:11 -Generating unique operation named: saveUsingPOST_7
2019-01-31 11:36:11 -Generating unique operation named: updateUsingGET_3
2019-01-31 11:36:11 -Generating unique operation named: updateUsingHEAD_3
2019-01-31 11:36:11 -Generating unique operation named: updateUsingPOST_7
2019-01-31 11:36:11 -Generating unique operation named: updateUsingPUT_3
2019-01-31 11:36:11 -Generating unique operation named: updateUsingPATCH_3
2019-01-31 11:36:11 -Generating unique operation named: updateUsingDELETE_3
2019-01-31 11:36:11 -Generating unique operation named: updateUsingOPTIONS_3
2019-01-31 11:36:11 -Generating unique operation named: updateUsingTRACE_3
2019-01-31 11:36:11 -Generating unique operation named: addUsingGET_7
2019-01-31 11:36:11 -Generating unique operation named: editUsingGET_8
2019-01-31 11:36:11 -Generating unique operation named: listUsingGET_10
2019-01-31 11:36:11 -Generating unique operation named: roleUsingGET_1
2019-01-31 11:36:11 -Generating unique operation named: saveUsingPOST_8
2019-01-31 11:36:11 -Starting Quartz Scheduler now
2019-01-31 11:36:11 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-31 11:36:11 -Starting...
2019-01-31 11:36:11 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-31 11:36:11 -Started.
2019-01-31 11:36:11 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-31 11:36:11 -Using a shared selector for servlet write/read
2019-01-31 11:36:11 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-31 11:36:11 -Started BootdoApplication in 9.665 seconds (JVM running for 10.057)
2019-01-31 11:36:11 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-31 11:36:11 -==> Parameters: 
2019-01-31 11:36:11 -<==      Total: 1
2019-01-31 11:36:27 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-31 11:36:27 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-31 11:36:27 -FrameworkServlet 'dispatcherServlet': initialization completed in 32 ms
2019-01-31 11:36:27 -Enabling session validation scheduler...
2019-01-31 11:36:27 -请求地址 : http://localhost:8080/login;JSESSIONID=f35e2a83-e264-42d6-a980-9ef43a0a4916
2019-01-31 11:36:27 -HTTP METHOD : GET
2019-01-31 11:36:27 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 11:36:27 -参数 : []
2019-01-31 11:36:27 -耗时 : 2
2019-01-31 11:36:27 -返回值 : login
2019-01-31 11:36:28 -请求地址 : http://localhost:8080/login
2019-01-31 11:36:28 -HTTP METHOD : GET
2019-01-31 11:36:28 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 11:36:28 -参数 : []
2019-01-31 11:36:28 -耗时 : 1
2019-01-31 11:36:28 -返回值 : login
2019-01-31 11:36:32 -请求地址 : http://localhost:8080/login
2019-01-31 11:36:32 -HTTP METHOD : POST
2019-01-31 11:36:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-31 11:36:32 -参数 : [admin, 123456]
2019-01-31 11:36:32 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-31 11:36:32 -==> Parameters: 
2019-01-31 11:36:32 -<==      Total: 1
2019-01-31 11:36:32 -耗时 : 39
2019-01-31 11:36:32 -返回值 : {msg=操作成功, code=0}
2019-01-31 11:36:32 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-31 11:36:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 11:36:32 -==> Parameters: 123(String), admin(String), 登录(String), 39(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-31 11:36:32.639(Timestamp)
2019-01-31 11:36:32 -<==    Updates: 1
2019-01-31 11:36:32 -请求地址 : http://localhost:8080/index
2019-01-31 11:36:32 -HTTP METHOD : GET
2019-01-31 11:36:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 11:36:32 -参数 : [{}]
2019-01-31 11:36:32 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 11:36:32 -==> Parameters: 123(String)
2019-01-31 11:36:32 -<==      Total: 6
2019-01-31 11:36:32 -耗时 : 74
2019-01-31 11:36:32 -返回值 : index_v1
2019-01-31 11:36:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 11:36:32 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 74(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 11:36:32.801(Timestamp)
2019-01-31 11:36:32 -<==    Updates: 1
2019-01-31 11:36:35 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 11:36:35 -==> Parameters: 123(String)
2019-01-31 11:36:35 -<==      Total: 14
2019-01-31 11:36:35 -请求地址 : http://localhost:8080/system/staff
2019-01-31 11:36:35 -HTTP METHOD : GET
2019-01-31 11:36:35 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 11:36:35 -参数 : []
2019-01-31 11:36:35 -耗时 : 0
2019-01-31 11:36:35 -返回值 : system/staff/staff
2019-01-31 11:36:35 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 11:36:35 -HTTP METHOD : GET
2019-01-31 11:36:35 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 11:36:35 -参数 : [{page=1, limit=5}]
2019-01-31 11:36:35 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 11:36:35 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 11:36:35 -<==      Total: 4
2019-01-31 11:36:35 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 11:36:35 -==> Parameters: 
2019-01-31 11:36:35 -<==      Total: 1
2019-01-31 11:36:35 -耗时 : 23
2019-01-31 11:36:35 -返回值 : com.bootdo.common.utils.PageUtils@5b2a56c
2019-01-31 11:36:36 -请求地址 : http://localhost:8080/system/staff/add
2019-01-31 11:36:36 -HTTP METHOD : GET
2019-01-31 11:36:36 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-31 11:36:36 -参数 : []
2019-01-31 11:36:36 -耗时 : 1
2019-01-31 11:36:36 -返回值 : system/staff/add
2019-01-31 11:36:42 -请求地址 : http://localhost:8080/common/sysFile/upload/
2019-01-31 11:36:42 -HTTP METHOD : POST
2019-01-31 11:36:42 -CLASS_METHOD : com.bootdo.common.controller.FileController.upload
2019-01-31 11:36:42 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@20d1d836, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@4f0f4ecb]
2019-01-31 11:36:42 -Invalid bound statement (not found): com.bootdo.common.dao.FileDao.save
org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.common.dao.FileDao.save
	at org.apache.ibatis.binding.MapperMethod$SqlCommand.<init>(MapperMethod.java:225)
	at org.apache.ibatis.binding.MapperMethod.<init>(MapperMethod.java:48)
	at org.apache.ibatis.binding.MapperProxy.cachedMapperMethod(MapperProxy.java:65)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:58)
	at com.sun.proxy.$Proxy96.save(Unknown Source)
	at com.bootdo.common.service.impl.FileServiceImpl.save(FileServiceImpl.java:42)
	at com.bootdo.common.controller.FileController.upload(FileController.java:155)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:89)
	at com.bootdo.common.aspect.WebLogAspect.doAround(WebLogAspect.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:52)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.bootdo.common.controller.FileController$$EnhancerBySpringCGLIB$$a1f892e0.upload(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-31 11:36:42 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 11:36:42 -==> Parameters: 123(String), admin(String), error(String), null, http://localhost:8080/common/sysFile/upload/(String), org.apache.ibatis.binding.BindingException: Invalid bound statement (not found): com.bootdo.common.dao.FileDao.save(String), null, 2019-01-31 11:36:42.731(Timestamp)
2019-01-31 11:36:42 -<==    Updates: 1
2019-01-31 11:37:09 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-31 13:44:15 -Starting BootdoApplication on YH-20180312AAAP with PID 7872 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-31 13:44:15 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-31 13:44:15 -The following profiles are active: dev
2019-01-31 13:44:15 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75b25825: startup date [Thu Jan 31 13:44:15 CST 2019]; root of context hierarchy
2019-01-31 13:44:17 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$3586638d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 13:44:17 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$29fa2831] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 13:44:17 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 13:44:17 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 13:44:17 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 13:44:17 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$c498f52f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 13:44:17 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ec742d6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 13:44:17 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$decd5c16] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 13:44:18 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-31 13:44:18 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 13:44:18 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 13:44:18 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 13:44:18 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 13:44:18 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 13:44:18 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-31 13:44:18 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-31 13:44:18 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 13:44:18 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 13:44:18 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 13:44:18 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 13:44:19 -Tomcat initialized with port(s): 8080 (http)
2019-01-31 13:44:19 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-31 13:44:19 -Starting service [Tomcat]
2019-01-31 13:44:19 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-31 13:44:19 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-31 13:44:19 -Initializing Spring embedded WebApplicationContext
2019-01-31 13:44:19 -Root WebApplicationContext: initialization completed in 3491 ms
2019-01-31 13:44:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-31 13:44:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-31 13:44:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-31 13:44:19 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-31 13:44:19 -Filter xssFilter was not registered (disabled)
2019-01-31 13:44:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-31 13:44:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-31 13:44:19 -Servlet statViewServlet mapped to [/druid/*]
2019-01-31 13:44:19 -Servlet dispatcherServlet mapped to [/]
2019-01-31 13:44:20 -{dataSource-1} inited
2019-01-31 13:44:20 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75b25825: startup date [Thu Jan 31 13:44:15 CST 2019]; root of context hierarchy
2019-01-31 13:44:21 -Using default implementation for ThreadExecutor
2019-01-31 13:44:21 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-31 13:44:21 -Quartz Scheduler v.2.2.1 created.
2019-01-31 13:44:21 -RAMJobStore initialized.
2019-01-31 13:44:21 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-31 13:44:21 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-31 13:44:21 -Quartz scheduler version: 2.2.1
2019-01-31 13:44:21 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@3a8b9458
2019-01-31 13:44:21 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-31 13:44:21 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-31 13:44:22 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-01-31 13:44:22 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-01-31 13:44:22 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-01-31 13:44:22 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-01-31 13:44:22 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 13:44:22 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-01-31 13:44:22 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-01-31 13:44:22 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-01-31 13:44:22 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 13:44:22 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-01-31 13:44:22 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 13:44:22 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-31 13:44:22 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-31 13:44:22 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 13:44:22 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-31 13:44:22 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 13:44:22 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-31 13:44:22 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-31 13:44:22 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-31 13:44:22 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-31 13:44:22 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 13:44:22 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-31 13:44:22 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-31 13:44:22 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 13:44:22 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-31 13:44:22 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-31 13:44:22 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-31 13:44:22 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-31 13:44:22 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 13:44:22 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-31 13:44:22 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 13:44:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 13:44:22 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-31 13:44:22 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-31 13:44:22 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-31 13:44:22 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-31 13:44:22 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 13:44:22 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-31 13:44:22 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 13:44:22 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-31 13:44:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-31 13:44:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-31 13:44:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-31 13:44:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-31 13:44:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-31 13:44:22 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-31 13:44:22 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 13:44:22 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-31 13:44:22 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-31 13:44:22 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 13:44:22 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-31 13:44:22 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-31 13:44:22 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-31 13:44:22 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-31 13:44:22 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-31 13:44:22 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-31 13:44:22 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-31 13:44:22 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-31 13:44:22 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-31 13:44:22 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-31 13:44:22 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-31 13:44:22 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-31 13:44:22 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 13:44:22 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-31 13:44:22 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-31 13:44:22 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-31 13:44:22 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-31 13:44:22 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-31 13:44:22 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String)
2019-01-31 13:44:22 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String[])
2019-01-31 13:44:22 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-31 13:44:22 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 13:44:22 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-31 13:44:22 -Mapped "{[/system/staff/edit/{employeeId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 13:44:22 -Mapped "{[/system/staff/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-01-31 13:44:22 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-31 13:44:22 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-31 13:44:22 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-31 13:44:22 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-31 13:44:22 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-31 13:44:22 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 13:44:22 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-31 13:44:22 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 13:44:22 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 13:44:22 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-31 13:44:22 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-31 13:44:22 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-31 13:44:22 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 13:44:22 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 13:44:22 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-31 13:44:22 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-31 13:44:22 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-31 13:44:22 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-31 13:44:22 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-31 13:44:22 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-31 13:44:22 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-31 13:44:22 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-31 13:44:22 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-31 13:44:22 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-31 13:44:23 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-31 13:44:23 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-31 13:44:23 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 13:44:23 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@75b25825: startup date [Thu Jan 31 13:44:15 CST 2019]; root of context hierarchy
2019-01-31 13:44:23 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 13:44:23 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 13:44:23 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 13:44:23 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-31 13:44:23 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-31 13:44:24 -Registering beans for JMX exposure on startup
2019-01-31 13:44:24 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-31 13:44:24 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-31 13:44:24 -Starting beans in phase 2147483647
2019-01-31 13:44:24 -Context refreshed
2019-01-31 13:44:24 -Found 1 custom documentation plugin(s)
2019-01-31 13:44:24 -Scanning for api listing references
2019-01-31 13:44:24 -Generating unique operation named: removeUsingPOST_1
2019-01-31 13:44:24 -Generating unique operation named: addUsingGET_1
2019-01-31 13:44:24 -Generating unique operation named: editUsingGET_1
2019-01-31 13:44:24 -Generating unique operation named: listUsingGET_1
2019-01-31 13:44:24 -Generating unique operation named: removeUsingPOST_2
2019-01-31 13:44:24 -Generating unique operation named: removeUsingPOST_3
2019-01-31 13:44:24 -Generating unique operation named: saveUsingPOST_1
2019-01-31 13:44:25 -Generating unique operation named: updateUsingGET_1
2019-01-31 13:44:25 -Generating unique operation named: updateUsingHEAD_1
2019-01-31 13:44:25 -Generating unique operation named: updateUsingPOST_1
2019-01-31 13:44:25 -Generating unique operation named: updateUsingPUT_1
2019-01-31 13:44:25 -Generating unique operation named: updateUsingPATCH_1
2019-01-31 13:44:25 -Generating unique operation named: updateUsingDELETE_1
2019-01-31 13:44:25 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-31 13:44:25 -Generating unique operation named: updateUsingTRACE_1
2019-01-31 13:44:25 -Generating unique operation named: editUsingGET_2
2019-01-31 13:44:25 -Generating unique operation named: listUsingGET_2
2019-01-31 13:44:25 -Generating unique operation named: updateUsingPOST_2
2019-01-31 13:44:25 -Generating unique operation named: addUsingGET_2
2019-01-31 13:44:25 -Generating unique operation named: editUsingGET_3
2019-01-31 13:44:25 -Generating unique operation named: infoUsingGET_1
2019-01-31 13:44:25 -Generating unique operation named: infoUsingHEAD_1
2019-01-31 13:44:25 -Generating unique operation named: infoUsingPOST_1
2019-01-31 13:44:25 -Generating unique operation named: infoUsingPUT_1
2019-01-31 13:44:25 -Generating unique operation named: infoUsingPATCH_1
2019-01-31 13:44:25 -Generating unique operation named: infoUsingDELETE_1
2019-01-31 13:44:25 -Generating unique operation named: infoUsingOPTIONS_1
2019-01-31 13:44:25 -Generating unique operation named: infoUsingTRACE_1
2019-01-31 13:44:25 -Generating unique operation named: listUsingGET_3
2019-01-31 13:44:25 -Generating unique operation named: removeUsingPOST_4
2019-01-31 13:44:25 -Generating unique operation named: removeUsingPOST_5
2019-01-31 13:44:25 -Generating unique operation named: saveUsingPOST_2
2019-01-31 13:44:25 -Generating unique operation named: updateUsingPOST_3
2019-01-31 13:44:25 -Generating unique operation named: listUsingGET_4
2019-01-31 13:44:25 -Generating unique operation named: removeUsingPOST_6
2019-01-31 13:44:25 -Generating unique operation named: welcomeUsingGET_1
2019-01-31 13:44:25 -Generating unique operation named: addUsingGET_3
2019-01-31 13:44:25 -Generating unique operation named: editUsingGET_4
2019-01-31 13:44:25 -Generating unique operation named: listUsingGET_5
2019-01-31 13:44:25 -Generating unique operation named: removeUsingPOST_7
2019-01-31 13:44:25 -Generating unique operation named: saveUsingPOST_3
2019-01-31 13:44:25 -Generating unique operation named: treeUsingGET_1
2019-01-31 13:44:25 -Generating unique operation named: updateUsingPOST_4
2019-01-31 13:44:25 -Generating unique operation named: addUsingGET_4
2019-01-31 13:44:25 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-31 13:44:25 -Generating unique operation named: editUsingGET_5
2019-01-31 13:44:25 -Generating unique operation named: listUsingGET_6
2019-01-31 13:44:25 -Generating unique operation named: saveUsingPOST_4
2019-01-31 13:44:25 -Generating unique operation named: saveUsingPOST_5
2019-01-31 13:44:25 -Generating unique operation named: updateUsingPOST_5
2019-01-31 13:44:25 -Generating unique operation named: listUsingGET_7
2019-01-31 13:44:25 -Generating unique operation named: listUsingHEAD_1
2019-01-31 13:44:25 -Generating unique operation named: listUsingPOST_1
2019-01-31 13:44:25 -Generating unique operation named: listUsingPUT_1
2019-01-31 13:44:25 -Generating unique operation named: listUsingPATCH_1
2019-01-31 13:44:25 -Generating unique operation named: listUsingDELETE_1
2019-01-31 13:44:25 -Generating unique operation named: listUsingOPTIONS_1
2019-01-31 13:44:25 -Generating unique operation named: listUsingTRACE_1
2019-01-31 13:44:25 -Generating unique operation named: addUsingGET_5
2019-01-31 13:44:25 -Generating unique operation named: editUsingGET_6
2019-01-31 13:44:25 -Generating unique operation named: listUsingGET_8
2019-01-31 13:44:25 -Generating unique operation named: removeUsingPOST_8
2019-01-31 13:44:25 -Generating unique operation named: removeUsingPOST_9
2019-01-31 13:44:25 -Generating unique operation named: saveUsingPOST_6
2019-01-31 13:44:25 -Generating unique operation named: updateUsingGET_2
2019-01-31 13:44:25 -Generating unique operation named: updateUsingHEAD_2
2019-01-31 13:44:25 -Generating unique operation named: updateUsingPOST_6
2019-01-31 13:44:25 -Generating unique operation named: updateUsingPUT_2
2019-01-31 13:44:25 -Generating unique operation named: updateUsingPATCH_2
2019-01-31 13:44:25 -Generating unique operation named: updateUsingDELETE_2
2019-01-31 13:44:25 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-31 13:44:25 -Generating unique operation named: updateUsingTRACE_2
2019-01-31 13:44:25 -Generating unique operation named: uploadUsingPOST_1
2019-01-31 13:44:25 -Generating unique operation named: addUsingGET_6
2019-01-31 13:44:25 -Generating unique operation named: editUsingGET_7
2019-01-31 13:44:25 -Generating unique operation named: listUsingGET_9
2019-01-31 13:44:25 -Generating unique operation named: removeUsingPOST_10
2019-01-31 13:44:25 -Generating unique operation named: removeUsingPOST_11
2019-01-31 13:44:25 -Generating unique operation named: saveUsingPOST_7
2019-01-31 13:44:25 -Generating unique operation named: updateUsingGET_3
2019-01-31 13:44:25 -Generating unique operation named: updateUsingHEAD_3
2019-01-31 13:44:25 -Generating unique operation named: updateUsingPOST_7
2019-01-31 13:44:25 -Generating unique operation named: updateUsingPUT_3
2019-01-31 13:44:25 -Generating unique operation named: updateUsingPATCH_3
2019-01-31 13:44:25 -Generating unique operation named: updateUsingDELETE_3
2019-01-31 13:44:25 -Generating unique operation named: updateUsingOPTIONS_3
2019-01-31 13:44:25 -Generating unique operation named: updateUsingTRACE_3
2019-01-31 13:44:25 -Generating unique operation named: addUsingGET_7
2019-01-31 13:44:25 -Generating unique operation named: editUsingGET_8
2019-01-31 13:44:25 -Generating unique operation named: listUsingGET_10
2019-01-31 13:44:25 -Generating unique operation named: roleUsingGET_1
2019-01-31 13:44:25 -Generating unique operation named: saveUsingPOST_8
2019-01-31 13:44:25 -Starting Quartz Scheduler now
2019-01-31 13:44:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-31 13:44:25 -Starting...
2019-01-31 13:44:25 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-31 13:44:25 -Started.
2019-01-31 13:44:25 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-31 13:44:25 -Using a shared selector for servlet write/read
2019-01-31 13:44:25 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-31 13:44:25 -Started BootdoApplication in 10.204 seconds (JVM running for 10.763)
2019-01-31 13:44:25 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-31 13:44:25 -==> Parameters: 
2019-01-31 13:44:25 -<==      Total: 1
2019-01-31 13:44:38 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-31 13:44:38 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-31 13:44:38 -FrameworkServlet 'dispatcherServlet': initialization completed in 29 ms
2019-01-31 13:44:38 -Enabling session validation scheduler...
2019-01-31 13:44:39 -请求地址 : http://localhost:8080/login;JSESSIONID=409ae031-a8f4-4769-ac2e-cf00422961a2
2019-01-31 13:44:39 -HTTP METHOD : GET
2019-01-31 13:44:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 13:44:39 -参数 : []
2019-01-31 13:44:39 -耗时 : 2
2019-01-31 13:44:39 -返回值 : login
2019-01-31 13:44:39 -请求地址 : http://localhost:8080/login
2019-01-31 13:44:39 -HTTP METHOD : GET
2019-01-31 13:44:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 13:44:39 -参数 : []
2019-01-31 13:44:39 -耗时 : 0
2019-01-31 13:44:39 -返回值 : login
2019-01-31 13:44:42 -请求地址 : http://localhost:8080/login
2019-01-31 13:44:42 -HTTP METHOD : POST
2019-01-31 13:44:42 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-31 13:44:42 -参数 : [admin, 123456]
2019-01-31 13:44:42 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-31 13:44:42 -==> Parameters: 
2019-01-31 13:44:42 -<==      Total: 1
2019-01-31 13:44:42 -耗时 : 41
2019-01-31 13:44:42 -返回值 : {msg=操作成功, code=0}
2019-01-31 13:44:42 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-31 13:44:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 13:44:43 -==> Parameters: 123(String), admin(String), 登录(String), 41(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-31 13:44:42.998(Timestamp)
2019-01-31 13:44:43 -请求地址 : http://localhost:8080/index
2019-01-31 13:44:43 -HTTP METHOD : GET
2019-01-31 13:44:43 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 13:44:43 -参数 : [{}]
2019-01-31 13:44:43 -<==    Updates: 1
2019-01-31 13:44:43 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 13:44:43 -==> Parameters: 123(String)
2019-01-31 13:44:43 -<==      Total: 6
2019-01-31 13:44:43 -耗时 : 62
2019-01-31 13:44:43 -返回值 : index_v1
2019-01-31 13:44:43 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 13:44:43 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 62(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 13:44:43.137(Timestamp)
2019-01-31 13:44:43 -<==    Updates: 1
2019-01-31 13:44:56 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 13:44:56 -==> Parameters: 123(String)
2019-01-31 13:44:56 -<==      Total: 14
2019-01-31 13:44:56 -请求地址 : http://localhost:8080/system/staff
2019-01-31 13:44:56 -HTTP METHOD : GET
2019-01-31 13:44:56 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 13:44:56 -参数 : []
2019-01-31 13:44:56 -耗时 : 1
2019-01-31 13:44:56 -返回值 : system/staff/staff
2019-01-31 13:44:57 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 13:44:57 -HTTP METHOD : GET
2019-01-31 13:44:57 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 13:44:57 -参数 : [{page=1, limit=5}]
2019-01-31 13:44:57 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 13:44:57 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 13:44:57 -<==      Total: 4
2019-01-31 13:44:57 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 13:44:57 -==> Parameters: 
2019-01-31 13:44:57 -<==      Total: 1
2019-01-31 13:44:57 -耗时 : 29
2019-01-31 13:44:57 -返回值 : com.bootdo.common.utils.PageUtils@79052e83
2019-01-31 13:44:58 -请求地址 : http://localhost:8080/system/staff/add
2019-01-31 13:44:58 -HTTP METHOD : GET
2019-01-31 13:44:58 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-31 13:44:58 -参数 : []
2019-01-31 13:44:58 -耗时 : 0
2019-01-31 13:44:58 -返回值 : system/staff/add
2019-01-31 13:44:58 -[THYMELEAF][http-nio-8080-exec-7] Exception processing template "system/staff/add": An error happened during template parsing (template: "class path resource [templates/system/staff/add.html]" - line 14, col 55)
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/staff/add.html]" - line 14, col 55)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:239)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: (Line = 14, Column = 55) Malformed markup: Attribute "class" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseStandaloneElement(ParsingElementMarkupUtil.java:90)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:706)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
2019-01-31 13:44:58 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/staff/add.html]" - line 14, col 55)] with root cause
org.attoparser.ParseException: (Line = 14, Column = 55) Malformed markup: Attribute "class" appears more than once in element
	at org.attoparser.MarkupEventProcessorHandler.handleAttribute(MarkupEventProcessorHandler.java:549)
	at org.attoparser.ParsingAttributeSequenceUtil.parseAttributeSequence(ParsingAttributeSequenceUtil.java:300)
	at org.attoparser.ParsingElementMarkupUtil.parseStandaloneElement(ParsingElementMarkupUtil.java:90)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:706)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-31 13:45:23 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-31 13:46:00 -请求地址 : http://localhost:8080/index
2019-01-31 13:46:00 -HTTP METHOD : GET
2019-01-31 13:46:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 13:46:00 -参数 : [{}]
2019-01-31 13:46:00 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 13:46:00 -==> Parameters: 123(String)
2019-01-31 13:46:00 -<==      Total: 6
2019-01-31 13:46:00 -耗时 : 22
2019-01-31 13:46:00 -返回值 : index_v1
2019-01-31 13:46:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 13:46:00 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 13:46:00.153(Timestamp)
2019-01-31 13:46:00 -<==    Updates: 1
2019-01-31 13:46:03 -请求地址 : http://localhost:8080/system/staff
2019-01-31 13:46:03 -HTTP METHOD : GET
2019-01-31 13:46:03 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 13:46:03 -参数 : []
2019-01-31 13:46:03 -耗时 : 1
2019-01-31 13:46:03 -返回值 : system/staff/staff
2019-01-31 13:46:03 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 13:46:03 -HTTP METHOD : GET
2019-01-31 13:46:03 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 13:46:03 -参数 : [{page=1, limit=5}]
2019-01-31 13:46:03 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 13:46:03 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 13:46:03 -<==      Total: 4
2019-01-31 13:46:03 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 13:46:03 -==> Parameters: 
2019-01-31 13:46:03 -<==      Total: 1
2019-01-31 13:46:03 -耗时 : 12
2019-01-31 13:46:03 -返回值 : com.bootdo.common.utils.PageUtils@373fc791
2019-01-31 13:46:04 -请求地址 : http://localhost:8080/system/staff/add
2019-01-31 13:46:04 -HTTP METHOD : GET
2019-01-31 13:46:04 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-31 13:46:04 -参数 : []
2019-01-31 13:46:04 -耗时 : 1
2019-01-31 13:46:04 -返回值 : system/staff/add
2019-01-31 13:46:14 -请求地址 : http://localhost:8080/system/staff/upload/
2019-01-31 13:46:14 -HTTP METHOD : POST
2019-01-31 13:46:14 -CLASS_METHOD : com.bootdo.system.controller.StaffController.upload
2019-01-31 13:46:14 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@30bebbf1, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@423a79f7]
2019-01-31 13:46:14 -耗时 : 3
2019-01-31 13:46:14 -返回值 : {msg=/files/dcc5154c-8fe7-4c9b-91ef-23b279499a59.png, code=0}
2019-01-31 13:47:21 -请求地址 : http://localhost:8080/index
2019-01-31 13:47:21 -HTTP METHOD : GET
2019-01-31 13:47:21 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 13:47:21 -参数 : [{}]
2019-01-31 13:47:21 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 13:47:21 -==> Parameters: 123(String)
2019-01-31 13:47:21 -<==      Total: 6
2019-01-31 13:47:21 -耗时 : 31
2019-01-31 13:47:21 -返回值 : index_v1
2019-01-31 13:47:21 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 13:47:21 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 13:47:21.451(Timestamp)
2019-01-31 13:47:21 -<==    Updates: 1
2019-01-31 13:47:24 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 13:47:24 -==> Parameters: 123(String)
2019-01-31 13:47:24 -<==      Total: 14
2019-01-31 13:47:24 -请求地址 : http://localhost:8080/system/staff
2019-01-31 13:47:24 -HTTP METHOD : GET
2019-01-31 13:47:24 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 13:47:24 -参数 : []
2019-01-31 13:47:24 -耗时 : 0
2019-01-31 13:47:24 -返回值 : system/staff/staff
2019-01-31 13:47:24 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 13:47:24 -HTTP METHOD : GET
2019-01-31 13:47:24 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 13:47:24 -参数 : [{page=1, limit=5}]
2019-01-31 13:47:24 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 13:47:24 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 13:47:24 -<==      Total: 4
2019-01-31 13:47:24 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 13:47:24 -==> Parameters: 
2019-01-31 13:47:24 -<==      Total: 1
2019-01-31 13:47:24 -耗时 : 7
2019-01-31 13:47:24 -返回值 : com.bootdo.common.utils.PageUtils@3d7a215b
2019-01-31 13:47:27 -请求地址 : http://localhost:8080/system/staff/add
2019-01-31 13:47:27 -HTTP METHOD : GET
2019-01-31 13:47:27 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-31 13:47:27 -参数 : []
2019-01-31 13:47:27 -耗时 : 1
2019-01-31 13:47:27 -返回值 : system/staff/add
2019-01-31 13:47:31 -请求地址 : http://localhost:8080/system/staff/upload/
2019-01-31 13:47:31 -HTTP METHOD : POST
2019-01-31 13:47:31 -CLASS_METHOD : com.bootdo.system.controller.StaffController.upload
2019-01-31 13:47:31 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7426105f, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@4e4e1c05]
2019-01-31 13:47:31 -耗时 : 2
2019-01-31 13:47:31 -返回值 : {msg=/files/5299feb6-b6f9-40f9-817c-9620b1175bf7.png, code=0}
2019-01-31 13:47:41 -请求地址 : http://localhost:8080/system/staff/save
2019-01-31 13:47:41 -HTTP METHOD : POST
2019-01-31 13:47:41 -CLASS_METHOD : com.bootdo.system.controller.StaffController.save
2019-01-31 13:47:41 -参数 : [com.bootdo.system.domain.StaffDO@35e331bd]
2019-01-31 13:47:41 -==>  Preparing: insert into sys_staff ( `employee_id`, `dept_id`, `employeename`, `estatus`, `sex`, `birthday`, `email`, `qq`, `wx`, `photo`, `telphone`, `professionaltitle`, `educational`, `duty`, `edit_user`, `edit_time`, `deleteflag`, `ext1`, `ext2`, `ext3` ) values ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 13:47:41 -==> Parameters: 1b79f8ad-2871-49ad-89b6-944e9dd4e46b(String), (String), gtdd(String), 0(Integer), 1(Integer), null, (String), (String), (String), /files/5299feb6-b6f9-40f9-817c-9620b1175bf7.png(String), (String), (String), (String), (String), null, null, 1(Integer), null, null, null
2019-01-31 13:47:41 -<==    Updates: 1
2019-01-31 13:47:41 -耗时 : 54
2019-01-31 13:47:41 -返回值 : {msg=操作成功, code=0}
2019-01-31 13:47:41 -请求地址 : http://localhost:8080/system/staff
2019-01-31 13:47:41 -HTTP METHOD : GET
2019-01-31 13:47:41 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 13:47:41 -参数 : []
2019-01-31 13:47:41 -耗时 : 0
2019-01-31 13:47:41 -返回值 : system/staff/staff
2019-01-31 13:47:41 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 13:47:41 -HTTP METHOD : GET
2019-01-31 13:47:41 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 13:47:41 -参数 : [{page=1, limit=5}]
2019-01-31 13:47:41 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 13:47:41 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 13:47:41 -<==      Total: 5
2019-01-31 13:47:41 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 13:47:41 -==> Parameters: 
2019-01-31 13:47:41 -<==      Total: 1
2019-01-31 13:47:41 -耗时 : 24
2019-01-31 13:47:41 -返回值 : com.bootdo.common.utils.PageUtils@30059e86
2019-01-31 13:49:53 -请求地址 : http://localhost:8080/login;JSESSIONID=782d1ca2-e296-4430-9d70-ad6ef665779e
2019-01-31 13:49:53 -HTTP METHOD : GET
2019-01-31 13:49:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 13:49:53 -参数 : []
2019-01-31 13:49:53 -耗时 : 1
2019-01-31 13:49:53 -返回值 : login
2019-01-31 13:49:54 -请求地址 : http://localhost:8080/login
2019-01-31 13:49:54 -HTTP METHOD : GET
2019-01-31 13:49:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 13:49:54 -参数 : []
2019-01-31 13:49:54 -耗时 : 1
2019-01-31 13:49:54 -返回值 : login
2019-01-31 13:49:58 -请求地址 : http://localhost:8080/login
2019-01-31 13:49:58 -HTTP METHOD : POST
2019-01-31 13:49:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-31 13:49:58 -参数 : [admin, 123456]
2019-01-31 13:49:58 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-31 13:49:58 -==> Parameters: 
2019-01-31 13:49:58 -<==      Total: 1
2019-01-31 13:49:58 -耗时 : 15
2019-01-31 13:49:58 -返回值 : {msg=操作成功, code=0}
2019-01-31 13:49:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 13:49:58 -==> Parameters: 123(String), admin(String), 登录(String), 16(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-31 13:49:58.173(Timestamp)
2019-01-31 13:49:58 -请求地址 : http://localhost:8080/index
2019-01-31 13:49:58 -HTTP METHOD : GET
2019-01-31 13:49:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 13:49:58 -参数 : [{}]
2019-01-31 13:49:58 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 13:49:58 -==> Parameters: 123(String)
2019-01-31 13:49:58 -<==      Total: 6
2019-01-31 13:49:58 -耗时 : 33
2019-01-31 13:49:58 -返回值 : index_v1
2019-01-31 13:49:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 13:49:58 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 33(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 13:49:58.236(Timestamp)
2019-01-31 13:49:58 -<==    Updates: 1
2019-01-31 13:49:58 -<==    Updates: 1
2019-01-31 13:50:01 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 13:50:01 -==> Parameters: 123(String)
2019-01-31 13:50:01 -<==      Total: 14
2019-01-31 13:50:01 -请求地址 : http://localhost:8080/system/staff
2019-01-31 13:50:01 -HTTP METHOD : GET
2019-01-31 13:50:01 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 13:50:01 -参数 : []
2019-01-31 13:50:01 -耗时 : 0
2019-01-31 13:50:01 -返回值 : system/staff/staff
2019-01-31 13:50:01 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 13:50:01 -HTTP METHOD : GET
2019-01-31 13:50:01 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 13:50:01 -参数 : [{page=1, limit=5}]
2019-01-31 13:50:01 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 13:50:01 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 13:50:01 -<==      Total: 5
2019-01-31 13:50:01 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 13:50:01 -==> Parameters: 
2019-01-31 13:50:01 -<==      Total: 1
2019-01-31 13:50:01 -耗时 : 8
2019-01-31 13:50:01 -返回值 : com.bootdo.common.utils.PageUtils@7a1a7517
2019-01-31 13:50:07 -请求地址 : http://localhost:8080/system/staff/edit/1b79f8ad-2871-49ad-89b6-944e9dd4e46b
2019-01-31 13:50:07 -HTTP METHOD : GET
2019-01-31 13:50:07 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 13:50:07 -参数 : [1b79f8ad-2871-49ad-89b6-944e9dd4e46b, {}]
2019-01-31 13:50:07 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 13:50:07 -==> Parameters: 1b79f8ad-2871-49ad-89b6-944e9dd4e46b(String)
2019-01-31 13:50:07 -<==      Total: 1
2019-01-31 13:50:07 -耗时 : 21
2019-01-31 13:50:07 -返回值 : system/staff/edit
2019-01-31 13:50:41 -请求地址 : http://localhost:8080/index
2019-01-31 13:50:41 -HTTP METHOD : GET
2019-01-31 13:50:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 13:50:41 -参数 : [{}]
2019-01-31 13:50:41 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 13:50:41 -==> Parameters: 123(String)
2019-01-31 13:50:41 -<==      Total: 6
2019-01-31 13:50:41 -耗时 : 27
2019-01-31 13:50:41 -返回值 : index_v1
2019-01-31 13:50:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 13:50:41 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 13:50:41.492(Timestamp)
2019-01-31 13:50:41 -<==    Updates: 1
2019-01-31 13:50:44 -请求地址 : http://localhost:8080/system/staff
2019-01-31 13:50:44 -HTTP METHOD : GET
2019-01-31 13:50:44 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 13:50:44 -参数 : []
2019-01-31 13:50:44 -耗时 : 0
2019-01-31 13:50:44 -返回值 : system/staff/staff
2019-01-31 13:50:44 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 13:50:44 -HTTP METHOD : GET
2019-01-31 13:50:44 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 13:50:44 -参数 : [{page=1, limit=5}]
2019-01-31 13:50:44 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 13:50:44 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 13:50:44 -<==      Total: 5
2019-01-31 13:50:44 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 13:50:44 -==> Parameters: 
2019-01-31 13:50:44 -<==      Total: 1
2019-01-31 13:50:44 -耗时 : 8
2019-01-31 13:50:44 -返回值 : com.bootdo.common.utils.PageUtils@5f5aef3c
2019-01-31 13:50:47 -请求地址 : http://localhost:8080/system/staff/edit/1b79f8ad-2871-49ad-89b6-944e9dd4e46b
2019-01-31 13:50:47 -HTTP METHOD : GET
2019-01-31 13:50:47 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 13:50:47 -参数 : [1b79f8ad-2871-49ad-89b6-944e9dd4e46b, {}]
2019-01-31 13:50:47 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 13:50:47 -==> Parameters: 1b79f8ad-2871-49ad-89b6-944e9dd4e46b(String)
2019-01-31 13:50:47 -<==      Total: 1
2019-01-31 13:50:47 -耗时 : 4
2019-01-31 13:50:47 -返回值 : system/staff/edit
2019-01-31 13:50:52 -请求地址 : http://localhost:8080/system/staff/upload/
2019-01-31 13:50:52 -HTTP METHOD : POST
2019-01-31 13:50:52 -CLASS_METHOD : com.bootdo.system.controller.StaffController.upload
2019-01-31 13:50:52 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@7cd6d3de, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@63e1e4b2]
2019-01-31 13:50:52 -耗时 : 1
2019-01-31 13:50:52 -返回值 : {msg=/files/d321ab5f-4f69-479a-b015-4b2724fbf174.jpg, code=0}
2019-01-31 13:51:44 -请求地址 : http://localhost:8080/index
2019-01-31 13:51:44 -HTTP METHOD : GET
2019-01-31 13:51:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 13:51:44 -参数 : [{}]
2019-01-31 13:51:44 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 13:51:44 -==> Parameters: 123(String)
2019-01-31 13:51:44 -<==      Total: 6
2019-01-31 13:51:44 -耗时 : 23
2019-01-31 13:51:44 -返回值 : index_v1
2019-01-31 13:51:44 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 13:51:44 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 13:51:44.418(Timestamp)
2019-01-31 13:51:44 -<==    Updates: 1
2019-01-31 13:51:47 -请求地址 : http://localhost:8080/system/staff
2019-01-31 13:51:47 -HTTP METHOD : GET
2019-01-31 13:51:47 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 13:51:47 -参数 : []
2019-01-31 13:51:47 -耗时 : 0
2019-01-31 13:51:47 -返回值 : system/staff/staff
2019-01-31 13:51:47 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 13:51:47 -HTTP METHOD : GET
2019-01-31 13:51:47 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 13:51:47 -参数 : [{page=1, limit=5}]
2019-01-31 13:51:47 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 13:51:47 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 13:51:47 -<==      Total: 5
2019-01-31 13:51:47 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 13:51:47 -==> Parameters: 
2019-01-31 13:51:47 -<==      Total: 1
2019-01-31 13:51:47 -耗时 : 6
2019-01-31 13:51:47 -返回值 : com.bootdo.common.utils.PageUtils@4448fd0d
2019-01-31 13:51:48 -请求地址 : http://localhost:8080/system/staff/add
2019-01-31 13:51:48 -HTTP METHOD : GET
2019-01-31 13:51:48 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-31 13:51:48 -参数 : []
2019-01-31 13:51:48 -耗时 : 0
2019-01-31 13:51:48 -返回值 : system/staff/add
2019-01-31 13:52:30 -请求地址 : http://localhost:8080/index
2019-01-31 13:52:30 -HTTP METHOD : GET
2019-01-31 13:52:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 13:52:30 -参数 : [{}]
2019-01-31 13:52:30 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 13:52:30 -==> Parameters: 123(String)
2019-01-31 13:52:30 -<==      Total: 6
2019-01-31 13:52:30 -耗时 : 29
2019-01-31 13:52:30 -返回值 : index_v1
2019-01-31 13:52:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 13:52:30 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 13:52:30.663(Timestamp)
2019-01-31 13:52:30 -<==    Updates: 1
2019-01-31 13:52:33 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 13:52:33 -==> Parameters: 123(String)
2019-01-31 13:52:33 -<==      Total: 14
2019-01-31 13:52:33 -请求地址 : http://localhost:8080/system/staff
2019-01-31 13:52:33 -HTTP METHOD : GET
2019-01-31 13:52:33 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 13:52:33 -参数 : []
2019-01-31 13:52:33 -耗时 : 1
2019-01-31 13:52:33 -返回值 : system/staff/staff
2019-01-31 13:52:33 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 13:52:33 -HTTP METHOD : GET
2019-01-31 13:52:33 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 13:52:33 -参数 : [{page=1, limit=5}]
2019-01-31 13:52:33 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 13:52:33 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 13:52:33 -<==      Total: 5
2019-01-31 13:52:33 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 13:52:33 -==> Parameters: 
2019-01-31 13:52:33 -<==      Total: 1
2019-01-31 13:52:33 -耗时 : 6
2019-01-31 13:52:33 -返回值 : com.bootdo.common.utils.PageUtils@311e6111
2019-01-31 13:52:34 -请求地址 : http://localhost:8080/system/staff/add
2019-01-31 13:52:34 -HTTP METHOD : GET
2019-01-31 13:52:34 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-31 13:52:34 -参数 : []
2019-01-31 13:52:34 -耗时 : 1
2019-01-31 13:52:34 -返回值 : system/staff/add
2019-01-31 13:53:09 -请求地址 : http://localhost:8080/index
2019-01-31 13:53:09 -HTTP METHOD : GET
2019-01-31 13:53:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 13:53:09 -参数 : [{}]
2019-01-31 13:53:09 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 13:53:09 -==> Parameters: 123(String)
2019-01-31 13:53:09 -<==      Total: 6
2019-01-31 13:53:09 -耗时 : 23
2019-01-31 13:53:09 -返回值 : index_v1
2019-01-31 13:53:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 13:53:09 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 13:53:09.504(Timestamp)
2019-01-31 13:53:09 -<==    Updates: 1
2019-01-31 13:53:11 -请求地址 : http://localhost:8080/system/staff
2019-01-31 13:53:11 -HTTP METHOD : GET
2019-01-31 13:53:11 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 13:53:11 -参数 : []
2019-01-31 13:53:11 -耗时 : 0
2019-01-31 13:53:11 -返回值 : system/staff/staff
2019-01-31 13:53:12 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 13:53:12 -HTTP METHOD : GET
2019-01-31 13:53:12 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 13:53:12 -参数 : [{page=1, limit=5}]
2019-01-31 13:53:12 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 13:53:12 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 13:53:12 -<==      Total: 5
2019-01-31 13:53:12 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 13:53:12 -==> Parameters: 
2019-01-31 13:53:12 -<==      Total: 1
2019-01-31 13:53:12 -耗时 : 8
2019-01-31 13:53:12 -返回值 : com.bootdo.common.utils.PageUtils@42bb4b7d
2019-01-31 13:53:13 -请求地址 : http://localhost:8080/system/staff/edit/1b79f8ad-2871-49ad-89b6-944e9dd4e46b
2019-01-31 13:53:13 -HTTP METHOD : GET
2019-01-31 13:53:13 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 13:53:13 -参数 : [1b79f8ad-2871-49ad-89b6-944e9dd4e46b, {}]
2019-01-31 13:53:13 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 13:53:13 -==> Parameters: 1b79f8ad-2871-49ad-89b6-944e9dd4e46b(String)
2019-01-31 13:53:13 -<==      Total: 1
2019-01-31 13:53:13 -耗时 : 5
2019-01-31 13:53:13 -返回值 : system/staff/edit
2019-01-31 13:53:39 -请求地址 : http://localhost:8080/system/staff/upload/
2019-01-31 13:53:39 -HTTP METHOD : POST
2019-01-31 13:53:39 -CLASS_METHOD : com.bootdo.system.controller.StaffController.upload
2019-01-31 13:53:39 -参数 : [org.springframework.web.multipart.support.StandardMultipartHttpServletRequest$StandardMultipartFile@24153779, org.springframework.web.multipart.support.StandardMultipartHttpServletRequest@59ae0a8b]
2019-01-31 13:53:39 -耗时 : 2
2019-01-31 13:53:39 -返回值 : {msg=/files/97323b81-3585-41c8-a31c-c85c1b61c176.jpg, code=0}
2019-01-31 13:58:03 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 13:58:03 -==> Parameters: 123(String)
2019-01-31 13:58:03 -<==      Total: 14
2019-01-31 13:58:03 -请求地址 : http://localhost:8080/system/staff/edit/2dd85565-020d-4b51-9506-866fd9525d36
2019-01-31 13:58:03 -HTTP METHOD : GET
2019-01-31 13:58:03 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 13:58:03 -参数 : [2dd85565-020d-4b51-9506-866fd9525d36, {}]
2019-01-31 13:58:03 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 13:58:03 -==> Parameters: 2dd85565-020d-4b51-9506-866fd9525d36(String)
2019-01-31 13:58:03 -<==      Total: 1
2019-01-31 13:58:03 -耗时 : 4
2019-01-31 13:58:03 -返回值 : system/staff/edit
2019-01-31 13:59:35 -请求地址 : http://localhost:8080/index
2019-01-31 13:59:35 -HTTP METHOD : GET
2019-01-31 13:59:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 13:59:35 -参数 : [{}]
2019-01-31 13:59:35 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 13:59:35 -==> Parameters: 123(String)
2019-01-31 13:59:35 -<==      Total: 6
2019-01-31 13:59:35 -耗时 : 20
2019-01-31 13:59:35 -返回值 : index_v1
2019-01-31 13:59:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 13:59:35 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 20(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 13:59:35.351(Timestamp)
2019-01-31 13:59:35 -<==    Updates: 1
2019-01-31 13:59:37 -请求地址 : http://localhost:8080/system/staff
2019-01-31 13:59:37 -HTTP METHOD : GET
2019-01-31 13:59:37 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 13:59:37 -参数 : []
2019-01-31 13:59:37 -耗时 : 1
2019-01-31 13:59:37 -返回值 : system/staff/staff
2019-01-31 13:59:38 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 13:59:38 -HTTP METHOD : GET
2019-01-31 13:59:38 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 13:59:38 -参数 : [{page=1, limit=5}]
2019-01-31 13:59:38 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 13:59:38 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 13:59:38 -<==      Total: 5
2019-01-31 13:59:38 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 13:59:38 -==> Parameters: 
2019-01-31 13:59:38 -<==      Total: 1
2019-01-31 13:59:38 -耗时 : 7
2019-01-31 13:59:38 -返回值 : com.bootdo.common.utils.PageUtils@463ca14e
2019-01-31 13:59:41 -请求地址 : http://localhost:8080/system/staff/edit/20621295-df2e-45bc-8b4a-b4f19b2c5ee1
2019-01-31 13:59:41 -HTTP METHOD : GET
2019-01-31 13:59:41 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 13:59:41 -参数 : [20621295-df2e-45bc-8b4a-b4f19b2c5ee1, {}]
2019-01-31 13:59:41 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 13:59:41 -==> Parameters: 20621295-df2e-45bc-8b4a-b4f19b2c5ee1(String)
2019-01-31 13:59:41 -<==      Total: 1
2019-01-31 13:59:41 -耗时 : 6
2019-01-31 13:59:41 -返回值 : system/staff/edit
2019-01-31 14:00:11 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 14:00:11 -==> Parameters: 123(String)
2019-01-31 14:00:11 -<==      Total: 14
2019-01-31 14:00:11 -请求地址 : http://localhost:8080/system/staff/edit/b41c3f2b-48cb-458f-a1ac-0e01c8938273
2019-01-31 14:00:11 -HTTP METHOD : GET
2019-01-31 14:00:11 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 14:00:11 -参数 : [b41c3f2b-48cb-458f-a1ac-0e01c8938273, {}]
2019-01-31 14:00:15 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 14:00:15 -==> Parameters: b41c3f2b-48cb-458f-a1ac-0e01c8938273(String)
2019-01-31 14:00:15 -<==      Total: 1
2019-01-31 14:00:52 -耗时 : 41099
2019-01-31 14:00:52 -返回值 : system/staff/edit
2019-01-31 14:03:25 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 14:03:25 -==> Parameters: 123(String)
2019-01-31 14:03:25 -<==      Total: 14
2019-01-31 14:03:25 -请求地址 : http://localhost:8080/system/staff/add
2019-01-31 14:03:25 -HTTP METHOD : GET
2019-01-31 14:03:25 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-31 14:03:25 -参数 : []
2019-01-31 14:03:25 -耗时 : 0
2019-01-31 14:03:25 -返回值 : system/staff/add
2019-01-31 14:04:10 -请求地址 : http://localhost:8080/index
2019-01-31 14:04:10 -HTTP METHOD : GET
2019-01-31 14:04:10 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 14:04:10 -参数 : [{}]
2019-01-31 14:04:10 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 14:04:10 -==> Parameters: 123(String)
2019-01-31 14:04:10 -<==      Total: 6
2019-01-31 14:04:10 -耗时 : 26
2019-01-31 14:04:10 -返回值 : index_v1
2019-01-31 14:04:10 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 14:04:10 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 14:04:10.529(Timestamp)
2019-01-31 14:04:10 -<==    Updates: 1
2019-01-31 14:04:13 -请求地址 : http://localhost:8080/system/staff
2019-01-31 14:04:13 -HTTP METHOD : GET
2019-01-31 14:04:13 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 14:04:13 -参数 : []
2019-01-31 14:04:13 -耗时 : 1
2019-01-31 14:04:13 -返回值 : system/staff/staff
2019-01-31 14:04:13 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 14:04:13 -HTTP METHOD : GET
2019-01-31 14:04:13 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 14:04:13 -参数 : [{page=1, limit=5}]
2019-01-31 14:04:13 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 14:04:13 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 14:04:13 -<==      Total: 5
2019-01-31 14:04:13 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 14:04:13 -==> Parameters: 
2019-01-31 14:04:13 -<==      Total: 1
2019-01-31 14:04:13 -耗时 : 11
2019-01-31 14:04:13 -返回值 : com.bootdo.common.utils.PageUtils@1aac747a
2019-01-31 14:04:14 -请求地址 : http://localhost:8080/system/staff/edit/fffa8382-7dbf-4d6e-a4fb-7ae1d282d517
2019-01-31 14:04:14 -HTTP METHOD : GET
2019-01-31 14:04:14 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 14:04:14 -参数 : [fffa8382-7dbf-4d6e-a4fb-7ae1d282d517, {}]
2019-01-31 14:04:14 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 14:04:14 -==> Parameters: fffa8382-7dbf-4d6e-a4fb-7ae1d282d517(String)
2019-01-31 14:04:14 -<==      Total: 1
2019-01-31 14:04:14 -耗时 : 7
2019-01-31 14:04:14 -返回值 : system/staff/edit
2019-01-31 14:14:40 -请求地址 : http://localhost:8080/index
2019-01-31 14:14:40 -HTTP METHOD : GET
2019-01-31 14:14:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 14:14:40 -参数 : [{}]
2019-01-31 14:14:40 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 14:14:40 -==> Parameters: 123(String)
2019-01-31 14:14:40 -<==      Total: 6
2019-01-31 14:14:40 -耗时 : 28
2019-01-31 14:14:40 -返回值 : index_v1
2019-01-31 14:14:40 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 14:14:40 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 14:14:40.706(Timestamp)
2019-01-31 14:14:40 -<==    Updates: 1
2019-01-31 14:14:43 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 14:14:43 -==> Parameters: 123(String)
2019-01-31 14:14:43 -<==      Total: 14
2019-01-31 14:14:43 -请求地址 : http://localhost:8080/system/staff
2019-01-31 14:14:43 -HTTP METHOD : GET
2019-01-31 14:14:43 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 14:14:43 -参数 : []
2019-01-31 14:14:43 -耗时 : 0
2019-01-31 14:14:43 -返回值 : system/staff/staff
2019-01-31 14:14:43 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 14:14:43 -HTTP METHOD : GET
2019-01-31 14:14:43 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 14:14:43 -参数 : [{page=1, limit=5}]
2019-01-31 14:14:43 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 14:14:43 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 14:14:43 -<==      Total: 5
2019-01-31 14:14:43 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 14:14:43 -==> Parameters: 
2019-01-31 14:14:43 -<==      Total: 1
2019-01-31 14:14:43 -耗时 : 8
2019-01-31 14:14:43 -返回值 : com.bootdo.common.utils.PageUtils@5c1ccfbf
2019-01-31 14:14:45 -请求地址 : http://localhost:8080/system/staff/edit/fffa8382-7dbf-4d6e-a4fb-7ae1d282d517
2019-01-31 14:14:45 -HTTP METHOD : GET
2019-01-31 14:14:45 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 14:14:45 -参数 : [fffa8382-7dbf-4d6e-a4fb-7ae1d282d517, {}]
2019-01-31 14:14:45 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 14:14:45 -==> Parameters: fffa8382-7dbf-4d6e-a4fb-7ae1d282d517(String)
2019-01-31 14:14:45 -<==      Total: 1
2019-01-31 14:14:45 -耗时 : 7
2019-01-31 14:14:45 -返回值 : system/staff/edit
2019-01-31 14:15:23 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-01-31 14:15:58 -请求地址 : http://localhost:8080/index
2019-01-31 14:15:58 -HTTP METHOD : GET
2019-01-31 14:15:58 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 14:15:58 -参数 : [{}]
2019-01-31 14:15:58 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 14:15:58 -==> Parameters: 123(String)
2019-01-31 14:15:58 -<==      Total: 6
2019-01-31 14:15:58 -耗时 : 40
2019-01-31 14:15:58 -返回值 : index_v1
2019-01-31 14:15:58 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 14:15:58 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 40(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 14:15:58.591(Timestamp)
2019-01-31 14:15:58 -<==    Updates: 1
2019-01-31 14:16:00 -请求地址 : http://localhost:8080/system/staff
2019-01-31 14:16:00 -HTTP METHOD : GET
2019-01-31 14:16:00 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 14:16:00 -参数 : []
2019-01-31 14:16:00 -耗时 : 1
2019-01-31 14:16:00 -返回值 : system/staff/staff
2019-01-31 14:16:01 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 14:16:01 -HTTP METHOD : GET
2019-01-31 14:16:01 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 14:16:01 -参数 : [{page=1, limit=5}]
2019-01-31 14:16:01 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 14:16:01 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 14:16:01 -<==      Total: 5
2019-01-31 14:16:01 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 14:16:01 -==> Parameters: 
2019-01-31 14:16:01 -<==      Total: 1
2019-01-31 14:16:01 -耗时 : 6
2019-01-31 14:16:01 -返回值 : com.bootdo.common.utils.PageUtils@51177e5f
2019-01-31 14:16:02 -请求地址 : http://localhost:8080/system/staff/edit/fffa8382-7dbf-4d6e-a4fb-7ae1d282d517
2019-01-31 14:16:02 -HTTP METHOD : GET
2019-01-31 14:16:02 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 14:16:02 -参数 : [fffa8382-7dbf-4d6e-a4fb-7ae1d282d517, {}]
2019-01-31 14:16:02 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 14:16:02 -==> Parameters: fffa8382-7dbf-4d6e-a4fb-7ae1d282d517(String)
2019-01-31 14:16:02 -<==      Total: 1
2019-01-31 14:16:02 -耗时 : 4
2019-01-31 14:16:02 -返回值 : system/staff/edit
2019-01-31 14:16:31 -请求地址 : http://localhost:8080/index
2019-01-31 14:16:31 -HTTP METHOD : GET
2019-01-31 14:16:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 14:16:31 -参数 : [{}]
2019-01-31 14:16:31 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 14:16:31 -==> Parameters: 123(String)
2019-01-31 14:16:31 -<==      Total: 6
2019-01-31 14:16:31 -耗时 : 23
2019-01-31 14:16:31 -返回值 : index_v1
2019-01-31 14:16:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 14:16:31 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 14:16:31.413(Timestamp)
2019-01-31 14:16:31 -<==    Updates: 1
2019-01-31 14:16:33 -请求地址 : http://localhost:8080/system/staff
2019-01-31 14:16:33 -HTTP METHOD : GET
2019-01-31 14:16:33 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 14:16:33 -参数 : []
2019-01-31 14:16:33 -耗时 : 1
2019-01-31 14:16:33 -返回值 : system/staff/staff
2019-01-31 14:16:33 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 14:16:33 -HTTP METHOD : GET
2019-01-31 14:16:33 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 14:16:33 -参数 : [{page=1, limit=5}]
2019-01-31 14:16:33 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 14:16:33 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 14:16:33 -<==      Total: 5
2019-01-31 14:16:33 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 14:16:33 -==> Parameters: 
2019-01-31 14:16:33 -<==      Total: 1
2019-01-31 14:16:33 -耗时 : 6
2019-01-31 14:16:33 -返回值 : com.bootdo.common.utils.PageUtils@4bffc009
2019-01-31 14:16:35 -请求地址 : http://localhost:8080/system/staff/edit/fffa8382-7dbf-4d6e-a4fb-7ae1d282d517
2019-01-31 14:16:35 -HTTP METHOD : GET
2019-01-31 14:16:35 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 14:16:35 -参数 : [fffa8382-7dbf-4d6e-a4fb-7ae1d282d517, {}]
2019-01-31 14:16:35 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 14:16:35 -==> Parameters: fffa8382-7dbf-4d6e-a4fb-7ae1d282d517(String)
2019-01-31 14:16:35 -<==      Total: 1
2019-01-31 14:16:35 -耗时 : 7
2019-01-31 14:16:35 -返回值 : system/staff/edit
2019-01-31 14:16:35 -[THYMELEAF][http-nio-8080-exec-3] Exception processing template "system/staff/edit": An error happened during template parsing (template: "class path resource [templates/system/staff/edit.html]")
org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/staff/edit.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Could not parse as expression: "/img/defaultphoto.jpg" (template: "system/staff/edit" - line 14, col 7)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 69 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "/img/defaultphoto.jpg" (template: "system/staff/edit" - line 14, col 7)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:103)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlElement.handleStandaloneElementEnd(HtmlElement.java:79)
	at org.attoparser.HtmlMarkupHandler.handleStandaloneElementEnd(HtmlMarkupHandler.java:241)
	at org.attoparser.MarkupEventProcessorHandler.handleStandaloneElementEnd(MarkupEventProcessorHandler.java:327)
	at org.attoparser.ParsingElementMarkupUtil.parseStandaloneElement(ParsingElementMarkupUtil.java:96)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:706)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 71 common frames omitted
2019-01-31 14:16:35 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/system/staff/edit.html]")] with root cause
org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "/img/defaultphoto.jpg" (template: "system/staff/edit" - line 14, col 7)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:103)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleStandaloneElement(ProcessorTemplateHandler.java:918)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleStandaloneElementEnd(TemplateHandlerAdapterMarkupHandler.java:260)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:256)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleStandaloneElementEnd(OutputExpressionInlinePreProcessorHandler.java:169)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleStandaloneElementEnd(InlinedOutputExpressionMarkupHandler.java:104)
	at org.attoparser.HtmlElement.handleStandaloneElementEnd(HtmlElement.java:79)
	at org.attoparser.HtmlMarkupHandler.handleStandaloneElementEnd(HtmlMarkupHandler.java:241)
	at org.attoparser.MarkupEventProcessorHandler.handleStandaloneElementEnd(MarkupEventProcessorHandler.java:327)
	at org.attoparser.ParsingElementMarkupUtil.parseStandaloneElement(ParsingElementMarkupUtil.java:96)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:706)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:354)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:187)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1325)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1069)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-31 14:16:50 -请求地址 : http://localhost:8080/index
2019-01-31 14:16:50 -HTTP METHOD : GET
2019-01-31 14:16:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 14:16:50 -参数 : [{}]
2019-01-31 14:16:50 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 14:16:50 -==> Parameters: 123(String)
2019-01-31 14:16:50 -<==      Total: 6
2019-01-31 14:16:50 -耗时 : 23
2019-01-31 14:16:50 -返回值 : index_v1
2019-01-31 14:16:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 14:16:50 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 14:16:50.676(Timestamp)
2019-01-31 14:16:50 -<==    Updates: 1
2019-01-31 14:16:52 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 14:16:52 -==> Parameters: 123(String)
2019-01-31 14:16:52 -<==      Total: 14
2019-01-31 14:16:52 -请求地址 : http://localhost:8080/system/staff
2019-01-31 14:16:52 -HTTP METHOD : GET
2019-01-31 14:16:52 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 14:16:52 -参数 : []
2019-01-31 14:16:52 -耗时 : 0
2019-01-31 14:16:52 -返回值 : system/staff/staff
2019-01-31 14:16:52 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 14:16:52 -HTTP METHOD : GET
2019-01-31 14:16:52 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 14:16:52 -参数 : [{page=1, limit=5}]
2019-01-31 14:16:52 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 14:16:52 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 14:16:52 -<==      Total: 5
2019-01-31 14:16:52 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 14:16:52 -==> Parameters: 
2019-01-31 14:16:52 -<==      Total: 1
2019-01-31 14:16:52 -耗时 : 10
2019-01-31 14:16:52 -返回值 : com.bootdo.common.utils.PageUtils@21fda2ed
2019-01-31 14:16:54 -请求地址 : http://localhost:8080/system/staff/edit/fffa8382-7dbf-4d6e-a4fb-7ae1d282d517
2019-01-31 14:16:54 -HTTP METHOD : GET
2019-01-31 14:16:54 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 14:16:54 -参数 : [fffa8382-7dbf-4d6e-a4fb-7ae1d282d517, {}]
2019-01-31 14:16:54 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 14:16:54 -==> Parameters: fffa8382-7dbf-4d6e-a4fb-7ae1d282d517(String)
2019-01-31 14:16:54 -<==      Total: 1
2019-01-31 14:16:54 -耗时 : 5
2019-01-31 14:16:54 -返回值 : system/staff/edit
2019-01-31 14:17:53 -请求地址 : http://localhost:8080/index
2019-01-31 14:17:53 -HTTP METHOD : GET
2019-01-31 14:17:53 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 14:17:53 -参数 : [{}]
2019-01-31 14:17:53 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 14:17:53 -==> Parameters: 123(String)
2019-01-31 14:17:53 -<==      Total: 6
2019-01-31 14:17:53 -耗时 : 27
2019-01-31 14:17:53 -返回值 : index_v1
2019-01-31 14:17:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 14:17:53 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 14:17:53.274(Timestamp)
2019-01-31 14:17:53 -<==    Updates: 1
2019-01-31 14:17:55 -请求地址 : http://localhost:8080/system/staff
2019-01-31 14:17:55 -HTTP METHOD : GET
2019-01-31 14:17:55 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 14:17:55 -参数 : []
2019-01-31 14:17:55 -耗时 : 0
2019-01-31 14:17:55 -返回值 : system/staff/staff
2019-01-31 14:17:55 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 14:17:55 -HTTP METHOD : GET
2019-01-31 14:17:55 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 14:17:55 -参数 : [{page=1, limit=5}]
2019-01-31 14:17:55 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 14:17:55 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 14:17:55 -<==      Total: 5
2019-01-31 14:17:55 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 14:17:55 -==> Parameters: 
2019-01-31 14:17:55 -<==      Total: 1
2019-01-31 14:17:55 -耗时 : 5
2019-01-31 14:17:55 -返回值 : com.bootdo.common.utils.PageUtils@6bf75c48
2019-01-31 14:17:57 -请求地址 : http://localhost:8080/system/staff/edit/fffa8382-7dbf-4d6e-a4fb-7ae1d282d517
2019-01-31 14:17:57 -HTTP METHOD : GET
2019-01-31 14:17:57 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 14:17:57 -参数 : [fffa8382-7dbf-4d6e-a4fb-7ae1d282d517, {}]
2019-01-31 14:17:57 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 14:17:57 -==> Parameters: fffa8382-7dbf-4d6e-a4fb-7ae1d282d517(String)
2019-01-31 14:17:57 -<==      Total: 1
2019-01-31 14:17:57 -耗时 : 3
2019-01-31 14:17:57 -返回值 : system/staff/edit
2019-01-31 14:18:09 -请求地址 : http://localhost:8080/index
2019-01-31 14:18:09 -HTTP METHOD : GET
2019-01-31 14:18:09 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 14:18:09 -参数 : [{}]
2019-01-31 14:18:09 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 14:18:09 -==> Parameters: 123(String)
2019-01-31 14:18:09 -<==      Total: 6
2019-01-31 14:18:09 -耗时 : 14
2019-01-31 14:18:09 -返回值 : index_v1
2019-01-31 14:18:09 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 14:18:09 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 14(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 14:18:09.771(Timestamp)
2019-01-31 14:18:09 -<==    Updates: 1
2019-01-31 14:18:12 -请求地址 : http://localhost:8080/system/staff
2019-01-31 14:18:12 -HTTP METHOD : GET
2019-01-31 14:18:12 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 14:18:12 -参数 : []
2019-01-31 14:18:12 -耗时 : 0
2019-01-31 14:18:12 -返回值 : system/staff/staff
2019-01-31 14:18:12 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 14:18:12 -HTTP METHOD : GET
2019-01-31 14:18:12 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 14:18:12 -参数 : [{page=1, limit=5}]
2019-01-31 14:18:12 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 14:18:12 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 14:18:12 -<==      Total: 5
2019-01-31 14:18:12 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 14:18:12 -==> Parameters: 
2019-01-31 14:18:12 -<==      Total: 1
2019-01-31 14:18:12 -耗时 : 7
2019-01-31 14:18:12 -返回值 : com.bootdo.common.utils.PageUtils@5e1e6446
2019-01-31 14:18:13 -请求地址 : http://localhost:8080/system/staff/edit/fffa8382-7dbf-4d6e-a4fb-7ae1d282d517
2019-01-31 14:18:13 -HTTP METHOD : GET
2019-01-31 14:18:13 -CLASS_METHOD : com.bootdo.system.controller.StaffController.edit
2019-01-31 14:18:13 -参数 : [fffa8382-7dbf-4d6e-a4fb-7ae1d282d517, {}]
2019-01-31 14:18:13 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff where employee_id = ? 
2019-01-31 14:18:13 -==> Parameters: fffa8382-7dbf-4d6e-a4fb-7ae1d282d517(String)
2019-01-31 14:18:13 -<==      Total: 1
2019-01-31 14:18:13 -耗时 : 6
2019-01-31 14:18:13 -返回值 : system/staff/edit
2019-01-31 14:18:47 -请求地址 : http://localhost:8080/index
2019-01-31 14:18:47 -HTTP METHOD : GET
2019-01-31 14:18:47 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 14:18:47 -参数 : [{}]
2019-01-31 14:18:47 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 14:18:47 -==> Parameters: 123(String)
2019-01-31 14:18:47 -<==      Total: 6
2019-01-31 14:18:47 -耗时 : 25
2019-01-31 14:18:47 -返回值 : index_v1
2019-01-31 14:18:47 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 14:18:47 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 14:18:47.305(Timestamp)
2019-01-31 14:18:47 -<==    Updates: 1
2019-01-31 14:18:49 -请求地址 : http://localhost:8080/system/staff
2019-01-31 14:18:49 -HTTP METHOD : GET
2019-01-31 14:18:49 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 14:18:49 -参数 : []
2019-01-31 14:18:49 -耗时 : 1
2019-01-31 14:18:49 -返回值 : system/staff/staff
2019-01-31 14:18:49 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 14:18:49 -HTTP METHOD : GET
2019-01-31 14:18:49 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 14:18:49 -参数 : [{page=1, limit=5}]
2019-01-31 14:18:49 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff order by employee_id desc limit ?, ? 
2019-01-31 14:18:49 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 14:18:49 -<==      Total: 5
2019-01-31 14:18:49 -==>  Preparing: select count(*) from sys_staff 
2019-01-31 14:18:49 -==> Parameters: 
2019-01-31 14:18:49 -<==      Total: 1
2019-01-31 14:18:49 -耗时 : 6
2019-01-31 14:18:49 -返回值 : com.bootdo.common.utils.PageUtils@1e0362ef
2019-01-31 14:18:50 -请求地址 : http://localhost:8080/system/staff/add
2019-01-31 14:18:50 -HTTP METHOD : GET
2019-01-31 14:18:50 -CLASS_METHOD : com.bootdo.system.controller.StaffController.add
2019-01-31 14:18:50 -参数 : []
2019-01-31 14:18:50 -耗时 : 1
2019-01-31 14:18:50 -返回值 : system/staff/add
2019-01-31 14:36:23 -请求地址 : http://localhost:8080/common/generator
2019-01-31 14:36:23 -HTTP METHOD : GET
2019-01-31 14:36:23 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.generator
2019-01-31 14:36:23 -参数 : []
2019-01-31 14:36:23 -耗时 : 1
2019-01-31 14:36:23 -返回值 : common/generator/list
2019-01-31 14:36:23 -请求地址 : http://localhost:8080/common/generator/list
2019-01-31 14:36:23 -HTTP METHOD : GET
2019-01-31 14:36:23 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.list
2019-01-31 14:36:23 -参数 : []
2019-01-31 14:36:23 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) 
2019-01-31 14:36:23 -==> Parameters: 
2019-01-31 14:36:24 -<==      Total: 17
2019-01-31 14:36:24 -耗时 : 383
2019-01-31 14:36:24 -返回值 : [{engine=InnoDB, createTime=2019-01-23 11:15:28.0, tableComment=菜单管理, tableName=2sys_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:31.0, tableComment=角色, tableName=2sys_role}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=角色与菜单对应关系, tableName=2sys_role_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=2sys_staff}, {engine=InnoDB, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=2sys_user}, {engine=InnoDB, createTime=2019-01-23 11:15:34.0, tableComment=用户与角色对应关系, tableName=2sys_user_role}, {engine=InnoDB, createTime=2019-01-23 11:15:23.0, tableComment=部门管理, tableName=sys_dept}, {engine=InnoDB, createTime=2019-01-23 11:39:37.0, tableComment=, tableName=sys_dept1}, {engine=InnoDB, createTime=2019-01-23 11:15:26.0, tableComment=系统日志, tableName=sys_log}, {engine=InnoDB, createTime=2019-01-23 11:15:28.0, tableComment=, tableName=sys_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:31.0, tableComment=, tableName=sys_role}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=sys_role_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=sys_staff}, {engine=MyISAM, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=sys_task}, {engine=InnoDB, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=sys_user}, {engine=InnoDB, createTime=2019-01-23 11:15:34.0, tableComment=, tableName=sys_user_role}, {engine=InnoDB, createTime=2019-01-23 11:39:39.0, tableComment=, tableName=sys_user_staff}]
2019-01-31 14:40:24 -请求地址 : http://localhost:8080/index
2019-01-31 14:40:24 -HTTP METHOD : GET
2019-01-31 14:40:24 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 14:40:24 -参数 : [{}]
2019-01-31 14:40:24 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 14:40:24 -==> Parameters: 123(String)
2019-01-31 14:40:24 -<==      Total: 6
2019-01-31 14:40:24 -耗时 : 37
2019-01-31 14:40:24 -返回值 : index_v1
2019-01-31 14:40:24 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 14:40:24 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 37(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 14:40:24.637(Timestamp)
2019-01-31 14:40:24 -<==    Updates: 1
2019-01-31 14:40:26 -请求地址 : http://localhost:8080/common/generator
2019-01-31 14:40:26 -HTTP METHOD : GET
2019-01-31 14:40:26 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.generator
2019-01-31 14:40:26 -参数 : []
2019-01-31 14:40:26 -耗时 : 1
2019-01-31 14:40:26 -返回值 : common/generator/list
2019-01-31 14:40:26 -请求地址 : http://localhost:8080/common/generator/list
2019-01-31 14:40:26 -HTTP METHOD : GET
2019-01-31 14:40:26 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.list
2019-01-31 14:40:26 -参数 : []
2019-01-31 14:40:26 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) 
2019-01-31 14:40:26 -==> Parameters: 
2019-01-31 14:40:26 -<==      Total: 17
2019-01-31 14:40:26 -耗时 : 5
2019-01-31 14:40:26 -返回值 : [{engine=InnoDB, createTime=2019-01-23 11:15:23.0, tableComment=部门管理, tableName=2sys_dept}, {engine=InnoDB, createTime=2019-01-23 11:15:28.0, tableComment=菜单管理, tableName=2sys_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:31.0, tableComment=角色, tableName=2sys_role}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=角色与菜单对应关系, tableName=2sys_role_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=2sys_staff}, {engine=InnoDB, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=2sys_user}, {engine=InnoDB, createTime=2019-01-23 11:15:34.0, tableComment=用户与角色对应关系, tableName=2sys_user_role}, {engine=InnoDB, createTime=2019-01-23 11:15:23.0, tableComment=, tableName=sys_dept}, {engine=InnoDB, createTime=2019-01-23 11:15:26.0, tableComment=系统日志, tableName=sys_log}, {engine=InnoDB, createTime=2019-01-23 11:15:28.0, tableComment=, tableName=sys_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:31.0, tableComment=, tableName=sys_role}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=sys_role_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=sys_staff}, {engine=MyISAM, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=sys_task}, {engine=InnoDB, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=sys_user}, {engine=InnoDB, createTime=2019-01-23 11:15:34.0, tableComment=, tableName=sys_user_role}, {engine=InnoDB, createTime=2019-01-23 11:39:39.0, tableComment=, tableName=sys_user_staff}]
2019-01-31 14:40:31 -请求地址 : http://localhost:8080/common/generator/code/sys_dept
2019-01-31 14:40:31 -HTTP METHOD : GET
2019-01-31 14:40:31 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.code
2019-01-31 14:40:31 -参数 : [org.apache.shiro.web.servlet.ShiroHttpServletRequest@3d235e4f, org.apache.shiro.web.servlet.ShiroHttpServletResponse@202fccba, sys_dept]
2019-01-31 14:40:31 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) and table_name = ? 
2019-01-31 14:40:31 -==> Parameters: sys_dept(String)
2019-01-31 14:40:31 -<==      Total: 1
2019-01-31 14:40:31 -==>  Preparing: select column_name columnName, data_type dataType, column_comment columnComment, column_key columnKey, extra from information_schema.columns where table_name = ? and table_schema = (select database()) order by ordinal_position 
2019-01-31 14:40:31 -==> Parameters: sys_dept(String)
2019-01-31 14:40:31 -<==      Total: 11
2019-01-31 14:40:32 -耗时 : 1234
2019-01-31 14:40:32 -返回值 : null
2019-01-31 14:40:51 -请求地址 : http://localhost:8080/common/generator
2019-01-31 14:40:51 -HTTP METHOD : GET
2019-01-31 14:40:51 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.generator
2019-01-31 14:40:51 -参数 : []
2019-01-31 14:40:51 -耗时 : 0
2019-01-31 14:40:51 -返回值 : common/generator/list
2019-01-31 14:40:52 -请求地址 : http://localhost:8080/common/generator/list
2019-01-31 14:40:52 -HTTP METHOD : GET
2019-01-31 14:40:52 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.list
2019-01-31 14:40:52 -参数 : []
2019-01-31 14:40:52 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) 
2019-01-31 14:40:52 -==> Parameters: 
2019-01-31 14:40:52 -<==      Total: 17
2019-01-31 14:40:52 -耗时 : 6
2019-01-31 14:40:52 -返回值 : [{engine=InnoDB, createTime=2019-01-23 11:15:23.0, tableComment=部门管理, tableName=2sys_dept}, {engine=InnoDB, createTime=2019-01-23 11:15:28.0, tableComment=菜单管理, tableName=2sys_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:31.0, tableComment=角色, tableName=2sys_role}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=角色与菜单对应关系, tableName=2sys_role_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=2sys_staff}, {engine=InnoDB, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=2sys_user}, {engine=InnoDB, createTime=2019-01-23 11:15:34.0, tableComment=用户与角色对应关系, tableName=2sys_user_role}, {engine=InnoDB, createTime=2019-01-23 11:15:23.0, tableComment=, tableName=sys_dept}, {engine=InnoDB, createTime=2019-01-23 11:15:26.0, tableComment=系统日志, tableName=sys_log}, {engine=InnoDB, createTime=2019-01-23 11:15:28.0, tableComment=, tableName=sys_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:31.0, tableComment=, tableName=sys_role}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=sys_role_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=sys_staff}, {engine=MyISAM, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=sys_task}, {engine=InnoDB, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=sys_user}, {engine=InnoDB, createTime=2019-01-23 11:15:34.0, tableComment=, tableName=sys_user_role}, {engine=InnoDB, createTime=2019-01-23 11:39:39.0, tableComment=, tableName=sys_user_staff}]
2019-01-31 14:40:59 -请求地址 : http://localhost:8080/common/generator
2019-01-31 14:40:59 -HTTP METHOD : GET
2019-01-31 14:40:59 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.generator
2019-01-31 14:40:59 -参数 : []
2019-01-31 14:40:59 -耗时 : 0
2019-01-31 14:40:59 -返回值 : common/generator/list
2019-01-31 14:40:59 -请求地址 : http://localhost:8080/common/generator/list
2019-01-31 14:40:59 -HTTP METHOD : GET
2019-01-31 14:40:59 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.list
2019-01-31 14:40:59 -参数 : []
2019-01-31 14:40:59 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) 
2019-01-31 14:40:59 -==> Parameters: 
2019-01-31 14:40:59 -<==      Total: 17
2019-01-31 14:40:59 -耗时 : 7
2019-01-31 14:40:59 -返回值 : [{engine=InnoDB, createTime=2019-01-23 11:15:23.0, tableComment=部门管理, tableName=2sys_dept}, {engine=InnoDB, createTime=2019-01-23 11:15:28.0, tableComment=菜单管理, tableName=2sys_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:31.0, tableComment=角色, tableName=2sys_role}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=角色与菜单对应关系, tableName=2sys_role_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=2sys_staff}, {engine=InnoDB, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=2sys_user}, {engine=InnoDB, createTime=2019-01-23 11:15:34.0, tableComment=用户与角色对应关系, tableName=2sys_user_role}, {engine=InnoDB, createTime=2019-01-23 11:15:23.0, tableComment=, tableName=sys_dept}, {engine=InnoDB, createTime=2019-01-23 11:15:26.0, tableComment=系统日志, tableName=sys_log}, {engine=InnoDB, createTime=2019-01-23 11:15:28.0, tableComment=, tableName=sys_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:31.0, tableComment=, tableName=sys_role}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=sys_role_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=sys_staff}, {engine=MyISAM, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=sys_task}, {engine=InnoDB, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=sys_user}, {engine=InnoDB, createTime=2019-01-23 11:15:34.0, tableComment=, tableName=sys_user_role}, {engine=InnoDB, createTime=2019-01-23 11:39:39.0, tableComment=, tableName=sys_user_staff}]
2019-01-31 14:41:03 -请求地址 : http://localhost:8080/index
2019-01-31 14:41:03 -HTTP METHOD : GET
2019-01-31 14:41:03 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 14:41:03 -参数 : [{}]
2019-01-31 14:41:03 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 14:41:03 -==> Parameters: 123(String)
2019-01-31 14:41:03 -<==      Total: 6
2019-01-31 14:41:03 -耗时 : 37
2019-01-31 14:41:03 -返回值 : index_v1
2019-01-31 14:41:03 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 14:41:03 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 38(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 14:41:03.855(Timestamp)
2019-01-31 14:41:03 -<==    Updates: 1
2019-01-31 14:41:06 -请求地址 : http://localhost:8080/common/generator
2019-01-31 14:41:06 -HTTP METHOD : GET
2019-01-31 14:41:06 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.generator
2019-01-31 14:41:06 -参数 : []
2019-01-31 14:41:06 -耗时 : 0
2019-01-31 14:41:06 -返回值 : common/generator/list
2019-01-31 14:41:06 -请求地址 : http://localhost:8080/common/generator/list
2019-01-31 14:41:06 -HTTP METHOD : GET
2019-01-31 14:41:06 -CLASS_METHOD : com.bootdo.common.controller.GeneratorController.list
2019-01-31 14:41:06 -参数 : []
2019-01-31 14:41:06 -==>  Preparing: select table_name tableName, engine, table_comment tableComment, create_time createTime from information_schema.tables where table_schema = (select database()) 
2019-01-31 14:41:06 -==> Parameters: 
2019-01-31 14:41:06 -<==      Total: 17
2019-01-31 14:41:06 -耗时 : 4
2019-01-31 14:41:06 -返回值 : [{engine=InnoDB, createTime=2019-01-23 11:15:23.0, tableComment=部门管理, tableName=2sys_dept}, {engine=InnoDB, createTime=2019-01-23 11:15:28.0, tableComment=菜单管理, tableName=2sys_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:31.0, tableComment=角色, tableName=2sys_role}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=角色与菜单对应关系, tableName=2sys_role_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=2sys_staff}, {engine=InnoDB, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=2sys_user}, {engine=InnoDB, createTime=2019-01-23 11:15:34.0, tableComment=用户与角色对应关系, tableName=2sys_user_role}, {engine=InnoDB, createTime=2019-01-23 11:15:23.0, tableComment=, tableName=sys_dept}, {engine=InnoDB, createTime=2019-01-23 11:15:26.0, tableComment=系统日志, tableName=sys_log}, {engine=InnoDB, createTime=2019-01-23 11:15:28.0, tableComment=, tableName=sys_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:31.0, tableComment=, tableName=sys_role}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=sys_role_menu}, {engine=InnoDB, createTime=2019-01-23 11:15:32.0, tableComment=, tableName=sys_staff}, {engine=MyISAM, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=sys_task}, {engine=InnoDB, createTime=2019-01-23 11:15:33.0, tableComment=, tableName=sys_user}, {engine=InnoDB, createTime=2019-01-23 11:15:34.0, tableComment=, tableName=sys_user_role}, {engine=InnoDB, createTime=2019-01-23 11:39:39.0, tableComment=, tableName=sys_user_staff}]
2019-01-31 15:38:14 -Starting BootdoApplication on YH-20180312AAAP with PID 14904 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-31 15:38:14 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-31 15:38:14 -The following profiles are active: dev
2019-01-31 15:38:14 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b765a2c: startup date [Thu Jan 31 15:38:14 CST 2019]; root of context hierarchy
2019-01-31 15:38:16 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$bc300004] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:38:16 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$b0a3c4a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:38:16 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:38:16 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:38:16 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:38:16 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$4b4291a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:38:16 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$731dc9e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:38:16 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$6576f88d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:38:16 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-31 15:38:17 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:38:17 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:38:17 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:38:17 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:38:17 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:38:17 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-31 15:38:17 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-31 15:38:17 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:38:17 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:38:18 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:38:18 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:38:18 -Tomcat initialized with port(s): 8080 (http)
2019-01-31 15:38:18 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-31 15:38:18 -Starting service [Tomcat]
2019-01-31 15:38:18 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-31 15:38:18 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-31 15:38:18 -Initializing Spring embedded WebApplicationContext
2019-01-31 15:38:18 -Root WebApplicationContext: initialization completed in 4537 ms
2019-01-31 15:38:19 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-31 15:38:19 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-31 15:38:19 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-31 15:38:19 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-31 15:38:19 -Filter xssFilter was not registered (disabled)
2019-01-31 15:38:19 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-31 15:38:19 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-31 15:38:19 -Servlet statViewServlet mapped to [/druid/*]
2019-01-31 15:38:19 -Servlet dispatcherServlet mapped to [/]
2019-01-31 15:38:19 -{dataSource-1} inited
2019-01-31 15:38:20 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b765a2c: startup date [Thu Jan 31 15:38:14 CST 2019]; root of context hierarchy
2019-01-31 15:38:20 -Using default implementation for ThreadExecutor
2019-01-31 15:38:20 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-31 15:38:20 -Quartz Scheduler v.2.2.1 created.
2019-01-31 15:38:20 -RAMJobStore initialized.
2019-01-31 15:38:20 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-31 15:38:20 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-31 15:38:20 -Quartz scheduler version: 2.2.1
2019-01-31 15:38:20 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@39f4a7c4
2019-01-31 15:38:21 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-31 15:38:21 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-31 15:38:22 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-01-31 15:38:22 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-01-31 15:38:22 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-01-31 15:38:22 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-01-31 15:38:22 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:38:22 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-01-31 15:38:22 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-01-31 15:38:22 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-01-31 15:38:22 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 15:38:22 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-01-31 15:38:22 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:38:22 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-31 15:38:22 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 15:38:22 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-31 15:38:22 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-31 15:38:22 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 15:38:22 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-31 15:38:22 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-31 15:38:22 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-31 15:38:22 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-31 15:38:22 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:38:22 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-31 15:38:22 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-31 15:38:22 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 15:38:22 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-31 15:38:22 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-31 15:38:22 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-31 15:38:22 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-31 15:38:22 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:38:22 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-31 15:38:22 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 15:38:22 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 15:38:22 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-31 15:38:22 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-31 15:38:22 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-31 15:38:22 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-31 15:38:22 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:38:22 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-31 15:38:22 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 15:38:22 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-31 15:38:22 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-31 15:38:22 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-31 15:38:22 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-31 15:38:22 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-31 15:38:22 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-31 15:38:22 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-31 15:38:22 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 15:38:22 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-31 15:38:22 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-31 15:38:22 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:38:22 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-31 15:38:22 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-31 15:38:22 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-31 15:38:22 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-31 15:38:22 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-31 15:38:22 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-31 15:38:22 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-31 15:38:22 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-31 15:38:22 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-31 15:38:22 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-31 15:38:22 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-31 15:38:22 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-31 15:38:22 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 15:38:22 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-31 15:38:22 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-31 15:38:22 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-31 15:38:22 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-31 15:38:22 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-31 15:38:22 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String)
2019-01-31 15:38:22 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String[])
2019-01-31 15:38:22 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-31 15:38:22 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:38:22 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-31 15:38:22 -Mapped "{[/system/staff/edit/{employeeId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 15:38:22 -Mapped "{[/system/staff/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-01-31 15:38:22 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-31 15:38:22 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-31 15:38:22 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-31 15:38:22 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-31 15:38:22 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-31 15:38:22 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:38:22 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-31 15:38:22 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-31 15:38:22 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 15:38:22 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:38:22 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-31 15:38:22 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-31 15:38:22 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 15:38:22 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:38:22 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-31 15:38:22 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-31 15:38:22 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-31 15:38:22 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-31 15:38:22 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-31 15:38:22 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-31 15:38:22 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-31 15:38:22 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-31 15:38:22 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-31 15:38:22 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-31 15:38:22 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-31 15:38:22 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-31 15:38:23 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 15:38:23 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b765a2c: startup date [Thu Jan 31 15:38:14 CST 2019]; root of context hierarchy
2019-01-31 15:38:23 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 15:38:23 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 15:38:23 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 15:38:23 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-31 15:38:23 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-31 15:38:24 -Registering beans for JMX exposure on startup
2019-01-31 15:38:24 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-31 15:38:24 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-31 15:38:24 -Starting beans in phase 2147483647
2019-01-31 15:38:24 -Context refreshed
2019-01-31 15:38:24 -Found 1 custom documentation plugin(s)
2019-01-31 15:38:24 -Scanning for api listing references
2019-01-31 15:38:24 -Generating unique operation named: removeUsingPOST_1
2019-01-31 15:38:24 -Generating unique operation named: addUsingGET_1
2019-01-31 15:38:24 -Generating unique operation named: editUsingGET_1
2019-01-31 15:38:24 -Generating unique operation named: listUsingGET_1
2019-01-31 15:38:24 -Generating unique operation named: removeUsingPOST_2
2019-01-31 15:38:24 -Generating unique operation named: removeUsingPOST_3
2019-01-31 15:38:24 -Generating unique operation named: saveUsingPOST_1
2019-01-31 15:38:24 -Generating unique operation named: updateUsingGET_1
2019-01-31 15:38:24 -Generating unique operation named: updateUsingHEAD_1
2019-01-31 15:38:24 -Generating unique operation named: updateUsingPOST_1
2019-01-31 15:38:24 -Generating unique operation named: updateUsingPUT_1
2019-01-31 15:38:24 -Generating unique operation named: updateUsingPATCH_1
2019-01-31 15:38:24 -Generating unique operation named: updateUsingDELETE_1
2019-01-31 15:38:24 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-31 15:38:24 -Generating unique operation named: updateUsingTRACE_1
2019-01-31 15:38:25 -Generating unique operation named: editUsingGET_2
2019-01-31 15:38:25 -Generating unique operation named: listUsingGET_2
2019-01-31 15:38:25 -Generating unique operation named: updateUsingPOST_2
2019-01-31 15:38:25 -Generating unique operation named: addUsingGET_2
2019-01-31 15:38:25 -Generating unique operation named: editUsingGET_3
2019-01-31 15:38:25 -Generating unique operation named: infoUsingGET_1
2019-01-31 15:38:25 -Generating unique operation named: infoUsingHEAD_1
2019-01-31 15:38:25 -Generating unique operation named: infoUsingPOST_1
2019-01-31 15:38:25 -Generating unique operation named: infoUsingPUT_1
2019-01-31 15:38:25 -Generating unique operation named: infoUsingPATCH_1
2019-01-31 15:38:25 -Generating unique operation named: infoUsingDELETE_1
2019-01-31 15:38:25 -Generating unique operation named: infoUsingOPTIONS_1
2019-01-31 15:38:25 -Generating unique operation named: infoUsingTRACE_1
2019-01-31 15:38:25 -Generating unique operation named: listUsingGET_3
2019-01-31 15:38:25 -Generating unique operation named: removeUsingPOST_4
2019-01-31 15:38:25 -Generating unique operation named: removeUsingPOST_5
2019-01-31 15:38:25 -Generating unique operation named: saveUsingPOST_2
2019-01-31 15:38:25 -Generating unique operation named: updateUsingPOST_3
2019-01-31 15:38:25 -Generating unique operation named: listUsingGET_4
2019-01-31 15:38:25 -Generating unique operation named: removeUsingPOST_6
2019-01-31 15:38:25 -Generating unique operation named: welcomeUsingGET_1
2019-01-31 15:38:25 -Generating unique operation named: addUsingGET_3
2019-01-31 15:38:25 -Generating unique operation named: editUsingGET_4
2019-01-31 15:38:25 -Generating unique operation named: listUsingGET_5
2019-01-31 15:38:25 -Generating unique operation named: removeUsingPOST_7
2019-01-31 15:38:25 -Generating unique operation named: saveUsingPOST_3
2019-01-31 15:38:25 -Generating unique operation named: treeUsingGET_1
2019-01-31 15:38:25 -Generating unique operation named: updateUsingPOST_4
2019-01-31 15:38:25 -Generating unique operation named: addUsingGET_4
2019-01-31 15:38:25 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-31 15:38:25 -Generating unique operation named: editUsingGET_5
2019-01-31 15:38:25 -Generating unique operation named: listUsingGET_6
2019-01-31 15:38:25 -Generating unique operation named: saveUsingPOST_4
2019-01-31 15:38:25 -Generating unique operation named: saveUsingPOST_5
2019-01-31 15:38:25 -Generating unique operation named: updateUsingPOST_5
2019-01-31 15:38:25 -Generating unique operation named: listUsingGET_7
2019-01-31 15:38:25 -Generating unique operation named: listUsingHEAD_1
2019-01-31 15:38:25 -Generating unique operation named: listUsingPOST_1
2019-01-31 15:38:25 -Generating unique operation named: listUsingPUT_1
2019-01-31 15:38:25 -Generating unique operation named: listUsingPATCH_1
2019-01-31 15:38:25 -Generating unique operation named: listUsingDELETE_1
2019-01-31 15:38:25 -Generating unique operation named: listUsingOPTIONS_1
2019-01-31 15:38:25 -Generating unique operation named: listUsingTRACE_1
2019-01-31 15:38:25 -Generating unique operation named: addUsingGET_5
2019-01-31 15:38:25 -Generating unique operation named: editUsingGET_6
2019-01-31 15:38:25 -Generating unique operation named: listUsingGET_8
2019-01-31 15:38:25 -Generating unique operation named: removeUsingPOST_8
2019-01-31 15:38:25 -Generating unique operation named: removeUsingPOST_9
2019-01-31 15:38:25 -Generating unique operation named: saveUsingPOST_6
2019-01-31 15:38:25 -Generating unique operation named: updateUsingGET_2
2019-01-31 15:38:25 -Generating unique operation named: updateUsingHEAD_2
2019-01-31 15:38:25 -Generating unique operation named: updateUsingPOST_6
2019-01-31 15:38:25 -Generating unique operation named: updateUsingPUT_2
2019-01-31 15:38:25 -Generating unique operation named: updateUsingPATCH_2
2019-01-31 15:38:25 -Generating unique operation named: updateUsingDELETE_2
2019-01-31 15:38:25 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-31 15:38:25 -Generating unique operation named: updateUsingTRACE_2
2019-01-31 15:38:25 -Generating unique operation named: uploadUsingPOST_1
2019-01-31 15:38:25 -Generating unique operation named: addUsingGET_6
2019-01-31 15:38:25 -Generating unique operation named: editUsingGET_7
2019-01-31 15:38:25 -Generating unique operation named: listUsingGET_9
2019-01-31 15:38:25 -Generating unique operation named: removeUsingPOST_10
2019-01-31 15:38:25 -Generating unique operation named: removeUsingPOST_11
2019-01-31 15:38:25 -Generating unique operation named: saveUsingPOST_7
2019-01-31 15:38:25 -Generating unique operation named: updateUsingGET_3
2019-01-31 15:38:25 -Generating unique operation named: updateUsingHEAD_3
2019-01-31 15:38:25 -Generating unique operation named: updateUsingPOST_7
2019-01-31 15:38:25 -Generating unique operation named: updateUsingPUT_3
2019-01-31 15:38:25 -Generating unique operation named: updateUsingPATCH_3
2019-01-31 15:38:25 -Generating unique operation named: updateUsingDELETE_3
2019-01-31 15:38:25 -Generating unique operation named: updateUsingOPTIONS_3
2019-01-31 15:38:25 -Generating unique operation named: updateUsingTRACE_3
2019-01-31 15:38:25 -Generating unique operation named: addUsingGET_7
2019-01-31 15:38:25 -Generating unique operation named: editUsingGET_8
2019-01-31 15:38:25 -Generating unique operation named: listUsingGET_10
2019-01-31 15:38:25 -Generating unique operation named: roleUsingGET_1
2019-01-31 15:38:25 -Generating unique operation named: saveUsingPOST_8
2019-01-31 15:38:25 -Starting Quartz Scheduler now
2019-01-31 15:38:25 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-31 15:38:25 -Starting...
2019-01-31 15:38:25 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-31 15:38:25 -Started.
2019-01-31 15:38:25 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-31 15:38:25 -Using a shared selector for servlet write/read
2019-01-31 15:38:25 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-31 15:38:25 -Started BootdoApplication in 12.231 seconds (JVM running for 13.652)
2019-01-31 15:38:25 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-31 15:38:25 -==> Parameters: 
2019-01-31 15:38:25 -<==      Total: 1
2019-01-31 15:38:44 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-31 15:38:44 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-31 15:38:44 -FrameworkServlet 'dispatcherServlet': initialization completed in 30 ms
2019-01-31 15:38:44 -Enabling session validation scheduler...
2019-01-31 15:38:44 -请求地址 : http://localhost:8080/login;JSESSIONID=57dc1786-1877-42e6-87f0-d54003244ec8
2019-01-31 15:38:44 -HTTP METHOD : GET
2019-01-31 15:38:44 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 15:38:44 -参数 : []
2019-01-31 15:38:44 -耗时 : 2
2019-01-31 15:38:44 -返回值 : login
2019-01-31 15:38:45 -请求地址 : http://localhost:8080/login
2019-01-31 15:38:45 -HTTP METHOD : GET
2019-01-31 15:38:45 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 15:38:45 -参数 : []
2019-01-31 15:38:45 -耗时 : 0
2019-01-31 15:38:45 -返回值 : login
2019-01-31 15:38:48 -请求地址 : http://localhost:8080/login
2019-01-31 15:38:48 -HTTP METHOD : POST
2019-01-31 15:38:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-31 15:38:48 -参数 : [admin, 123456]
2019-01-31 15:38:48 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-31 15:38:48 -==> Parameters: 
2019-01-31 15:38:48 -<==      Total: 1
2019-01-31 15:38:48 -耗时 : 62
2019-01-31 15:38:48 -返回值 : {msg=操作成功, code=0}
2019-01-31 15:38:48 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-31 15:38:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 15:38:48 -==> Parameters: 123(String), admin(String), 登录(String), 62(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-31 15:38:48.481(Timestamp)
2019-01-31 15:38:48 -<==    Updates: 1
2019-01-31 15:38:48 -请求地址 : http://localhost:8080/index
2019-01-31 15:38:48 -HTTP METHOD : GET
2019-01-31 15:38:48 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 15:38:48 -参数 : [{}]
2019-01-31 15:38:48 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 15:38:48 -==> Parameters: 123(String)
2019-01-31 15:38:48 -<==      Total: 10
2019-01-31 15:38:48 -耗时 : 113
2019-01-31 15:38:48 -返回值 : index_v1
2019-01-31 15:38:48 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 15:38:48 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 114(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 15:38:48.73(Timestamp)
2019-01-31 15:38:48 -<==    Updates: 1
2019-01-31 15:39:22 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-31 15:40:17 -请求地址 : http://localhost:8080/index
2019-01-31 15:40:17 -HTTP METHOD : GET
2019-01-31 15:40:17 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 15:40:17 -参数 : [{}]
2019-01-31 15:40:17 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 15:40:17 -==> Parameters: 123(String)
2019-01-31 15:40:17 -<==      Total: 7
2019-01-31 15:40:17 -耗时 : 25
2019-01-31 15:40:17 -返回值 : index_v1
2019-01-31 15:40:17 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 15:40:17 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 15:40:17.156(Timestamp)
2019-01-31 15:40:17 -<==    Updates: 1
2019-01-31 15:40:21 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 15:40:21 -==> Parameters: 123(String)
2019-01-31 15:40:21 -<==      Total: 18
2019-01-31 15:40:21 -请求地址 : http://localhost:8080/system/sysDept
2019-01-31 15:40:21 -HTTP METHOD : GET
2019-01-31 15:40:21 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 15:40:21 -参数 : []
2019-01-31 15:40:21 -耗时 : 1
2019-01-31 15:40:21 -返回值 : system/dept/dept
2019-01-31 15:43:12 -请求地址 : http://localhost:8080/index
2019-01-31 15:43:12 -HTTP METHOD : GET
2019-01-31 15:43:12 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 15:43:12 -参数 : [{}]
2019-01-31 15:43:12 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 15:43:12 -==> Parameters: 123(String)
2019-01-31 15:43:12 -<==      Total: 7
2019-01-31 15:43:12 -耗时 : 24
2019-01-31 15:43:12 -返回值 : index_v1
2019-01-31 15:43:12 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 15:43:12 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 15:43:12.173(Timestamp)
2019-01-31 15:43:12 -<==    Updates: 1
2019-01-31 15:43:14 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 15:43:14 -==> Parameters: 123(String)
2019-01-31 15:43:14 -<==      Total: 18
2019-01-31 15:43:14 -请求地址 : http://localhost:8080/system/sysDept
2019-01-31 15:43:14 -HTTP METHOD : GET
2019-01-31 15:43:14 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 15:43:14 -参数 : []
2019-01-31 15:43:14 -耗时 : 0
2019-01-31 15:43:14 -返回值 : system/dept/dept
2019-01-31 15:46:32 -请求地址 : http://localhost:8080/index
2019-01-31 15:46:32 -HTTP METHOD : GET
2019-01-31 15:46:32 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 15:46:32 -参数 : [{}]
2019-01-31 15:46:32 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 15:46:32 -==> Parameters: 123(String)
2019-01-31 15:46:32 -<==      Total: 7
2019-01-31 15:46:32 -耗时 : 26
2019-01-31 15:46:32 -返回值 : index_v1
2019-01-31 15:46:32 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 15:46:32 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 15:46:32.379(Timestamp)
2019-01-31 15:46:32 -<==    Updates: 1
2019-01-31 15:46:34 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 15:46:34 -==> Parameters: 123(String)
2019-01-31 15:46:34 -<==      Total: 18
2019-01-31 15:46:34 -请求地址 : http://localhost:8080/system/sysDept
2019-01-31 15:46:34 -HTTP METHOD : GET
2019-01-31 15:46:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 15:46:34 -参数 : []
2019-01-31 15:46:34 -耗时 : 1
2019-01-31 15:46:34 -返回值 : system/dept/dept
2019-01-31 15:47:02 -请求地址 : http://localhost:8080/index
2019-01-31 15:47:02 -HTTP METHOD : GET
2019-01-31 15:47:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 15:47:02 -参数 : [{}]
2019-01-31 15:47:02 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 15:47:02 -==> Parameters: 123(String)
2019-01-31 15:47:02 -<==      Total: 7
2019-01-31 15:47:02 -耗时 : 24
2019-01-31 15:47:02 -返回值 : index_v1
2019-01-31 15:47:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 15:47:02 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 25(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 15:47:02.741(Timestamp)
2019-01-31 15:47:02 -<==    Updates: 1
2019-01-31 15:47:07 -请求地址 : http://localhost:8080/system/sysDept
2019-01-31 15:47:07 -HTTP METHOD : GET
2019-01-31 15:47:07 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 15:47:07 -参数 : []
2019-01-31 15:47:07 -耗时 : 0
2019-01-31 15:47:07 -返回值 : system/dept/dept
2019-01-31 15:50:59 -请求地址 : http://localhost:8080/login;JSESSIONID=f7555052-00b1-4c9e-a4b5-cbeb5cf68dc7
2019-01-31 15:50:59 -HTTP METHOD : GET
2019-01-31 15:50:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 15:50:59 -参数 : []
2019-01-31 15:50:59 -耗时 : 1
2019-01-31 15:50:59 -返回值 : login
2019-01-31 15:50:59 -请求地址 : http://localhost:8080/login
2019-01-31 15:50:59 -HTTP METHOD : GET
2019-01-31 15:50:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 15:50:59 -参数 : []
2019-01-31 15:50:59 -耗时 : 0
2019-01-31 15:50:59 -返回值 : login
2019-01-31 15:51:02 -请求地址 : http://localhost:8080/login
2019-01-31 15:51:02 -HTTP METHOD : POST
2019-01-31 15:51:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-31 15:51:02 -参数 : [admin, 123456]
2019-01-31 15:51:02 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-31 15:51:02 -==> Parameters: 
2019-01-31 15:51:02 -<==      Total: 1
2019-01-31 15:51:02 -耗时 : 8
2019-01-31 15:51:02 -返回值 : {msg=操作成功, code=0}
2019-01-31 15:51:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 15:51:02 -==> Parameters: 123(String), admin(String), 登录(String), 8(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-31 15:51:02.311(Timestamp)
2019-01-31 15:51:02 -请求地址 : http://localhost:8080/index
2019-01-31 15:51:02 -HTTP METHOD : GET
2019-01-31 15:51:02 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 15:51:02 -参数 : [{}]
2019-01-31 15:51:02 -<==    Updates: 1
2019-01-31 15:51:02 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 15:51:02 -==> Parameters: 123(String)
2019-01-31 15:51:02 -<==      Total: 7
2019-01-31 15:51:02 -耗时 : 60
2019-01-31 15:51:02 -返回值 : index_v1
2019-01-31 15:51:02 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 15:51:02 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 61(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 15:51:02.394(Timestamp)
2019-01-31 15:51:02 -<==    Updates: 1
2019-01-31 15:51:04 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 15:51:04 -==> Parameters: 123(String)
2019-01-31 15:51:04 -<==      Total: 18
2019-01-31 15:51:04 -请求地址 : http://localhost:8080/system/sysDept
2019-01-31 15:51:04 -HTTP METHOD : GET
2019-01-31 15:51:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 15:51:04 -参数 : []
2019-01-31 15:51:04 -耗时 : 1
2019-01-31 15:51:04 -返回值 : system/dept/dept
2019-01-31 15:52:20 -请求地址 : http://localhost:8080/index
2019-01-31 15:52:20 -HTTP METHOD : GET
2019-01-31 15:52:20 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 15:52:20 -参数 : [{}]
2019-01-31 15:52:20 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 15:52:20 -==> Parameters: 123(String)
2019-01-31 15:52:20 -<==      Total: 7
2019-01-31 15:52:20 -耗时 : 29
2019-01-31 15:52:20 -返回值 : index_v1
2019-01-31 15:52:20 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 15:52:20 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 30(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 15:52:20.777(Timestamp)
2019-01-31 15:52:20 -<==    Updates: 1
2019-01-31 15:52:32 -请求地址 : http://localhost:8080/system/sysDept
2019-01-31 15:52:32 -HTTP METHOD : GET
2019-01-31 15:52:32 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 15:52:32 -参数 : []
2019-01-31 15:52:32 -耗时 : 0
2019-01-31 15:52:32 -返回值 : system/dept/dept
2019-01-31 15:53:02 -请求地址 : http://localhost:8080/system/staff
2019-01-31 15:53:02 -HTTP METHOD : GET
2019-01-31 15:53:02 -CLASS_METHOD : com.bootdo.system.controller.StaffController.Staff
2019-01-31 15:53:02 -参数 : []
2019-01-31 15:53:02 -耗时 : 0
2019-01-31 15:53:02 -返回值 : system/staff/staff
2019-01-31 15:53:02 -请求地址 : http://localhost:8080/system/staff/list
2019-01-31 15:53:02 -HTTP METHOD : GET
2019-01-31 15:53:02 -CLASS_METHOD : com.bootdo.system.controller.StaffController.list
2019-01-31 15:53:02 -参数 : [{page=1, limit=5, deleteflag=1}]
2019-01-31 15:53:02 -==>  Preparing: select `employee_id`,`dept_id`,`employeename`,`estatus`,`sex`,`birthday`,`email`,`qq`,`wx`,`photo`,`telphone`,`professionaltitle`,`educational`,`duty`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_staff WHERE deleteflag = ? order by employee_id desc limit ?, ? 
2019-01-31 15:53:02 -==> Parameters: 1(String), 0(Integer), 5(Integer)
2019-01-31 15:53:02 -<==      Total: 5
2019-01-31 15:53:02 -==>  Preparing: select count(*) from sys_staff WHERE deleteflag = ? 
2019-01-31 15:53:02 -==> Parameters: 1(String)
2019-01-31 15:53:02 -<==      Total: 1
2019-01-31 15:53:02 -耗时 : 43
2019-01-31 15:53:02 -返回值 : com.bootdo.common.utils.PageUtils@7bb3b60e
2019-01-31 15:53:06 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 15:53:06 -==> Parameters: 123(String)
2019-01-31 15:53:06 -<==      Total: 18
2019-01-31 15:53:06 -请求地址 : http://localhost:8080/system/sysDept
2019-01-31 15:53:06 -HTTP METHOD : GET
2019-01-31 15:53:06 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 15:53:06 -参数 : []
2019-01-31 15:53:06 -耗时 : 1
2019-01-31 15:53:06 -返回值 : system/dept/dept
2019-01-31 15:54:25 -请求地址 : http://localhost:8080/system/sysDept
2019-01-31 15:54:25 -HTTP METHOD : GET
2019-01-31 15:54:25 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 15:54:25 -参数 : []
2019-01-31 15:54:25 -耗时 : 1
2019-01-31 15:54:25 -返回值 : system/dept/dept
2019-01-31 15:56:35 -请求地址 : http://localhost:8080/index
2019-01-31 15:56:35 -HTTP METHOD : GET
2019-01-31 15:56:35 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 15:56:35 -参数 : [{}]
2019-01-31 15:56:35 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 15:56:35 -==> Parameters: 123(String)
2019-01-31 15:56:35 -<==      Total: 7
2019-01-31 15:56:35 -耗时 : 24
2019-01-31 15:56:35 -返回值 : index_v1
2019-01-31 15:56:35 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 15:56:35 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 15:56:35.979(Timestamp)
2019-01-31 15:56:36 -<==    Updates: 1
2019-01-31 15:56:38 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 15:56:38 -==> Parameters: 123(String)
2019-01-31 15:56:38 -<==      Total: 18
2019-01-31 15:56:38 -请求地址 : http://localhost:8080/system/sysDept
2019-01-31 15:56:38 -HTTP METHOD : GET
2019-01-31 15:56:38 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 15:56:38 -参数 : []
2019-01-31 15:56:38 -耗时 : 1
2019-01-31 15:56:38 -返回值 : system/dept/dept
2019-01-31 15:58:00 -请求地址 : http://localhost:8080/index
2019-01-31 15:58:00 -HTTP METHOD : GET
2019-01-31 15:58:00 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 15:58:00 -参数 : [{}]
2019-01-31 15:58:00 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 15:58:00 -==> Parameters: 123(String)
2019-01-31 15:58:00 -<==      Total: 7
2019-01-31 15:58:00 -耗时 : 18
2019-01-31 15:58:00 -返回值 : index_v1
2019-01-31 15:58:00 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 15:58:00 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 18(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 15:58:00.974(Timestamp)
2019-01-31 15:58:01 -<==    Updates: 1
2019-01-31 15:58:04 -请求地址 : http://localhost:8080/system/sysDept
2019-01-31 15:58:04 -HTTP METHOD : GET
2019-01-31 15:58:04 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 15:58:04 -参数 : []
2019-01-31 15:58:04 -耗时 : 0
2019-01-31 15:58:04 -返回值 : system/dept/dept
2019-01-31 15:59:25 -Starting BootdoApplication on YH-20180312AAAP with PID 15700 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-31 15:59:25 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-31 15:59:25 -The following profiles are active: dev
2019-01-31 15:59:25 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@241e8ea6: startup date [Thu Jan 31 15:59:25 CST 2019]; root of context hierarchy
2019-01-31 15:59:26 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$65777877] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:59:26 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$59eb3d1b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:59:26 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:59:26 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:59:26 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:59:27 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$f48a0a19] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:59:27 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1c654259] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:59:27 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$ebe7100] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:59:27 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-31 15:59:27 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:59:27 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:59:27 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:59:27 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:59:27 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:59:27 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-31 15:59:28 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-31 15:59:28 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:59:28 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:59:28 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:59:28 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 15:59:28 -Tomcat initialized with port(s): 8080 (http)
2019-01-31 15:59:28 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-31 15:59:28 -Starting service [Tomcat]
2019-01-31 15:59:28 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-31 15:59:28 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-31 15:59:28 -Initializing Spring embedded WebApplicationContext
2019-01-31 15:59:28 -Root WebApplicationContext: initialization completed in 3296 ms
2019-01-31 15:59:29 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-31 15:59:29 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-31 15:59:29 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-31 15:59:29 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-31 15:59:29 -Filter xssFilter was not registered (disabled)
2019-01-31 15:59:29 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-31 15:59:29 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-31 15:59:29 -Servlet statViewServlet mapped to [/druid/*]
2019-01-31 15:59:29 -Servlet dispatcherServlet mapped to [/]
2019-01-31 15:59:29 -{dataSource-1} inited
2019-01-31 15:59:30 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@241e8ea6: startup date [Thu Jan 31 15:59:25 CST 2019]; root of context hierarchy
2019-01-31 15:59:30 -Using default implementation for ThreadExecutor
2019-01-31 15:59:30 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-31 15:59:30 -Quartz Scheduler v.2.2.1 created.
2019-01-31 15:59:30 -RAMJobStore initialized.
2019-01-31 15:59:30 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-31 15:59:30 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-31 15:59:30 -Quartz scheduler version: 2.2.1
2019-01-31 15:59:30 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@4ac19bc6
2019-01-31 15:59:31 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-31 15:59:31 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-31 15:59:32 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-01-31 15:59:32 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-01-31 15:59:32 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-01-31 15:59:32 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-01-31 15:59:32 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:59:32 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-01-31 15:59:32 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-01-31 15:59:32 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-01-31 15:59:32 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 15:59:32 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-01-31 15:59:32 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:59:32 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-31 15:59:32 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-31 15:59:32 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 15:59:32 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-31 15:59:32 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 15:59:32 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-31 15:59:32 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-31 15:59:32 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-31 15:59:32 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-31 15:59:32 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:59:32 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-31 15:59:32 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-31 15:59:32 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 15:59:32 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-31 15:59:32 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-31 15:59:32 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-31 15:59:32 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-31 15:59:32 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:59:32 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-31 15:59:32 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 15:59:32 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 15:59:32 -Mapped "{[/system/sysDept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-31 15:59:32 -Mapped "{[/system/sysDept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-31 15:59:32 -Mapped "{[/system/sysDept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-31 15:59:32 -Mapped "{[/system/sysDept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-31 15:59:32 -Mapped "{[/system/sysDept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:59:32 -Mapped "{[/system/sysDept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-31 15:59:32 -Mapped "{[/system/sysDept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 15:59:32 -Mapped "{[/system/sysDept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-31 15:59:32 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-31 15:59:32 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-31 15:59:32 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-31 15:59:32 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-31 15:59:32 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-31 15:59:32 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-31 15:59:32 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 15:59:32 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-31 15:59:32 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-31 15:59:32 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:59:32 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-31 15:59:32 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-31 15:59:32 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-31 15:59:32 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-31 15:59:32 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-31 15:59:32 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-31 15:59:32 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-31 15:59:32 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-31 15:59:32 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-31 15:59:32 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-31 15:59:32 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-31 15:59:32 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-31 15:59:32 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 15:59:32 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-31 15:59:32 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-31 15:59:32 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-31 15:59:32 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-31 15:59:32 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-31 15:59:32 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String)
2019-01-31 15:59:32 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String[])
2019-01-31 15:59:32 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-31 15:59:32 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:59:32 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-31 15:59:32 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-31 15:59:32 -Mapped "{[/system/staff/edit/{employeeId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 15:59:32 -Mapped "{[/system/staff/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-01-31 15:59:32 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-31 15:59:32 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-31 15:59:32 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-31 15:59:32 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-31 15:59:32 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:59:32 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-31 15:59:32 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-31 15:59:32 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-31 15:59:32 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-31 15:59:32 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 15:59:32 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:59:32 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 15:59:32 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 15:59:32 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-31 15:59:32 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-31 15:59:32 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-31 15:59:32 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-31 15:59:32 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-31 15:59:32 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-31 15:59:32 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-31 15:59:32 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-31 15:59:32 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-31 15:59:33 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-31 15:59:33 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-31 15:59:33 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-31 15:59:33 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 15:59:33 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@241e8ea6: startup date [Thu Jan 31 15:59:25 CST 2019]; root of context hierarchy
2019-01-31 15:59:33 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 15:59:33 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 15:59:33 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 15:59:33 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-31 15:59:34 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-31 15:59:34 -Registering beans for JMX exposure on startup
2019-01-31 15:59:34 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-31 15:59:34 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-31 15:59:34 -Starting beans in phase 2147483647
2019-01-31 15:59:34 -Context refreshed
2019-01-31 15:59:34 -Found 1 custom documentation plugin(s)
2019-01-31 15:59:34 -Scanning for api listing references
2019-01-31 15:59:35 -Generating unique operation named: removeUsingPOST_1
2019-01-31 15:59:35 -Generating unique operation named: addUsingGET_1
2019-01-31 15:59:35 -Generating unique operation named: editUsingGET_1
2019-01-31 15:59:35 -Generating unique operation named: listUsingGET_1
2019-01-31 15:59:35 -Generating unique operation named: removeUsingPOST_2
2019-01-31 15:59:35 -Generating unique operation named: removeUsingPOST_3
2019-01-31 15:59:35 -Generating unique operation named: saveUsingPOST_1
2019-01-31 15:59:35 -Generating unique operation named: updateUsingGET_1
2019-01-31 15:59:35 -Generating unique operation named: updateUsingHEAD_1
2019-01-31 15:59:35 -Generating unique operation named: updateUsingPOST_1
2019-01-31 15:59:35 -Generating unique operation named: updateUsingPUT_1
2019-01-31 15:59:35 -Generating unique operation named: updateUsingPATCH_1
2019-01-31 15:59:35 -Generating unique operation named: updateUsingDELETE_1
2019-01-31 15:59:35 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-31 15:59:35 -Generating unique operation named: updateUsingTRACE_1
2019-01-31 15:59:35 -Generating unique operation named: editUsingGET_2
2019-01-31 15:59:35 -Generating unique operation named: listUsingGET_2
2019-01-31 15:59:35 -Generating unique operation named: updateUsingPOST_2
2019-01-31 15:59:35 -Generating unique operation named: addUsingGET_2
2019-01-31 15:59:35 -Generating unique operation named: editUsingGET_3
2019-01-31 15:59:35 -Generating unique operation named: infoUsingGET_1
2019-01-31 15:59:35 -Generating unique operation named: infoUsingHEAD_1
2019-01-31 15:59:35 -Generating unique operation named: infoUsingPOST_1
2019-01-31 15:59:35 -Generating unique operation named: infoUsingPUT_1
2019-01-31 15:59:35 -Generating unique operation named: infoUsingPATCH_1
2019-01-31 15:59:35 -Generating unique operation named: infoUsingDELETE_1
2019-01-31 15:59:35 -Generating unique operation named: infoUsingOPTIONS_1
2019-01-31 15:59:35 -Generating unique operation named: infoUsingTRACE_1
2019-01-31 15:59:35 -Generating unique operation named: listUsingGET_3
2019-01-31 15:59:35 -Generating unique operation named: removeUsingPOST_4
2019-01-31 15:59:35 -Generating unique operation named: removeUsingPOST_5
2019-01-31 15:59:35 -Generating unique operation named: saveUsingPOST_2
2019-01-31 15:59:35 -Generating unique operation named: updateUsingPOST_3
2019-01-31 15:59:35 -Generating unique operation named: listUsingGET_4
2019-01-31 15:59:35 -Generating unique operation named: removeUsingPOST_6
2019-01-31 15:59:35 -Generating unique operation named: welcomeUsingGET_1
2019-01-31 15:59:35 -Generating unique operation named: addUsingGET_3
2019-01-31 15:59:35 -Generating unique operation named: editUsingGET_4
2019-01-31 15:59:35 -Generating unique operation named: listUsingGET_5
2019-01-31 15:59:35 -Generating unique operation named: removeUsingPOST_7
2019-01-31 15:59:35 -Generating unique operation named: saveUsingPOST_3
2019-01-31 15:59:35 -Generating unique operation named: treeUsingGET_1
2019-01-31 15:59:35 -Generating unique operation named: updateUsingPOST_4
2019-01-31 15:59:35 -Generating unique operation named: addUsingGET_4
2019-01-31 15:59:35 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-31 15:59:35 -Generating unique operation named: editUsingGET_5
2019-01-31 15:59:35 -Generating unique operation named: listUsingGET_6
2019-01-31 15:59:35 -Generating unique operation named: saveUsingPOST_4
2019-01-31 15:59:35 -Generating unique operation named: saveUsingPOST_5
2019-01-31 15:59:35 -Generating unique operation named: updateUsingPOST_5
2019-01-31 15:59:35 -Generating unique operation named: listUsingGET_7
2019-01-31 15:59:35 -Generating unique operation named: listUsingHEAD_1
2019-01-31 15:59:35 -Generating unique operation named: listUsingPOST_1
2019-01-31 15:59:35 -Generating unique operation named: listUsingPUT_1
2019-01-31 15:59:35 -Generating unique operation named: listUsingPATCH_1
2019-01-31 15:59:35 -Generating unique operation named: listUsingDELETE_1
2019-01-31 15:59:35 -Generating unique operation named: listUsingOPTIONS_1
2019-01-31 15:59:35 -Generating unique operation named: listUsingTRACE_1
2019-01-31 15:59:35 -Generating unique operation named: addUsingGET_5
2019-01-31 15:59:35 -Generating unique operation named: editUsingGET_6
2019-01-31 15:59:35 -Generating unique operation named: listUsingGET_8
2019-01-31 15:59:35 -Generating unique operation named: removeUsingPOST_8
2019-01-31 15:59:35 -Generating unique operation named: removeUsingPOST_9
2019-01-31 15:59:35 -Generating unique operation named: saveUsingPOST_6
2019-01-31 15:59:35 -Generating unique operation named: updateUsingGET_2
2019-01-31 15:59:35 -Generating unique operation named: updateUsingHEAD_2
2019-01-31 15:59:35 -Generating unique operation named: updateUsingPOST_6
2019-01-31 15:59:35 -Generating unique operation named: updateUsingPUT_2
2019-01-31 15:59:35 -Generating unique operation named: updateUsingPATCH_2
2019-01-31 15:59:35 -Generating unique operation named: updateUsingDELETE_2
2019-01-31 15:59:35 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-31 15:59:35 -Generating unique operation named: updateUsingTRACE_2
2019-01-31 15:59:35 -Generating unique operation named: uploadUsingPOST_1
2019-01-31 15:59:35 -Generating unique operation named: addUsingGET_6
2019-01-31 15:59:35 -Generating unique operation named: editUsingGET_7
2019-01-31 15:59:35 -Generating unique operation named: listUsingGET_9
2019-01-31 15:59:35 -Generating unique operation named: removeUsingPOST_10
2019-01-31 15:59:35 -Generating unique operation named: removeUsingPOST_11
2019-01-31 15:59:35 -Generating unique operation named: saveUsingPOST_7
2019-01-31 15:59:35 -Generating unique operation named: updateUsingGET_3
2019-01-31 15:59:35 -Generating unique operation named: updateUsingHEAD_3
2019-01-31 15:59:35 -Generating unique operation named: updateUsingPOST_7
2019-01-31 15:59:35 -Generating unique operation named: updateUsingPUT_3
2019-01-31 15:59:35 -Generating unique operation named: updateUsingPATCH_3
2019-01-31 15:59:35 -Generating unique operation named: updateUsingDELETE_3
2019-01-31 15:59:35 -Generating unique operation named: updateUsingOPTIONS_3
2019-01-31 15:59:35 -Generating unique operation named: updateUsingTRACE_3
2019-01-31 15:59:35 -Generating unique operation named: addUsingGET_7
2019-01-31 15:59:35 -Generating unique operation named: editUsingGET_8
2019-01-31 15:59:35 -Generating unique operation named: listUsingGET_10
2019-01-31 15:59:35 -Generating unique operation named: roleUsingGET_1
2019-01-31 15:59:35 -Generating unique operation named: saveUsingPOST_8
2019-01-31 15:59:35 -Starting Quartz Scheduler now
2019-01-31 15:59:35 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-31 15:59:35 -Starting...
2019-01-31 15:59:35 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-31 15:59:35 -Started.
2019-01-31 15:59:35 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-31 15:59:35 -Using a shared selector for servlet write/read
2019-01-31 15:59:36 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-31 15:59:36 -Started BootdoApplication in 11.157 seconds (JVM running for 11.711)
2019-01-31 15:59:36 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-31 15:59:36 -==> Parameters: 
2019-01-31 15:59:36 -<==      Total: 1
2019-01-31 15:59:36 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-31 15:59:36 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-31 15:59:36 -FrameworkServlet 'dispatcherServlet': initialization completed in 27 ms
2019-01-31 15:59:36 -Enabling session validation scheduler...
2019-01-31 15:59:36 -请求地址 : http://localhost:8080/login;JSESSIONID=21fc2578-f7c7-4804-8dab-f7a7c5247406
2019-01-31 15:59:36 -HTTP METHOD : GET
2019-01-31 15:59:36 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 15:59:36 -参数 : []
2019-01-31 15:59:36 -耗时 : 3
2019-01-31 15:59:36 -返回值 : login
2019-01-31 15:59:37 -请求地址 : http://localhost:8080/login
2019-01-31 15:59:37 -HTTP METHOD : GET
2019-01-31 15:59:37 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 15:59:37 -参数 : []
2019-01-31 15:59:37 -耗时 : 1
2019-01-31 15:59:37 -返回值 : login
2019-01-31 15:59:40 -请求地址 : http://localhost:8080/login
2019-01-31 15:59:40 -HTTP METHOD : POST
2019-01-31 15:59:40 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-31 15:59:40 -参数 : [admin, 123456]
2019-01-31 15:59:40 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-31 15:59:40 -==> Parameters: 
2019-01-31 15:59:40 -<==      Total: 1
2019-01-31 15:59:40 -耗时 : 44
2019-01-31 15:59:40 -返回值 : {msg=操作成功, code=0}
2019-01-31 15:59:41 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-31 15:59:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 15:59:41 -==> Parameters: 123(String), admin(String), 登录(String), 45(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-31 15:59:41.025(Timestamp)
2019-01-31 15:59:41 -请求地址 : http://localhost:8080/index
2019-01-31 15:59:41 -HTTP METHOD : GET
2019-01-31 15:59:41 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 15:59:41 -参数 : [{}]
2019-01-31 15:59:41 -<==    Updates: 1
2019-01-31 15:59:41 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 15:59:41 -==> Parameters: 123(String)
2019-01-31 15:59:41 -<==      Total: 7
2019-01-31 15:59:41 -耗时 : 87
2019-01-31 15:59:41 -返回值 : index_v1
2019-01-31 15:59:41 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 15:59:41 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 87(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 15:59:41.19(Timestamp)
2019-01-31 15:59:41 -<==    Updates: 1
2019-01-31 15:59:43 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 15:59:43 -==> Parameters: 123(String)
2019-01-31 15:59:43 -<==      Total: 18
2019-01-31 15:59:43 -请求地址 : http://localhost:8080/system/sysDept
2019-01-31 15:59:43 -HTTP METHOD : GET
2019-01-31 15:59:43 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 15:59:43 -参数 : []
2019-01-31 15:59:43 -耗时 : 0
2019-01-31 15:59:43 -返回值 : system/dept/dept
2019-01-31 16:00:32 -Starting BootdoApplication on YH-20180312AAAP with PID 14916 (F:\personal\code\bootdogzl\target\classes started by Administrator in F:\personal\code\bootdogzl)
2019-01-31 16:00:32 -Running with Spring Boot v2.0.1.RELEASE, Spring v5.0.5.RELEASE
2019-01-31 16:00:32 -The following profiles are active: dev
2019-01-31 16:00:32 -Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@388526fb: startup date [Thu Jan 31 16:00:32 CST 2019]; root of context hierarchy
2019-01-31 16:00:34 -Bean 'org.springframework.cache.annotation.ProxyCachingConfiguration' of type [org.springframework.cache.annotation.ProxyCachingConfiguration$$EnhancerBySpringCGLIB$$e460bc82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 16:00:34 -Bean 'org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$$EnhancerBySpringCGLIB$$d8d48126] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 16:00:34 -Bean 'org.springframework.boot.context.properties.ConversionServiceDeducer$Factory' of type [org.springframework.boot.context.properties.ConversionServiceDeducer$Factory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 16:00:34 -Bean 'spring.cache-org.springframework.boot.autoconfigure.cache.CacheProperties' of type [org.springframework.boot.autoconfigure.cache.CacheProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 16:00:34 -Bean 'cacheManagerCustomizers' of type [org.springframework.boot.autoconfigure.cache.CacheManagerCustomizers] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 16:00:34 -Bean 'org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration' of type [org.springframework.boot.autoconfigure.cache.EhCacheCacheConfiguration$$EnhancerBySpringCGLIB$$73734e24] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 16:00:34 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9b4e8664] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 16:00:34 -Bean 'shiroConfig' of type [com.bootdo.system.config.ShiroConfig$$EnhancerBySpringCGLIB$$8da7b50b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 16:00:34 -No configuration found. Configuring ehcache from ehcache-failsafe.xml  found in the classpath: jar:file:/D:/software/java/localmaven/net/sf/ehcache/ehcache/2.10.4/ehcache-2.10.4.jar!/ehcache-failsafe.xml
2019-01-31 16:00:34 -Bean 'cacheManager2' of type [net.sf.ehcache.CacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 16:00:34 -Bean 'cacheManager' of type [org.springframework.cache.ehcache.EhCacheCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 16:00:34 -Bean 'cacheAutoConfigurationValidator' of type [org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration$CacheManagerValidator] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 16:00:35 -Bean 'userRealm' of type [com.bootdo.system.shiro.UserRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 16:00:35 -Bean 'ehCacheManager' of type [org.apache.shiro.cache.ehcache.EhCacheManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 16:00:35 -Cache with name 'com.bootdo.system.shiro.UserRealm.authorizationCache' does not yet exist.  Creating now.
2019-01-31 16:00:35 -Added EhCache named [com.bootdo.system.shiro.UserRealm.authorizationCache]
2019-01-31 16:00:35 -Bean 'sessionDAO' of type [org.apache.shiro.session.mgt.eis.MemorySessionDAO] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 16:00:35 -Bean 'sessionManager' of type [org.apache.shiro.web.session.mgt.DefaultWebSessionManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 16:00:35 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 16:00:35 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-01-31 16:00:35 -Tomcat initialized with port(s): 8080 (http)
2019-01-31 16:00:35 -Initializing ProtocolHandler ["http-nio-8080"]
2019-01-31 16:00:35 -Starting service [Tomcat]
2019-01-31 16:00:35 -Starting Servlet Engine: Apache Tomcat/8.5.29
2019-01-31 16:00:35 -The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [E:\Program Files\Java\jdk1.8.0_191\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;E:/Program Files/Java/jre1.8.0_191/bin/server;E:/Program Files/Java/jre1.8.0_191/bin;E:/Program Files/Java/jre1.8.0_191/lib/amd64;C:\Program Files (x86)\Common Files\NetSarang;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;D:\svn\Apache-Subversion-1.9.7\bin;%MAVEN_HOME%/bin;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files\TortoiseSVN\bin;C:\Program Files\dotnet\;E:\Program Files\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\Client SDK\ODBC\110\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files\Microsoft SQL Server\120\Tools\Binn\;E:\Program Files (x86)\Microsoft SQL Server\120\Tools\Binn\ManagementStudio\;E:\Program Files (x86)\Microsoft SQL Server\120\DTS\Binn\;E:\Program Files\Microsoft SQL Server\130\Tools\Binn\;E:\Program Files\Java\jdk1.8.0_191\bin;E:\Program Files\Java\jdk1.8.0_191\jre\bin;D:\software\java\apache-maven-3.5.3\bin;D:\Program Files (x86)\CodeSmith\v7.0\;C:\Program Files (x86)\dotnet\;C:\Program Files\Git\cmd;C:\Users\Administrator\.dotnet\tools;C:\Users\Administrator\AppData\Local\GitHubDesktop\bin;E:\Program Files\Docker Toolbox;D:\software\java\eclipse-jee-luna-SR2-win32-x86_64\eclipse;;.]
2019-01-31 16:00:35 -Initializing Spring embedded WebApplicationContext
2019-01-31 16:00:35 -Root WebApplicationContext: initialization completed in 3154 ms
2019-01-31 16:00:36 -Mapping filter: 'characterEncodingFilter' to: [/*]
2019-01-31 16:00:36 -Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-01-31 16:00:36 -Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-01-31 16:00:36 -Mapping filter: 'requestContextFilter' to: [/*]
2019-01-31 16:00:36 -Filter xssFilter was not registered (disabled)
2019-01-31 16:00:36 -Mapping filter: 'webStatFilter' to urls: [/*]
2019-01-31 16:00:36 -Mapping filter: 'shiroFilterFactoryBean' to: [/*]
2019-01-31 16:00:36 -Servlet statViewServlet mapped to [/druid/*]
2019-01-31 16:00:36 -Servlet dispatcherServlet mapped to [/]
2019-01-31 16:00:36 -{dataSource-1} inited
2019-01-31 16:00:37 -ApplicationContext registed-->org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@388526fb: startup date [Thu Jan 31 16:00:32 CST 2019]; root of context hierarchy
2019-01-31 16:00:37 -Using default implementation for ThreadExecutor
2019-01-31 16:00:37 -Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2019-01-31 16:00:37 -Quartz Scheduler v.2.2.1 created.
2019-01-31 16:00:37 -RAMJobStore initialized.
2019-01-31 16:00:37 -Scheduler meta-data: Quartz Scheduler (v2.2.1) 'schedulerFactoryBean' with instanceId 'NON_CLUSTERED'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 10 threads.
  Using job-store 'org.quartz.simpl.RAMJobStore' - which does not support persistence. and is not clustered.

2019-01-31 16:00:37 -Quartz scheduler 'schedulerFactoryBean' initialized from an externally provided properties instance.
2019-01-31 16:00:37 -Quartz scheduler version: 2.2.1
2019-01-31 16:00:37 -JobFactory set to: com.bootdo.common.quartz.factory.JobFactory@97b5e6a
2019-01-31 16:00:38 -Initializing ExecutorService  'clientInboundChannelExecutor'
2019-01-31 16:00:38 -Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-01-31 16:00:39 -Mapped "{[/common/sysFile/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.add()
2019-01-31 16:00:39 -Mapped "{[/common/sysFile/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long,javax.servlet.http.HttpServletRequest)
2019-01-31 16:00:39 -Mapped "{[/common/sysFile/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.remove(java.lang.Long[])
2019-01-31 16:00:39 -Mapped "{[/common/sysFile/update]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.update(com.bootdo.common.domain.FileDO)
2019-01-31 16:00:39 -Mapped "{[/common/sysFile/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.FileController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 16:00:39 -Mapped "{[/common/sysFile/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.save(com.bootdo.common.domain.FileDO)
2019-01-31 16:00:39 -Mapped "{[/common/sysFile/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.FileController.info(java.lang.Long)
2019-01-31 16:00:39 -Mapped "{[/common/sysFile],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.sysFile(org.springframework.ui.Model)
2019-01-31 16:00:39 -Mapped "{[/common/sysFile/edit],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.FileController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 16:00:39 -Mapped "{[/common/sysFile/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.FileController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-01-31 16:00:39 -Mapped "{[/common/generator/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.GeneratorController.update(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 16:00:39 -Mapped "{[/common/generator/list],methods=[GET]}" onto java.util.List<java.util.Map<java.lang.String, java.lang.Object>> com.bootdo.common.controller.GeneratorController.list()
2019-01-31 16:00:39 -Mapped "{[/common/generator/code/{tableName}]}" onto public void com.bootdo.common.controller.GeneratorController.code(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 16:00:39 -Mapped "{[/common/generator],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.GeneratorController.generator()
2019-01-31 16:00:39 -Mapped "{[/common/generator/edit],methods=[GET]}" onto public java.lang.String com.bootdo.common.controller.GeneratorController.edit(org.springframework.ui.Model)
2019-01-31 16:00:39 -Mapped "{[/common/generator/batchCode]}" onto public void com.bootdo.common.controller.GeneratorController.batchCode(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.String) throws java.io.IOException
2019-01-31 16:00:39 -Mapped "{[/common/job/add],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.add()
2019-01-31 16:00:39 -Mapped "{[/common/job/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long)
2019-01-31 16:00:39 -Mapped "{[/common/job/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.remove(java.lang.Long[])
2019-01-31 16:00:39 -Mapped "{[/common/job/update],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.update(com.bootdo.common.domain.TaskDO)
2019-01-31 16:00:39 -Mapped "{[/common/job/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.common.controller.JobController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 16:00:39 -Mapped "{[/common/job/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.save(com.bootdo.common.domain.TaskDO)
2019-01-31 16:00:39 -Mapped "{[/common/job/info/{id}]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.info(java.lang.Long)
2019-01-31 16:00:39 -Mapped "{[/common/job/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 16:00:39 -Mapped "{[/common/job],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.JobController.taskScheduleJob()
2019-01-31 16:00:39 -Mapped "{[/common/job/changeJobStatus],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.common.controller.JobController.changeJobStatus(java.lang.Long,java.lang.String)
2019-01-31 16:00:39 -Mapped "{[/common/log/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.remove(java.lang.Long)
2019-01-31 16:00:39 -Mapped "{[/common/log],methods=[GET]}" onto java.lang.String com.bootdo.common.controller.LogController.log()
2019-01-31 16:00:39 -Mapped "{[/common/log/list],methods=[GET]}" onto com.bootdo.common.domain.PageDO<com.bootdo.common.domain.LogDO> com.bootdo.common.controller.LogController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 16:00:39 -Mapped "{[/common/log/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.common.controller.LogController.batchRemove(java.lang.Long[])
2019-01-31 16:00:39 -Mapped "{[/error]}" onto public com.bootdo.common.utils.R com.bootdo.common.exception.MainsiteErrorController.handleError(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 16:00:39 -Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView com.bootdo.common.exception.MainsiteErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-01-31 16:00:39 -Mapped "{[/system/dept/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.add()
2019-01-31 16:00:39 -Mapped "{[/system/dept/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String)
2019-01-31 16:00:39 -Mapped "{[/system/dept/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.remove(java.lang.String[])
2019-01-31 16:00:39 -Mapped "{[/system/dept/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.update(com.bootdo.system.domain.DeptDO)
2019-01-31 16:00:39 -Mapped "{[/system/dept/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.DeptController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 16:00:39 -Mapped "{[/system/dept/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.DeptController.save(com.bootdo.system.domain.DeptDO)
2019-01-31 16:00:39 -Mapped "{[/system/dept/edit/{deptId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 16:00:39 -Mapped "{[/system/dept],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.DeptController.Dept()
2019-01-31 16:00:39 -Mapped "{[/index],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.index(org.springframework.ui.Model)
2019-01-31 16:00:39 -Mapped "{[/main],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.main()
2019-01-31 16:00:39 -Mapped "{[/login],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.login()
2019-01-31 16:00:39 -Mapped "{[/logout],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.logout()
2019-01-31 16:00:39 -Mapped "{[/ || ],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.LoginController.welcome(org.springframework.ui.Model)
2019-01-31 16:00:39 -Mapped "{[/login],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.LoginController.ajaxLogin(java.lang.String,java.lang.String)
2019-01-31 16:00:39 -Mapped "{[/sys/menu/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 16:00:39 -Mapped "{[/sys/menu/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.remove(java.lang.String)
2019-01-31 16:00:39 -Mapped "{[/sys/menu/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.update(com.bootdo.system.domain.MenuDO)
2019-01-31 16:00:39 -Mapped "{[/sys/menu/list]}" onto java.util.List<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 16:00:39 -Mapped "{[/sys/menu/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.MenuController.save(com.bootdo.system.domain.MenuDO)
2019-01-31 16:00:39 -Mapped "{[/sys/menu/tree/{roleId}],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree(java.lang.String)
2019-01-31 16:00:39 -Mapped "{[/sys/menu/tree],methods=[GET]}" onto com.bootdo.common.domain.Tree<com.bootdo.system.domain.MenuDO> com.bootdo.system.controller.MenuController.tree()
2019-01-31 16:00:39 -Mapped "{[/sys/menu/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.edit(org.springframework.ui.Model,java.lang.String)
2019-01-31 16:00:39 -Mapped "{[/sys/menu],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.MenuController.menu(org.springframework.ui.Model)
2019-01-31 16:00:39 -Mapped "{[/sys/role/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.add()
2019-01-31 16:00:39 -Mapped "{[/sys/role/update],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.update(com.bootdo.system.domain.RoleDO)
2019-01-31 16:00:39 -Mapped "{[/sys/role/list],methods=[GET]}" onto java.util.List<com.bootdo.system.domain.RoleDO> com.bootdo.system.controller.RoleController.list()
2019-01-31 16:00:39 -Mapped "{[/sys/role/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(java.lang.Long)
2019-01-31 16:00:39 -Mapped "{[/sys/role/save],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.save(com.bootdo.system.domain.RoleDO)
2019-01-31 16:00:39 -Mapped "{[/sys/role/batchRemove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.RoleController.batchRemove(java.lang.Long[])
2019-01-31 16:00:39 -Mapped "{[/sys/role],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.role()
2019-01-31 16:00:39 -Mapped "{[/sys/role/edit/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.RoleController.edit(java.lang.Long,org.springframework.ui.Model)
2019-01-31 16:00:39 -Mapped "{[/sys/online/list]}" onto public java.util.List<com.bootdo.system.domain.UserOnline> com.bootdo.system.controller.SessionController.list()
2019-01-31 16:00:39 -Mapped "{[/sys/online/sessionList]}" onto public java.util.Collection<org.apache.shiro.session.Session> com.bootdo.system.controller.SessionController.sessionList()
2019-01-31 16:00:39 -Mapped "{[/sys/online/forceLogout/{sessionId}]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.SessionController.forceLogout(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2019-01-31 16:00:39 -Mapped "{[/sys/online],methods=[GET]}" onto public java.lang.String com.bootdo.system.controller.SessionController.online()
2019-01-31 16:00:39 -Mapped "{[/system/staff/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.add()
2019-01-31 16:00:39 -Mapped "{[/system/staff/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String)
2019-01-31 16:00:39 -Mapped "{[/system/staff/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.remove(java.lang.String[])
2019-01-31 16:00:39 -Mapped "{[/system/staff/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.update(com.bootdo.system.domain.StaffDO)
2019-01-31 16:00:39 -Mapped "{[/system/staff/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.StaffController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 16:00:39 -Mapped "{[/system/staff/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.save(com.bootdo.system.domain.StaffDO)
2019-01-31 16:00:39 -Mapped "{[/system/staff/edit/{employeeId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 16:00:39 -Mapped "{[/system/staff/upload],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.StaffController.upload(org.springframework.web.multipart.MultipartFile,javax.servlet.http.HttpServletRequest)
2019-01-31 16:00:39 -Mapped "{[/system/staff],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.StaffController.Staff()
2019-01-31 16:00:39 -Mapped "{[/sys/user/add],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.add()
2019-01-31 16:00:39 -Mapped "{[/sys/user/remove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String)
2019-01-31 16:00:39 -Mapped "{[/sys/user/batchRemove],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.remove(java.lang.String[])
2019-01-31 16:00:39 -Mapped "{[/sys/user/update]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.update(com.bootdo.system.domain.UserDO)
2019-01-31 16:00:39 -Mapped "{[/sys/user/list],methods=[GET]}" onto public com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 16:00:39 -Mapped "{[/sys/user/save],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.save(com.bootdo.system.domain.UserDO)
2019-01-31 16:00:39 -Mapped "{[/sys/user],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.User()
2019-01-31 16:00:39 -Mapped "{[/sys/user/edit/{userId}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserController.edit(java.lang.String,org.springframework.ui.Model)
2019-01-31 16:00:39 -Mapped "{[/sys/user/isExist],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.isExist(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 16:00:39 -Mapped "{[/sys/user/adminresetpwd],methods=[POST]}" onto public com.bootdo.common.utils.R com.bootdo.system.controller.UserController.adminresetpwd(java.lang.String)
2019-01-31 16:00:39 -Mapped "{[/sys/user/resetPwd],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserController.resetPwd(com.bootdo.system.vo.UserVO)
2019-01-31 16:00:39 -Mapped "{[/sys/roleuser/add/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.add(org.springframework.ui.Model,java.lang.String)
2019-01-31 16:00:39 -Mapped "{[/sys/roleuser/list],methods=[GET]}" onto com.bootdo.common.utils.PageUtils com.bootdo.system.controller.UserRoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-01-31 16:00:39 -Mapped "{[/sys/roleuser/remove],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.save(java.lang.Long)
2019-01-31 16:00:39 -Mapped "{[/sys/roleuser],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.role()
2019-01-31 16:00:39 -Mapped "{[/sys/roleuser/members/{id}],methods=[GET]}" onto java.lang.String com.bootdo.system.controller.UserRoleController.edit(org.springframework.ui.Model,java.lang.Long)
2019-01-31 16:00:39 -Mapped "{[/sys/roleuser/addToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.addtorole(java.lang.Long,java.lang.Long)
2019-01-31 16:00:39 -Mapped "{[/sys/roleuser/batchAddToRole],methods=[POST]}" onto com.bootdo.common.utils.R com.bootdo.system.controller.UserRoleController.batchAddToRole(java.lang.Long[],java.lang.Long)
2019-01-31 16:00:39 -Mapped "{[/v2/api-docs],methods=[GET],produces=[application/json || application/hal+json]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)
2019-01-31 16:00:39 -Mapped "{[/swagger-resources/configuration/security]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-01-31 16:00:39 -Mapped "{[/swagger-resources]}" onto org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-01-31 16:00:39 -Mapped "{[/swagger-resources/configuration/ui]}" onto org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-01-31 16:00:39 -Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-01-31 16:00:39 -Mapped URL path [/endpointChat/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-01-31 16:00:39 -Initializing ExecutorService  'brokerChannelExecutor'
2019-01-31 16:00:40 -Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 16:00:40 -Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@388526fb: startup date [Thu Jan 31 16:00:32 CST 2019]; root of context hierarchy
2019-01-31 16:00:40 -Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 16:00:40 -Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 16:00:40 -Mapped URL path [/files/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-01-31 16:00:40 -Detected @ExceptionHandler methods in BDExceptionHandler
2019-01-31 16:00:40 -[THYMELEAF][main] Template Mode 'LEGACYHTML5' is deprecated. Using Template Mode 'HTML' instead.
2019-01-31 16:00:41 -Registering beans for JMX exposure on startup
2019-01-31 16:00:41 -Bean with name 'dataSource' has been autodetected for JMX exposure
2019-01-31 16:00:41 -Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-01-31 16:00:41 -Starting beans in phase 2147483647
2019-01-31 16:00:41 -Context refreshed
2019-01-31 16:00:41 -Found 1 custom documentation plugin(s)
2019-01-31 16:00:41 -Scanning for api listing references
2019-01-31 16:00:41 -Generating unique operation named: removeUsingPOST_1
2019-01-31 16:00:41 -Generating unique operation named: addUsingGET_1
2019-01-31 16:00:41 -Generating unique operation named: editUsingGET_1
2019-01-31 16:00:41 -Generating unique operation named: listUsingGET_1
2019-01-31 16:00:41 -Generating unique operation named: removeUsingPOST_2
2019-01-31 16:00:41 -Generating unique operation named: removeUsingPOST_3
2019-01-31 16:00:41 -Generating unique operation named: saveUsingPOST_1
2019-01-31 16:00:41 -Generating unique operation named: updateUsingGET_1
2019-01-31 16:00:41 -Generating unique operation named: updateUsingHEAD_1
2019-01-31 16:00:41 -Generating unique operation named: updateUsingPOST_1
2019-01-31 16:00:41 -Generating unique operation named: updateUsingPUT_1
2019-01-31 16:00:41 -Generating unique operation named: updateUsingPATCH_1
2019-01-31 16:00:41 -Generating unique operation named: updateUsingDELETE_1
2019-01-31 16:00:41 -Generating unique operation named: updateUsingOPTIONS_1
2019-01-31 16:00:41 -Generating unique operation named: updateUsingTRACE_1
2019-01-31 16:00:41 -Generating unique operation named: editUsingGET_2
2019-01-31 16:00:41 -Generating unique operation named: listUsingGET_2
2019-01-31 16:00:41 -Generating unique operation named: updateUsingPOST_2
2019-01-31 16:00:41 -Generating unique operation named: addUsingGET_2
2019-01-31 16:00:41 -Generating unique operation named: editUsingGET_3
2019-01-31 16:00:41 -Generating unique operation named: infoUsingGET_1
2019-01-31 16:00:41 -Generating unique operation named: infoUsingHEAD_1
2019-01-31 16:00:41 -Generating unique operation named: infoUsingPOST_1
2019-01-31 16:00:41 -Generating unique operation named: infoUsingPUT_1
2019-01-31 16:00:41 -Generating unique operation named: infoUsingPATCH_1
2019-01-31 16:00:41 -Generating unique operation named: infoUsingDELETE_1
2019-01-31 16:00:41 -Generating unique operation named: infoUsingOPTIONS_1
2019-01-31 16:00:41 -Generating unique operation named: infoUsingTRACE_1
2019-01-31 16:00:41 -Generating unique operation named: listUsingGET_3
2019-01-31 16:00:41 -Generating unique operation named: removeUsingPOST_4
2019-01-31 16:00:41 -Generating unique operation named: removeUsingPOST_5
2019-01-31 16:00:41 -Generating unique operation named: saveUsingPOST_2
2019-01-31 16:00:41 -Generating unique operation named: updateUsingPOST_3
2019-01-31 16:00:41 -Generating unique operation named: listUsingGET_4
2019-01-31 16:00:41 -Generating unique operation named: removeUsingPOST_6
2019-01-31 16:00:41 -Generating unique operation named: welcomeUsingGET_1
2019-01-31 16:00:41 -Generating unique operation named: addUsingGET_3
2019-01-31 16:00:42 -Generating unique operation named: editUsingGET_4
2019-01-31 16:00:42 -Generating unique operation named: listUsingGET_5
2019-01-31 16:00:42 -Generating unique operation named: removeUsingPOST_7
2019-01-31 16:00:42 -Generating unique operation named: saveUsingPOST_3
2019-01-31 16:00:42 -Generating unique operation named: treeUsingGET_1
2019-01-31 16:00:42 -Generating unique operation named: updateUsingPOST_4
2019-01-31 16:00:42 -Generating unique operation named: addUsingGET_4
2019-01-31 16:00:42 -Generating unique operation named: batchRemoveUsingPOST_1
2019-01-31 16:00:42 -Generating unique operation named: editUsingGET_5
2019-01-31 16:00:42 -Generating unique operation named: listUsingGET_6
2019-01-31 16:00:42 -Generating unique operation named: saveUsingPOST_4
2019-01-31 16:00:42 -Generating unique operation named: saveUsingPOST_5
2019-01-31 16:00:42 -Generating unique operation named: updateUsingPOST_5
2019-01-31 16:00:42 -Generating unique operation named: listUsingGET_7
2019-01-31 16:00:42 -Generating unique operation named: listUsingHEAD_1
2019-01-31 16:00:42 -Generating unique operation named: listUsingPOST_1
2019-01-31 16:00:42 -Generating unique operation named: listUsingPUT_1
2019-01-31 16:00:42 -Generating unique operation named: listUsingPATCH_1
2019-01-31 16:00:42 -Generating unique operation named: listUsingDELETE_1
2019-01-31 16:00:42 -Generating unique operation named: listUsingOPTIONS_1
2019-01-31 16:00:42 -Generating unique operation named: listUsingTRACE_1
2019-01-31 16:00:42 -Generating unique operation named: addUsingGET_5
2019-01-31 16:00:42 -Generating unique operation named: editUsingGET_6
2019-01-31 16:00:42 -Generating unique operation named: listUsingGET_8
2019-01-31 16:00:42 -Generating unique operation named: removeUsingPOST_8
2019-01-31 16:00:42 -Generating unique operation named: removeUsingPOST_9
2019-01-31 16:00:42 -Generating unique operation named: saveUsingPOST_6
2019-01-31 16:00:42 -Generating unique operation named: updateUsingGET_2
2019-01-31 16:00:42 -Generating unique operation named: updateUsingHEAD_2
2019-01-31 16:00:42 -Generating unique operation named: updateUsingPOST_6
2019-01-31 16:00:42 -Generating unique operation named: updateUsingPUT_2
2019-01-31 16:00:42 -Generating unique operation named: updateUsingPATCH_2
2019-01-31 16:00:42 -Generating unique operation named: updateUsingDELETE_2
2019-01-31 16:00:42 -Generating unique operation named: updateUsingOPTIONS_2
2019-01-31 16:00:42 -Generating unique operation named: updateUsingTRACE_2
2019-01-31 16:00:42 -Generating unique operation named: uploadUsingPOST_1
2019-01-31 16:00:42 -Generating unique operation named: addUsingGET_6
2019-01-31 16:00:42 -Generating unique operation named: editUsingGET_7
2019-01-31 16:00:42 -Generating unique operation named: listUsingGET_9
2019-01-31 16:00:42 -Generating unique operation named: removeUsingPOST_10
2019-01-31 16:00:42 -Generating unique operation named: removeUsingPOST_11
2019-01-31 16:00:42 -Generating unique operation named: saveUsingPOST_7
2019-01-31 16:00:42 -Generating unique operation named: updateUsingGET_3
2019-01-31 16:00:42 -Generating unique operation named: updateUsingHEAD_3
2019-01-31 16:00:42 -Generating unique operation named: updateUsingPOST_7
2019-01-31 16:00:42 -Generating unique operation named: updateUsingPUT_3
2019-01-31 16:00:42 -Generating unique operation named: updateUsingPATCH_3
2019-01-31 16:00:42 -Generating unique operation named: updateUsingDELETE_3
2019-01-31 16:00:42 -Generating unique operation named: updateUsingOPTIONS_3
2019-01-31 16:00:42 -Generating unique operation named: updateUsingTRACE_3
2019-01-31 16:00:42 -Generating unique operation named: addUsingGET_7
2019-01-31 16:00:42 -Generating unique operation named: editUsingGET_8
2019-01-31 16:00:42 -Generating unique operation named: listUsingGET_10
2019-01-31 16:00:42 -Generating unique operation named: roleUsingGET_1
2019-01-31 16:00:42 -Generating unique operation named: saveUsingPOST_8
2019-01-31 16:00:42 -Starting Quartz Scheduler now
2019-01-31 16:00:42 -Scheduler schedulerFactoryBean_$_NON_CLUSTERED started.
2019-01-31 16:00:42 -Starting...
2019-01-31 16:00:42 -BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-01-31 16:00:42 -Started.
2019-01-31 16:00:42 -Starting ProtocolHandler ["http-nio-8080"]
2019-01-31 16:00:42 -Using a shared selector for servlet write/read
2019-01-31 16:00:42 -Tomcat started on port(s): 8080 (http) with context path ''
2019-01-31 16:00:42 -Started BootdoApplication in 10.227 seconds (JVM running for 10.851)
2019-01-31 16:00:42 -==>  Preparing: select `id`,`cron_expression`,`method_name`,`is_concurrent`,`description`,`update_by`,`bean_class`,`create_date`,`job_status`,`job_group`,`update_date`,`create_by`,`spring_bean`,`job_name` from sys_task order by id desc 
2019-01-31 16:00:42 -==> Parameters: 
2019-01-31 16:00:42 -<==      Total: 1
2019-01-31 16:01:08 -Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-01-31 16:01:08 -FrameworkServlet 'dispatcherServlet': initialization started
2019-01-31 16:01:08 -FrameworkServlet 'dispatcherServlet': initialization completed in 28 ms
2019-01-31 16:01:08 -Enabling session validation scheduler...
2019-01-31 16:01:08 -请求地址 : http://localhost:8080/login;JSESSIONID=3cf39cf8-adba-492e-a297-f4a1082c833d
2019-01-31 16:01:08 -HTTP METHOD : GET
2019-01-31 16:01:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 16:01:08 -参数 : []
2019-01-31 16:01:08 -耗时 : 2
2019-01-31 16:01:08 -返回值 : login
2019-01-31 16:01:08 -请求地址 : http://localhost:8080/login
2019-01-31 16:01:08 -HTTP METHOD : GET
2019-01-31 16:01:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.login
2019-01-31 16:01:08 -参数 : []
2019-01-31 16:01:08 -耗时 : 1
2019-01-31 16:01:08 -返回值 : login
2019-01-31 16:01:11 -请求地址 : http://localhost:8080/login
2019-01-31 16:01:11 -HTTP METHOD : POST
2019-01-31 16:01:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.ajaxLogin
2019-01-31 16:01:11 -参数 : [admin, 123456]
2019-01-31 16:01:11 -==>  Preparing: select `user_id`,`dept_id`,`username`,`usernikename`,`userpwd`,`userstatus`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_user WHERE username LIKE '%admin%' order by user_id desc 
2019-01-31 16:01:11 -==> Parameters: 
2019-01-31 16:01:11 -<==      Total: 1
2019-01-31 16:01:11 -耗时 : 42
2019-01-31 16:01:11 -返回值 : {msg=操作成功, code=0}
2019-01-31 16:01:11 -More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-01-31 16:01:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:01:11 -==> Parameters: 123(String), admin(String), 登录(String), 42(Integer), com.bootdo.system.controller.LoginController.ajaxLogin()(String), null, 127.0.0.1(String), 2019-01-31 16:01:11.662(Timestamp)
2019-01-31 16:01:11 -请求地址 : http://localhost:8080/index
2019-01-31 16:01:11 -HTTP METHOD : GET
2019-01-31 16:01:11 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 16:01:11 -参数 : [{}]
2019-01-31 16:01:11 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 16:01:11 -==> Parameters: 123(String)
2019-01-31 16:01:11 -<==    Updates: 1
2019-01-31 16:01:11 -<==      Total: 7
2019-01-31 16:01:11 -耗时 : 75
2019-01-31 16:01:11 -返回值 : index_v1
2019-01-31 16:01:11 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:01:11 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 76(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 16:01:11.796(Timestamp)
2019-01-31 16:01:11 -<==    Updates: 1
2019-01-31 16:01:39 -请求地址 : http://localhost:8080/index
2019-01-31 16:01:39 -HTTP METHOD : GET
2019-01-31 16:01:39 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 16:01:39 -参数 : [{}]
2019-01-31 16:01:39 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 16:01:39 -==> Parameters: 123(String)
2019-01-31 16:01:39 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-01-31 16:01:39 -<==      Total: 7
2019-01-31 16:01:39 -耗时 : 31
2019-01-31 16:01:39 -返回值 : index_v1
2019-01-31 16:01:39 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:01:39 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 16:01:39.9(Timestamp)
2019-01-31 16:01:39 -<==    Updates: 1
2019-01-31 16:01:42 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 16:01:42 -==> Parameters: 123(String)
2019-01-31 16:01:42 -<==      Total: 18
2019-01-31 16:01:42 -请求地址 : http://localhost:8080/system/dept
2019-01-31 16:01:42 -HTTP METHOD : GET
2019-01-31 16:01:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 16:01:42 -参数 : []
2019-01-31 16:01:42 -耗时 : 0
2019-01-31 16:01:42 -返回值 : system/dept/dept
2019-01-31 16:01:45 -请求地址 : http://localhost:8080/system/dept/list
2019-01-31 16:01:45 -HTTP METHOD : GET
2019-01-31 16:01:45 -CLASS_METHOD : com.bootdo.system.controller.DeptController.list
2019-01-31 16:01:45 -参数 : [{page=1, limit=5}]
2019-01-31 16:01:53 -==>  Preparing: select `dept_id`,`deptname`,`deptdesc`,`parent_id`,`ordernum`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_dept order by dept_id desc limit ?, ? 
2019-01-31 16:01:53 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 16:01:53 -<==      Total: 0
2019-01-31 16:01:53 -==>  Preparing: select count(*) from sys_dept 
2019-01-31 16:01:53 -==> Parameters: 
2019-01-31 16:01:53 -<==      Total: 1
2019-01-31 16:01:53 -耗时 : 8085
2019-01-31 16:01:53 -返回值 : com.bootdo.common.utils.PageUtils@3fb67964
2019-01-31 16:02:41 -请求地址 : http://localhost:8080/system/dept
2019-01-31 16:02:41 -HTTP METHOD : GET
2019-01-31 16:02:41 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 16:02:41 -参数 : []
2019-01-31 16:02:41 -耗时 : 1
2019-01-31 16:02:41 -返回值 : system/dept/dept
2019-01-31 16:02:44 -请求地址 : http://localhost:8080/system/dept/list
2019-01-31 16:02:44 -HTTP METHOD : GET
2019-01-31 16:02:44 -CLASS_METHOD : com.bootdo.system.controller.DeptController.list
2019-01-31 16:02:44 -参数 : [{page=1, limit=5}]
2019-01-31 16:02:44 -==>  Preparing: select `dept_id`,`deptname`,`deptdesc`,`parent_id`,`ordernum`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_dept order by dept_id desc limit ?, ? 
2019-01-31 16:02:44 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 16:02:44 -<==      Total: 3
2019-01-31 16:02:44 -==>  Preparing: select count(*) from sys_dept 
2019-01-31 16:02:44 -==> Parameters: 
2019-01-31 16:02:44 -<==      Total: 1
2019-01-31 16:02:44 -耗时 : 11
2019-01-31 16:02:44 -返回值 : com.bootdo.common.utils.PageUtils@1262aef8
2019-01-31 16:03:08 -请求地址 : http://localhost:8080/index
2019-01-31 16:03:08 -HTTP METHOD : GET
2019-01-31 16:03:08 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 16:03:08 -参数 : [{}]
2019-01-31 16:03:08 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 16:03:08 -==> Parameters: 123(String)
2019-01-31 16:03:08 -<==      Total: 7
2019-01-31 16:03:08 -耗时 : 33
2019-01-31 16:03:08 -返回值 : index_v1
2019-01-31 16:03:08 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:03:08 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 34(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 16:03:08.407(Timestamp)
2019-01-31 16:03:08 -<==    Updates: 1
2019-01-31 16:03:31 -请求地址 : http://localhost:8080/index
2019-01-31 16:03:31 -HTTP METHOD : GET
2019-01-31 16:03:31 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 16:03:31 -参数 : [{}]
2019-01-31 16:03:31 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 16:03:31 -==> Parameters: 123(String)
2019-01-31 16:03:31 -<==      Total: 7
2019-01-31 16:03:31 -耗时 : 29
2019-01-31 16:03:31 -返回值 : index_v1
2019-01-31 16:03:31 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:03:31 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 29(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 16:03:31.741(Timestamp)
2019-01-31 16:03:31 -<==    Updates: 1
2019-01-31 16:03:34 -请求地址 : http://localhost:8080/system/dept
2019-01-31 16:03:34 -HTTP METHOD : GET
2019-01-31 16:03:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 16:03:34 -参数 : []
2019-01-31 16:03:34 -耗时 : 1
2019-01-31 16:03:34 -返回值 : system/dept/dept
2019-01-31 16:03:34 -请求地址 : http://localhost:8080/system/dept/list
2019-01-31 16:03:34 -HTTP METHOD : GET
2019-01-31 16:03:34 -CLASS_METHOD : com.bootdo.system.controller.DeptController.list
2019-01-31 16:03:34 -参数 : [{page=1, limit=5}]
2019-01-31 16:03:34 -==>  Preparing: select `dept_id`,`deptname`,`deptdesc`,`parent_id`,`ordernum`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_dept order by dept_id desc limit ?, ? 
2019-01-31 16:03:34 -==> Parameters: 0(Integer), 5(Integer)
2019-01-31 16:03:34 -<==      Total: 3
2019-01-31 16:03:34 -==>  Preparing: select count(*) from sys_dept 
2019-01-31 16:03:34 -==> Parameters: 
2019-01-31 16:03:34 -<==      Total: 1
2019-01-31 16:03:34 -耗时 : 7
2019-01-31 16:03:34 -返回值 : com.bootdo.common.utils.PageUtils@789df92
2019-01-31 16:04:33 -请求地址 : http://localhost:8080/index
2019-01-31 16:04:33 -HTTP METHOD : GET
2019-01-31 16:04:33 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 16:04:33 -参数 : [{}]
2019-01-31 16:04:33 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 16:04:33 -==> Parameters: 123(String)
2019-01-31 16:04:33 -<==      Total: 7
2019-01-31 16:04:33 -耗时 : 24
2019-01-31 16:04:33 -返回值 : index_v1
2019-01-31 16:04:33 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:04:33 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 24(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 16:04:33.349(Timestamp)
2019-01-31 16:04:33 -<==    Updates: 1
2019-01-31 16:04:36 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 16:04:36 -==> Parameters: 123(String)
2019-01-31 16:04:36 -<==      Total: 18
2019-01-31 16:04:36 -请求地址 : http://localhost:8080/system/dept
2019-01-31 16:04:36 -HTTP METHOD : GET
2019-01-31 16:04:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 16:04:36 -参数 : []
2019-01-31 16:04:36 -耗时 : 0
2019-01-31 16:04:36 -返回值 : system/dept/dept
2019-01-31 16:04:36 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:04:36 -==> Parameters: 123(String), admin(String), error(String), null, http://localhost:8080/system/dept/list(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported(String), null, 2019-01-31 16:04:36.826(Timestamp)
2019-01-31 16:04:36 -Request method 'POST' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:198)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:376)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:316)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:62)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:350)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1188)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:964)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-31 16:04:36 -<==    Updates: 1
2019-01-31 16:04:51 -请求地址 : http://localhost:8080/index
2019-01-31 16:04:51 -HTTP METHOD : GET
2019-01-31 16:04:51 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 16:04:51 -参数 : [{}]
2019-01-31 16:04:51 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 16:04:51 -==> Parameters: 123(String)
2019-01-31 16:04:51 -<==      Total: 7
2019-01-31 16:04:51 -耗时 : 31
2019-01-31 16:04:51 -返回值 : index_v1
2019-01-31 16:04:51 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:04:51 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 32(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 16:04:51.455(Timestamp)
2019-01-31 16:04:51 -<==    Updates: 1
2019-01-31 16:04:53 -请求地址 : http://localhost:8080/system/dept
2019-01-31 16:04:53 -HTTP METHOD : GET
2019-01-31 16:04:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 16:04:53 -参数 : []
2019-01-31 16:04:53 -耗时 : 0
2019-01-31 16:04:53 -返回值 : system/dept/dept
2019-01-31 16:04:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:04:54 -Request method 'POST' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:198)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:376)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:316)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:62)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:350)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1188)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:964)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-31 16:04:54 -==> Parameters: 123(String), admin(String), error(String), null, http://localhost:8080/system/dept/list(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported(String), null, 2019-01-31 16:04:54.027(Timestamp)
2019-01-31 16:04:54 -<==    Updates: 1
2019-01-31 16:05:13 -请求地址 : http://localhost:8080/index
2019-01-31 16:05:13 -HTTP METHOD : GET
2019-01-31 16:05:13 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 16:05:13 -参数 : [{}]
2019-01-31 16:05:13 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 16:05:13 -==> Parameters: 123(String)
2019-01-31 16:05:13 -<==      Total: 7
2019-01-31 16:05:13 -耗时 : 20
2019-01-31 16:05:13 -返回值 : index_v1
2019-01-31 16:05:13 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:05:13 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 21(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 16:05:13.901(Timestamp)
2019-01-31 16:05:13 -<==    Updates: 1
2019-01-31 16:05:16 -请求地址 : http://localhost:8080/system/dept
2019-01-31 16:05:16 -HTTP METHOD : GET
2019-01-31 16:05:16 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 16:05:16 -参数 : []
2019-01-31 16:05:16 -耗时 : 0
2019-01-31 16:05:16 -返回值 : system/dept/dept
2019-01-31 16:05:16 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:05:16 -Request method 'POST' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:198)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:376)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:316)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:62)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:350)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1188)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:964)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-31 16:05:16 -==> Parameters: 123(String), admin(String), error(String), null, http://localhost:8080/system/dept/list(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported(String), null, 2019-01-31 16:05:16.434(Timestamp)
2019-01-31 16:05:16 -<==    Updates: 1
2019-01-31 16:06:50 -请求地址 : http://localhost:8080/index
2019-01-31 16:06:50 -HTTP METHOD : GET
2019-01-31 16:06:50 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 16:06:50 -参数 : [{}]
2019-01-31 16:06:50 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 16:06:50 -==> Parameters: 123(String)
2019-01-31 16:06:50 -<==      Total: 7
2019-01-31 16:06:50 -耗时 : 35
2019-01-31 16:06:50 -返回值 : index_v1
2019-01-31 16:06:50 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:06:50 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 36(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 16:06:50.897(Timestamp)
2019-01-31 16:06:50 -<==    Updates: 1
2019-01-31 16:06:53 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 16:06:53 -==> Parameters: 123(String)
2019-01-31 16:06:53 -<==      Total: 18
2019-01-31 16:06:53 -请求地址 : http://localhost:8080/system/dept
2019-01-31 16:06:53 -HTTP METHOD : GET
2019-01-31 16:06:53 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 16:06:53 -参数 : []
2019-01-31 16:06:53 -耗时 : 1
2019-01-31 16:06:53 -返回值 : system/dept/dept
2019-01-31 16:06:53 -Request method 'POST' not supported
org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:198)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:376)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:316)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:62)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:350)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1188)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:964)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:81)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:496)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:803)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:790)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1459)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2019-01-31 16:06:53 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:06:53 -==> Parameters: 123(String), admin(String), error(String), null, http://localhost:8080/system/dept/list(String), org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'POST' not supported(String), null, 2019-01-31 16:06:53.702(Timestamp)
2019-01-31 16:06:53 -<==    Updates: 1
2019-01-31 16:08:52 -请求地址 : http://localhost:8080/index
2019-01-31 16:08:52 -HTTP METHOD : GET
2019-01-31 16:08:52 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 16:08:52 -参数 : [{}]
2019-01-31 16:08:52 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 16:08:52 -==> Parameters: 123(String)
2019-01-31 16:08:52 -<==      Total: 7
2019-01-31 16:08:52 -耗时 : 23
2019-01-31 16:08:52 -返回值 : index_v1
2019-01-31 16:08:52 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:08:52 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 16:08:52.852(Timestamp)
2019-01-31 16:08:52 -<==    Updates: 1
2019-01-31 16:08:56 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 16:08:56 -==> Parameters: 123(String)
2019-01-31 16:08:56 -<==      Total: 18
2019-01-31 16:08:56 -请求地址 : http://localhost:8080/system/dept
2019-01-31 16:08:56 -HTTP METHOD : GET
2019-01-31 16:08:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 16:08:56 -参数 : []
2019-01-31 16:08:56 -耗时 : 1
2019-01-31 16:08:56 -返回值 : system/dept/dept
2019-01-31 16:08:56 -请求地址 : http://localhost:8080/system/dept/list
2019-01-31 16:08:56 -HTTP METHOD : GET
2019-01-31 16:08:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.list
2019-01-31 16:08:56 -参数 : [{}]
2019-01-31 16:09:13 -==>  Preparing: select `dept_id`,`deptname`,`deptdesc`,`parent_id`,`ordernum`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_dept order by dept_id desc 
2019-01-31 16:09:13 -==> Parameters: 
2019-01-31 16:09:13 -<==      Total: 3
2019-01-31 16:09:15 -==>  Preparing: select count(*) from sys_dept 
2019-01-31 16:09:15 -==> Parameters: 
2019-01-31 16:09:15 -<==      Total: 1
2019-01-31 16:09:26 -耗时 : 29799
2019-01-31 16:09:26 -返回值 : com.bootdo.common.utils.PageUtils@2e5629de
2019-01-31 16:10:30 -请求地址 : http://localhost:8080/index
2019-01-31 16:10:30 -HTTP METHOD : GET
2019-01-31 16:10:30 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 16:10:30 -参数 : [{}]
2019-01-31 16:10:30 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 16:10:30 -==> Parameters: 123(String)
2019-01-31 16:10:30 -<==      Total: 7
2019-01-31 16:10:30 -耗时 : 27
2019-01-31 16:10:30 -返回值 : index_v1
2019-01-31 16:10:30 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:10:30 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 27(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 16:10:30.595(Timestamp)
2019-01-31 16:10:30 -<==    Updates: 1
2019-01-31 16:10:36 -请求地址 : http://localhost:8080/system/dept
2019-01-31 16:10:36 -HTTP METHOD : GET
2019-01-31 16:10:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 16:10:36 -参数 : []
2019-01-31 16:10:36 -耗时 : 1
2019-01-31 16:10:36 -返回值 : system/dept/dept
2019-01-31 16:10:36 -请求地址 : http://localhost:8080/system/dept/list
2019-01-31 16:10:36 -HTTP METHOD : GET
2019-01-31 16:10:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.list
2019-01-31 16:10:36 -参数 : [{}]
2019-01-31 16:10:39 -==>  Preparing: select `dept_id`,`deptname`,`deptdesc`,`parent_id`,`ordernum`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_dept order by dept_id desc 
2019-01-31 16:10:39 -==> Parameters: 
2019-01-31 16:10:39 -<==      Total: 3
2019-01-31 16:10:39 -==>  Preparing: select count(*) from sys_dept 
2019-01-31 16:10:39 -==> Parameters: 
2019-01-31 16:10:39 -<==      Total: 1
2019-01-31 16:10:39 -耗时 : 3068
2019-01-31 16:10:39 -返回值 : com.bootdo.common.utils.PageUtils@1a8804ef
2019-01-31 16:10:42 -请求地址 : http://localhost:8080/system/dept
2019-01-31 16:10:42 -HTTP METHOD : GET
2019-01-31 16:10:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 16:10:42 -参数 : []
2019-01-31 16:10:42 -耗时 : 1
2019-01-31 16:10:42 -返回值 : system/dept/dept
2019-01-31 16:10:42 -请求地址 : http://localhost:8080/system/dept/list
2019-01-31 16:10:42 -HTTP METHOD : GET
2019-01-31 16:10:42 -CLASS_METHOD : com.bootdo.system.controller.DeptController.list
2019-01-31 16:10:42 -参数 : [{}]
2019-01-31 16:10:42 -==>  Preparing: select `dept_id`,`deptname`,`deptdesc`,`parent_id`,`ordernum`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_dept order by dept_id desc 
2019-01-31 16:10:42 -==> Parameters: 
2019-01-31 16:10:42 -<==      Total: 3
2019-01-31 16:10:42 -==>  Preparing: select count(*) from sys_dept 
2019-01-31 16:10:42 -==> Parameters: 
2019-01-31 16:10:42 -<==      Total: 1
2019-01-31 16:10:42 -耗时 : 5
2019-01-31 16:10:42 -返回值 : com.bootdo.common.utils.PageUtils@33cf01bd
2019-01-31 16:13:54 -请求地址 : http://localhost:8080/index
2019-01-31 16:13:54 -HTTP METHOD : GET
2019-01-31 16:13:54 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 16:13:54 -参数 : [{}]
2019-01-31 16:13:54 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 16:13:54 -==> Parameters: 123(String)
2019-01-31 16:13:54 -<==      Total: 7
2019-01-31 16:13:54 -耗时 : 26
2019-01-31 16:13:54 -返回值 : index_v1
2019-01-31 16:13:54 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:13:54 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 26(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 16:13:54.069(Timestamp)
2019-01-31 16:13:54 -<==    Updates: 1
2019-01-31 16:13:56 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 16:13:56 -==> Parameters: 123(String)
2019-01-31 16:13:56 -<==      Total: 18
2019-01-31 16:13:56 -请求地址 : http://localhost:8080/system/dept
2019-01-31 16:13:56 -HTTP METHOD : GET
2019-01-31 16:13:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 16:13:56 -参数 : []
2019-01-31 16:13:56 -耗时 : 0
2019-01-31 16:13:56 -返回值 : system/dept/dept
2019-01-31 16:13:56 -请求地址 : http://localhost:8080/system/dept/list
2019-01-31 16:13:56 -HTTP METHOD : GET
2019-01-31 16:13:56 -CLASS_METHOD : com.bootdo.system.controller.DeptController.list
2019-01-31 16:13:56 -参数 : [{}]
2019-01-31 16:13:56 -==>  Preparing: select `dept_id`,`deptname`,`deptdesc`,`parent_id`,`ordernum`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_dept order by dept_id desc 
2019-01-31 16:13:56 -==> Parameters: 
2019-01-31 16:13:56 -<==      Total: 3
2019-01-31 16:13:56 -==>  Preparing: select count(*) from sys_dept 
2019-01-31 16:13:56 -==> Parameters: 
2019-01-31 16:13:56 -<==      Total: 1
2019-01-31 16:13:56 -耗时 : 6
2019-01-31 16:13:56 -返回值 : com.bootdo.common.utils.PageUtils@3e13d066
2019-01-31 16:31:40 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-01-31 16:41:26 -请求地址 : http://localhost:8080/index
2019-01-31 16:41:26 -HTTP METHOD : GET
2019-01-31 16:41:26 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 16:41:26 -参数 : [{}]
2019-01-31 16:41:26 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 16:41:26 -==> Parameters: 123(String)
2019-01-31 16:41:26 -<==      Total: 7
2019-01-31 16:41:26 -耗时 : 31
2019-01-31 16:41:26 -返回值 : index_v1
2019-01-31 16:41:26 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:41:26 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 31(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 16:41:26.047(Timestamp)
2019-01-31 16:41:26 -<==    Updates: 1
2019-01-31 16:41:29 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 16:41:29 -==> Parameters: 123(String)
2019-01-31 16:41:29 -<==      Total: 18
2019-01-31 16:41:29 -请求地址 : http://localhost:8080/system/dept
2019-01-31 16:41:29 -HTTP METHOD : GET
2019-01-31 16:41:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 16:41:29 -参数 : []
2019-01-31 16:41:29 -耗时 : 0
2019-01-31 16:41:29 -返回值 : system/dept/dept
2019-01-31 16:41:29 -请求地址 : http://localhost:8080/system/dept/list
2019-01-31 16:41:29 -HTTP METHOD : GET
2019-01-31 16:41:29 -CLASS_METHOD : com.bootdo.system.controller.DeptController.list
2019-01-31 16:41:29 -参数 : [{}]
2019-01-31 16:41:29 -==>  Preparing: select `dept_id`,`deptname`,`deptdesc`,`parent_id`,`ordernum`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_dept order by dept_id desc 
2019-01-31 16:41:29 -==> Parameters: 
2019-01-31 16:41:29 -<==      Total: 3
2019-01-31 16:41:29 -==>  Preparing: select count(*) from sys_dept 
2019-01-31 16:41:29 -==> Parameters: 
2019-01-31 16:41:29 -<==      Total: 1
2019-01-31 16:41:29 -耗时 : 10
2019-01-31 16:41:29 -返回值 : com.bootdo.common.utils.PageUtils@27dfbc5d
2019-01-31 16:42:34 -请求地址 : http://localhost:8080/index
2019-01-31 16:42:34 -HTTP METHOD : GET
2019-01-31 16:42:34 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 16:42:34 -参数 : [{}]
2019-01-31 16:42:34 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 16:42:34 -==> Parameters: 123(String)
2019-01-31 16:42:34 -<==      Total: 7
2019-01-31 16:42:34 -耗时 : 28
2019-01-31 16:42:34 -返回值 : index_v1
2019-01-31 16:42:34 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:42:34 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 28(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 16:42:34.469(Timestamp)
2019-01-31 16:42:34 -<==    Updates: 1
2019-01-31 16:42:36 -请求地址 : http://localhost:8080/system/dept
2019-01-31 16:42:36 -HTTP METHOD : GET
2019-01-31 16:42:36 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 16:42:36 -参数 : []
2019-01-31 16:42:36 -耗时 : 0
2019-01-31 16:42:36 -返回值 : system/dept/dept
2019-01-31 16:42:37 -请求地址 : http://localhost:8080/system/dept/list
2019-01-31 16:42:37 -HTTP METHOD : GET
2019-01-31 16:42:37 -CLASS_METHOD : com.bootdo.system.controller.DeptController.list
2019-01-31 16:42:37 -参数 : [{}]
2019-01-31 16:42:37 -==>  Preparing: select `dept_id`,`deptname`,`deptdesc`,`parent_id`,`ordernum`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_dept order by dept_id desc 
2019-01-31 16:42:37 -==> Parameters: 
2019-01-31 16:42:37 -<==      Total: 3
2019-01-31 16:42:37 -==>  Preparing: select count(*) from sys_dept 
2019-01-31 16:42:37 -==> Parameters: 
2019-01-31 16:42:37 -<==      Total: 1
2019-01-31 16:42:37 -耗时 : 13
2019-01-31 16:42:37 -返回值 : com.bootdo.common.utils.PageUtils@63708242
2019-01-31 16:43:59 -请求地址 : http://localhost:8080/index
2019-01-31 16:43:59 -HTTP METHOD : GET
2019-01-31 16:43:59 -CLASS_METHOD : com.bootdo.system.controller.LoginController.index
2019-01-31 16:43:59 -参数 : [{}]
2019-01-31 16:43:59 -==>  Preparing: select distinct m.menu_id , m.parent_id, m.menuname, m.menuurl, m.menuperms,m.menutype,m.menuicon,m.ordernum,m.edit_time, m.edit_user from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id =ur.role_id where ur.user_id = ? and m.menutype in(0,1) order by m.ordernum 
2019-01-31 16:43:59 -==> Parameters: 123(String)
2019-01-31 16:43:59 -<==      Total: 7
2019-01-31 16:43:59 -耗时 : 23
2019-01-31 16:43:59 -返回值 : index_v1
2019-01-31 16:43:59 -==>  Preparing: insert into sys_log ( `user_id`, `username`, `operation`, `time`, `method`, `params`, `ip`, `gmt_create` ) values ( ?, ?, ?, ?, ?, ?, ?, ? ) 
2019-01-31 16:43:59 -==> Parameters: 123(String), admin(String), 请求访问主页(String), 23(Integer), com.bootdo.system.controller.LoginController.index()(String), null, 127.0.0.1(String), 2019-01-31 16:43:59.287(Timestamp)
2019-01-31 16:43:59 -<==    Updates: 1
2019-01-31 16:44:02 -==>  Preparing: select distinct m.menuperms from sys_menu m left join sys_role_menu rm on m.menu_id = rm.menu_id left join sys_user_role ur on rm.role_id = ur.role_id where ur.user_id = ? 
2019-01-31 16:44:02 -==> Parameters: 123(String)
2019-01-31 16:44:02 -<==      Total: 18
2019-01-31 16:44:02 -请求地址 : http://localhost:8080/system/dept
2019-01-31 16:44:02 -HTTP METHOD : GET
2019-01-31 16:44:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.Dept
2019-01-31 16:44:02 -参数 : []
2019-01-31 16:44:02 -耗时 : 0
2019-01-31 16:44:02 -返回值 : system/dept/dept
2019-01-31 16:44:02 -请求地址 : http://localhost:8080/system/dept/list
2019-01-31 16:44:02 -HTTP METHOD : GET
2019-01-31 16:44:02 -CLASS_METHOD : com.bootdo.system.controller.DeptController.list
2019-01-31 16:44:02 -参数 : [{}]
2019-01-31 16:44:02 -==>  Preparing: select `dept_id`,`deptname`,`deptdesc`,`parent_id`,`ordernum`,`edit_user`,`edit_time`,`deleteflag`,`ext1`,`ext2`,`ext3` from sys_dept order by dept_id desc 
2019-01-31 16:44:02 -==> Parameters: 
2019-01-31 16:44:02 -<==      Total: 3
2019-01-31 16:44:02 -==>  Preparing: select count(*) from sys_dept 
2019-01-31 16:44:02 -==> Parameters: 
2019-01-31 16:44:02 -<==      Total: 1
2019-01-31 16:44:02 -耗时 : 9
2019-01-31 16:44:02 -返回值 : com.bootdo.common.utils.PageUtils@4584187c
2019-01-31 17:01:08 -Validating all active sessions...
2019-01-31 17:01:08 -Finished session validation.  No sessions were stopped.
2019-01-31 17:01:40 -WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
